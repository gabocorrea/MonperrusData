id,type,path,text
3,package,org/eclipse/jface/layout,"\nProvides support for layout generation. \n<h2>\nPackage Specification</h2>\n<p> This package provides classes that can be used to generate layouts.\n"
9,package,org/eclipse/jface/internal/text,""
12,package,org/eclipse/jface/internal/text/html,""
13,package,org/eclipse/jface/internal/text/source,"\n<p>\nInternal support classes and helpers for the <tt>org.eclipse.jface.text.source</tt> package.\n"
20,package,org/eclipse/jface/menus,"\nProvides support for trim specification. \n<h2>\nPackage Specification</h2>\n<p> This package provides classes for trim widgets.\n"
21,package,org/eclipse/jface/text,""
22,package,org/eclipse/jface/text/revisions,"\nProvides a revision model and a protocol to display revision information in a vertical ruler column.\n<h2>Package Specification</h2>\n<tt>IRevisionRulerColumn</tt> is the protocol that a team provider can use to display line based revision control information to a document.\n<tt>RevisionInformation</tt> defines the revision model, which contains a list of <tt>Revision</tt>s, which in turn contain <tt>RevisionRange</tt>s.\n"
24,package,org/eclipse/jface/text/link,""
25,package,org/eclipse/jface/text/contentassist,"\nProvides a content assist add-on for an <tt>ITextViewer</tt>.\nContent assist supports the user in writing&nbsp; by proposing context\nsensitive completions at a given document position. A completion can also\nbe a incomplete in itself and content assist provides means to deal with\nnested completions.\n<h2>\nPackage Specification</h2>\n<tt>IContentAssistant</tt> defines the concept of the content assist add-on.\nIt collaborates with content type specific completion processors (<tt>IContentAssistProcessor</tt>)\nin order to generate completion proposals (<tt>ICompletionProposal</tt>)\nvalid at the current document position. The package provides a default\nimplementation <tt>ContentAssistant</tt> which completely defines and implements\nthe UI and the control flow for content assist.\n<br>&nbsp;\n"
26,package,org/eclipse/jface/text/templates,""
28,package,org/eclipse/jface/text/information,"\nProvides an information provider add-on for an <tt>ITextViewer</tt>.\nAn information provider presents information for a certain subject in a\nspecific information control. An information control usually is a floating\nwindow.\n<h2>\nPackage Specification</h2>\n<tt>IInformationPresenter</tt> defines the concept of an information provider.\nIt collaborates with content type specific information providers (<tt>IInformationProvider</tt>)\nwhich determine for a certain offset in a text viewer an information subject\nand the information available about this subject.. The package contains\na default implementation of <tt>IInformationPresenter</tt> (<tt>InformationPresenter</tt>).\n"
29,package,org/eclipse/jface/text/rules,"\nProvides a framework for rule based text scanning\nand uses the framework to provide rule-driven default implementations of\n<tt>IPresentationDamager</tt>, <tt>IPresentationRepairer</tt> and <tt>IDocumentPartitioner</tt>.\n<h2>\nPackage Specification</h2>\n<tt>RuleBasedScanner</tt> is a document-based scanner controlled by <tt>IRule</tt>\nobjects. When evaluated an <tt>IRule</tt> always returns an <tt>IToken</tt>.\nThe package provides a set of rules whereby <tt>PatternRule</tt> is the\nmost important one. <tt>PatternRule</tt> defines a pattern-configurable\nrule.\n"
31,package,org/eclipse/jface/text/hyperlink,"\nProvides support for detecting and displaying hyperlinks in <tt>ISourceViewer</tt>s.\n<p>\n<tt>SourceViewer</tt> supports hyperlinked text regions inline in the displayed text. It delegates \nthe detection and presentation of hyperlinks to <tt>IHyperlinkDetector</tt> and <tt>IHyperlinkPresenter</tt>, respectively.\n</p>\n<p>\nOverride the following methods in <tt>SourceViewerConfiguration</tt> to customize the hyperlink behavior of a source viewer:\n<ul>\n  <li><tt>getHyperlinkDetectors()</tt> to specify the set of hyperlink detectors used by the viewer</li>\n  <li><tt>getHyperlinkPresenter()</tt> to specify the set of hyperlink presenters used by the viewer</li>\n  <li><tt>getHyperlinkStateMask()</tt> to specify when hyperlinks are activated</li>\n</ul>\n</p>\n\n"
33,package,org/eclipse/jface/text/source,""
35,package,org/eclipse/jface/commands,"\n<p>Provides JFace-specific support for commands.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides a handler that wraps a legacy instance of\n<code>IAction</code>, as well as a manager for associating images with commands.\n</p>\n"
37,package,org/eclipse/jface/contexts,"\n<p>Provides JFace-specific support for contexts.</p>\n\n<h2>Package Specification</h2>\n<p>\nThis package provides some context identifiers that have special meaning in the\ncontext of JFace.\n</p>\n"
38,package,org/eclipse/jface/util,"\nProvides useful building blocks used throughout JFace,\nincluding property change events, a listener list implementation, and runtime\nchecked assertions.\n<br>&nbsp;\n"
45,package,org/apache/commons/collections/splitmap,"\n<p>The "split map" concept is that of an object that implements\nthe {@link org.apache.commons.collections.Put Put} and\n{@link org.apache.commons.collections.Get Get} interfaces,\nwith <i>differing</i> generic types. This is like a pre-generics\n{@link java.util.Map Map} whose input key/value constraints are\ndifferent than its output key/value constraints.  While it would\nbe possible to declare a "split map" with matching input/output\nkey/value constraints, this would be a {@link java.util.Map Map}\nand would therefore make little sense (any Commons Collections\n{@link java.util.Map Map} implementation will also implement\n{@link org.apache.commons.collections.Put Put} and\n{@link org.apache.commons.collections.Get Get} with matching\ngeneric parameters).\n\n<p>\nThe following decorators are provided:\n<ul>\n<li>Transformed - transforms each element added\n</ul>\n</pre>\n"
48,package,org/apache/commons/collections/keyvalue,"\n<p>\nThis package contains implementations of collection and map related key/value classes.\nThese are usually used in maps, however they can be used as data holders in any collection.\n<p>\nThe following key/value designs are included:\n<ul>\n<li>Map Entry - various map entry implementations\n<li>KeyValue - a key and value pair, without map entry semantics\n<li>MultiKey - a holder of multiple keys tied together\n</ul>\n</pre>\n"
55,package,java/rmi/activation,"\n\nProvides support for RMI Object Activation.  A remote\nobject's reference can be made ``persistent'' and later activated into a\n``live'' object using the RMI activation mechanism.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.2\n"
57,package,java/rmi/server,"\n\nProvides classes and interfaces for supporting the server\nside of RMI.  A group of classes are used by the stubs and skeletons\ngenerated by the rmic stub compiler.  Another group of classes\nimplements the RMI Transport protocol and HTTP tunneling.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n"
61,package,java/lang/annotation,"\n\nProvides library support for the Java programming language annotation facility.\n\n@version  1.2, 04/02/10\n@author	  Josh Bloch\n@since	  1.5\n\n"
65,package,java/text,"\n\nProvides classes and interfaces for handling text, dates, numbers, and messages\nin a manner independent of natural languages.  This means your main application\nor applet can be written to be language-independent, and it can rely upon\nseparate, dynamically-linked localized resources. This allows the flexibility\nof adding localizations for new localizations at any time.\n<p>\nThese classes are capable of formatting dates, numbers, and messages, parsing;\nsearching and sorting strings; and iterating over characters, words, sentences,\nand line breaks.  This package contains three main groups of classes and\ninterfaces:\n<ul>\n<li>Classes for iteration over text\n<li>Classes for formatting and parsing\n<li>Classes for string collation\n</ul>\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n"
66,package,java/text/spi,"\nService provider classes for the classes in the java.text package.\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.6\n"
70,package,java/util,"\n\nContains the collections framework, legacy collection classes, event model,\ndate and time facilities, internationalization, and miscellaneous utility\nclasses (a string tokenizer, a random-number generator, and a bit array).\n\n<h2>Package Specification</h2>\n<ul>\n  <li><a href="../../../technotes/guides/collections/overview.html"><b>Collections Framework Overview</b></a>\n  <li><a href="../../../technotes/guides/collections/reference.html"><b>\n       Collections Framework Annotated Outline</b></a>\n</ul>\n\n<h2>Related Documentation</h2>\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n    <li><a href="http://www.java.sun.com/docs/books/tutorial/collections/">\n       <b>Collections Framework Tutorial</b></a>\n    <li><a\n    href="../../../technotes/guides/collections/designfaq.html"><b>Collections\n    Framework Design FAQ</b></a>\n</ul>\n\n@since JDK1.0\n"
72,package,java/util/prefs,"\n\nThis package allows applications to store and retrieve user and system\npreference and configuration data. This data is stored persistently in an\nimplementation-dependent backing store. There are two separate trees of\npreference nodes, one for user preferences and one for system preferences.\n\n<!--\n<h2>Package Specification</h2>\n<h2>Related Documentation</h2>\n-->\n\n@since JDK1.4\n"
76,package,java/util/spi,"\nService provider classes for the classes in the java.util package.\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since 1.6\n"
84,package,java/security/cert,"\n\nProvides classes and interfaces for parsing and managing\ncertificates, certificate revocation lists (CRLs), and \ncertification paths. It contains support for X.509 v3 \ncertificates and X.509 v2 CRLs.\n\n<h2>Package Specification</h2>\n\n<ul>\n  <li><a href="../../../../technotes/guides/security/crypto/CryptoSpec.html"><b>Cryptography\n   Architecture</b></a>\n  <li>RFC 2459: X.509 Certificate and CRL Profile\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor information about X.509 certificates and CRLs, please see:\n<ul>\n  <li><a href="http://www.ietf.org/rfc/rfc2459.txt">\nhttp://www.ietf.org/rfc/rfc2459.txt</a>\n  <li><a href="../../../../technotes/guides/security/cert3.html">\nX.509 Certificates and CRLs</a>\n</ul>\n\n@since 1.2\n"
85,package,java/security/acl,"\n\nThe classes and interfaces in this package have been\nsuperseded by classes in the java.security package.\nSee that package and, for example, java.security.Permission for details.\n\n<!--\n<h2>Package Specification</h2>\n\n##### FILL IN ANY SPECS NEEDED BY JAVA COMPATIBILITY KIT #####\n<ul>\n  <li><a href="">##### REFER TO ANY FRAMEMAKER SPECIFICATION HERE #####</a>\n</ul>\n\n<h2>Related Documentation</h2>\n\nFor overviews, tutorials, examples, guides, and tool documentation, please see:\n<ul>\n  <li><a href="">##### REFER TO NON-SPEC DOCUMENTATION HERE #####</a>\n</ul>\n-->\n\n@since JDK1.1\n"
87,method,org/eclipse/jface/dialogs/TrayDialog/closeTray/," Closes this dialog's tray, disposing its widgets.\n \n @throws IllegalStateException if the tray was not open\n"
88,method,org/eclipse/jface/dialogs/TrayDialog/close/,""
89,method,org/eclipse/jface/dialogs/TrayDialog/createButtonBar/Composite,""
93,method,org/eclipse/jface/dialogs/TrayDialog/getTray/," Returns the tray currently shown in the dialog, or <code>null</code>\n if there is no tray.\n \n @return the dialog's current tray, or <code>null</code> if there is none\n"
94,method,org/eclipse/jface/dialogs/TrayDialog/openTray/DialogTray," Constructs the tray's widgets and displays the tray in this dialog. The\n dialog's size will be adjusted to accomodate the tray.\n \n @param tray the tray to show in this dialog\n @throws IllegalStateException if the dialog already has a tray open\n @throws UnsupportedOperationException if the dialog does not support trays,\n            for example if it uses a custom layout.\n"
100,field,org/eclipse/jface/dialogs/IDialogConstants/OK_ID," Button id for an "Ok" button (value 0).\n"
101,field,org/eclipse/jface/dialogs/IDialogConstants/CANCEL_ID," Button id for a "Cancel" button (value 1).\n"
102,field,org/eclipse/jface/dialogs/IDialogConstants/YES_ID," Button id for a "Yes" button (value 2).\n"
103,field,org/eclipse/jface/dialogs/IDialogConstants/NO_ID," Button id for a "No" button (value 3).\n"
104,field,org/eclipse/jface/dialogs/IDialogConstants/YES_TO_ALL_ID," Button id for a "Yes to All" button (value 4).\n"
105,field,org/eclipse/jface/dialogs/IDialogConstants/SKIP_ID," Button id for a "Skip" button (value 5).\n"
106,field,org/eclipse/jface/dialogs/IDialogConstants/STOP_ID," Button id for a "Stop" button (value 6).\n"
107,field,org/eclipse/jface/dialogs/IDialogConstants/ABORT_ID," Button id for an "Abort" button (value 7).\n"
108,field,org/eclipse/jface/dialogs/IDialogConstants/RETRY_ID," Button id for a "Retry" button (value 8).\n"
109,field,org/eclipse/jface/dialogs/IDialogConstants/IGNORE_ID," Button id for an "Ignore" button (value 9).\n"
110,field,org/eclipse/jface/dialogs/IDialogConstants/PROCEED_ID," Button id for a "Proceed" button (value 10).\n"
111,field,org/eclipse/jface/dialogs/IDialogConstants/OPEN_ID," Button id for an "Open" button (value 11).\n"
112,field,org/eclipse/jface/dialogs/IDialogConstants/CLOSE_ID," Button id for a "Close" button (value 12).\n"
113,field,org/eclipse/jface/dialogs/IDialogConstants/DETAILS_ID," Button id for a "Details" button (value 13).\n"
114,field,org/eclipse/jface/dialogs/IDialogConstants/BACK_ID," Button id for a "Back" button (value 14).\n"
115,field,org/eclipse/jface/dialogs/IDialogConstants/NEXT_ID," Button id for a "Next" button (value 15).\n"
116,field,org/eclipse/jface/dialogs/IDialogConstants/FINISH_ID," Button id for a "Finish" button (value 16).\n"
117,field,org/eclipse/jface/dialogs/IDialogConstants/HELP_ID," Button id for a "Help" button (value 17).\n"
118,field,org/eclipse/jface/dialogs/IDialogConstants/SELECT_ALL_ID," Button id for a "Select All" button (value 18).\n"
119,field,org/eclipse/jface/dialogs/IDialogConstants/DESELECT_ALL_ID," Button id for a "Deselect All" button (value 19).\n"
120,field,org/eclipse/jface/dialogs/IDialogConstants/SELECT_TYPES_ID," Button id for a "Select types" button (value 20).\n"
121,field,org/eclipse/jface/dialogs/IDialogConstants/NO_TO_ALL_ID," Button id for a "No to All" button (value 21).\n"
122,field,org/eclipse/jface/dialogs/IDialogConstants/INTERNAL_ID," Starting button id reserved for internal use by JFace (value 256). JFace\n classes make ids by adding to this number.\n"
124,field,org/eclipse/jface/dialogs/IDialogConstants/OK_LABEL," The label for OK buttons.\n"
125,field,org/eclipse/jface/dialogs/IDialogConstants/CANCEL_LABEL," The label for cancel buttons.\n"
126,field,org/eclipse/jface/dialogs/IDialogConstants/YES_LABEL," The label for yes buttons.\n"
127,field,org/eclipse/jface/dialogs/IDialogConstants/NO_LABEL," The label for no buttons.\n"
128,field,org/eclipse/jface/dialogs/IDialogConstants/NO_TO_ALL_LABEL," The label for not to all buttons.\n"
129,field,org/eclipse/jface/dialogs/IDialogConstants/YES_TO_ALL_LABEL," The label for yes to all buttons.\n"
130,field,org/eclipse/jface/dialogs/IDialogConstants/SKIP_LABEL," The label for skip buttons.\n"
131,field,org/eclipse/jface/dialogs/IDialogConstants/STOP_LABEL," The label for stop buttons.\n"
132,field,org/eclipse/jface/dialogs/IDialogConstants/ABORT_LABEL," The label for abort buttons.\n"
133,field,org/eclipse/jface/dialogs/IDialogConstants/RETRY_LABEL," The label for retry buttons.\n"
134,field,org/eclipse/jface/dialogs/IDialogConstants/IGNORE_LABEL," The label for ignore buttons.\n"
135,field,org/eclipse/jface/dialogs/IDialogConstants/PROCEED_LABEL," The label for proceed buttons.\n"
136,field,org/eclipse/jface/dialogs/IDialogConstants/OPEN_LABEL," The label for open buttons.\n"
137,field,org/eclipse/jface/dialogs/IDialogConstants/CLOSE_LABEL," The label for close buttons.\n"
138,field,org/eclipse/jface/dialogs/IDialogConstants/SHOW_DETAILS_LABEL," The label for show details buttons.\n"
139,field,org/eclipse/jface/dialogs/IDialogConstants/HIDE_DETAILS_LABEL," The label for hide details buttons.\n"
140,field,org/eclipse/jface/dialogs/IDialogConstants/BACK_LABEL," The label for back buttons.\n"
141,field,org/eclipse/jface/dialogs/IDialogConstants/NEXT_LABEL," The label for next buttons.\n"
142,field,org/eclipse/jface/dialogs/IDialogConstants/FINISH_LABEL," The label for finish buttons.\n"
143,field,org/eclipse/jface/dialogs/IDialogConstants/HELP_LABEL," The label for help buttons.\n"
144,field,org/eclipse/jface/dialogs/IDialogConstants/VERTICAL_MARGIN," Vertical margin in dialog units (value 7).\n"
145,field,org/eclipse/jface/dialogs/IDialogConstants/VERTICAL_SPACING," Vertical spacing in dialog units (value 4).\n"
146,field,org/eclipse/jface/dialogs/IDialogConstants/HORIZONTAL_MARGIN," Horizontal margin in dialog units (value 7).\n"
147,field,org/eclipse/jface/dialogs/IDialogConstants/HORIZONTAL_SPACING," Horizontal spacing in dialog units (value 4).\n"
148,field,org/eclipse/jface/dialogs/IDialogConstants/BUTTON_BAR_HEIGHT," Height of button bar in dialog units (value 25).\n"
149,field,org/eclipse/jface/dialogs/IDialogConstants/LEFT_MARGIN," Left margin in dialog units (value 20).\n"
150,field,org/eclipse/jface/dialogs/IDialogConstants/BUTTON_MARGIN," Button margin in dialog units (value 4).\n"
151,field,org/eclipse/jface/dialogs/IDialogConstants/BUTTON_HEIGHT," Button height in dialog units (value 14).\n \n @deprecated This constant is no longer in use.\n The button heights are now determined by the layout.\n"
152,field,org/eclipse/jface/dialogs/IDialogConstants/BUTTON_WIDTH," Button width in dialog units (value 61).\n"
153,field,org/eclipse/jface/dialogs/IDialogConstants/INDENT," Indent in dialog units (value 21).\n"
154,field,org/eclipse/jface/dialogs/IDialogConstants/SMALL_INDENT," Small indent in dialog units (value 7).\n"
155,field,org/eclipse/jface/dialogs/IDialogConstants/ENTRY_FIELD_WIDTH," Entry field width in dialog units (value 200).\n"
156,field,org/eclipse/jface/dialogs/IDialogConstants/MINIMUM_MESSAGE_AREA_WIDTH," Minimum width of message area in dialog units (value 300).\n"
159,method,org/eclipse/jface/dialogs/ControlAnimator/ControlAnimator/Control," Constructs a new ControlAnimator instance and passes along the\n control that will be displayed or hidden.\n \n @param control the control that will be displayed or hidden.\n"
160,field,org/eclipse/jface/dialogs/ControlAnimator/control,"the control that will be displayed or hidden "
162,method,org/eclipse/jface/dialogs/ProgressIndicator/beginAnimatedTask/," Initialize the progress bar to be animated.\n"
163,method,org/eclipse/jface/dialogs/ProgressIndicator/beginTask/int," Initialize the progress bar.\n \n @param max\n            The maximum value.\n"
164,method,org/eclipse/jface/dialogs/ProgressIndicator/done/," Progress is done.\n"
165,method,org/eclipse/jface/dialogs/ProgressIndicator/sendRemainingWork/," Moves the progress indicator to the end.\n"
166,method,org/eclipse/jface/dialogs/ProgressIndicator/worked/double," Moves the progress indicator by the given amount of work units\n @param work the amount of work to increment by.\n"
168,method,org/eclipse/jface/dialogs/ProgressIndicator/showPaused/," Show the receiver as being paused.\n @since 3.4\n"
169,method,org/eclipse/jface/dialogs/ProgressIndicator/showNormal/," Reset the progress bar to it's normal style.\n @since 3.4\n"
170,method,org/eclipse/jface/dialogs/ProgressIndicator/ProgressIndicator/Composite," Create a ProgressIndicator as a child under the given parent.\n \n @param parent\n            The widgets parent\n"
171,method,org/eclipse/jface/dialogs/ProgressIndicator/ProgressIndicator/Composite;int," Create a ProgressIndicator as a child under the given parent.\n \n @param parent\n            The widgets parent\n @param style the SWT style constants for progress monitors created \n 	by the receiver.\n @since 3.4\n"
172,interface,org/eclipse/jface/dialogs/IMessageProvider," Minimal interface to a message provider. Used for dialog pages which can\n provide a message with an icon.\n \n @since 2.0\n"
173,method,org/eclipse/jface/dialogs/IMessageProvider/getMessage/," Returns the current message for this message provider.\n <p>\n A message provides instruction or information to the user.\n </p>\n \n @return the message, or <code>null</code> if none\n"
176,field,org/eclipse/jface/dialogs/IMessageProvider/INFORMATION," Constant for an info message (value 1).\n"
179,interface,org/eclipse/jface/dialogs/IInputValidator," The IInputValidator is the interface for simple validators. \n @see org.eclipse.jface.dialogs.InputDialog\n"
182,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/updateForClearBlocked/," Clear blocked state from the receiver.\n"
183,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/updateForSetBlocked/IStatus," Set blocked state from the receiver.\n \n @param reason\n            IStatus that gives the details\n"
184,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/cancelPressed/," The cancel button has been pressed.\n \n @since 3.0\n"
186,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/clearCursors/," Clear the cursors in the dialog.\n \n @since 3.0\n"
187,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/configureShell/Shell,""
188,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/createButtonsForButtonBar/Composite,""
189,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/createCancelButton/Composite," Creates the cancel button.\n \n @param parent\n            the parent composite\n @since 3.0\n"
190,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/createDialogArea/Composite,""
191,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/getInitialSize/,""
192,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/getProgressMonitor/," Returns the progress monitor to use for operations run in this progress\n dialog.\n \n @return the progress monitor\n"
196,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/getNestingDepth/," Returns the nesting depth of running operations.\n \n @return the nesting depth of running operations\n @since 3.0\n"
197,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/incrementNestingDepth/," Increments the nesting depth of running operations.\n \n @since 3.0\n"
198,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/decrementNestingDepth/," Decrements the nesting depth of running operations.\n \n @since 3.0\n \n"
201,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/setCancelable/boolean," Sets whether the progress dialog is cancelable or not.\n \n @param cancelable\n            <code>true</code> if the end user can cancel this progress\n            dialog, and <code>false</code> if it cannot be canceled\n"
202,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/setOperationCancelButtonEnabled/boolean," Helper to enable/disable Cancel button for this dialog.\n \n @param b\n            <code>true</code> to enable the cancel button, and\n            <code>false</code> to disable it\n @since 3.0\n"
203,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/getImage/,""
204,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/open/,""
205,method,org/eclipse/jface/dialogs/ProgressMonitorDialog/ProgressMonitorDialog/Shell," Creates a progress monitor dialog under the given shell. The dialog has a\n standard title and no image. <code>open</code> is non-blocking.\n \n @param parent\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n"
206,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/progressIndicator," The progress indicator control.\n"
207,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/taskLabel," The label control for the task. Kept for backwards compatibility.\n"
208,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/subTaskLabel," The label control for the subtask.\n"
209,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/cancel," The Cancel button control.\n"
210,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/operationCancelableState," Indicates whether the Cancel button is to be shown.\n"
211,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/enableCancelButton," Indicates whether the Cancel button is to be enabled.\n"
212,field,org/eclipse/jface/dialogs/ProgressMonitorDialog/arrowCursor," The cursor used in the cancel button;\n"
214,method,org/eclipse/jface/dialogs/ErrorDialog/buttonPressed/int,""
215,method,org/eclipse/jface/dialogs/ErrorDialog/configureShell/Shell,""
216,method,org/eclipse/jface/dialogs/ErrorDialog/createButtonsForButtonBar/Composite,""
219,method,org/eclipse/jface/dialogs/ErrorDialog/createDialogAndButtonArea/Composite,""
220,method,org/eclipse/jface/dialogs/ErrorDialog/getImage/,""
226,method,org/eclipse/jface/dialogs/ErrorDialog/close/,""
230,method,org/eclipse/jface/dialogs/ErrorDialog/isResizable/,""
233,interface,org/eclipse/jface/dialogs/IDialogPage," Interface for a page in a multi-page dialog.\n"
235,method,org/eclipse/jface/dialogs/IDialogPage/dispose/," Disposes the SWT resources allocated by this\n dialog page.\n"
237,method,org/eclipse/jface/dialogs/IDialogPage/getDescription/," Returns this dialog page's description text.\n\n @return the description text for this dialog page, \n  or <code>null</code> if none\n"
239,method,org/eclipse/jface/dialogs/IDialogPage/getImage/," Returns this dialog page's image.\n\n @return the image for this dialog page, or <code>null</code>\n  if none\n"
241,method,org/eclipse/jface/dialogs/IDialogPage/getTitle/," Returns this dialog page's title.\n\n @return the title of this dialog page, \n  or <code>null</code> if none\n"
242,method,org/eclipse/jface/dialogs/IDialogPage/performHelp/," Notifies that help has been requested for this dialog page.\n"
243,method,org/eclipse/jface/dialogs/IDialogPage/setDescription/String," Sets this dialog page's description text.\n \n @param description the description text for this dialog\n  page, or <code>null</code> if none\n"
244,method,org/eclipse/jface/dialogs/IDialogPage/setImageDescriptor/ImageDescriptor," Sets this dialog page's image.\n\n @param image the image for this dialog page, \n  or <code>null</code> if none\n"
245,method,org/eclipse/jface/dialogs/IDialogPage/setTitle/String," Set this dialog page's title.\n\n @param title the title of this dialog page, \n  or <code>null</code> if none\n"
246,method,org/eclipse/jface/dialogs/IDialogPage/setVisible/boolean," Sets the visibility of this dialog page.\n\n @param visible <code>true</code> to make this page visible,\n  and <code>false</code> to hide it\n"
248,method,org/eclipse/jface/dialogs/StatusDialog/setStatusLineAboveButtons/boolean," Specifies whether status line appears to the left of the buttons\n (default) or above them.\n \n @param aboveButtons\n            if <code>true</code> status line is placed above buttons; if\n            <code>false</code> to the right\n"
250,method,org/eclipse/jface/dialogs/StatusDialog/getStatus/," Returns the last status.\n \n @return IStatus\n"
252,method,org/eclipse/jface/dialogs/StatusDialog/configureShell/Shell,""
253,method,org/eclipse/jface/dialogs/StatusDialog/create/,""
254,method,org/eclipse/jface/dialogs/StatusDialog/createButtonsForButtonBar/Composite,""
255,method,org/eclipse/jface/dialogs/StatusDialog/createButtonBar/Composite,""
256,method,org/eclipse/jface/dialogs/StatusDialog/setTitle/String," Sets the title for this dialog.\n \n @param title\n            the title.\n"
257,method,org/eclipse/jface/dialogs/StatusDialog/setImage/Image," Sets the image for this dialog.\n \n @param image\n            the image.\n"
258,method,org/eclipse/jface/dialogs/StatusDialog/StatusDialog/Shell," Creates an instance of a status dialog.\n \n @param parent\n            the parent Shell of the dialog\n"
260,method,org/eclipse/jface/dialogs/DialogSettings/addNewSection/String,""
261,method,org/eclipse/jface/dialogs/DialogSettings/addSection/IDialogSettings,""
262,method,org/eclipse/jface/dialogs/DialogSettings/get/String,""
263,method,org/eclipse/jface/dialogs/DialogSettings/getArray/String,""
264,method,org/eclipse/jface/dialogs/DialogSettings/getBoolean/String,""
265,method,org/eclipse/jface/dialogs/DialogSettings/getDouble/String,""
266,method,org/eclipse/jface/dialogs/DialogSettings/getFloat/String,""
267,method,org/eclipse/jface/dialogs/DialogSettings/getInt/String,""
268,method,org/eclipse/jface/dialogs/DialogSettings/getLong/String,""
269,method,org/eclipse/jface/dialogs/DialogSettings/getName/,""
270,method,org/eclipse/jface/dialogs/DialogSettings/getSection/String,""
271,method,org/eclipse/jface/dialogs/DialogSettings/getSections/,""
272,method,org/eclipse/jface/dialogs/DialogSettings/load/Reader,""
273,method,org/eclipse/jface/dialogs/DialogSettings/load/String,""
274,method,org/eclipse/jface/dialogs/DialogSettings/put/String;String[],""
275,method,org/eclipse/jface/dialogs/DialogSettings/put/String;double,""
276,method,org/eclipse/jface/dialogs/DialogSettings/put/String;float,""
277,method,org/eclipse/jface/dialogs/DialogSettings/put/String;int,""
278,method,org/eclipse/jface/dialogs/DialogSettings/put/String;long,""
279,method,org/eclipse/jface/dialogs/DialogSettings/put/String;String,""
280,method,org/eclipse/jface/dialogs/DialogSettings/put/String;boolean,""
281,method,org/eclipse/jface/dialogs/DialogSettings/save/Writer,""
282,method,org/eclipse/jface/dialogs/DialogSettings/save/String,""
283,method,org/eclipse/jface/dialogs/DialogSettings/DialogSettings/String," Create an empty dialog settings which loads and saves its\n content to a file.\n Use the methods <code>load(String)</code> and <code>store(String)</code>\n to load and store this dialog settings.\n\n @param sectionName the name of the section in the settings.\n"
284,class,org/eclipse/jface/dialogs/PageChangedEvent," Event object describing a page selection change. The source of these events\n is a page change provider.\n \n @see IPageChangeProvider\n @see IPageChangedListener\n \n @since 3.1\n"
286,method,org/eclipse/jface/dialogs/PageChangedEvent/getPageChangeProvider/," Returns the page change provider that is the source of this event.\n \n @return the originating page change provider\n"
287,method,org/eclipse/jface/dialogs/PageChangedEvent/PageChangedEvent/IPageChangeProvider;Object," Creates a new event for the given source and selected page.\n \n @param source\n            the page change provider\n @param selectedPage\n            the selected page. In the JFace provided dialogs this\n            will be an <code>IDialogPage</code>.\n"
288,field,org/eclipse/jface/dialogs/PageChangedEvent/selectedPage," The selected page.\n"
290,method,org/eclipse/jface/dialogs/TitleAreaDialog/createContents/Composite,""
292,method,org/eclipse/jface/dialogs/TitleAreaDialog/getInitialSize/," The <code>TitleAreaDialog</code> implementation of this\n <code>Window</code> methods returns an initial size which is at least\n some reasonable minimum.\n \n @return the initial size of the dialog\n"
293,method,org/eclipse/jface/dialogs/TitleAreaDialog/getTitleArea/," Retained for backward compatibility.\n \n Returns the title area composite. There is no composite in this\n implementation so the shell is returned.\n \n @return Composite\n @deprecated\n"
294,method,org/eclipse/jface/dialogs/TitleAreaDialog/getTitleImageLabel/," Returns the title image label.\n \n @return the title image label\n"
298,method,org/eclipse/jface/dialogs/TitleAreaDialog/setTitle/String," Sets the title to be shown in the title area of this dialog.\n \n @param newTitle\n            the title show\n"
299,method,org/eclipse/jface/dialogs/TitleAreaDialog/setTitleAreaColor/RGB," Sets the title bar color for this dialog.\n \n @param color\n            the title bar color\n"
300,method,org/eclipse/jface/dialogs/TitleAreaDialog/setTitleImage/Image," Sets the title image to be shown in the title area of this dialog.\n \n @param newTitleImage\n            the title image to be shown\n"
301,method,org/eclipse/jface/dialogs/TitleAreaDialog/TitleAreaDialog/Shell," Instantiate a new title area dialog.\n \n @param parentShell\n            the parent SWT shell\n"
303,field,org/eclipse/jface/dialogs/TitleAreaDialog/DLG_IMG_TITLE_BANNER," Image registry key for banner image (value\n <code>"dialog_title_banner_image"</code>).\n"
304,field,org/eclipse/jface/dialogs/TitleAreaDialog/INFO_MESSAGE," Message type constant used to display an info icon with the message.\n \n @since 2.0\n @deprecated\n"
308,method,org/eclipse/jface/dialogs/IconAndMessageDialog/getMessageLabelStyle/," Returns the style for the message label.\n \n @return the style for the message label\n \n @since 3.0\n"
309,method,org/eclipse/jface/dialogs/IconAndMessageDialog/createButtonBar/Composite,""
311,method,org/eclipse/jface/dialogs/IconAndMessageDialog/createContents/Composite,""
312,method,org/eclipse/jface/dialogs/IconAndMessageDialog/createDialogAndButtonArea/Composite," Create the dialog area and the button bar for the receiver.\n \n @param parent\n"
315,method,org/eclipse/jface/dialogs/IconAndMessageDialog/getInfoImage/," Return the <code>Image</code> to be used when displaying information.\n \n @return image the information image\n"
316,method,org/eclipse/jface/dialogs/IconAndMessageDialog/getQuestionImage/," Return the <code>Image</code> to be used when displaying a question.\n \n @return image the question image\n"
317,method,org/eclipse/jface/dialogs/IconAndMessageDialog/IconAndMessageDialog/Shell," Constructor for IconAndMessageDialog.\n \n @param parentShell\n            the parent shell, or <code>null</code> to create a top-level\n            shell\n"
318,field,org/eclipse/jface/dialogs/IconAndMessageDialog/message," Message (a localized string).\n"
319,field,org/eclipse/jface/dialogs/IconAndMessageDialog/messageLabel," Message label is the label the message is shown on.\n"
320,field,org/eclipse/jface/dialogs/IconAndMessageDialog/imageLabel," Return the label for the image.\n"
322,method,org/eclipse/jface/dialogs/ImageAndMessageArea/setBackground/Color,""
323,method,org/eclipse/jface/dialogs/ImageAndMessageArea/setText/String," Sets the text in the decorated field which will be displayed in the\n message area.\n \n @param text\n            the text to be displayed in the message area\n \n @see org.eclipse.swt.widgets.Text#setText(String string)\n"
325,method,org/eclipse/jface/dialogs/ImageAndMessageArea/setFont/Font,""
326,method,org/eclipse/jface/dialogs/ImageAndMessageArea/setToolTipText/String,""
329,method,org/eclipse/jface/dialogs/PopupDialog/configureShell/Shell,""
350,method,org/eclipse/jface/dialogs/PopupDialog/getInitialSize/,""
354,method,org/eclipse/jface/dialogs/PopupDialog/getInitialLocation/Point," (non-Javadoc)\n \n @see org.eclipse.jface.window.Window#getInitialLocation(org.eclipse.swt.graphics.Point)\n"
363,field,org/eclipse/jface/dialogs/PopupDialog/HOVER_SHELLSTYLE," Shell style appropriate for a simple hover popup that cannot get focus.\n \n"
364,field,org/eclipse/jface/dialogs/PopupDialog/INFOPOPUP_SHELLSTYLE," Shell style appropriate for an info popup that can get focus.\n"
365,field,org/eclipse/jface/dialogs/PopupDialog/INFOPOPUPRESIZE_SHELLSTYLE," Shell style appropriate for a resizable info popup that can get focus.\n"
366,field,org/eclipse/jface/dialogs/PopupDialog/POPUP_MARGINWIDTH," Margin width (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n"
367,field,org/eclipse/jface/dialogs/PopupDialog/POPUP_MARGINHEIGHT," Margin height (in pixels) to be used in layouts inside popup dialogs\n (value is 0).\n"
370,field,org/eclipse/jface/dialogs/PopupDialog/POPUP_IMG_MENU," Image registry key for menu image.\n \n @since 3.4\n"
371,field,org/eclipse/jface/dialogs/PopupDialog/POPUP_IMG_MENU_DISABLED," Image registry key for disabled menu image.\n \n @since 3.4\n"
378,method,org/eclipse/jface/dialogs/DialogPage/getControl/," Returns the top level control for this dialog page.\n \n @return the top level control\n"
379,method,org/eclipse/jface/dialogs/DialogPage/getDescription/,""
380,method,org/eclipse/jface/dialogs/DialogPage/getDialogFontName/," Returns the symbolic font name used by dialog pages.\n \n @return the symbolic font name\n"
381,method,org/eclipse/jface/dialogs/DialogPage/getErrorMessage/,""
382,method,org/eclipse/jface/dialogs/DialogPage/getFont/," Returns the default font to use for this dialog page.\n \n @return the font\n"
383,method,org/eclipse/jface/dialogs/DialogPage/getImage/,""
384,method,org/eclipse/jface/dialogs/DialogPage/getMessage/,""
385,method,org/eclipse/jface/dialogs/DialogPage/getMessageType/,""
387,method,org/eclipse/jface/dialogs/DialogPage/getTitle/,""
391,method,org/eclipse/jface/dialogs/DialogPage/isControlCreated/," Tests whether this page's UI content has already been created.\n \n @return <code>true</code> if the control has been created, and\n         <code>false</code> if not\n"
393,method,org/eclipse/jface/dialogs/DialogPage/setControl/Control," Set the control for the receiver.\n @param newControl\n"
394,method,org/eclipse/jface/dialogs/DialogPage/setDescription/String,""
396,method,org/eclipse/jface/dialogs/DialogPage/setImageDescriptor/ImageDescriptor,""
397,method,org/eclipse/jface/dialogs/DialogPage/setMessage/String," Sets or clears the message for this page.\n <p>\n This is a shortcut for <code>setMessage(newMesasge, NONE)</code>\n </p>\n \n @param newMessage\n            the message, or <code>null</code> to clear the message\n"
401,method,org/eclipse/jface/dialogs/DialogPage/DialogPage/," Creates a new empty dialog page.\n"
402,method,org/eclipse/jface/dialogs/DialogPage/DialogPage/String," Creates a new dialog page with the given title.\n \n @param title\n            the title of this dialog page, or <code>null</code> if none\n"
403,method,org/eclipse/jface/dialogs/DialogPage/DialogPage/String;ImageDescriptor," Creates a new dialog page with the given title and image.\n \n @param title\n            the title of this dialog page, or <code>null</code> if none\n @param image\n            the image for this dialog page, or <code>null</code> if none\n"
419,method,org/eclipse/jface/dialogs/Dialog/initializeBounds/,""
430,method,org/eclipse/jface/dialogs/Dialog/setButtonLayoutData/Button," Set the layout data of the button to a GridData with appropriate heights\n and widths.\n \n @param button\n"
431,method,org/eclipse/jface/dialogs/Dialog/setButtonLayoutFormData/Button," Set the layout data of the button to a FormData with appropriate heights\n and widths.\n \n @param button\n"
432,method,org/eclipse/jface/dialogs/Dialog/close/," @see org.eclipse.jface.window.Window#close()\n"
433,method,org/eclipse/jface/dialogs/Dialog/applyDialogFont/Control," Applies the dialog font to all controls that currently have the default\n font.\n \n @param control\n            the control to apply the font to. Font will also be applied to\n            its children. If the control is <code>null</code> nothing\n            happens.\n"
434,method,org/eclipse/jface/dialogs/Dialog/dialogFontIsDefault/," Return whether or not the dialog font is currently the same as the\n default font.\n \n @return boolean if the two are the same\n"
435,method,org/eclipse/jface/dialogs/Dialog/create/,""
436,method,org/eclipse/jface/dialogs/Dialog/getBlockedHandler/," Get the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n @return Returns the blockedHandler.\n"
437,method,org/eclipse/jface/dialogs/Dialog/setBlockedHandler/IDialogBlockedHandler," Set the IDialogBlockedHandler to be used by WizardDialogs and\n ModalContexts.\n \n @param blockedHandler\n            The blockedHandler for the dialogs.\n"
445,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_INFO," Image registry key for info image (value <code>"dialog_info_image"</code>).\n \n @deprecated use\n             org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_INFORMATION)\n"
446,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_QUESTION," Image registry key for question image (value\n <code>"dialog_question_image"</code>).\n \n @deprecated org.eclipse.swt.widgets.Display.getSystemImage(SWT.ICON_QUESTION)\n"
448,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_MESSAGE_INFO," Image registry key for info message image (value\n <code>"dialog_messasge_info_image"</code>).\n \n @since 2.0\n"
449,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_MESSAGE_WARNING," Image registry key for info message image (value\n <code>"dialog_messasge_warning_image"</code>).\n \n @since 2.0\n"
450,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_MESSAGE_ERROR," Image registry key for info message image (value\n <code>"dialog_message_error_image"</code>).\n \n @since 2.0\n"
451,field,org/eclipse/jface/dialogs/Dialog/DLG_IMG_HELP," Image registry key for help image (value\n <code>"dialog_help_image"</code>).\n \n @since 3.2\n"
452,field,org/eclipse/jface/dialogs/Dialog/ELLIPSIS," The ellipsis is the string that is used to represent shortened text.\n \n @since 3.0\n"
454,field,org/eclipse/jface/dialogs/Dialog/DIALOG_PERSISTLOCATION," Persist the last location of the dialog.\n @since 3.2\n"
455,field,org/eclipse/jface/dialogs/Dialog/DIALOG_PERSISTSIZE," Persist the last known size of the dialog.\n @since 3.2\n"
456,field,org/eclipse/jface/dialogs/Dialog/dialogArea," The dialog area; <code>null</code> until dialog is layed out.\n"
457,field,org/eclipse/jface/dialogs/Dialog/buttonBar," The button bar; <code>null</code> until dialog is layed out.\n"
458,field,org/eclipse/jface/dialogs/Dialog/blockedHandler," Create a default instance of the blocked handler which does not do\n anything.\n"
459,class,org/eclipse/jface/dialogs/ControlEnableState," Helper class to save the enable/disable state of a control including all its\n descendent controls.\n"
460,method,org/eclipse/jface/dialogs/ControlEnableState/disable/Control," Saves the current enable/disable state of the given control and its\n descendents in the returned object; the controls are all disabled.\n \n @param w\n            the control\n @return an object capturing the enable/disable state\n"
461,method,org/eclipse/jface/dialogs/ControlEnableState/disable/Control;List," Saves the current enable/disable state of the given control and its\n descendents in the returned object except for the given list of exception\n cases; the controls that are saved are also disabled.\n \n @param w\n            the control\n @param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>)\n @return an object capturing the enable/disable state\n"
462,method,org/eclipse/jface/dialogs/ControlEnableState/restore/," Restores the window enable state saved in this object.\n"
463,method,org/eclipse/jface/dialogs/ControlEnableState/ControlEnableState/Control," Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents; the controls that are saved are\n also disabled.\n \n @param w\n            the control\n"
464,method,org/eclipse/jface/dialogs/ControlEnableState/ControlEnableState/Control;List," Creates a new object and saves in it the current enable/disable state of\n the given control and its descendents except for the given list of\n exception cases; the controls that are saved are also disabled.\n \n @param w\n            the control\n @param exceptions\n            the list of controls to not disable (element type:\n            <code>Control</code>), or <code>null</code> if none\n"
466,method,org/eclipse/jface/dialogs/ErrorSupportProvider/createSupportArea/Composite;IStatus," Create an area for adding support components as a child of parent.\n @param parent The parent {@link Composite}\n @param status The {@link IStatus} that is being displayed.\n @return Control\n"
467,method,org/eclipse/jface/dialogs/ErrorSupportProvider/ErrorSupportProvider/,""
470,method,org/eclipse/jface/dialogs/DialogTray/DialogTray/,""
472,method,org/eclipse/jface/dialogs/DialogMessageArea/createContents/Composite," Create the contents for the receiver.\n \n @param parent\n            the Composite that the children will be created in\n"
473,method,org/eclipse/jface/dialogs/DialogMessageArea/setTitleLayoutData/Object," Set the layoutData for the title area. In most cases this will be a copy\n of the layoutData used in setMessageLayoutData.\n \n @param layoutData\n            the layoutData for the title\n @see #setMessageLayoutData(Object)\n"
474,method,org/eclipse/jface/dialogs/DialogMessageArea/setMessageLayoutData/Object," Set the layoutData for the messageArea. In most cases this will be a copy\n of the layoutData used in setTitleLayoutData.\n \n @param layoutData\n            the layoutData for the message area composite.\n @see #setTitleLayoutData(Object)\n"
475,method,org/eclipse/jface/dialogs/DialogMessageArea/showTitle/String;Image," Show the title.\n \n @param titleMessage\n            String for the titke\n @param titleImage\n            Image or <code>null</code>\n"
476,method,org/eclipse/jface/dialogs/DialogMessageArea/restoreTitle/," Enable the title and disable the message text and image.\n"
479,method,org/eclipse/jface/dialogs/DialogMessageArea/DialogMessageArea/," Create a new instance of the receiver.\n"
482,method,org/eclipse/jface/dialogs/IPageChangeProvider/addPageChangedListener/IPageChangedListener," Adds a listener for page changes in this page change provider. Has no\n effect if an identical listener is already registered.\n \n @param listener\n            a page changed listener\n"
483,method,org/eclipse/jface/dialogs/IPageChangeProvider/removePageChangedListener/IPageChangedListener," Removes the given page change listener from this page change provider.\n Has no effect if an identical listener is not registered.\n \n @param listener\n            a page changed listener\n"
485,method,org/eclipse/jface/dialogs/IDialogSettings/addNewSection/String," Create a new section in the receiver and return it.\n \n @param name\n            the name of the new section\n @return the new section\n"
486,method,org/eclipse/jface/dialogs/IDialogSettings/addSection/IDialogSettings," Add a section in the receiver.\n \n @param section\n            the section to be added\n"
487,method,org/eclipse/jface/dialogs/IDialogSettings/get/String," Returns the value of the given key in this dialog settings.\n \n @param key\n            the key\n @return the value, or <code>null</code> if none\n"
488,method,org/eclipse/jface/dialogs/IDialogSettings/getArray/String," Returns the value, an array of strings, of the given key in this dialog\n settings.\n \n @param key\n            the key\n @return the array of string, or <code>null</code> if none\n"
489,method,org/eclipse/jface/dialogs/IDialogSettings/getBoolean/String," Convenience API. Convert the value of the given key in this dialog\n settings to a boolean and return it.\n \n @param key\n            the key\n @return the boolean value, or <code>false</code> if none\n"
490,method,org/eclipse/jface/dialogs/IDialogSettings/getDouble/String," Convenience API. Convert the value of the given key in this dialog\n settings to a double and return it.\n \n @param key\n            the key\n @return the value coverted to double, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Double#valueOf(java.lang.String)\n"
491,method,org/eclipse/jface/dialogs/IDialogSettings/getFloat/String," Convenience API. Convert the value of the given key in this dialog\n settings to a float and return it.\n \n @param key\n            the key\n @return the value coverted to float, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Float#valueOf(java.lang.String)\n"
492,method,org/eclipse/jface/dialogs/IDialogSettings/getInt/String," Convenience API. Convert the value of the given key in this dialog\n settings to a int and return it.\n \n @param key\n            the key\n @return the value coverted to int, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Integer#valueOf(java.lang.String)\n"
493,method,org/eclipse/jface/dialogs/IDialogSettings/getLong/String," Convenience API. Convert the value of the given key in this dialog\n settings to a long and return it.\n \n @param key\n            the key\n @return the value coverted to long, or throws\n         <code>NumberFormatException</code> if none\n \n @exception NumberFormatException\n                if the string value does not contain a parsable number.\n @see java.lang.Long#valueOf(java.lang.String)\n"
494,method,org/eclipse/jface/dialogs/IDialogSettings/getName/," Returns the IDialogSettings name.\n \n @return the name\n"
495,method,org/eclipse/jface/dialogs/IDialogSettings/getSection/String," Returns the section with the given name in this dialog settings.\n \n @param sectionName\n            the key\n @return IDialogSettings (the section), or <code>null</code> if none\n"
496,method,org/eclipse/jface/dialogs/IDialogSettings/getSections/," Returns all the sections in this dialog settings.\n \n @return the section, or <code>null</code> if none\n"
497,method,org/eclipse/jface/dialogs/IDialogSettings/load/Reader," Load a dialog settings from a stream and fill the receiver with its\n content.\n \n @param reader\n            a Reader specifying the stream where the settings are read\n            from.\n @throws IOException\n"
498,method,org/eclipse/jface/dialogs/IDialogSettings/load/String," Load a dialog settings from a file and fill the receiver with its\n content.\n \n @param fileName\n            the name of the file the settings are read from.\n @throws IOException\n"
499,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;String[]," Adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
500,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;double," Convenience API. Converts the double <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
501,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;float," Convenience API. Converts the float <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
502,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;int," Convenience API. Converts the int <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
503,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;long," Convenience API. Converts the long <code>value</code> to a string and\n adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
504,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;String," Adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
505,method,org/eclipse/jface/dialogs/IDialogSettings/put/String;boolean," Convenience API. Converts the boolean <code>value</code> to a string\n and adds the pair <code>key/value</code> to this dialog settings.\n \n @param key\n            the key.\n @param value\n            the value to be associated with the <code>key</code>\n"
506,method,org/eclipse/jface/dialogs/IDialogSettings/save/Writer," Save a dialog settings to a stream\n \n @param writer\n            a Writer specifying the stream the settings are written in.\n @throws IOException\n"
507,method,org/eclipse/jface/dialogs/IDialogSettings/save/String," Save a dialog settings to a file.\n \n @param fileName\n            the name of the file the settings are written in.\n @throws IOException\n"
508,class,org/eclipse/jface/dialogs/PageChangingEvent," Event object describing an <code>IDialogPage</code> in the midst of changing.\n \n @see IPageChangingListener\n @since 3.3\n"
511,method,org/eclipse/jface/dialogs/PageChangingEvent/PageChangingEvent/Object;Object;Object," Creates a new event for the given source, selected (current) page and\n direction.\n \n @param source\n            the page changing provider (the source of this event)\n @param currentPage\n            the current page. In the JFace provided dialogs this will be\n            an <code>IDialogPage</code>.\n @param targetPage\n            the target page. In the JFace provided dialogs this will be an\n            <code>IDialogPage</code>.\n"
512,field,org/eclipse/jface/dialogs/PageChangingEvent/doit," Public field that dictates if the page change will successfully change.\n \n Set this field to <code>false</code> to prevent the page from changing.\n   \n Default value is <code>true</code>.\n"
513,class,org/eclipse/jface/dialogs/AnimatorFactory," Factory for control animators used by JFace to animate the display of an SWT\n Control. Through the use of the method\n {@link org.eclipse.jface.util.Policy#setAnimatorFactory(AnimatorFactory)} \n a new type of animator factory can be plugged into JFace.\n \n @since 3.2\n @deprecated as of 3.3, this class is no longer used.\n"
515,method,org/eclipse/jface/dialogs/AnimatorFactory/AnimatorFactory/,""
518,interface,org/eclipse/jface/dialogs/IDialogBlockedHandler," The IDialogBlockedHandler is the handler used by\n JFace to provide extra information when a\n blocking has occured. There is one static instance\n of this class used by WizardDialog and ModalContext.\n @see org.eclipse.core.runtime.IProgressMonitorWithBlocking#clearBlocked()\n @see  org.eclipse.core.runtime.IProgressMonitorWithBlocking#setBlocked(IStatus)\n @see WizardDialog\n @since 3.0\n"
519,method,org/eclipse/jface/dialogs/IDialogBlockedHandler/clearBlocked/," The blockage has been cleared. Clear the\n extra information and resume.\n"
523,method,org/eclipse/jface/dialogs/MessageDialog/buttonPressed/int,""
524,method,org/eclipse/jface/dialogs/MessageDialog/configureShell/Shell,""
525,method,org/eclipse/jface/dialogs/MessageDialog/createButtonsForButtonBar/Composite,""
528,method,org/eclipse/jface/dialogs/MessageDialog/getButton/int," Gets a button in this dialog's button bar.\n \n @param index\n            the index of the button in the dialog's button bar\n @return a button in the dialog's button bar\n"
530,method,org/eclipse/jface/dialogs/MessageDialog/handleShellCloseEvent/," Handle the shell close. Set the return code to <code>SWT.DEFAULT</code>\n as there has been no explicit close by the user.\n \n @see org.eclipse.jface.window.Window#handleShellCloseEvent()\n"
531,method,org/eclipse/jface/dialogs/MessageDialog/open/," Opens this message dialog, creating it first if it has not yet been created.\n <p>\n This method waits until the dialog is closed by the end user, and then it\n returns the dialog's return code. The dialog's return code is either the\n index of the button the user pressed, or {@link SWT#DEFAULT} if the dialog\n has been closed by other means.\n </p>\n\n @return the return code\n\n @see org.eclipse.jface.window.Window#open()\n"
533,method,org/eclipse/jface/dialogs/MessageDialog/openConfirm/Shell;String;String," Convenience method to open a simple confirm (OK/Cancel) dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog's title, or <code>null</code> if none\n @param message\n            the message\n @return <code>true</code> if the user presses the OK button,\n         <code>false</code> otherwise\n"
535,method,org/eclipse/jface/dialogs/MessageDialog/openInformation/Shell;String;String," Convenience method to open a standard information dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog's title, or <code>null</code> if none\n @param message\n            the message\n"
536,method,org/eclipse/jface/dialogs/MessageDialog/openQuestion/Shell;String;String," Convenience method to open a simple Yes/No question dialog.\n \n @param parent\n            the parent shell of the dialog, or <code>null</code> if none\n @param title\n            the dialog's title, or <code>null</code> if none\n @param message\n            the message\n @return <code>true</code> if the user presses the Yes button,\n         <code>false</code> otherwise\n"
538,method,org/eclipse/jface/dialogs/MessageDialog/createButton/Composite;int;String;boolean,""
540,method,org/eclipse/jface/dialogs/MessageDialog/getImage/,""
542,method,org/eclipse/jface/dialogs/MessageDialog/getDefaultButtonIndex/," An accessor for the index of the default button in the button array.\n \n @return The default button index.\n"
546,field,org/eclipse/jface/dialogs/MessageDialog/NONE," Constant for no image (value 0).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n"
548,field,org/eclipse/jface/dialogs/MessageDialog/INFORMATION," Constant for the info image, or a simple dialog with the info image and a single OK button (value 2).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n"
549,field,org/eclipse/jface/dialogs/MessageDialog/QUESTION," Constant for the question image, or a simple dialog with the question image and Yes/No buttons (value 3).\n \n @see #MessageDialog(Shell, String, Image, String, int, String[], int)\n @see #open(int, Shell, String, String, int)\n"
551,field,org/eclipse/jface/dialogs/MessageDialog/CONFIRM," Constant for a simple dialog with the question image and OK/Cancel buttons (value 5).\n \n @see #open(int, Shell, String, String, int)\n @since 3.5\n"
552,field,org/eclipse/jface/dialogs/MessageDialog/QUESTION_WITH_CANCEL," Constant for a simple dialog with the question image and Yes/No/Cancel buttons (value 6).\n \n @see #open(int, Shell, String, String, int)\n @since 3.5\n"
561,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/buttonPressed/int," @see org.eclipse.jface.dialogs.Dialog#buttonPressed(int)\n"
562,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/createButtonsForButtonBar/Composite," @see Dialog#createButtonBar(Composite)\n"
563,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/createDialogArea/Composite," @see Dialog#createDialogArea(Composite)\n"
565,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/getToggleButton/," Returns the toggle button.\n \n @return the toggle button\n"
569,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/setPrefKey/String," A mutator for the key of the preference to be modified by the toggle\n button.\n \n @param prefKey\n            The prefKey to set. If this value is <code>null</code>,\n            then no preference will be modified.\n"
570,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/setPrefStore/IPreferenceStore," A mutator for the preference store to be modified by the toggle button.\n \n @param prefStore\n            The prefStore to set. If this value is <code>null</code>,\n            then no preference will be modified.\n"
572,method,org/eclipse/jface/dialogs/MessageDialogWithToggle/setToggleMessage/String," A mutator for the text on the toggle button. The button will\n automatically get updated with the new text, if it exists.\n \n @param message\n            The new text of the toggle button; if it is <code>null</code>,\n            then used the default toggle message.\n"
575,field,org/eclipse/jface/dialogs/MessageDialogWithToggle/ALWAYS," The value of the preference when the user has asked that the answer to\n the question always be "okay" or "yes".\n"
576,field,org/eclipse/jface/dialogs/MessageDialogWithToggle/NEVER," The value of the preference when the user has asked that the answer to\n the question always be "no".\n"
577,field,org/eclipse/jface/dialogs/MessageDialogWithToggle/PROMPT," The value of the preference when the user wishes to prompted for an\n answer every time the question is to be asked.\n"
578,interface,org/eclipse/jface/dialogs/IPageChangedListener," A listener which is notified when the current page of the multi-page dialog\n is changed.\n \n @see IPageChangeProvider\n @see PageChangedEvent\n \n @since 3.1\n"
579,method,org/eclipse/jface/dialogs/IPageChangedListener/pageChanged/PageChangedEvent," Notifies that the selected page has changed.\n \n @param event\n            event object describing the change\n"
581,method,org/eclipse/jface/dialogs/InputDialog/buttonPressed/int,""
582,method,org/eclipse/jface/dialogs/InputDialog/configureShell/Shell,""
583,method,org/eclipse/jface/dialogs/InputDialog/createButtonsForButtonBar/Composite,""
584,method,org/eclipse/jface/dialogs/InputDialog/createDialogArea/Composite,""
586,method,org/eclipse/jface/dialogs/InputDialog/getOkButton/," Returns the ok button.\n \n @return the ok button\n"
587,method,org/eclipse/jface/dialogs/InputDialog/getText/," Returns the text area.\n \n @return the text area\n"
588,method,org/eclipse/jface/dialogs/InputDialog/getValidator/," Returns the validator.\n \n @return the validator\n"
589,method,org/eclipse/jface/dialogs/InputDialog/getValue/," Returns the string typed into this input dialog.\n \n @return the input string\n"
598,method,org/eclipse/jface/layout/TableColumnLayout/updateColumnData/Widget," @since 3.5\n"
599,method,org/eclipse/jface/layout/TableColumnLayout/TableColumnLayout/,""
600,class,org/eclipse/jface/layout/RowLayoutFactory," RowLayoutFactory creates and initializes row layouts. There are two ways to\n use RowLayoutFactory. Normally, it is used as a shorthand for writing\n "new RowLayout()" and initializing a bunch of fields. In this case the main\n benefit is a more concise syntax and the ability to create more than one\n identical RowLayout from the same factory. Changing a property of the factory\n will affect future layouts created by the factory, but has no effect on\n layouts that have already been created.\n \n @since 3.5\n"
601,method,org/eclipse/jface/layout/RowLayoutFactory/createFrom/RowLayout," Creates a factory that creates copies of the given layout.\n \n @param layout\n            layout to copy\n @return a new RowLayoutFactory instance that creates copies of the given\n         layout\n"
602,method,org/eclipse/jface/layout/RowLayoutFactory/copy/," Creates a copy of the receiver.\n \n @return a copy of the receiver\n"
612,method,org/eclipse/jface/layout/RowLayoutFactory/wrap/boolean," Wrap specifies whether a control will be wrapped to the next row if there\n is insufficient space on the current row.\n \n @param wrap\n            the wrap status\n @return this\n"
613,method,org/eclipse/jface/layout/RowLayoutFactory/type/int," type specifies whether the layout places controls in rows or columns.\n \n Possible values are:\n <ul>\n <li>HORIZONTAL: Position the controls horizontally from left to right</li>\n <li>VERTICAL: Position the controls vertically from top to bottom</li>\n </ul>\n \n @param type\n            One of SWT.HORIZONTAL or SWT.VERTICAL\n @return this\n \n @throws IllegalArgumentException\n             if type is not one of HORIZONTAL or VERTICAL\n"
614,method,org/eclipse/jface/layout/RowLayoutFactory/create/," Creates a new RowLayout, and initializes it with values from the factory.\n \n @return a new initialized RowLayout.\n @see #applyTo\n"
615,method,org/eclipse/jface/layout/RowLayoutFactory/applyTo/Composite," Creates a new RowLayout and attaches it to the given composite. Does not\n create the rowData of any of the controls in the composite.\n \n @param c\n            composite whose layout will be set\n @see #create\n @see RowLayoutFactory\n"
616,method,org/eclipse/jface/layout/RowLayoutFactory/copyLayout/RowLayout," Copies the given RowLayout instance\n \n @param layout\n            layout to copy\n @return a new RowLayout\n"
618,method,org/eclipse/jface/layout/AbstractColumnLayout/setColumnData/Widget;ColumnLayoutData," Adds a new column of data to this table layout.\n \n @param column\n            the column\n \n @param data\n            the column layout data\n"
619,method,org/eclipse/jface/layout/AbstractColumnLayout/computeSize/Composite;int;int;boolean,""
620,method,org/eclipse/jface/layout/AbstractColumnLayout/layout/Composite;boolean,""
621,method,org/eclipse/jface/layout/AbstractColumnLayout/getColumnCount/Scrollable," Get the number of columns for the receiver.\n \n @param tableTree\n            the control\n \n @return the number of columns\n @since 3.5\n"
622,method,org/eclipse/jface/layout/AbstractColumnLayout/setColumnWidths/Scrollable;int[]," Set the widths of the columns.\n \n @param tableTree\n            the control\n \n @param widths\n            the widths of the column\n @since 3.5\n"
623,method,org/eclipse/jface/layout/AbstractColumnLayout/getLayoutData/Scrollable;int," Get the layout data for a column\n \n @param tableTree\n            the control\n @param columnIndex\n            the column index\n @return the layout data, might <b>not</b> null\n @since 3.5\n"
624,method,org/eclipse/jface/layout/AbstractColumnLayout/updateColumnData/Widget," Update the layout data for a column\n \n @param column\n            the column\n @since 3.5\n"
625,method,org/eclipse/jface/layout/AbstractColumnLayout/getColumnTrim/," The number of extra pixels taken as horizontal trim by the table column.\n To ensure there are N pixels available for the content of the column,\n assign N+COLUMN_TRIM for the column width.\n \n @return the trim used by the columns\n @since 3.4\n"
626,method,org/eclipse/jface/layout/AbstractColumnLayout/AbstractColumnLayout/,""
627,field,org/eclipse/jface/layout/AbstractColumnLayout/LAYOUT_DATA," Key used to restore the layout data in the columns data-slot\n @since 3.5\n"
628,class,org/eclipse/jface/layout/GridDataFactory," This class provides a convienient shorthand for creating and initializing\n GridData. This offers several benefits over creating GridData normal way:\n \n <ul>\n <li>The same factory can be used many times to create several GridData instances</li>\n <li>The setters on GridDataFactory all return "this", allowing them to be chained</li> \n <li>GridDataFactory uses vector setters (it accepts Points), making it easy to\n     set X and Y values together</li>\n </ul>\n \n <p>\n GridDataFactory instances are created using one of the static methods on this class. \n </p>\n \n <p>\n Example usage:\n </p>\n <code><pre>\n \n ////////////////////////////////////////////////////////////\n // Example 1: Typical grid data for a non-wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().applyTo(myLabel);\n \n     // Equivalent SWT version\n     GridData labelData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_FILL);\n     myLabel.setLayoutData(labelData);\n \n ///////////////////////////////////////////////////////////\n // Example 2: Typical grid data for a wrapping label\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults()\n          .align(SWT.FILL, SWT.CENTER)\n    	    .hint(150, SWT.DEFAULT)\n    	    .grab(true, false)\n          .applyTo(wrappingLabel);\n      \n     // Equivalent SWT version\n     GridData wrappingLabelData = new GridData(GridData.FILL_HORIZONTAL | GridData.VERTICAL_ALIGN_CENTER);\n     wrappingLabelData.minimumWidth = 1;\n     wrappingLabelData.widthHint = 150;\n     wrappingLabel.setLayoutData(wrappingLabelData);\n \n //////////////////////////////////////////////////////////////\n // Example 3: Typical grid data for a scrollable control (a list box, tree, table, etc.)\n \n     // GridDataFactory version\n     GridDataFactory.fillDefaults().grab(true, true).hint(150, 150).applyTo(listBox);\n \n     // Equivalent SWT version\n     GridData listBoxData = new GridData(GridData.FILL_BOTH);\n     listBoxData.widthHint = 150;\n     listBoxData.heightHint = 150;\n     listBoxData.minimumWidth = 1;\n     listBoxData.minimumHeight = 1;\n     listBox.setLayoutData(listBoxData);\n \n /////////////////////////////////////////////////////////////\n // Example 4: Typical grid data for a button\n\n     // GridDataFactory version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridDataFactory.fillDefaults().align(SWT.FILL, SWT.CENTER).hint(hint).applyTo(button);\n\n     // Equivalent SWT version\n     Point preferredSize = button.computeSize(SWT.DEFAULT, SWT.DEFAULT, false);\n     Point hint = Geometry.max(LayoutConstants.getMinButtonSize(), preferredSize);\n     GridData buttonData = new GridData(GridData.HORIZONTAL_ALIGN_FILL | GridData.VERTICAL_ALIGN_CENTER);\n     buttonData.widthHint = hint.x;\n     buttonData.heightHint = hint.y;\n     button.setLayoutData(buttonData);\n     \n /////////////////////////////////////////////////////////////\n // Example 5: Generated GridData\n\n     // Generates GridData a wrapping label that spans 2 columns\n     GridDataFactory.generate(wrappingLabel, 2, 1);\n     \n     // Generates GridData for a listbox. and adjusts the preferred size to 300x400 pixels\n     GridDataFactory.defaultsFor(listBox).hint(300, 400).applyTo(listBox);\n     \n     // Generates GridData equivalent to example 4\n     GridDataFactory.generate(button, 1, 1);\n          \n </pre></code>\n \n @since 3.2\n"
629,method,org/eclipse/jface/layout/GridDataFactory/swtDefaults/," Creates a new GridDataFactory initialized with the SWT defaults.\n This factory will generate GridData that is equivalent to \n "new GridData()".\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>align(SWT.BEGINNING, SWT.CENTER)</li>\n <li>exclude(false)</li>\n <li>grab(false, false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n <li>indent(0,0)</li>\n <li>minSize(0,0)</li>\n <li>span(1,1)</li>\n </ul>\n \n @return a new GridDataFactory instance\n @see #fillDefaults()\n"
630,method,org/eclipse/jface/layout/GridDataFactory/createFrom/GridData," Creates a new GridDataFactory that creates copies of the given GridData\n by default.\n \n @param data GridData to copy\n @return a new GridDataFactory that creates copies of the argument by default\n"
631,method,org/eclipse/jface/layout/GridDataFactory/fillDefaults/," Creates a GridDataFactory initialized with defaults that will cause\n the control to fill its cell. The minimum size is set to the smallest possible\n minimum size supported by SWT. Currently, the smallest supported minimum size\n is (1,1) so this is the default. If GridLayout ever adds support for grid data\n with no minimum size, this will be changed to 0,0 in the future. \n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>align(SWT.FILL, SWT.FILL)</li>\n <li>exclude(false)</li>\n <li>grab(false, false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n <li>indent(0,0)</li>\n <li>minSize(1,1)</li>\n <li>span(1,1)</li>\n </ul>\n  \n @return a GridDataFactory that makes controls fill their grid by default\n \n @see #swtDefaults()\n"
633,method,org/eclipse/jface/layout/GridDataFactory/generate/Control;int;int," Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches a GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param hSpan number of columns spanned by the control\n @param vSpan number of rows spanned by the control\n @since 3.3\n"
634,method,org/eclipse/jface/layout/GridDataFactory/generate/Control;Point," Generates layout data to the given control, given the number of cells\n spanned by the control. Attaches GridData to the control. This method \n allows generated layout data to be used with controls that span multiple cells. \n <p>\n The generated layout data is the same as what would be generated by \n GridLayoutFactory.generateLayout, except that the span is configurable\n </p>  \n \n @see GridLayoutFactory#generateLayout(org.eclipse.swt.widgets.Composite)\n @param theControl\n @param span The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n @since 3.3\n"
635,method,org/eclipse/jface/layout/GridDataFactory/span/int;int," Sets the GridData span. The span controls how many cells\n are filled by the control. \n \n @param hSpan number of columns spanned by the control\n @param vSpan number of rows spanned by the control\n @return this\n"
636,method,org/eclipse/jface/layout/GridDataFactory/span/Point," Sets the GridData span. The span controls how many cells\n are filled by the control. \n \n @param span the new span. The x coordinate indicates the number of\n columns spanned, and the y coordinate indicates the number of rows.\n @return this\n"
639,method,org/eclipse/jface/layout/GridDataFactory/align/int;int," Sets the alignment of the control within its cell.\n \n @param hAlign horizontal alignment. One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n @param vAlign vertical alignment. One of SWT.BEGINNING, SWT.CENTER, SWT.END, or SWT.FILL.\n @return this\n"
640,method,org/eclipse/jface/layout/GridDataFactory/indent/int;int," Sets the indent of the control within the cell. Moves the position of the control\n by the given number of pixels. Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n @param hIndent distance to move to the right (negative values move left)\n @param vIndent distance to move down (negative values move up)\n @return this\n"
641,method,org/eclipse/jface/layout/GridDataFactory/indent/Point," Sets the indent of the control within the cell. Moves the position of the control\n by the given number of pixels. Positive values move toward the lower-right, negative\n values move toward the upper-left.\n \n @param indent offset to move the control\n @return this\n"
646,method,org/eclipse/jface/layout/GridDataFactory/create/," Creates a new GridData instance. All attributes of the GridData instance\n will be initialized by the factory.\n \n @return a new GridData instance\n"
647,method,org/eclipse/jface/layout/GridDataFactory/copy/," Creates a copy of the receiver.\n \n @return a copy of the receiver\n"
648,method,org/eclipse/jface/layout/GridDataFactory/copyData/GridData," Returns a copy of the given GridData \n \n @param data GridData to copy\n @return a copy of the argument\n"
651,method,org/eclipse/jface/layout/PixelConverter/convertHeightInCharsToPixels/int," Returns the number of pixels corresponding to the height of the given\n number of characters.\n \n @param chars\n            the number of characters\n @return the number of pixels\n"
652,method,org/eclipse/jface/layout/PixelConverter/convertHorizontalDLUsToPixels/int," Returns the number of pixels corresponding to the given number of\n horizontal dialog units.\n \n @param dlus\n            the number of horizontal dialog units\n @return the number of pixels\n"
653,method,org/eclipse/jface/layout/PixelConverter/convertVerticalDLUsToPixels/int," Returns the number of pixels corresponding to the given number of\n vertical dialog units.\n \n @param dlus\n            the number of vertical dialog units\n @return the number of pixels\n"
654,method,org/eclipse/jface/layout/PixelConverter/convertWidthInCharsToPixels/int," Returns the number of pixels corresponding to the width of the given\n number of characters.\n \n @param chars\n            the number of characters\n @return the number of pixels\n"
658,method,org/eclipse/jface/layout/TreeColumnLayout/layout/Composite;boolean,""
663,method,org/eclipse/jface/layout/TreeColumnLayout/TreeColumnLayout/,""
665,method,org/eclipse/jface/layout/GridLayoutFactory/createFrom/GridLayout," Creates a factory that creates copies of the given layout.\n \n @param l layout to copy\n @return a new GridLayoutFactory instance that creates copies of the given layout\n"
666,method,org/eclipse/jface/layout/GridLayoutFactory/copy/," Creates a copy of the reciever.\n \n @return a copy of the reciever\n"
676,method,org/eclipse/jface/layout/GridLayoutFactory/numColumns/int," Sets the number of columns in the layout\n \n @param numColumns number of columns in the layout\n @return this\n"
677,method,org/eclipse/jface/layout/GridLayoutFactory/create/," Creates a new GridLayout, and initializes it with values from the factory.\n \n @return a new initialized GridLayout.\n @see #applyTo\n"
678,method,org/eclipse/jface/layout/GridLayoutFactory/applyTo/Composite," Creates a new GridLayout and attaches it to the given composite.\n Does not create the GridData of any of the controls in the composite.\n \n @param c composite whose layout will be set\n @see #generateLayout\n @see #create\n @see GridLayoutFactory\n"
679,method,org/eclipse/jface/layout/GridLayoutFactory/copyLayout/GridLayout," Copies the given GridLayout instance\n \n @param l layout to copy\n @return a new GridLayout\n"
681,class,org/eclipse/jface/layout/LayoutConstants," Contains various layout constants\n \n @since 3.2\n"
682,method,org/eclipse/jface/layout/LayoutConstants/getMargins/," Returns the default dialog margins, in pixels\n \n @return the default dialog margins, in pixels\n"
683,method,org/eclipse/jface/layout/LayoutConstants/getSpacing/," Returns the default dialog spacing, in pixels\n \n @return the default dialog spacing, in pixels\n"
684,method,org/eclipse/jface/layout/LayoutConstants/getMinButtonSize/," Returns the default minimum button size, in pixels\n \n @return the default minimum button size, in pixels\n"
685,method,org/eclipse/jface/layout/LayoutConstants/LayoutConstants/,""
686,class,org/eclipse/jface/layout/RowDataFactory," This class provides a convenient shorthand for creating and initialising\n RowData. This offers several benefits over creating RowData the normal way:\n \n <ul>\n <li>The same factory can be used many times to create several RowData\n instances</li>\n <li>The setters on RowDataFactory all return "this", allowing them to be\n chained</li>\n </ul>\n \n @since 3.5\n"
687,method,org/eclipse/jface/layout/RowDataFactory/swtDefaults/," Creates a new RowDataFactory initialized with the SWT defaults.\n \n <p>\n Initial values are:\n </p>\n \n <ul>\n <li>exclude(false)</li>\n <li>hint(SWT.DEFAULT, SWT.DEFAULT)</li>\n </ul>\n \n @return a new GridDataFactory instance\n"
688,method,org/eclipse/jface/layout/RowDataFactory/createFrom/RowData," Creates a new RowDataFactory that creates copies of the given RowData by\n default.\n \n @param data\n            RowData to copy\n @return a new RowDataFactory that creates copies of the argument by\n         default\n"
689,method,org/eclipse/jface/layout/RowDataFactory/copyData/RowData," Returns a copy of the given RowData\n \n @param data\n            RowData to copy\n @return a copy of the argument\n"
691,method,org/eclipse/jface/layout/RowDataFactory/create/," Creates a new GridData instance. All attributes of the GridData instance\n will be initialised by the factory.\n \n @return a new GridData instance\n"
692,method,org/eclipse/jface/layout/RowDataFactory/copy/," Creates a copy of the receiver.\n \n @return a copy of the receiver\n"
696,class,org/eclipse/jface/resource/JFaceColors," JFaceColors is the class that stores references\n to all of the colors used by JFace.\n"
697,method,org/eclipse/jface/resource/JFaceColors/getBannerBackground/Display," @param display the display the color is from\n @return the Color used for banner backgrounds\n @see SWT#COLOR_LIST_BACKGROUND\n @see Display#getSystemColor(int)\n"
698,method,org/eclipse/jface/resource/JFaceColors/getBannerForeground/Display," @param display the display the color is from\n @return the Color used for banner foregrounds\n @see SWT#COLOR_LIST_FOREGROUND\n @see Display#getSystemColor(int)\n"
702,method,org/eclipse/jface/resource/JFaceColors/getHyperlinkText/Display," @param display the display the color is from\n @return the default color to use for displaying hyperlinks.\n @see ColorRegistry#get(String)\n @see JFacePreferences#HYPERLINK_COLOR\n"
703,method,org/eclipse/jface/resource/JFaceColors/getActiveHyperlinkText/Display," @param display the display the color is from\n @return the default color to use for displaying active hyperlinks.\n @see ColorRegistry#get(String)\n @see JFacePreferences#ACTIVE_HYPERLINK_COLOR\n"
707,method,org/eclipse/jface/resource/JFaceColors/JFaceColors/,""
709,method,org/eclipse/jface/resource/ImageDescriptor/createFromFile/Class;String," Creates and returns a new image descriptor from a file.\n Convenience method for\n <code>new FileImageDescriptor(location,filename)</code>.\n\n @param location the class whose resource directory contain the file\n @param filename the file name\n @return a new image descriptor\n"
710,method,org/eclipse/jface/resource/ImageDescriptor/createFromImageData/ImageData," Creates and returns a new image descriptor given ImageData\n describing the image.\n \n @since 3.1 \n\n @param data contents of the image\n @return newly created image descriptor\n"
714,method,org/eclipse/jface/resource/ImageDescriptor/createFromURL/URL," Creates and returns a new image descriptor from a URL.\n\n @param url The URL of the image file.\n @return a new image descriptor\n"
715,method,org/eclipse/jface/resource/ImageDescriptor/createResource/Device,""
716,method,org/eclipse/jface/resource/ImageDescriptor/destroyResource/Object,""
722,method,org/eclipse/jface/resource/ImageDescriptor/getMissingImageDescriptor/," Returns the shared image descriptor for a missing image.\n\n @return the missing image descriptor\n"
723,method,org/eclipse/jface/resource/ImageDescriptor/ImageDescriptor/," Constructs an image descriptor.\n"
726,method,org/eclipse/jface/resource/ColorRegistry/get/String," Returns the <code>color</code> associated with the given symbolic color \n name, or <code>null</code> if no such definition exists.\n \n @param symbolicName symbolic color name\n @return the <code>Color</code> or <code>null</code>\n"
727,method,org/eclipse/jface/resource/ColorRegistry/getKeySet/,""
728,method,org/eclipse/jface/resource/ColorRegistry/getRGB/String," Returns the color data associated with the given symbolic color name.\n\n @param symbolicName symbolic color name.\n @return the <code>RGB</code> data, or <code>null</code> if the symbolic name\n is not valid.\n"
730,method,org/eclipse/jface/resource/ColorRegistry/getColorDescriptor/String;ColorDescriptor," Returns the color descriptor associated with the given symbolic color\n name. If this name does not exist within the registry the supplied\n default value will be used.\n \n @param symbolicName\n @param defaultValue\n @return the color descriptor associated with the given symbolic color\n         name or the default\n @since 3.4\n"
731,method,org/eclipse/jface/resource/ColorRegistry/clearCaches/,""
732,method,org/eclipse/jface/resource/ColorRegistry/hasValueFor/String,""
733,method,org/eclipse/jface/resource/ColorRegistry/put/String;RGB," Adds (or replaces) a color to this color registry under the given \n symbolic name.\n <p>\n A property change event is reported whenever the mapping from a symbolic\n name to a color changes. The source of the event is this registry; the\n property name is the symbolic color name.\n </p>\n \n @param symbolicName the symbolic color name\n @param colorData an <code>RGB</code> object\n"
734,method,org/eclipse/jface/resource/ColorRegistry/ColorRegistry/," Create a new instance of the receiver that is hooked to the current \n display.\n \n @see org.eclipse.swt.widgets.Display#getCurrent()\n"
735,method,org/eclipse/jface/resource/ColorRegistry/ColorRegistry/Display," Create a new instance of the receiver.\n \n @param display the <code>Display</code> to hook into.\n"
737,field,org/eclipse/jface/resource/ColorRegistry/display," This registries <code>Display</code>. All colors will be allocated using \n it.\n"
738,field,org/eclipse/jface/resource/ColorRegistry/displayRunnable," Runnable that cleans up the manager on disposal of the display.\n"
742,method,org/eclipse/jface/resource/ColorDescriptor/createFrom/RGB," Returns a color descriptor for the given RGB values\n @since 3.1 \n\n @param toCreate RGB values to create\n @return a new ColorDescriptor\n"
744,method,org/eclipse/jface/resource/ColorDescriptor/destroyColor/Color," Undoes whatever was done by createColor. \n \n @since 3.1 \n\n @param toDestroy a Color that was previously allocated by an equal ColorDescriptor\n"
745,method,org/eclipse/jface/resource/ColorDescriptor/createResource/Device,""
746,method,org/eclipse/jface/resource/ColorDescriptor/destroyResource/Object,""
747,method,org/eclipse/jface/resource/ColorDescriptor/ColorDescriptor/,""
749,method,org/eclipse/jface/resource/ImageRegistry/get/String," Returns the image associated with the given key in this registry, \n or <code>null</code> if none.\n \n @param key the key\n @return the image, or <code>null</code> if none\n"
750,method,org/eclipse/jface/resource/ImageRegistry/getDescriptor/String," Returns the descriptor associated with the given key in this registry, \n or <code>null</code> if none.\n\n @param key the key\n @return the descriptor, or <code>null</code> if none\n @since 2.1\n"
751,method,org/eclipse/jface/resource/ImageRegistry/put/String;ImageDescriptor," Adds (or replaces) an image descriptor to this registry. The first time\n this new entry is retrieved, the image descriptor's image will be computed \n (via </code>ImageDescriptor.createImage</code>) and remembered. \n This method replaces an existing image descriptor associated with the \n given key, but fails if there is a real image associated with it.\n\n @param key the key\n @param descriptor the ImageDescriptor\n @exception IllegalArgumentException if the key already exists\n"
753,method,org/eclipse/jface/resource/ImageRegistry/remove/String," Removes an image from this registry.  \n If an SWT image was allocated, it is disposed.\n This method has no effect if there is no image or descriptor for the given key.\n @param key the key\n"
754,method,org/eclipse/jface/resource/ImageRegistry/dispose/," Disposes this image registry, disposing any images\n that were allocated for it, and clearing its entries.\n \n @since 3.1\n"
756,method,org/eclipse/jface/resource/ImageRegistry/ImageRegistry/ResourceManager," Creates an empty image registry using the given resource manager to allocate images.\n \n @param manager the resource manager used to allocate images\n \n @since 3.1\n"
759,method,org/eclipse/jface/resource/LocalResourceManager/getDevice/,""
760,method,org/eclipse/jface/resource/LocalResourceManager/allocate/DeviceResourceDescriptor,""
761,method,org/eclipse/jface/resource/LocalResourceManager/deallocate/Object;DeviceResourceDescriptor,""
762,method,org/eclipse/jface/resource/LocalResourceManager/getDefaultImage/,""
763,method,org/eclipse/jface/resource/LocalResourceManager/LocalResourceManager/ResourceManager," Creates a local registry that delegates to the given global registry\n for all resource allocation and deallocation. \n \n @param parentRegistry global registry \n"
766,method,org/eclipse/jface/resource/DeviceResourceManager/getDevice/,""
767,method,org/eclipse/jface/resource/DeviceResourceManager/allocate/DeviceResourceDescriptor,""
768,method,org/eclipse/jface/resource/DeviceResourceManager/deallocate/Object;DeviceResourceDescriptor,""
769,method,org/eclipse/jface/resource/DeviceResourceManager/getDefaultImage/,""
770,method,org/eclipse/jface/resource/DeviceResourceManager/dispose/,""
771,method,org/eclipse/jface/resource/DeviceResourceManager/DeviceResourceManager/Device," Creates a new registry for the given device.\n \n @param device device to manage\n"
772,class,org/eclipse/jface/resource/DeviceResourceException," Thrown when allocation of an SWT device resource fails\n \n @since 3.1\n"
773,method,org/eclipse/jface/resource/DeviceResourceException/getCause/," Returns the cause of this throwable or <code>null</code> if the\n cause is nonexistent or unknown. \n \n @return the cause or <code>null</code>\n @since 3.1\n"
776,class,org/eclipse/jface/resource/DeviceResourceDescriptor," Instances of this class can allocate and dispose SWT resources. Each\n instance describes a particular resource (such as a Color, Font, or Image)\n and can create and destroy that resource on demand. DeviceResourceDescriptors\n are managed by a ResourceRegistry.\n \n @see org.eclipse.jface.resource.ResourceManager\n \n @since 3.1\n"
777,method,org/eclipse/jface/resource/DeviceResourceDescriptor/createResource/Device," Creates the resource described by this descriptor\n \n @since 3.1 \n\n @param device the Device on which to allocate the resource\n @return the newly allocated resource (not null)\n @throws DeviceResourceException if unable to allocate the resource\n"
779,method,org/eclipse/jface/resource/DeviceResourceDescriptor/DeviceResourceDescriptor/,""
783,method,org/eclipse/jface/resource/FontDescriptor/createFrom/FontData[]," Creates a new FontDescriptor given the an array of FontData that describes \n the font.\n \n @since 3.1\n\n @param data an array of FontData that describes the font (will be passed into\n the Font's constructor)\n @return a FontDescriptor that describes the given font\n"
784,method,org/eclipse/jface/resource/FontDescriptor/createFrom/FontData," Creates a new FontDescriptor given the associated FontData\n \n @param data FontData describing the font to create\n @return a newly created FontDescriptor\n"
785,method,org/eclipse/jface/resource/FontDescriptor/createFrom/String;int;int," Creates a new FontDescriptor given an OS-specific font name, height, and style.\n \n @see Font#Font(org.eclipse.swt.graphics.Device, java.lang.String, int, int)\n\n @param name os-specific font name\n @param height height (pixels)\n @param style a bitwise combination of NORMAL, BOLD, ITALIC \n @return a new FontDescriptor\n"
786,method,org/eclipse/jface/resource/FontDescriptor/getFontData/," Returns the set of FontData associated with this font. Modifying the elements\n in the returned array has no effect on the original FontDescriptor.\n \n @return the set of FontData associated with this font\n @since 3.3\n"
787,method,org/eclipse/jface/resource/FontDescriptor/copy/FontData[]," Returns an array of FontData containing copies of the FontData\n from the original. \n \n @param original array to copy\n @return a deep copy of the original array\n @since 3.3\n"
788,method,org/eclipse/jface/resource/FontDescriptor/copy/FontData," Returns a copy of the original FontData\n \n @param next FontData to copy\n @return a copy of the given FontData\n @since 3.3\n"
789,method,org/eclipse/jface/resource/FontDescriptor/setStyle/int," Returns a FontDescriptor that is equivalent to the reciever, but uses\n the given style bits. \n \n <p>Does not modify the reciever.</p>\n \n @param style a bitwise combination of SWT.NORMAL, SWT.ITALIC and SWT.BOLD\n @return a new FontDescriptor with the given style\n \n @since 3.3\n"
791,method,org/eclipse/jface/resource/FontDescriptor/setHeight/int," <p>Returns a new FontDescriptor that is equivalent to the reciever, but\n has the given height.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param height a height, in points\n @return a new FontDescriptor with the height, in points\n @since 3.3\n"
792,method,org/eclipse/jface/resource/FontDescriptor/increaseHeight/int," <p>Returns a FontDescriptor that is equivalent to the reciever, but whose height\n is larger by the given number of points.</p>\n \n <p>Does not modify the reciever.</p>\n \n @param heightDelta a change in height, in points. Negative values will return smaller\n fonts. \n @return a FontDescriptor whose height differs from the reciever by the given number\n of points. \n @since 3.3\n"
794,method,org/eclipse/jface/resource/FontDescriptor/destroyFont/Font," Deallocates anything that was allocated by createFont, given a font\n that was allocated by an equal FontDescriptor.\n \n @since 3.1 \n\n @param previouslyCreatedFont previously allocated font\n"
795,method,org/eclipse/jface/resource/FontDescriptor/createResource/Device,""
796,method,org/eclipse/jface/resource/FontDescriptor/destroyResource/Object,""
797,method,org/eclipse/jface/resource/FontDescriptor/FontDescriptor/,""
798,class,org/eclipse/jface/resource/DataFormatException," An exception indicating that a string value could not be\n converted into the requested data type.\n\n @see StringConverter\n"
799,method,org/eclipse/jface/resource/DataFormatException/DataFormatException/," Creates a new exception.\n"
800,method,org/eclipse/jface/resource/DataFormatException/DataFormatException/String," Creates a new exception.\n\n @param message the message\n"
802,method,org/eclipse/jface/resource/ResourceManager/getDevice/," Returns the Device for which this ResourceManager will create resources \n \n @since 3.1\n\n @return the Device associated with this ResourceManager\n"
808,method,org/eclipse/jface/resource/ResourceManager/getDefaultImage/," Returns the default image that will be returned in the event that the intended\n image is missing.\n \n @since 3.1\n\n @return a default image that will be returned in the event that the intended\n image is missing.\n"
809,method,org/eclipse/jface/resource/ResourceManager/destroyImage/ImageDescriptor," Undoes everything that was done by {@link #createImage(ImageDescriptor)}.\n \n @since 3.1 \n\n @param descriptor identifier for the image to dispose\n"
815,method,org/eclipse/jface/resource/ResourceManager/dispose/," Disposes any remaining resources allocated by this manager. \n"
816,method,org/eclipse/jface/resource/ResourceManager/find/DeviceResourceDescriptor," Returns a previously allocated resource associated with the given descriptor, or\n null if none exists yet. \n \n @since 3.1\n\n @param descriptor descriptor to find\n @return a previously allocated resource for the given descriptor or null if none.\n"
818,method,org/eclipse/jface/resource/ResourceManager/cancelDisposeExec/Runnable," Cancels a runnable that was previously scheduled with <code>disposeExec</code>.\n Has no effect if the given runnable was not previously registered with\n disposeExec.\n \n @param r runnable to cancel\n"
819,method,org/eclipse/jface/resource/ResourceManager/ResourceManager/,""
820,class,org/eclipse/jface/resource/ResourceRegistry," Abstract base class for various JFace registries.\n \n @since 3.0\n"
821,method,org/eclipse/jface/resource/ResourceRegistry/addListener/IPropertyChangeListener," Adds a property change listener to this registry.\n \n @param listener a property change listener\n"
822,method,org/eclipse/jface/resource/ResourceRegistry/clearCaches/," Disposes all currently allocated resources.\n"
824,method,org/eclipse/jface/resource/ResourceRegistry/hasValueFor/String," Return whether or not the receiver has a value for the supplied key.\n \n @param key the key\n @return <code>true</code> if there is a value for this key\n"
825,method,org/eclipse/jface/resource/ResourceRegistry/fireMappingChanged/String;Object;Object," Fires a <code>PropertyChangeEvent</code>.\n \n @param name the name of the symbolic value that is changing.\n @param oldValue the old value.\n @param newValue the new value.\n"
826,method,org/eclipse/jface/resource/ResourceRegistry/removeListener/IPropertyChangeListener," Removes the given listener from this registry. Has no affect if the\n listener is not registered.\n \n @param listener a property change listener\n"
827,method,org/eclipse/jface/resource/ResourceRegistry/ResourceRegistry/,""
831,method,org/eclipse/jface/resource/CompositeImageDescriptor/getImageData/,""
834,method,org/eclipse/jface/resource/CompositeImageDescriptor/setImageData/ImageData," @param imageData The imageData to set.\n @since 3.3\n"
835,method,org/eclipse/jface/resource/CompositeImageDescriptor/CompositeImageDescriptor/," Constructs an uninitialized composite image.\n"
837,method,org/eclipse/jface/resource/StringConverter/asArray/String," Breaks out space-separated words into an array of words.\n For example: <code>"no comment"</code> into an array \n <code>a[0]="no"</code> and <code>a[1]= "comment"</code>.\n\n @param value the string to be converted\n @return the list of words\n @throws DataFormatException thrown if request string could not seperated\n"
838,method,org/eclipse/jface/resource/StringConverter/asArray/String;String[],"     /**\n Breaks out space-separated words into an array of words.\n For example: <code>"no comment"</code> into an array \n <code>a[0]="no"</code> and <code>a[1]= "comment"</code>.\n Returns the given default value if the value cannot be parsed.\n\n @param value the string to be converted\n @param dflt the default value\n @return the list of words, or the default value\n"
839,method,org/eclipse/jface/resource/StringConverter/asBoolean/String," Converts the given value into a boolean.\n This method fails if the value does not represent a boolean.\n <p>\n Valid representations of <code>true</code> include the strings\n "<code>t</code>", "<code>true</code>", or equivalent in mixed\n or upper case.\n Similarly, valid representations of <code>false</code> include the strings\n "<code>f</code>", "<code>false</code>", or equivalent in mixed\n or upper case. \n </p>\n\n @param value the value to be converted\n @return the value as a boolean\n @exception DataFormatException if the given value does not represent\n	a boolean\n"
840,method,org/eclipse/jface/resource/StringConverter/asBoolean/String;boolean," Converts the given value into a boolean.\n Returns the given default value if the \n value does not represent a boolean.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a boolean, or the default value\n"
841,method,org/eclipse/jface/resource/StringConverter/asDouble/String," Converts the given value into a double.\n This method fails if the value does not represent a double.\n\n @param value the value to be converted\n @return the value as a double\n @exception DataFormatException if the given value does not represent\n	a double\n"
842,method,org/eclipse/jface/resource/StringConverter/asDouble/String;double," Converts the given value into a double.\n Returns the given default value if the \n value does not represent a double.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a double, or the default value\n"
843,method,org/eclipse/jface/resource/StringConverter/asFloat/String," Converts the given value into a float.\n This method fails if the value does not represent a float.\n\n @param value the value to be converted\n @return the value as a float\n @exception DataFormatException if the given value does not represent\n	a float\n"
844,method,org/eclipse/jface/resource/StringConverter/asFloat/String;float," Converts the given value into a float.\n Returns the given default value if the \n value does not represent a float.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a float, or the default value\n"
845,method,org/eclipse/jface/resource/StringConverter/asFontData/String," Converts the given value into an SWT font data object.\n This method fails if the value does not represent font data.\n <p>\n A valid font data representation is a string of the form\n <code><it>fontname</it>-<it>style</it>-<it>height</it></code> where\n <code><it>fontname</it></code> is the name of a font,\n <code><it>style</it></code> is a font style (one of\n <code>"regular"</code>, <code>"bold"</code>,\n <code>"italic"</code>, or <code>"bold italic"</code>)\n and <code><it>height</it></code> is an integer representing the\n font height. Example: <code>Times New Roman-bold-36</code>.\n </p>\n\n @param value the value to be converted\n @return the value as font data\n @exception DataFormatException if the given value does not represent\n	font data\n"
846,method,org/eclipse/jface/resource/StringConverter/asFontDataArray/String," Convert the given value into an array of SWT font data objects.\n \n @param value the font list string \n @return the value as a font list\n @since 3.0\n"
847,method,org/eclipse/jface/resource/StringConverter/asFontData/String;FontData," Converts the given value into an SWT font data object.\n Returns the given default value if the \n value does not represent a font data object.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a font data object, or the default value\n"
848,method,org/eclipse/jface/resource/StringConverter/asInt/String," Converts the given value into an int.\n This method fails if the value does not represent an int.\n\n @param value the value to be converted\n @return the value as an int\n @exception DataFormatException if the given value does not represent\n	an int\n"
849,method,org/eclipse/jface/resource/StringConverter/asInt/String;int," Converts the given value into an int.\n Returns the given default value if the \n value does not represent an int.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as an int, or the default value\n"
850,method,org/eclipse/jface/resource/StringConverter/asLong/String," Converts the given value into a long.\n This method fails if the value does not represent a long.\n\n @param value the value to be converted\n @return the value as a long\n @exception DataFormatException if the given value does not represent\n	a long\n"
851,method,org/eclipse/jface/resource/StringConverter/asLong/String;long," Converts the given value into a long.\n Returns the given default value if the \n value does not represent a long.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a long, or the default value\n"
852,method,org/eclipse/jface/resource/StringConverter/asPoint/String," Converts the given value into an SWT point.\n This method fails if the value does not represent a point.\n <p>\n A valid point representation is a string of the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as a point\n @exception DataFormatException if the given value does not represent\n	a point\n"
853,method,org/eclipse/jface/resource/StringConverter/asPoint/String;Point," Converts the given value into an SWT point.\n Returns the given default value if the \n value does not represent a point.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a point, or the default value\n"
854,method,org/eclipse/jface/resource/StringConverter/asRectangle/String," Converts the given value into an SWT rectangle.\n This method fails if the value does not represent a rectangle.\n <p>\n A valid rectangle representation is a string of the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as a rectangle\n @exception DataFormatException if the given value does not represent\n	a rectangle\n"
855,method,org/eclipse/jface/resource/StringConverter/asRectangle/String;Rectangle," Converts the given value into an SWT rectangle.\n Returns the given default value if the \n value does not represent a rectangle.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a rectangle, or the default value\n"
856,method,org/eclipse/jface/resource/StringConverter/asRGB/String," Converts the given value into an SWT RGB color value.\n This method fails if the value does not represent an RGB\n color value.\n <p>\n A valid RGB color value representation is a string of the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are valid ints.\n </p>\n\n @param value the value to be converted\n @return the value as an RGB color value\n @exception DataFormatException if the given value does not represent\n	an RGB color value\n"
857,method,org/eclipse/jface/resource/StringConverter/asRGB/String;RGB," Converts the given value into an SWT RGB color value.\n Returns the given default value if the \n value does not represent an RGB color value.\n\n @param value the value to be converted\n @param dflt the default value\n @return the value as a RGB color value, or the default value\n"
858,method,org/eclipse/jface/resource/StringConverter/asString/double," Converts the given double value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the double value\n @return the string representing the given double\n"
859,method,org/eclipse/jface/resource/StringConverter/asString/float," Converts the given float value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the float value\n @return the string representing the given float\n"
860,method,org/eclipse/jface/resource/StringConverter/asString/int," Converts the given int value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the int value\n @return the string representing the given int\n"
861,method,org/eclipse/jface/resource/StringConverter/asString/long," Converts the given long value to a string.\n Equivalent to <code>String.valueOf(value)</code>.\n\n @param value the long value\n @return the string representing the given long\n"
862,method,org/eclipse/jface/resource/StringConverter/asString/Boolean," Converts the given boolean object to a string.\n Equivalent to <code>String.valueOf(value.booleanValue())</code>.\n\n @param value the boolean object\n @return the string representing the given boolean value\n"
863,method,org/eclipse/jface/resource/StringConverter/asString/Double," Converts the given double object to a string.\n Equivalent to <code>String.valueOf(value.doubleValue())</code>.\n\n @param value the double object\n @return the string representing the given double value\n"
864,method,org/eclipse/jface/resource/StringConverter/asString/Float," Converts the given float object to a string.\n Equivalent to <code>String.valueOf(value.floatValue())</code>.\n\n @param value the float object\n @return the string representing the given float value\n"
865,method,org/eclipse/jface/resource/StringConverter/asString/Integer," Converts the given integer object to a string.\n Equivalent to <code>String.valueOf(value.intValue())</code>.\n\n @param value the integer object\n @return the string representing the given integer value\n"
866,method,org/eclipse/jface/resource/StringConverter/asString/Long," Converts the given long object to a string.\n Equivalent to <code>String.valueOf(value.longValue())</code>.\n\n @param value the long object\n @return the string representing the given long value\n"
867,method,org/eclipse/jface/resource/StringConverter/asString/FontData[]," Converts a font data array  to a string. The string representation is\n that of asString(FontData) seperated by ';'\n \n @param value The font data.\n @return The string representation of the font data arra.\n @since 3.0\n"
868,method,org/eclipse/jface/resource/StringConverter/asString/FontData," Converts a font data object to a string. The string representation is\n "font name-style-height" (for example "Times New Roman-bold-36").\n @param value The font data.\n @return The string representation of the font data object.\n"
869,method,org/eclipse/jface/resource/StringConverter/asString/Point," Converts the given SWT point object to a string.\n <p>\n The string representation of a point has the form\n <code><it>x</it>,<it>y</it></code> where\n <code><it>x</it></code> and <code><it>y</it></code>\n are string representations of integers.\n </p>\n\n @param value the point object\n @return the string representing the given point\n"
870,method,org/eclipse/jface/resource/StringConverter/asString/Rectangle," Converts the given SWT rectangle object to a string.\n <p>\n The string representation of a rectangle has the form\n <code><it>x</it>,<it>y</it>,<it>width</it>,<it>height</it></code>\n where <code><it>x</it></code>, <code><it>y</it></code>,\n <code><it>width</it></code>, and <code><it>height</it></code>\n are string representations of integers.\n </p>\n\n @param value the rectangle object\n @return the string representing the given rectangle\n"
871,method,org/eclipse/jface/resource/StringConverter/asString/RGB," Converts the given SWT RGB color value object to a string.\n <p>\n The string representation of an RGB color value has the form\n <code><it>red</it>,<it>green</it></code>,<it>blue</it></code> where\n <code><it>red</it></code>, <it>green</it></code>, and \n <code><it>blue</it></code> are string representations of integers.\n </p>\n\n @param value the RGB color value object\n @return the string representing the given RGB color value\n"
872,method,org/eclipse/jface/resource/StringConverter/removeWhiteSpaces/String," Returns the given string with all whitespace characters removed.\n <p>\n All characters that have codes less than or equal to <code>'&#92;u0020'</code> \n (the space character) are considered to be a white space.\n </p>\n\n @param s the source string\n @return the string with all whitespace characters removed\n"
873,method,org/eclipse/jface/resource/StringConverter/asDisplayableString/FontData," Converts a font data object to a string representation for display. \n 	The string representation is\n "font name-style-height" (for example "Times New Roman-bold-36").\n @param value The font data.\n @return The string representation of the font data object.\n @deprecated use asString(FontData)\n"
875,method,org/eclipse/jface/resource/JFaceResources/format/String;Object[]," Returns the formatted message for the given key in JFace's resource\n bundle.\n \n @param key\n            the resource name\n @param args\n            the message arguments\n @return the string\n"
876,method,org/eclipse/jface/resource/JFaceResources/getBannerFont/," Returns the JFace's banner font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.BANNER_FONT)\n </pre>\n \n @return the font\n"
878,method,org/eclipse/jface/resource/JFaceResources/getColorRegistry/," Returns the color registry for JFace itself.\n <p>\n \n @return the <code>ColorRegistry</code>.\n @since 3.0\n"
879,method,org/eclipse/jface/resource/JFaceResources/getResources/Display," Returns the global resource manager for the given display\n \n @since 3.1\n \n @param toQuery\n            display to query\n @return the global resource manager for the given display\n"
881,method,org/eclipse/jface/resource/JFaceResources/getDefaultFont/," Returns JFace's standard font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DEFAULT_FONT)\n </pre>\n \n @return the font\n"
882,method,org/eclipse/jface/resource/JFaceResources/getDefaultFontDescriptor/," Returns the descriptor for JFace's standard font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DEFAULT_FONT)\n </pre>\n \n @return the font\n @since 3.3\n"
883,method,org/eclipse/jface/resource/JFaceResources/getDialogFont/," Returns the JFace's dialog font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.DIALOG_FONT)\n </pre>\n \n @return the font\n"
884,method,org/eclipse/jface/resource/JFaceResources/getDialogFontDescriptor/," Returns the descriptor for JFace's dialog font. Convenience method\n equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().getDescriptor(JFaceResources.DIALOG_FONT)\n </pre>\n \n @return the font\n @since 3.3\n"
888,method,org/eclipse/jface/resource/JFaceResources/getHeaderFont/," Returns the JFace's header font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.HEADER_FONT)\n </pre>\n \n @return the font\n"
890,method,org/eclipse/jface/resource/JFaceResources/getImage/String," Returns the image in JFace's image registry with the given key, or\n <code>null</code> if none. Convenience method equivalent to\n \n <pre>\n JFaceResources.getImageRegistry().get(key)\n </pre>\n \n @param key\n            the key\n @return the image, or <code>null</code> if none\n"
892,method,org/eclipse/jface/resource/JFaceResources/getString/String," Returns the resource object with the given key in JFace's resource\n bundle. If there isn't any value under the given key, the key is\n returned.\n \n @param key\n            the resource name\n @return the string\n"
893,method,org/eclipse/jface/resource/JFaceResources/getStrings/String[]," Returns a list of string values corresponding to the given list of keys.\n The lookup is done with <code>getString</code>. The values are in the\n same order as the keys.\n \n @param keys\n            a list of keys\n @return a list of corresponding string values\n"
894,method,org/eclipse/jface/resource/JFaceResources/getTextFont/," Returns JFace's text font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.TEXT_FONT)\n </pre>\n \n @return the font\n"
896,method,org/eclipse/jface/resource/JFaceResources/getViewerFont/," Returns JFace's viewer font. Convenience method equivalent to\n \n <pre>\n JFaceResources.getFontRegistry().get(JFaceResources.VIEWER_FONT)\n </pre>\n \n @return the font\n @deprecated This font is not in use\n"
898,field,org/eclipse/jface/resource/JFaceResources/BANNER_FONT," The symbolic font name for the banner font (value\n <code>"org.eclipse.jface.bannerfont"</code>).\n"
899,field,org/eclipse/jface/resource/JFaceResources/DEFAULT_FONT," The symbolic font name for the standard font (value\n <code>"org.eclipse.jface.defaultfont"</code>).\n"
900,field,org/eclipse/jface/resource/JFaceResources/DIALOG_FONT," The symbolic font name for the dialog font (value\n <code>"org.eclipse.jface.dialogfont"</code>).\n"
901,field,org/eclipse/jface/resource/JFaceResources/HEADER_FONT," The symbolic font name for the header font (value\n <code>"org.eclipse.jface.headerfont"</code>).\n"
902,field,org/eclipse/jface/resource/JFaceResources/TEXT_FONT," The symbolic font name for the text font (value\n <code>"org.eclipse.jface.textfont"</code>).\n"
903,field,org/eclipse/jface/resource/JFaceResources/VIEWER_FONT," The symbolic font name for the viewer font (value\n <code>"org.eclipse.jface.viewerfont"</code>).\n \n @deprecated This font is not in use\n"
904,field,org/eclipse/jface/resource/JFaceResources/WINDOW_FONT," The symbolic font name for the window font (value\n <code>"org.eclipse.jface.windowfont"</code>).\n \n @deprecated This font is not in use\n"
906,method,org/eclipse/jface/resource/FontRegistry/bestData/FontData[];Display," Find the first valid fontData in the provided list. If none are valid\n return the first one regardless. If the list is empty return null. Return\n <code>null</code> if one cannot be found.\n \n @param fonts the font list\n @param display the display used \n @return the font data of the like describe above\n \n @deprecated use bestDataArray in order to support Motif multiple entry\n             fonts.\n"
907,method,org/eclipse/jface/resource/FontRegistry/bestDataArray/FontData[];Display," Find the first valid fontData in the provided list. \n If none are valid return the first one regardless.\n If the list is empty return <code>null</code>.\n \n @param fonts list of fonts\n @param display the display\n @return font data like described above\n @deprecated use filterData in order to preserve \n multiple entry fonts on Motif\n"
908,method,org/eclipse/jface/resource/FontRegistry/filterData/FontData[];Display," Removes from the list all fonts that do not exist in this system.  \n If none are valid, return the first irregardless.  If the list is \n empty return <code>null</code>.\n \n @param fonts the fonts to check\n @param display the display to check against\n @return the list of fonts that have been found on this system\n @since 3.1\n"
911,method,org/eclipse/jface/resource/FontRegistry/getFontData/String," Returns the font data associated with the given symbolic font name.\n Returns the default font data if there is no special value associated\n with that name.\n\n @param symbolicName symbolic font name\n @return the font\n"
915,method,org/eclipse/jface/resource/FontRegistry/getKeySet/,""
916,method,org/eclipse/jface/resource/FontRegistry/hasValueFor/String,""
917,method,org/eclipse/jface/resource/FontRegistry/clearCaches/,""
918,method,org/eclipse/jface/resource/FontRegistry/put/String;FontData[]," Adds (or replaces) a font to this font registry under the given\n symbolic name.\n <p>\n A property change event is reported whenever the mapping from\n a symbolic name to a font changes. The source of the event is\n this registry; the property name is the symbolic font name.\n </p>\n\n @param symbolicName the symbolic font name\n @param fontData an Array of FontData\n"
919,method,org/eclipse/jface/resource/FontRegistry/defaultFontDescriptor/," Returns the font descriptor for the JFace default font.\n \n @return the font descriptor for the JFace default font\n @since 3.3\n"
923,method,org/eclipse/jface/resource/FontRegistry/FontRegistry/Display," Creates an empty font registry.\n\n @param display the Display\n"
925,field,org/eclipse/jface/resource/FontRegistry/displayRunnable," Runnable that cleans up the manager on disposal of the display.\n"
933,method,org/eclipse/jface/operation/ModalContext/canProgressMonitorBeUsed/IProgressMonitor;IProgressMonitor," Returns whether the first progress monitor is the same as, or a wrapper\n around, the second progress monitor.\n \n @param monitor1\n            the first progress monitor\n @param monitor2\n            the second progress monitor\n @return <code>true</code> if the first is the same as, or a wrapper\n         around, the second\n @see ProgressMonitorWrapper\n"
940,method,org/eclipse/jface/operation/ModalContext/ModalContext/,""
941,interface,org/eclipse/jface/contentassist/ISubjectControlContentAssistProcessor," Extension interface for {@link org.eclipse.jface.text.contentassist.IContentAssistProcessor}\n which provides the context for the\n {@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI's field assist support\n"
945,method,org/eclipse/jface/contentassist/ISubjectControlContentAssistant/install/IContentAssistSubjectControl," Installs content assist support on the given subject.\n\n @param contentAssistSubjectControl the one who requests content assist\n"
946,class,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter," Adapts a {@link org.eclipse.swt.widgets.Combo} to a {@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n <p>\n	Known issues:\n  <ul>\n		<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50121\n		= &gt; Combo doesn't get Arrow_up/Down keys on GTK</li>\n\n		<li>https://bugs.eclipse.org/bugs/show_bug.cgi?id=50123\n		= &gt; Combo broken on MacOS X</li>\n  </ul>\n	</p>\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI's field assist support\n"
947,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getControl/,""
948,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getLineHeight/,""
949,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getCaretOffset/,""
950,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getLocationAtOffset/int,""
951,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getWidgetSelectionRange/,""
952,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getSelectedRange/,""
953,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/getDocument/,""
954,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/setSelectedRange/int;int,""
955,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/revealRange/int;int,""
956,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/addSelectionListener/SelectionListener,""
957,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/removeSelectionListener/SelectionListener,""
958,method,org/eclipse/jface/contentassist/ComboContentAssistSubjectAdapter/ComboContentAssistSubjectAdapter/Combo," Creates a content assist subject control adapter for the given combo.\n\n @param combo the combo to adapt\n"
959,class,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter," Adapts a {@link org.eclipse.swt.widgets.Text} to an {@link org.eclipse.jface.contentassist.IContentAssistSubjectControl}.\n\n @see org.eclipse.swt.widgets.Text\n @see org.eclipse.jface.contentassist.IContentAssistSubjectControl\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI's field assist support\n"
960,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getControl/,""
961,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getLineHeight/,""
962,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getCaretOffset/,""
963,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getLocationAtOffset/int,""
964,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getWidgetSelectionRange/,""
965,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getSelectedRange/,""
966,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/getDocument/,""
967,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/setSelectedRange/int;int,""
968,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/revealRange/int;int,""
969,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/addSelectionListener/SelectionListener,""
970,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/removeSelectionListener/SelectionListener,""
971,method,org/eclipse/jface/contentassist/TextContentAssistSubjectAdapter/TextContentAssistSubjectAdapter/Text," Creates a content assist subject control adapter for the given text widget.\n\n @param text the text widget to adapt\n"
972,class,org/eclipse/jface/contentassist/SubjectControlContextInformationValidator," A default implementation of the {@link SubjectControlContextInformationValidator} interface.\n This implementation determines whether the information is valid by asking the content\n assist processor for all  context information objects for the current position. If the\n currently displayed information is in the result set, the context information is\n considered valid.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI's field assist support\n"
973,method,org/eclipse/jface/contentassist/SubjectControlContextInformationValidator/install/IContextInformation;ITextViewer;int,""
974,method,org/eclipse/jface/contentassist/SubjectControlContextInformationValidator/install/IContextInformation;IContentAssistSubjectControl;int,""
975,method,org/eclipse/jface/contentassist/SubjectControlContextInformationValidator/isContextInformationValid/int,""
976,method,org/eclipse/jface/contentassist/SubjectControlContextInformationValidator/SubjectControlContextInformationValidator/IContentAssistProcessor," Creates a new context information validator which is ready to be installed on\n a particular context information.\n\n @param processor the processor to be used for validation\n"
979,class,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter," An <code>AbstractControlContentAssistSubjectAdapter</code> delegates assistance requests from a\n {@linkplain org.eclipse.jface.text.contentassist.ContentAssistant content assistant}\n to a <code>Control</code>.\n\n A visual feedback can be configured via {@link #setContentAssistCueProvider(ILabelProvider)}.\n\n @since 3.0\n @deprecated As of 3.2, replaced by Platform UI's field assist support\n"
980,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/getControl/,""
981,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/addKeyListener/KeyListener,""
982,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/removeKeyListener/KeyListener,""
983,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/supportsVerifyKeyListener/,""
984,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/appendVerifyKeyListener/VerifyKeyListener,""
985,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/prependVerifyKeyListener/VerifyKeyListener,""
986,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/removeVerifyKeyListener/VerifyKeyListener,""
987,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/setEventConsumer/IEventConsumer,""
988,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/getLineDelimiter/,""
990,method,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/AbstractControlContentAssistSubjectAdapter/," Creates a new {@link AbstractControlContentAssistSubjectAdapter}.\n"
991,field,org/eclipse/jface/contentassist/AbstractControlContentAssistSubjectAdapter/DEBUG,""
992,interface,org/eclipse/jface/contentassist/IContentAssistSubjectControl," A content assist subject control can request assistance provided by a\n {@linkplain org.eclipse.jface.contentassist.ISubjectControlContentAssistant subject control content assistant}.\n\n @since 3.0\n"
993,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/getControl/," Returns the control of this content assist subject control.\n\n @return the control of this content assist subject control\n"
999,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/getSelectedRange/," Returns the selected range.\n\n @return start and length of the selection, x is the offset and y the\n         length based on the subject's model (e.g. document)\n"
1000,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/setSelectedRange/int;int," Sets the selected range. Offset and length based on the subject's\n model (e.g. document).\n\n @param offset the offset of the selection based on the subject's model e.g. document\n @param length the length of the selection based on the subject's model e.g. document\n"
1001,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/revealRange/int;int," Reveals the given region. Offset and length based on the subject's\n model (e.g. document).\n\n @param offset the offset of the selection based on the subject's model e.g. document\n @param length the length of the selection based on the subject's model e.g. document\n"
1002,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/getDocument/," Returns this content assist subject control's document.\n\n @return the viewer's input document\n"
1006,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/supportsVerifyKeyListener/," Tests whether a verify key listener can be added either using <code>prependVerifyKeyListener</code>\n or {@link #appendVerifyKeyListener(VerifyKeyListener)}.\n\n @return <code>true</code> if adding verify key listeners is supported\n"
1009,method,org/eclipse/jface/contentassist/IContentAssistSubjectControl/setEventConsumer/IEventConsumer," If supported, registers an event consumer with this content assist\n subject.\n\n @param eventConsumer the content assist subject control's event consumer. <code>null</code>\n           is a valid argument.\n"
1013,method,org/eclipse/jface/contentassist/SubjectControlContentAssistant/install/IContentAssistSubjectControl,""
1014,method,org/eclipse/jface/contentassist/SubjectControlContentAssistant/SubjectControlContentAssistant/,""
1017,class,org/eclipse/jface/preference/PathEditor," A field editor to edit directory paths.\n"
1018,method,org/eclipse/jface/preference/PathEditor/createList/String[],""
1019,method,org/eclipse/jface/preference/PathEditor/getNewInputObject/,""
1020,method,org/eclipse/jface/preference/PathEditor/parseString/String,""
1021,method,org/eclipse/jface/preference/PathEditor/PathEditor/," Creates a new path field editor \n"
1022,method,org/eclipse/jface/preference/PathEditor/PathEditor/String;String;String;Composite," Creates a path field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param dirChooserLabelText the label text displayed for the directory chooser\n @param parent the parent of the field editor's control\n"
1024,method,org/eclipse/jface/preference/ScaleFieldEditor/adjustForNumColumns/int,""
1025,method,org/eclipse/jface/preference/ScaleFieldEditor/doFillIntoGrid/Composite;int,""
1026,method,org/eclipse/jface/preference/ScaleFieldEditor/doLoad/,""
1027,method,org/eclipse/jface/preference/ScaleFieldEditor/doLoadDefault/,""
1028,method,org/eclipse/jface/preference/ScaleFieldEditor/doStore/,""
1029,method,org/eclipse/jface/preference/ScaleFieldEditor/getIncrement/," Returns the value that will be used for Scale.setIncrement(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setIncrement(int)\n"
1030,method,org/eclipse/jface/preference/ScaleFieldEditor/getMaximum/," Returns the value that will be used for Scale.setMaximum(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setMaximum(int)\n"
1031,method,org/eclipse/jface/preference/ScaleFieldEditor/getMinimum/," Returns the value that will be used for Scale.setMinimum(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setMinimum(int)\n"
1032,method,org/eclipse/jface/preference/ScaleFieldEditor/getNumberOfControls/,""
1033,method,org/eclipse/jface/preference/ScaleFieldEditor/getPageIncrement/," Returns the value that will be used for Scale.setPageIncrement(int).\n \n @return the value.\n @see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n"
1034,method,org/eclipse/jface/preference/ScaleFieldEditor/getScaleControl/," Returns this field editor's scale control.\n \n @return the scale control, or <code>null</code> if no scale field is\n         created yet\n"
1035,method,org/eclipse/jface/preference/ScaleFieldEditor/setFocus/,""
1036,method,org/eclipse/jface/preference/ScaleFieldEditor/setIncrement/int," Set the value to be used for Scale.setIncrement(int) and update the\n scale.\n \n @param increment\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setIncrement(int)\n"
1037,method,org/eclipse/jface/preference/ScaleFieldEditor/setMaximum/int," Set the value to be used for Scale.setMaximum(int) and update the\n scale.\n \n @param max\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setMaximum(int)\n"
1038,method,org/eclipse/jface/preference/ScaleFieldEditor/setMinimum/int," Set the value to be used for Scale.setMinumum(int) and update the\n scale.\n \n @param min\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setMinimum(int)\n"
1039,method,org/eclipse/jface/preference/ScaleFieldEditor/setPageIncrement/int," Set the value to be used for Scale.setPageIncrement(int) and update the\n scale.\n \n @param pageIncrement\n            a value greater than 0.\n @see org.eclipse.swt.widgets.Scale#setPageIncrement(int)\n"
1041,method,org/eclipse/jface/preference/ScaleFieldEditor/ScaleFieldEditor/String;String;Composite," Creates a scale field editor.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor's control\n"
1042,method,org/eclipse/jface/preference/ScaleFieldEditor/ScaleFieldEditor/String;String;Composite;int;int;int;int," Creates a scale field editor with particular scale values.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor's control\n @param min\n            the value used for Scale.setMinimum(int).\n @param max\n            the value used for Scale.setMaximum(int).\n @param increment\n            the value used for Scale.setIncrement(int).\n @param pageIncrement\n            the value used for Scale.setPageIncrement(int).\n"
1043,field,org/eclipse/jface/preference/ScaleFieldEditor/scale," The scale, or <code>null</code> if none.\n"
1047,method,org/eclipse/jface/preference/FieldEditor/checkParent/Control;Composite," Checks if the given parent is the current parent of the\n supplied control; throws an (unchecked) exception if they\n are not correctly related.\n\n @param control the control\n @param parent the parent control\n"
1049,method,org/eclipse/jface/preference/FieldEditor/clearMessage/," Clears the normal message from the message line.\n"
1052,method,org/eclipse/jface/preference/FieldEditor/createControl/Composite," Creates this field editor's main control containing all of its\n basic controls.\n\n @param parent the parent control\n"
1053,method,org/eclipse/jface/preference/FieldEditor/dispose/," Disposes the SWT resources used by this field editor.\n"
1059,method,org/eclipse/jface/preference/FieldEditor/fireStateChanged/String;boolean;boolean," Informs this field editor's listener, if it has one, about a change to\n one of this field editor's boolean-valued properties. Does nothing\n if the old and new values are the same.\n\n @param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n @param oldValue the old value\n @param newValue the new value\n"
1060,method,org/eclipse/jface/preference/FieldEditor/fireValueChanged/String;Object;Object," Informs this field editor's listener, if it has one, about a change to\n one of this field editor's properties.\n\n @param property the field editor property name, \n   such as <code>VALUE</code> or <code>IS_VALID</code>\n @param oldValue the old value object, or <code>null</code>\n @param newValue the new value, or <code>null</code>\n"
1061,method,org/eclipse/jface/preference/FieldEditor/getFieldEditorFontName/," Returns the symbolic font name used by this field editor.\n\n @return the symbolic font name\n"
1062,method,org/eclipse/jface/preference/FieldEditor/getLabelControl/," Returns the label control. \n\n @return the label control, or <code>null</code>\n  if no label control has been created\n"
1063,method,org/eclipse/jface/preference/FieldEditor/getLabelControl/Composite," Returns this field editor's label component.\n <p>\n The label is created if it does not already exist\n </p>\n\n @param parent the parent\n @return the label control\n"
1064,method,org/eclipse/jface/preference/FieldEditor/getLabelText/," Returns this field editor's label text.\n\n @return the label text\n"
1065,method,org/eclipse/jface/preference/FieldEditor/getNumberOfControls/," Returns the number of basic controls this field editor consists of.\n\n @return the number of controls\n"
1066,method,org/eclipse/jface/preference/FieldEditor/getPreferenceName/," Returns the name of the preference this field editor operates on.\n\n @return the name of the preference\n"
1067,method,org/eclipse/jface/preference/FieldEditor/getPreferencePage/," Returns the preference page in which this field editor\n appears.\n\n @return the preference page, or <code>null</code> if none\n @deprecated use #getPage()\n"
1068,method,org/eclipse/jface/preference/FieldEditor/getPage/," Return the DialogPage that the receiver is sending\n updates to.\n \n @return DialogPage or <code>null</code> if it \n has not been set.\n \n @since 3.1\n"
1069,method,org/eclipse/jface/preference/FieldEditor/getPreferenceStore/," Returns the preference store used by this field editor.\n\n @return the preference store, or <code>null</code> if none\n @see #setPreferenceStore\n"
1070,method,org/eclipse/jface/preference/FieldEditor/init/String;String," Initialize the field editor with the given preference name and label.\n \n @param name the name of the preference this field editor works on\n @param text the label text of the field editor\n"
1072,method,org/eclipse/jface/preference/FieldEditor/load/," Initializes this field editor with the preference value from\n the preference store.\n"
1073,method,org/eclipse/jface/preference/FieldEditor/loadDefault/," Initializes this field editor with the default preference value\n from the preference store.\n"
1074,method,org/eclipse/jface/preference/FieldEditor/presentsDefaultValue/," Returns whether this field editor currently presents the\n default value for its preference.\n \n @return <code>true</code> if the default value is presented,\n   and <code>false</code> otherwise\n"
1077,method,org/eclipse/jface/preference/FieldEditor/setLabelText/String," Sets this field editor's label text.\n The label is typically presented to the left of the entry field.\n\n @param text the label text\n"
1078,method,org/eclipse/jface/preference/FieldEditor/setPreferenceName/String," Sets the name of the preference this field editor operates on.\n <p>\n The ability to change this allows the same field editor object\n to be reused for different preferences.\n </p>\n <p>\n For example: <p>\n <pre>\n 	...\n  editor.setPreferenceName("font");\n 	editor.load();\n </pre>\n </p>\n\n @param name the name of the preference\n"
1079,method,org/eclipse/jface/preference/FieldEditor/setPreferencePage/PreferencePage," Sets the preference page in which this field editor\n appears.\n\n @param preferencePage the preference page, or <code>null</code> if none\n @deprecated use #setPage(DialogPage)\n"
1080,method,org/eclipse/jface/preference/FieldEditor/setPage/DialogPage," Set the page to be the receiver.\n @param dialogPage\n \n @since 3.1\n"
1081,method,org/eclipse/jface/preference/FieldEditor/setPreferenceStore/IPreferenceStore," Sets the preference store used by this field editor.\n\n @param store the preference store, or <code>null</code> if none\n @see #getPreferenceStore\n"
1082,method,org/eclipse/jface/preference/FieldEditor/setPresentsDefaultValue/boolean," Sets whether this field editor is presenting the default value.\n\n @param booleanValue <code>true</code> if the default value is being presented,\n  and <code>false</code> otherwise\n"
1085,method,org/eclipse/jface/preference/FieldEditor/showMessage/String," Shows the given message in the page for this\n field editor if it has one.\n\n @param msg the message\n"
1086,method,org/eclipse/jface/preference/FieldEditor/store/," Stores this field editor's value back into the preference store.\n"
1087,method,org/eclipse/jface/preference/FieldEditor/setButtonLayoutData/Button," Set the GridData on button to be one that is spaced for the\n current font.\n @param button the button the data is being set on.\n"
1089,method,org/eclipse/jface/preference/FieldEditor/FieldEditor/," Creates a new field editor.\n"
1090,method,org/eclipse/jface/preference/FieldEditor/FieldEditor/String;String;Composite," Creates a new field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1091,field,org/eclipse/jface/preference/FieldEditor/IS_VALID," Property name constant (value <code>"field_editor_is_valid"</code>)\n to signal a change in the validity of the value of this field editor.\n"
1092,field,org/eclipse/jface/preference/FieldEditor/VALUE," Property name constant (value <code>"field_editor_value"</code>)\n to signal a change in the value of this field editor.\n"
1094,class,org/eclipse/jface/preference/PreferenceNode," A concrete implementation of a node in a preference dialog tree. This class\n also supports lazy creation of the node's preference page.\n"
1095,method,org/eclipse/jface/preference/PreferenceNode/add/IPreferenceNode,""
1096,method,org/eclipse/jface/preference/PreferenceNode/createPage/,""
1097,method,org/eclipse/jface/preference/PreferenceNode/disposeResources/," (non-Javadoc) Method declared on IPreferenceNode.\n"
1098,method,org/eclipse/jface/preference/PreferenceNode/findSubNode/String,""
1099,method,org/eclipse/jface/preference/PreferenceNode/getId/,""
1100,method,org/eclipse/jface/preference/PreferenceNode/getImageDescriptor/," Returns the image descriptor for this node.\n \n @return the image descriptor\n"
1101,method,org/eclipse/jface/preference/PreferenceNode/getLabelImage/,""
1102,method,org/eclipse/jface/preference/PreferenceNode/getLabelText/,""
1103,method,org/eclipse/jface/preference/PreferenceNode/getPage/,""
1104,method,org/eclipse/jface/preference/PreferenceNode/getSubNodes/,""
1105,method,org/eclipse/jface/preference/PreferenceNode/remove/String,""
1106,method,org/eclipse/jface/preference/PreferenceNode/remove/IPreferenceNode,""
1107,method,org/eclipse/jface/preference/PreferenceNode/setPage/IPreferencePage," Set the current page to be newPage.\n \n @param newPage\n"
1108,method,org/eclipse/jface/preference/PreferenceNode/PreferenceNode/String," Creates a new preference node with the given id. The new node has no\n subnodes.\n \n @param id\n            the node id\n"
1110,method,org/eclipse/jface/preference/PreferenceNode/PreferenceNode/String;IPreferencePage," Creates a preference node with the given id and preference page. The\n title of the preference page is used for the node label. The node will\n not have an image.\n \n @param id\n            the node id\n @param preferencePage\n            the preference page\n"
1112,method,org/eclipse/jface/preference/PreferenceConverter/basicGetFontData/String," Helper method to construct a <code>FontData</code> from the given string.\n String is in the form FontData;FontData; in order that\n multiple FontDatas can be defined.\n @param value the identifier for the font\n @return FontData[]\n \n @since 3.0\n"
1113,method,org/eclipse/jface/preference/PreferenceConverter/readFontData/String," Reads the supplied string and returns its corresponding\n FontData. If it cannot be read then the default FontData\n will be returned.\n \n @param fontDataValue the string value for the font data  \n @return the font data\n"
1114,method,org/eclipse/jface/preference/PreferenceConverter/getColor/IPreferenceStore;String," Returns the current value of the color-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a color.\n\n @param store the preference store\n @param name the name of the preference\n @return the color-valued preference\n"
1115,method,org/eclipse/jface/preference/PreferenceConverter/getDefaultColor/IPreferenceStore;String," Returns the default value for the color-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>COLOR_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a color.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n"
1116,method,org/eclipse/jface/preference/PreferenceConverter/getDefaultFontDataArray/IPreferenceStore;String," Returns the default value array for the font-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as font data.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n"
1118,method,org/eclipse/jface/preference/PreferenceConverter/getDefaultPoint/IPreferenceStore;String," Returns the default value for the point-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a point.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n"
1119,method,org/eclipse/jface/preference/PreferenceConverter/getDefaultRectangle/IPreferenceStore;String," Returns the default value for the rectangle-valued preference\n with the given name in the given preference store.\n Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a rectangle.\n\n @param store the preference store\n @param name the name of the preference\n @return the default value of the preference\n"
1120,method,org/eclipse/jface/preference/PreferenceConverter/getFontDataArray/IPreferenceStore;String," Returns the current value of the font-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>FONTDATA_ARRAY_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as font data.\n\n @param store the preference store\n @param name the name of the preference\n @return the font-valued preference\n"
1122,method,org/eclipse/jface/preference/PreferenceConverter/getPoint/IPreferenceStore;String," Returns the current value of the point-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>POINT_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a point.\n\n @param store the preference store\n @param name the name of the preference\n @return the point-valued preference\n"
1123,method,org/eclipse/jface/preference/PreferenceConverter/getRectangle/IPreferenceStore;String," Returns the current value of the rectangle-valued preference with the\n given name in the given preference store.\n Returns the default-default value (<code>RECTANGLE_DEFAULT_DEFAULT</code>) \n if there is no preference with the given name, or if the current value \n cannot be treated as a rectangle.\n\n @param store the preference store\n @param name the name of the preference\n @return the rectangle-valued preference\n"
1125,method,org/eclipse/jface/preference/PreferenceConverter/setDefault/IPreferenceStore;String;FontData[]," Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n"
1126,method,org/eclipse/jface/preference/PreferenceConverter/setDefault/IPreferenceStore;String;Point," Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n"
1127,method,org/eclipse/jface/preference/PreferenceConverter/setDefault/IPreferenceStore;String;Rectangle," Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n"
1128,method,org/eclipse/jface/preference/PreferenceConverter/setDefault/IPreferenceStore;String;RGB," Sets the default value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new default value of the preference\n"
1129,method,org/eclipse/jface/preference/PreferenceConverter/setValue/IPreferenceStore;String;FontData," Sets the current value of the preference with the given name\n in the given preference store. \n <p>\n Included for backwards compatibility.  This method is equivalent to\n </code>setValue(store, name, new FontData[]{value})</code>.\n </p>\n \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n"
1131,method,org/eclipse/jface/preference/PreferenceConverter/putValue/IPreferenceStore;String;FontData[]," Sets the current value of the preference with the given name\n in the given preference store. This method does not update\n the font registry or fire a property change event.\n \n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n \n @see PreferenceConverter#setValue(IPreferenceStore, String, FontData[])\n"
1133,method,org/eclipse/jface/preference/PreferenceConverter/setValue/IPreferenceStore;String;Point," Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n"
1134,method,org/eclipse/jface/preference/PreferenceConverter/setValue/IPreferenceStore;String;Rectangle," Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n"
1135,method,org/eclipse/jface/preference/PreferenceConverter/setValue/IPreferenceStore;String;RGB," Sets the current value of the preference with the given name\n in the given preference store.\n\n @param store the preference store\n @param name the name of the preference\n @param value the new current value of the preference\n"
1136,field,org/eclipse/jface/preference/PreferenceConverter/POINT_DEFAULT_DEFAULT," The default-default value for point preferences\n (the origin, <code>(0,0)</code>).\n"
1137,field,org/eclipse/jface/preference/PreferenceConverter/RECTANGLE_DEFAULT_DEFAULT," The default-default value for rectangle preferences\n (the empty rectangle <code>(0,0,0,0)</code>).\n"
1138,field,org/eclipse/jface/preference/PreferenceConverter/COLOR_DEFAULT_DEFAULT," The default-default value for color preferences \n (black, <code>RGB(0,0,0)</code>).\n"
1139,field,org/eclipse/jface/preference/PreferenceConverter/FONTDATA_ARRAY_DEFAULT_DEFAULT," The default-default value for <code>FontData[]</code> preferences.\n"
1140,field,org/eclipse/jface/preference/PreferenceConverter/FONTDATA_DEFAULT_DEFAULT," The default-default value for <code>FontData</code> preferences.\n"
1141,class,org/eclipse/jface/preference/JFacePreferences," \n JFacePreferences is a class used to administer the preferences used by JFace\n objects.\n"
1142,method,org/eclipse/jface/preference/JFacePreferences/getPreferenceStore/," Return the preference store for the receiver.\n \n @return IPreferenceStore or null\n"
1143,method,org/eclipse/jface/preference/JFacePreferences/setPreferenceStore/IPreferenceStore," Set the preference store for the receiver.\n \n @param store\n            IPreferenceStore\n"
1145,field,org/eclipse/jface/preference/JFacePreferences/HYPERLINK_COLOR," Identifier for the Hyperlink Color\n"
1146,field,org/eclipse/jface/preference/JFacePreferences/ACTIVE_HYPERLINK_COLOR," Identifier for the Active Hyperlink Colour\n"
1147,field,org/eclipse/jface/preference/JFacePreferences/QUALIFIER_COLOR," Identifier for the color used to show extra informations in labels, as a\n qualified name. For example in 'Foo.txt - myproject/bar', the qualifier\n is '- myproject/bar'.\n \n @since 3.4\n"
1148,field,org/eclipse/jface/preference/JFacePreferences/DECORATIONS_COLOR," Identifier for the color used to show label decorations For example in\n 'Foo.txt [1.16]', the decoration is '[1.16]'.\n \n @since 3.4\n"
1149,field,org/eclipse/jface/preference/JFacePreferences/COUNTER_COLOR," Identifier for the color used to counter informations For example in\n 'Foo.txt (2 matches)', the counter information is '(2 matches)'.\n \n @since 3.4\n"
1150,field,org/eclipse/jface/preference/JFacePreferences/CONTENT_ASSIST_BACKGROUND_COLOR," Identifier for the color used for the background of content assist\n popup dialogs.\n \n @since 3.4\n"
1151,field,org/eclipse/jface/preference/JFacePreferences/CONTENT_ASSIST_FOREGROUND_COLOR," Identifier for the color used for the foreground of content assist\n popup dialogs.\n \n @since 3.4\n"
1152,interface,org/eclipse/jface/preference/IPreferencePageContainer," An interface used by a preference page to talk to\n its dialog.\n"
1153,method,org/eclipse/jface/preference/IPreferencePageContainer/getPreferenceStore/," Returns the preference store.\n\n @return the preference store, or <code>null</code> if none\n"
1157,class,org/eclipse/jface/preference/ColorSelector," The <code>ColorSelector</code> is a wrapper for a button that displays a\n selected <code>Color</code> and allows the user to change the selection.\n"
1159,method,org/eclipse/jface/preference/ColorSelector/getButton/," Get the button control being wrappered by the selector.\n \n @return <code>Button</code>\n"
1160,method,org/eclipse/jface/preference/ColorSelector/getColorValue/," Return the currently displayed color.\n \n @return <code>RGB</code>\n"
1161,method,org/eclipse/jface/preference/ColorSelector/removeListener/IPropertyChangeListener," Removes the given listener from this <code>ColorSelector</code>. Has\n no affect if the listener is not registered.\n \n @param listener\n            a property change listener\n @since 3.0\n"
1162,method,org/eclipse/jface/preference/ColorSelector/setColorValue/RGB," Set the current color value and update the control.\n \n @param rgb\n            The new color.\n"
1163,method,org/eclipse/jface/preference/ColorSelector/setEnabled/boolean," Set whether or not the button is enabled.\n \n @param state\n            the enabled state.\n"
1164,method,org/eclipse/jface/preference/ColorSelector/updateColorImage/," Update the image being displayed on the button using the current color\n setting.\n"
1165,method,org/eclipse/jface/preference/ColorSelector/open/," Activate the editor for this selector. This causes the color selection\n dialog to appear and wait for user input.\n \n @since 3.2\n"
1166,method,org/eclipse/jface/preference/ColorSelector/ColorSelector/Composite," Create a new instance of the reciever and the button that it wrappers in\n the supplied parent <code>Composite</code>.\n \n @param parent\n            The parent of the button.\n"
1167,field,org/eclipse/jface/preference/ColorSelector/PROP_COLORCHANGE," Property name that signifies the selected color of this\n <code>ColorSelector</code> has changed.\n \n @since 3.0\n"
1168,class,org/eclipse/jface/preference/BooleanFieldEditor," A field editor for a boolean type preference.\n"
1169,method,org/eclipse/jface/preference/BooleanFieldEditor/adjustForNumColumns/int,""
1170,method,org/eclipse/jface/preference/BooleanFieldEditor/doFillIntoGrid/Composite;int,""
1172,method,org/eclipse/jface/preference/BooleanFieldEditor/doLoad/,""
1173,method,org/eclipse/jface/preference/BooleanFieldEditor/doLoadDefault/,""
1174,method,org/eclipse/jface/preference/BooleanFieldEditor/doStore/,""
1175,method,org/eclipse/jface/preference/BooleanFieldEditor/getBooleanValue/," Returns this field editor's current value.\n \n @return the value\n"
1176,method,org/eclipse/jface/preference/BooleanFieldEditor/getChangeControl/Composite," Returns the change button for this field editor.\n \n @param parent\n            The Composite to create the receiver in.\n \n @return the change button\n"
1177,method,org/eclipse/jface/preference/BooleanFieldEditor/getNumberOfControls/,""
1178,method,org/eclipse/jface/preference/BooleanFieldEditor/setFocus/,""
1179,method,org/eclipse/jface/preference/BooleanFieldEditor/setLabelText/String,""
1180,method,org/eclipse/jface/preference/BooleanFieldEditor/valueChanged/boolean;boolean," Informs this field editor's listener, if it has one, about a change to\n the value (<code>VALUE</code> property) provided that the old and new\n values are different.\n \n @param oldValue\n            the old value\n @param newValue\n            the new value\n"
1181,method,org/eclipse/jface/preference/BooleanFieldEditor/setEnabled/boolean;Composite,""
1182,method,org/eclipse/jface/preference/BooleanFieldEditor/BooleanFieldEditor/," Creates a new boolean field editor\n"
1183,method,org/eclipse/jface/preference/BooleanFieldEditor/BooleanFieldEditor/String;String;int;Composite," Creates a boolean field editor in the given style.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param style\n            the style, either <code>DEFAULT</code> or\n            <code>SEPARATE_LABEL</code>\n @param parent\n            the parent of the field editor's control\n @see #DEFAULT\n @see #SEPARATE_LABEL\n"
1184,method,org/eclipse/jface/preference/BooleanFieldEditor/BooleanFieldEditor/String;String;Composite," Creates a boolean field editor in the default style.\n \n @param name\n            the name of the preference this field editor works on\n @param label\n            the label text of the field editor\n @param parent\n            the parent of the field editor's control\n"
1185,field,org/eclipse/jface/preference/BooleanFieldEditor/DEFAULT," Style constant (value <code>0</code>) indicating the default layout where\n the field editor's check box appears to the left of the label.\n"
1186,field,org/eclipse/jface/preference/BooleanFieldEditor/SEPARATE_LABEL," Style constant (value <code>1</code>) indicating a layout where the field\n editor's label appears on the left with a check box on the right.\n"
1188,method,org/eclipse/jface/preference/ListEditor/adjustForNumColumns/int,""
1190,method,org/eclipse/jface/preference/ListEditor/createSelectionListener/," Creates a selection listener.\n"
1191,method,org/eclipse/jface/preference/ListEditor/doFillIntoGrid/Composite;int,""
1192,method,org/eclipse/jface/preference/ListEditor/doLoad/,""
1193,method,org/eclipse/jface/preference/ListEditor/doLoadDefault/,""
1194,method,org/eclipse/jface/preference/ListEditor/doStore/,""
1195,method,org/eclipse/jface/preference/ListEditor/getButtonBoxControl/Composite," Returns this field editor's button box containing the Add, Remove,\n Up, and Down button.\n\n @param parent the parent control\n @return the button box\n"
1196,method,org/eclipse/jface/preference/ListEditor/getListControl/Composite," Returns this field editor's list control.\n\n @param parent the parent control\n @return the list control\n"
1198,method,org/eclipse/jface/preference/ListEditor/getNumberOfControls/,""
1202,method,org/eclipse/jface/preference/ListEditor/setFocus/,""
1203,method,org/eclipse/jface/preference/ListEditor/setEnabled/boolean;Composite,""
1204,method,org/eclipse/jface/preference/ListEditor/getAddButton/," Return the Add button.  \n \n @return the button\n @since 3.5\n"
1205,method,org/eclipse/jface/preference/ListEditor/getRemoveButton/," Return the Remove button.  \n \n @return the button\n @since 3.5\n"
1206,method,org/eclipse/jface/preference/ListEditor/getUpButton/," Return the Up button.  \n \n @return the button\n @since 3.5\n"
1207,method,org/eclipse/jface/preference/ListEditor/getDownButton/," Return the Down button.  \n \n @return the button\n @since 3.5\n"
1208,method,org/eclipse/jface/preference/ListEditor/getList/," Return the List.\n \n @return the list\n @since 3.5\n"
1209,method,org/eclipse/jface/preference/ListEditor/ListEditor/," Creates a new list field editor \n"
1210,method,org/eclipse/jface/preference/ListEditor/ListEditor/String;String;Composite," Creates a list field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1211,class,org/eclipse/jface/preference/RadioGroupFieldEditor," A field editor for an enumeration type preference.\n The choices are presented as a list of radio buttons.\n"
1212,method,org/eclipse/jface/preference/RadioGroupFieldEditor/adjustForNumColumns/int,""
1213,method,org/eclipse/jface/preference/RadioGroupFieldEditor/doFillIntoGrid/Composite;int,""
1214,method,org/eclipse/jface/preference/RadioGroupFieldEditor/doLoad/,""
1215,method,org/eclipse/jface/preference/RadioGroupFieldEditor/doLoadDefault/,""
1216,method,org/eclipse/jface/preference/RadioGroupFieldEditor/doStore/,""
1217,method,org/eclipse/jface/preference/RadioGroupFieldEditor/getNumberOfControls/,""
1218,method,org/eclipse/jface/preference/RadioGroupFieldEditor/getRadioBoxControl/Composite," Returns this field editor's radio group control.\n @param parent The parent to create the radioBox in\n @return the radio group control\n"
1219,method,org/eclipse/jface/preference/RadioGroupFieldEditor/setIndent/int," Sets the indent used for the first column of the radion button matrix.\n\n @param indent the indent (in pixels)\n"
1220,method,org/eclipse/jface/preference/RadioGroupFieldEditor/setEnabled/boolean;Composite,""
1221,method,org/eclipse/jface/preference/RadioGroupFieldEditor/RadioGroupFieldEditor/," Creates a new radio group field editor \n"
1222,method,org/eclipse/jface/preference/RadioGroupFieldEditor/RadioGroupFieldEditor/String;String;int;String[][];Composite," Creates a radio group field editor.  \n This constructor does not use a <code>Group</code> to contain the radio buttons.\n It is equivalent to using the following constructor with <code>false</code>\n for the <code>useGroup</code> argument.\n <p>\n Example usage:\n <pre>\n		RadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n			"GeneralPage.DoubleClick", resName, 1,\n			new String[][] {\n				{"Open Browser", "open"},\n				{"Expand Tree", "expand"}\n			},\n          parent);	\n </pre>\n </p>\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param numColumns the number of columns for the radio button presentation\n @param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n @param parent the parent of the field editor's control\n"
1223,method,org/eclipse/jface/preference/RadioGroupFieldEditor/RadioGroupFieldEditor/String;String;int;String[][];Composite;boolean," Creates a radio group field editor.\n <p>\n Example usage:\n <pre>\n		RadioGroupFieldEditor editor= new RadioGroupFieldEditor(\n			"GeneralPage.DoubleClick", resName, 1,\n			new String[][] {\n				{"Open Browser", "open"},\n				{"Expand Tree", "expand"}\n			},\n          parent,\n          true);	\n </pre>\n </p>\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param numColumns the number of columns for the radio button presentation\n @param labelAndValues list of radio button [label, value] entries;\n  the value is returned when the radio button is selected\n @param parent the parent of the field editor's control\n @param useGroup whether to use a Group control to contain the radio buttons\n"
1224,class,org/eclipse/jface/preference/PreferenceContentProvider," Provides a tree model for <code>PreferenceManager</code> content.\n \n @since 3.0\n"
1225,method,org/eclipse/jface/preference/PreferenceContentProvider/dispose/,""
1226,method,org/eclipse/jface/preference/PreferenceContentProvider/getChildren/Object,""
1227,method,org/eclipse/jface/preference/PreferenceContentProvider/getElements/Object,""
1228,method,org/eclipse/jface/preference/PreferenceContentProvider/getParent/Object,""
1229,method,org/eclipse/jface/preference/PreferenceContentProvider/hasChildren/Object,""
1230,method,org/eclipse/jface/preference/PreferenceContentProvider/inputChanged/Viewer;Object;Object,""
1231,method,org/eclipse/jface/preference/PreferenceContentProvider/setManager/PreferenceManager," Set the manager for the preferences.\n @param manager The manager to set.\n \n @since 3.1\n"
1232,method,org/eclipse/jface/preference/PreferenceContentProvider/PreferenceContentProvider/,""
1233,class,org/eclipse/jface/preference/ColorFieldEditor," A field editor for a color type preference.\n"
1234,method,org/eclipse/jface/preference/ColorFieldEditor/adjustForNumColumns/int,""
1236,method,org/eclipse/jface/preference/ColorFieldEditor/doFillIntoGrid/Composite;int,""
1237,method,org/eclipse/jface/preference/ColorFieldEditor/doLoad/,""
1238,method,org/eclipse/jface/preference/ColorFieldEditor/doLoadDefault/,""
1239,method,org/eclipse/jface/preference/ColorFieldEditor/doStore/,""
1240,method,org/eclipse/jface/preference/ColorFieldEditor/getColorSelector/," Get the color selector used by the receiver.\n \n @return ColorSelector/\n"
1242,method,org/eclipse/jface/preference/ColorFieldEditor/getNumberOfControls/,""
1243,method,org/eclipse/jface/preference/ColorFieldEditor/setEnabled/boolean;Composite,""
1244,method,org/eclipse/jface/preference/ColorFieldEditor/ColorFieldEditor/," Creates a new color field editor\n"
1245,method,org/eclipse/jface/preference/ColorFieldEditor/ColorFieldEditor/String;String;Composite," Creates a color field editor.\n \n @param name\n            the name of the preference this field editor works on\n @param labelText\n            the label text of the field editor\n @param parent\n            the parent of the field editor's control\n"
1246,class,org/eclipse/jface/preference/BooleanPropertyAction," The BooleanPropertyAction is an action that set the values of a \n boolean property in the preference store.\n"
1247,method,org/eclipse/jface/preference/BooleanPropertyAction/run/,""
1248,method,org/eclipse/jface/preference/BooleanPropertyAction/BooleanPropertyAction/String;IPreferenceStore;String," Create a new instance of the receiver.\n @param title The displayable name of the action.\n @param preferenceStore The preference store to propogate changes to\n @param property The property that is being updated\n @throws IllegalArgumentException Thrown if preferenceStore or\n property are <code>null</code>.\n"
1249,class,org/eclipse/jface/preference/ComboFieldEditor," A field editor for a combo box that allows the drop-down selection of one of\n a list of items.\n \n @since 3.3\n"
1250,method,org/eclipse/jface/preference/ComboFieldEditor/adjustForNumColumns/int,""
1251,method,org/eclipse/jface/preference/ComboFieldEditor/doFillIntoGrid/Composite;int,""
1252,method,org/eclipse/jface/preference/ComboFieldEditor/doLoad/,""
1253,method,org/eclipse/jface/preference/ComboFieldEditor/doLoadDefault/,""
1254,method,org/eclipse/jface/preference/ComboFieldEditor/doStore/,""
1255,method,org/eclipse/jface/preference/ComboFieldEditor/getNumberOfControls/,""
1256,method,org/eclipse/jface/preference/ComboFieldEditor/setEnabled/boolean;Composite,""
1259,method,org/eclipse/jface/preference/StringButtonFieldEditor/adjustForNumColumns/int,""
1261,method,org/eclipse/jface/preference/StringButtonFieldEditor/doFillIntoGrid/Composite;int,""
1263,method,org/eclipse/jface/preference/StringButtonFieldEditor/getNumberOfControls/,""
1264,method,org/eclipse/jface/preference/StringButtonFieldEditor/getShell/," Returns this field editor's shell.\n\n @return the shell\n"
1265,method,org/eclipse/jface/preference/StringButtonFieldEditor/setChangeButtonText/String," Sets the text of the change button.\n\n @param text the new text\n"
1266,method,org/eclipse/jface/preference/StringButtonFieldEditor/setEnabled/boolean;Composite,""
1267,method,org/eclipse/jface/preference/StringButtonFieldEditor/StringButtonFieldEditor/," Creates a new string button field editor \n"
1268,method,org/eclipse/jface/preference/StringButtonFieldEditor/StringButtonFieldEditor/String;String;Composite," Creates a string button field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1270,method,org/eclipse/jface/preference/FieldEditorPreferencePage/addField/FieldEditor," Adds the given field editor to this page.\n\n @param editor the field editor\n"
1271,method,org/eclipse/jface/preference/FieldEditorPreferencePage/adjustGridLayout/," Adjust the layout of the field editors so that\n they are properly aligned.\n"
1272,method,org/eclipse/jface/preference/FieldEditorPreferencePage/applyFont/," Applys the font to the field editors managed by this page.\n"
1274,method,org/eclipse/jface/preference/FieldEditorPreferencePage/createContents/Composite,""
1278,method,org/eclipse/jface/preference/FieldEditorPreferencePage/initialize/," Initializes all field editors.\n"
1279,method,org/eclipse/jface/preference/FieldEditorPreferencePage/performDefaults/,"\n The field editor preference page implementation of a <code>PreferencePage</code>\n method loads all the field editors with their default values.\n"
1282,method,org/eclipse/jface/preference/FieldEditorPreferencePage/setVisible/boolean,""
1283,method,org/eclipse/jface/preference/FieldEditorPreferencePage/FieldEditorPreferencePage/," Create a new instance of the reciever.\n"
1284,method,org/eclipse/jface/preference/FieldEditorPreferencePage/FieldEditorPreferencePage/int," Creates a new field editor preference page with the given style,\n an empty title, and no image.\n\n @param style either <code>GRID</code> or <code>FLAT</code>\n"
1285,method,org/eclipse/jface/preference/FieldEditorPreferencePage/FieldEditorPreferencePage/String;int," Creates a new field editor preference page with the given title \n and style, but no image.\n\n @param title the title of this preference page\n @param style either <code>GRID</code> or <code>FLAT</code>\n"
1286,method,org/eclipse/jface/preference/FieldEditorPreferencePage/FieldEditorPreferencePage/String;ImageDescriptor;int," Creates a new field editor preference page with the given title,\n image, and style.\n\n @param title the title of this preference page\n @param image the image for this preference page, or \n   <code>null</code> if none\n @param style either <code>GRID</code> or <code>FLAT</code>\n"
1287,field,org/eclipse/jface/preference/FieldEditorPreferencePage/FLAT," Layout constant (value <code>0</code>) indicating that\n each field editor is handled as a single component.\n"
1288,field,org/eclipse/jface/preference/FieldEditorPreferencePage/GRID," Layout constant (value <code>1</code>) indicating that\n the field editors' basic controls are put into a grid layout.\n"
1289,field,org/eclipse/jface/preference/FieldEditorPreferencePage/VERTICAL_SPACING,"\n The vertical spacing used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n"
1290,field,org/eclipse/jface/preference/FieldEditorPreferencePage/MARGIN_WIDTH,"\n The margin width used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n"
1291,field,org/eclipse/jface/preference/FieldEditorPreferencePage/MARGIN_HEIGHT,"\n The margin height used by layout styles <code>FLAT</code> \n and <code>GRID</code>.\n"
1292,class,org/eclipse/jface/preference/PreferenceDialog," A preference dialog is a hierarchical presentation of preference pages. Each\n page is represented by a node in the tree shown on the left hand side of the\n dialog; when a node is selected, the corresponding page is shown on the right\n hand side.\n"
1293,method,org/eclipse/jface/preference/PreferenceDialog/buttonPressed/int,""
1294,method,org/eclipse/jface/preference/PreferenceDialog/cancelPressed/,""
1295,method,org/eclipse/jface/preference/PreferenceDialog/close/,""
1296,method,org/eclipse/jface/preference/PreferenceDialog/configureShell/Shell,""
1297,method,org/eclipse/jface/preference/PreferenceDialog/constrainShellSize/,""
1298,method,org/eclipse/jface/preference/PreferenceDialog/createButtonsForButtonBar/Composite,""
1299,method,org/eclipse/jface/preference/PreferenceDialog/createContents/Composite,""
1300,method,org/eclipse/jface/preference/PreferenceDialog/createDialogArea/Composite,""
1302,method,org/eclipse/jface/preference/PreferenceDialog/createPageContainer/Composite," Creates the inner page container.\n \n @param parent\n @return Composite\n"
1303,method,org/eclipse/jface/preference/PreferenceDialog/getPageLayout/," Return the layout for the composite that contains\n the pages.\n @return PageLayout\n \n @since 3.1\n"
1304,method,org/eclipse/jface/preference/PreferenceDialog/createTitleArea/Composite," Creates the wizard's title area.\n \n @param parent\n            the SWT parent for the title area composite.\n @return the created title area composite.\n"
1305,method,org/eclipse/jface/preference/PreferenceDialog/createTreeAreaContents/Composite," @param parent\n            the SWT parent for the tree area controls.\n @return the new <code>Control</code>.\n @since 3.0\n"
1306,method,org/eclipse/jface/preference/PreferenceDialog/createTreeViewer/Composite," Create a new <code>TreeViewer</code>.\n \n @param parent\n            the parent <code>Composite</code>.\n @return the <code>TreeViewer</code>.\n @since 3.0\n"
1307,method,org/eclipse/jface/preference/PreferenceDialog/addListeners/TreeViewer," Add the listeners to the tree viewer.\n @param viewer\n \n @since 3.1\n"
1308,method,org/eclipse/jface/preference/PreferenceDialog/findNodeMatching/String," Find the <code>IPreferenceNode</code> that has data the same id as the\n supplied value.\n \n @param nodeId\n            the id to search for.\n @return <code>IPreferenceNode</code> or <code>null</code> if not\n         found.\n"
1309,method,org/eclipse/jface/preference/PreferenceDialog/getLastRightWidth/," Get the last known right side width.\n \n @return the width.\n"
1310,method,org/eclipse/jface/preference/PreferenceDialog/getPreferenceManager/," Returns the preference mananger used by this preference dialog.\n \n @return the preference mananger\n"
1311,method,org/eclipse/jface/preference/PreferenceDialog/getPreferenceStore/,""
1312,method,org/eclipse/jface/preference/PreferenceDialog/getSelectedNodePreference/," Get the name of the selected item preference\n \n @return String\n"
1313,method,org/eclipse/jface/preference/PreferenceDialog/getSingleSelection/ISelection," @param selection\n            the <code>ISelection</code> to examine.\n @return the first element, or null if empty.\n"
1314,method,org/eclipse/jface/preference/PreferenceDialog/getTreeViewer/," @return the <code>TreeViewer</code> for this dialog.\n @since 3.3\n"
1318,method,org/eclipse/jface/preference/PreferenceDialog/isCurrentPageValid/," Returns whether the current page is valid.\n \n @return <code>false</code> if the current page is not valid, or or\n         <code>true</code> if the current page is valid or there is no\n         current page\n"
1319,method,org/eclipse/jface/preference/PreferenceDialog/layoutTreeAreaControl/Control," @param control\n            the <code>Control</code> to lay out.\n @since 3.0\n"
1321,method,org/eclipse/jface/preference/PreferenceDialog/selectSavedItem/," Selects the saved item in the tree of preference pages. If it cannot do\n this it saves the first one.\n"
1325,method,org/eclipse/jface/preference/PreferenceDialog/setMinimumPageSize/int;int," Sets the minimum page size.\n \n @param minWidth\n            the minimum page width\n @param minHeight\n            the minimum page height\n @see #setMinimumPageSize(Point)\n"
1326,method,org/eclipse/jface/preference/PreferenceDialog/setMinimumPageSize/Point," Sets the minimum page size.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setMinimumPageSize(int,int)\n"
1327,method,org/eclipse/jface/preference/PreferenceDialog/setPreferenceStore/IPreferenceStore," Sets the preference store for this preference dialog.\n \n @param store\n            the preference store\n @see #getPreferenceStore\n"
1328,method,org/eclipse/jface/preference/PreferenceDialog/setSelectedNode/String," Sets the name of the selected item preference. Public equivalent to\n <code>setSelectedNodePreference</code>.\n \n @param pageId\n            The identifier for the page\n @since 3.0\n"
1329,method,org/eclipse/jface/preference/PreferenceDialog/setSelectedNodePreference/String," Sets the name of the selected item preference.\n \n @param pageId\n            The identifier for the page\n"
1330,method,org/eclipse/jface/preference/PreferenceDialog/showPage/IPreferenceNode," Shows the preference page corresponding to the given preference node.\n Does nothing if that page is already current.\n \n @param node\n            the preference node, or <code>null</code> if none\n @return <code>true</code> if the page flip was successful, and\n         <code>false</code> is unsuccessful\n"
1331,method,org/eclipse/jface/preference/PreferenceDialog/createPage/IPreferenceNode," Create the page for the node.\n @param node\n \n @since 3.1\n"
1332,method,org/eclipse/jface/preference/PreferenceDialog/getPage/IPreferenceNode," Get the page for the node.\n @param node\n @return IPreferencePage\n \n @since 3.1\n"
1333,method,org/eclipse/jface/preference/PreferenceDialog/update/," Updates this dialog's controls to reflect the current page.\n"
1334,method,org/eclipse/jface/preference/PreferenceDialog/updateButtons/,""
1335,method,org/eclipse/jface/preference/PreferenceDialog/updateMessage/,""
1336,method,org/eclipse/jface/preference/PreferenceDialog/updateTitle/,""
1337,method,org/eclipse/jface/preference/PreferenceDialog/updateTreeFont/Font," Update the tree to use the specified <code>Font</code>.\n \n @param dialogFont\n            the <code>Font</code> to use.\n @since 3.0\n"
1338,method,org/eclipse/jface/preference/PreferenceDialog/getCurrentPage/," Returns the currentPage.\n @return IPreferencePage\n @since 3.1\n"
1339,method,org/eclipse/jface/preference/PreferenceDialog/setCurrentPage/IPreferencePage," Sets the current page.\n @param currentPage\n \n @since 3.1\n"
1340,method,org/eclipse/jface/preference/PreferenceDialog/setTreeViewer/TreeViewer," Set the treeViewer.\n @param treeViewer\n \n @since 3.1\n"
1341,method,org/eclipse/jface/preference/PreferenceDialog/getPageContainer/," Get the composite that is showing the page.\n\n @return Composite.\n \n @since 3.1\n"
1342,method,org/eclipse/jface/preference/PreferenceDialog/setPageContainer/Composite," Set the composite that is showing the page.\n @param pageContainer Composite\n \n @since 3.1\n"
1343,method,org/eclipse/jface/preference/PreferenceDialog/createPageControl/IPreferencePage;Composite," Create the page control for the supplied page.\n \n @param page - the preference page to be shown\n @param parent - the composite to parent the page\n \n @since 3.1\n"
1344,method,org/eclipse/jface/preference/PreferenceDialog/getSelectedPage/," @see org.eclipse.jface.dialogs.IPageChangeProvider#getSelectedPage()\n \n @since 3.1\n"
1345,method,org/eclipse/jface/preference/PreferenceDialog/addPageChangedListener/IPageChangedListener," @see org.eclipse.jface.dialogs.IPageChangeProvider#addPageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n @since 3.1\n"
1346,method,org/eclipse/jface/preference/PreferenceDialog/removePageChangedListener/IPageChangedListener," @see org.eclipse.jface.dialogs.IPageChangeProvider#removePageChangedListener(org.eclipse.jface.dialogs.IPageChangedListener)\n @since 3.1\n"
1348,method,org/eclipse/jface/preference/PreferenceDialog/isResizable/,""
1349,method,org/eclipse/jface/preference/PreferenceDialog/PreferenceDialog/Shell;PreferenceManager," Creates a new preference dialog under the control of the given preference\n manager.\n \n @param parentShell\n            the parent shell\n @param manager\n            the preference manager\n"
1351,field,org/eclipse/jface/preference/PreferenceDialog/PREF_DLG_TITLE_IMG," Title area fields\n"
1352,field,org/eclipse/jface/preference/PreferenceDialog/FAILED," Return code used when dialog failed\n"
1353,class,org/eclipse/jface/preference/FontFieldEditor," A field editor for a font type preference.\n"
1354,method,org/eclipse/jface/preference/FontFieldEditor/adjustForNumColumns/int,""
1355,method,org/eclipse/jface/preference/FontFieldEditor/applyFont/,""
1356,method,org/eclipse/jface/preference/FontFieldEditor/doFillIntoGrid/Composite;int,""
1357,method,org/eclipse/jface/preference/FontFieldEditor/doLoad/,""
1358,method,org/eclipse/jface/preference/FontFieldEditor/doLoadDefault/,""
1359,method,org/eclipse/jface/preference/FontFieldEditor/doStore/,""
1361,method,org/eclipse/jface/preference/FontFieldEditor/getNumberOfControls/,""
1362,method,org/eclipse/jface/preference/FontFieldEditor/getPreferredPreviewHeight/," Returns the preferred preview height. \n\n @return the height, or <code>-1</code> if no previewer\n  is installed\n"
1363,method,org/eclipse/jface/preference/FontFieldEditor/getPreviewControl/," Returns the preview control for this field editor.\n\n @return the preview control\n"
1365,method,org/eclipse/jface/preference/FontFieldEditor/setChangeButtonText/String," Sets the text of the change button.\n\n @param text the new text\n"
1366,method,org/eclipse/jface/preference/FontFieldEditor/setToDefault/," Store the default preference for the field\n being edited\n"
1367,method,org/eclipse/jface/preference/FontFieldEditor/setEnabled/boolean;Composite,""
1368,method,org/eclipse/jface/preference/FontFieldEditor/FontFieldEditor/," Creates a new font field editor \n"
1369,method,org/eclipse/jface/preference/FontFieldEditor/FontFieldEditor/String;String;String;Composite," Creates a font field editor with an optional preview area.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param previewAreaText the text used for the preview window. If it is\n <code>null</code> there will be no preview area,\n @param parent the parent of the field editor's control\n"
1370,method,org/eclipse/jface/preference/FontFieldEditor/FontFieldEditor/String;String;Composite," Creates a font field editor without a preview.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1371,interface,org/eclipse/jface/preference/IPreferencePage," An interface for a preference page. This interface\n is used primarily by the page's container \n"
1372,method,org/eclipse/jface/preference/IPreferencePage/computeSize/," Computes a size for this page's UI component. \n\n @return the size of the preference page encoded as\n   <code>new Point(width,height)</code>, or \n   <code>(0,0)</code> if the page doesn't currently have any UI component\n"
1373,method,org/eclipse/jface/preference/IPreferencePage/isValid/," Returns whether this dialog page is in a valid state.\n \n @return <code>true</code> if the page is in a valid state,\n   and <code>false</code> if invalid\n"
1374,method,org/eclipse/jface/preference/IPreferencePage/okToLeave/," Checks whether it is alright to leave this page.\n \n @return <code>false</code> to abort page flipping and the\n  have the current page remain visible, and <code>true</code>\n  to allow the page flip\n"
1375,method,org/eclipse/jface/preference/IPreferencePage/performCancel/," Notifies that the container of this preference page has been canceled.\n \n @return <code>false</code> to abort the container's cancel \n  procedure and <code>true</code> to allow the cancel to happen\n"
1376,method,org/eclipse/jface/preference/IPreferencePage/performOk/," Notifies that the OK button of this page's container has been pressed.\n \n @return <code>false</code> to abort the container's OK\n  processing and <code>true</code> to allow the OK to happen\n"
1377,method,org/eclipse/jface/preference/IPreferencePage/setContainer/IPreferencePageContainer," Sets or clears the container of this page.\n\n @param preferencePageContainer the preference page container, or <code>null</code> \n"
1378,method,org/eclipse/jface/preference/IPreferencePage/setSize/Point," Sets the size of this page's UI component.\n\n @param size the size of the preference page encoded as\n   <code>new Point(width,height)</code>\n"
1380,method,org/eclipse/jface/preference/IPreferenceNode/add/IPreferenceNode," Adds the given preference node as a subnode of this\n preference node.\n\n @param node the node to add\n"
1381,method,org/eclipse/jface/preference/IPreferenceNode/createPage/," Creates the preference page for this node.\n"
1383,method,org/eclipse/jface/preference/IPreferenceNode/findSubNode/String," Returns the subnode of this contribution node with the given node id.\n\n @param id the preference node id\n @return the subnode, or <code>null</code> if none\n"
1384,method,org/eclipse/jface/preference/IPreferenceNode/getId/," Returns the id of this contribution node.\n This id identifies a contribution node relative to its parent.\n\n @return the node id\n"
1385,method,org/eclipse/jface/preference/IPreferenceNode/getLabelImage/," Returns the image used to present this node in a preference dialog.\n\n @return the image for this node, or <code>null</code>\n   if there is no image for this node\n"
1386,method,org/eclipse/jface/preference/IPreferenceNode/getLabelText/," Returns the text label used to present this node in a preference dialog.\n\n @return the text label for this node, or <code>null</code>\n   if there is no label for this node\n"
1387,method,org/eclipse/jface/preference/IPreferenceNode/getPage/," Returns the preference page for this node.\n\n @return the preference page\n"
1388,method,org/eclipse/jface/preference/IPreferenceNode/getSubNodes/," Returns an iterator over the subnodes (immediate children)\n of this contribution node.\n\n @return an IPreferenceNode array containing the child nodes\n"
1389,method,org/eclipse/jface/preference/IPreferenceNode/remove/String," Removes the subnode of this preference node with the given node id.\n\n @param id the subnode id\n @return the removed subnode, or <code>null</code> if none\n"
1390,method,org/eclipse/jface/preference/IPreferenceNode/remove/IPreferenceNode," Removes the given preference node from the list of subnodes\n (immediate children) of this node.\n\n @param node the node to remove\n @return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n"
1397,method,org/eclipse/jface/preference/PreferencePage/createDescriptionLabel/Composite," Creates and returns an SWT label under the given composite.\n\n @param parent the parent composite\n @return the new label\n"
1400,method,org/eclipse/jface/preference/PreferencePage/getContainer/," Returns the container of this page.\n\n @return the preference page container, or <code>null</code> if this\n   page has yet to be added to a container\n"
1401,method,org/eclipse/jface/preference/PreferencePage/getPreferenceStore/," Returns the preference store of this preference page.\n\n @return the preference store , or <code>null</code> if none\n"
1404,method,org/eclipse/jface/preference/PreferencePage/okToLeave/," The <code>PreferencePage</code> implementation of this \n <code>IPreferencePage</code> method returns <code>true</code>\n if the page is valid.\n @see IPreferencePage#okToLeave()\n"
1408,method,org/eclipse/jface/preference/PreferencePage/performOk/,""
1409,method,org/eclipse/jface/preference/PreferencePage/setContainer/IPreferencePageContainer,""
1411,method,org/eclipse/jface/preference/PreferencePage/setSize/Point,""
1413,method,org/eclipse/jface/preference/PreferencePage/setValid/boolean," Sets whether this page is valid.\n The enable state of the container buttons and the\n apply button is updated when a page's valid state \n changes.\n <p>\n\n @param b the new valid state\n"
1414,method,org/eclipse/jface/preference/PreferencePage/toString/,""
1415,method,org/eclipse/jface/preference/PreferencePage/updateApplyButton/," Updates the enabled state of the Apply button to reflect whether \n this page is valid.\n"
1417,method,org/eclipse/jface/preference/PreferencePage/getApplyButton/," Returns the Apply button.\n \n @return the Apply button\n"
1418,method,org/eclipse/jface/preference/PreferencePage/getDefaultsButton/," Returns the Restore Defaults button.\n \n @return the Restore Defaults button\n"
1419,method,org/eclipse/jface/preference/PreferencePage/performHelp/,""
1420,method,org/eclipse/jface/preference/PreferencePage/applyData/Object," Apply the data to the receiver. By default do nothing.\n @param data\n @since 3.1\n"
1421,method,org/eclipse/jface/preference/PreferencePage/setErrorMessage/String,""
1422,method,org/eclipse/jface/preference/PreferencePage/setMessage/String;int,""
1423,method,org/eclipse/jface/preference/PreferencePage/PreferencePage/," Creates a new preference page with an empty title and no image.\n"
1424,method,org/eclipse/jface/preference/PreferencePage/PreferencePage/String," Creates a new preference page with the given title and no image.\n\n @param title the title of this preference page\n"
1425,method,org/eclipse/jface/preference/PreferencePage/PreferencePage/String;ImageDescriptor," Creates a new abstract preference page with the given title and image.\n\n @param title the title of this preference page\n @param image the image for this preference page,\n  or <code>null</code> if none\n"
1426,class,org/eclipse/jface/preference/IntegerFieldEditor," A field editor for an integer type preference.\n"
1427,method,org/eclipse/jface/preference/IntegerFieldEditor/setValidRange/int;int," Sets the range of valid values for this field.\n \n @param min the minimum allowed value (inclusive)\n @param max the maximum allowed value (inclusive)\n"
1428,method,org/eclipse/jface/preference/IntegerFieldEditor/checkState/,""
1429,method,org/eclipse/jface/preference/IntegerFieldEditor/doLoad/,""
1430,method,org/eclipse/jface/preference/IntegerFieldEditor/doLoadDefault/,""
1431,method,org/eclipse/jface/preference/IntegerFieldEditor/doStore/,""
1432,method,org/eclipse/jface/preference/IntegerFieldEditor/getIntValue/," Returns this field editor's current value as an integer.\n\n @return the value\n @exception NumberFormatException if the <code>String</code> does not\n   contain a parsable integer\n"
1433,method,org/eclipse/jface/preference/IntegerFieldEditor/IntegerFieldEditor/," Creates a new integer field editor \n"
1434,method,org/eclipse/jface/preference/IntegerFieldEditor/IntegerFieldEditor/String;String;Composite," Creates an integer field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1435,method,org/eclipse/jface/preference/IntegerFieldEditor/IntegerFieldEditor/String;String;Composite;int," Creates an integer field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n @param textLimit the maximum number of characters in the text.\n"
1437,method,org/eclipse/jface/preference/StringFieldEditor/adjustForNumColumns/int,""
1438,method,org/eclipse/jface/preference/StringFieldEditor/checkState/," Checks whether the text input field contains a valid value or not.\n\n @return <code>true</code> if the field value is valid,\n   and <code>false</code> if invalid\n"
1441,method,org/eclipse/jface/preference/StringFieldEditor/doLoad/,""
1442,method,org/eclipse/jface/preference/StringFieldEditor/doLoadDefault/,""
1443,method,org/eclipse/jface/preference/StringFieldEditor/doStore/,""
1445,method,org/eclipse/jface/preference/StringFieldEditor/getNumberOfControls/,""
1446,method,org/eclipse/jface/preference/StringFieldEditor/getStringValue/," Returns the field editor's value.\n\n @return the current value\n"
1447,method,org/eclipse/jface/preference/StringFieldEditor/getTextControl/," Returns this field editor's text control.\n\n @return the text control, or <code>null</code> if no\n text field is created yet\n"
1448,method,org/eclipse/jface/preference/StringFieldEditor/getTextControl/Composite," Returns this field editor's text control.\n <p>\n The control is created if it does not yet exist\n </p>\n\n @param parent the parent\n @return the text control\n"
1449,method,org/eclipse/jface/preference/StringFieldEditor/isEmptyStringAllowed/," Returns whether an empty string is a valid value.\n\n @return <code>true</code> if an empty string is a valid value, and\n  <code>false</code> if an empty string is invalid\n @see #setEmptyStringAllowed\n"
1450,method,org/eclipse/jface/preference/StringFieldEditor/isValid/,""
1451,method,org/eclipse/jface/preference/StringFieldEditor/refreshValidState/,""
1452,method,org/eclipse/jface/preference/StringFieldEditor/setEmptyStringAllowed/boolean," Sets whether the empty string is a valid value or not.\n\n @param b <code>true</code> if the empty string is allowed,\n  and <code>false</code> if it is considered invalid\n"
1454,method,org/eclipse/jface/preference/StringFieldEditor/setFocus/,""
1455,method,org/eclipse/jface/preference/StringFieldEditor/setStringValue/String," Sets this field editor's value.\n\n @param value the new value, or <code>null</code> meaning the empty string\n"
1456,method,org/eclipse/jface/preference/StringFieldEditor/setTextLimit/int," Sets this text field's text limit.\n\n @param limit the limit on the number of character in the text\n  input field, or <code>UNLIMITED</code> for no limit\n\n"
1460,method,org/eclipse/jface/preference/StringFieldEditor/setEnabled/boolean;Composite,""
1461,method,org/eclipse/jface/preference/StringFieldEditor/StringFieldEditor/," Creates a new string field editor \n"
1463,method,org/eclipse/jface/preference/StringFieldEditor/StringFieldEditor/String;String;int;Composite," Creates a string field editor.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param width the width of the text input field in characters,\n  or <code>UNLIMITED</code> for no limit\n @param parent the parent of the field editor's control\n"
1464,method,org/eclipse/jface/preference/StringFieldEditor/StringFieldEditor/String;String;Composite," Creates a string field editor of unlimited width.\n Use the method <code>setTextLimit</code> to limit the text.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1467,field,org/eclipse/jface/preference/StringFieldEditor/UNLIMITED," Text limit constant (value <code>-1</code>) indicating unlimited\n text limit and width.\n"
1468,field,org/eclipse/jface/preference/StringFieldEditor/oldValue," Old text value.\n @since 3.4 this field is protected.\n"
1469,interface,org/eclipse/jface/preference/IPersistentPreferenceStore," IPersistentPreferenceStore is a preference store that can \n be saved.\n"
1470,method,org/eclipse/jface/preference/IPersistentPreferenceStore/save/," Saves the non-default-valued preferences known to this preference\n store to the file from which they were originally loaded.\n\n @exception java.io.IOException if there is a problem saving this store\n"
1471,class,org/eclipse/jface/preference/FileFieldEditor," A field editor for a file path type preference. A standard file \n dialog appears when the user presses the change button.\n"
1472,method,org/eclipse/jface/preference/FileFieldEditor/changePressed/,""
1473,method,org/eclipse/jface/preference/FileFieldEditor/checkState/,""
1475,method,org/eclipse/jface/preference/FileFieldEditor/FileFieldEditor/," Creates a new file field editor \n"
1476,method,org/eclipse/jface/preference/FileFieldEditor/FileFieldEditor/String;String;Composite," Creates a file field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1481,method,org/eclipse/jface/preference/IPreferenceStore/contains/String," Returns whether the named preference is known to this preference\n store.\n\n @param name the name of the preference\n @return <code>true</code> if either a current value or a default\n  value is known for the named preference, and <code>false</code> otherwise\n"
1483,method,org/eclipse/jface/preference/IPreferenceStore/getBoolean/String," Returns the current value of the boolean-valued preference with the\n given name.\n Returns the default-default value (<code>false</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a boolean.\n\n @param name the name of the preference\n @return the boolean-valued preference\n"
1484,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultBoolean/String," Returns the default value for the boolean-valued preference\n with the given name.\n Returns the default-default value (<code>false</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a boolean.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1485,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultDouble/String," Returns the default value for the double-valued preference\n with the given name.\n Returns the default-default value (<code>0.0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a double.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1486,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultFloat/String," Returns the default value for the float-valued preference\n with the given name.\n Returns the default-default value (<code>0.0f</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a float.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1487,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultInt/String," Returns the default value for the integer-valued preference\n with the given name.\n Returns the default-default value (<code>0</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as an integer.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1488,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultLong/String," Returns the default value for the long-valued preference\n with the given name.\n Returns the default-default value (<code>0L</code>) if there\n is no default preference with the given name, or if the default \n value cannot be treated as a long.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1489,method,org/eclipse/jface/preference/IPreferenceStore/getDefaultString/String," Returns the default value for the string-valued preference\n with the given name.\n Returns the default-default value (the empty string <code>""</code>) \n is no default preference with the given name, or if the default \n value cannot be treated as a string.\n\n @param name the name of the preference\n @return the default value of the named preference\n"
1490,method,org/eclipse/jface/preference/IPreferenceStore/getDouble/String," Returns the current value of the double-valued preference with the\n given name.\n Returns the default-default value (<code>0.0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a double.\n\n @param name the name of the preference\n @return the double-valued preference\n"
1491,method,org/eclipse/jface/preference/IPreferenceStore/getFloat/String," Returns the current value of the float-valued preference with the\n given name.\n Returns the default-default value (<code>0.0f</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a float.\n\n @param name the name of the preference\n @return the float-valued preference\n"
1492,method,org/eclipse/jface/preference/IPreferenceStore/getInt/String," Returns the current value of the integer-valued preference with the\n given name.\n Returns the default-default value (<code>0</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as an integter.\n\n @param name the name of the preference\n @return the int-valued preference\n"
1493,method,org/eclipse/jface/preference/IPreferenceStore/getLong/String," Returns the current value of the long-valued preference with the\n given name.\n Returns the default-default value (<code>0L</code>) if there\n is no preference with the given name, or if the current value \n cannot be treated as a long.\n\n @param name the name of the preference\n @return the long-valued preference\n"
1494,method,org/eclipse/jface/preference/IPreferenceStore/getString/String," Returns the current value of the string-valued preference with the\n given name.\n Returns the default-default value (the empty string <code>""</code>)\n if there is no preference with the given name, or if the current value \n cannot be treated as a string.\n\n @param name the name of the preference\n @return the string-valued preference\n"
1495,method,org/eclipse/jface/preference/IPreferenceStore/isDefault/String," Returns whether the current value of the preference with the given name\n has the default value.\n\n @param name the name of the preference\n @return <code>true</code> if the preference has a known default value\n and its current value is the same, and <code>false</code> otherwise\n (including the case where the preference is unknown to this store)\n"
1498,method,org/eclipse/jface/preference/IPreferenceStore/removePropertyChangeListener/IPropertyChangeListener," Removes the given listener from this preference store.\n Has no affect if the listener is not registered.\n\n @param listener a property change listener\n"
1512,field,org/eclipse/jface/preference/IPreferenceStore/BOOLEAN_DEFAULT_DEFAULT," The default-default value for boolean preferences (<code>false</code>).\n"
1513,field,org/eclipse/jface/preference/IPreferenceStore/DOUBLE_DEFAULT_DEFAULT," The default-default value for double preferences (<code>0.0</code>).\n"
1514,field,org/eclipse/jface/preference/IPreferenceStore/FLOAT_DEFAULT_DEFAULT," The default-default value for float preferences (<code>0.0f</code>).\n"
1515,field,org/eclipse/jface/preference/IPreferenceStore/INT_DEFAULT_DEFAULT," The default-default value for int preferences (<code>0</code>).\n"
1516,field,org/eclipse/jface/preference/IPreferenceStore/LONG_DEFAULT_DEFAULT," The default-default value for long preferences (<code>0L</code>).\n"
1517,field,org/eclipse/jface/preference/IPreferenceStore/STRING_DEFAULT_DEFAULT," The default-default value for String preferences (<code>""</code>).\n"
1518,field,org/eclipse/jface/preference/IPreferenceStore/TRUE," The string representation used for <code>true</code> (<code>"true"</code>).\n"
1519,field,org/eclipse/jface/preference/IPreferenceStore/FALSE," The string representation used for <code>false</code> (<code>"false"</code>).\n"
1521,method,org/eclipse/jface/preference/PreferenceStore/addPropertyChangeListener/IPropertyChangeListener,""
1522,method,org/eclipse/jface/preference/PreferenceStore/contains/String,""
1523,method,org/eclipse/jface/preference/PreferenceStore/firePropertyChangeEvent/String;Object;Object,""
1524,method,org/eclipse/jface/preference/PreferenceStore/getBoolean/String,""
1525,method,org/eclipse/jface/preference/PreferenceStore/getDefaultBoolean/String,""
1526,method,org/eclipse/jface/preference/PreferenceStore/getDefaultDouble/String,""
1527,method,org/eclipse/jface/preference/PreferenceStore/getDefaultFloat/String,""
1528,method,org/eclipse/jface/preference/PreferenceStore/getDefaultInt/String,""
1529,method,org/eclipse/jface/preference/PreferenceStore/getDefaultLong/String,""
1530,method,org/eclipse/jface/preference/PreferenceStore/getDefaultString/String,""
1531,method,org/eclipse/jface/preference/PreferenceStore/getDouble/String,""
1532,method,org/eclipse/jface/preference/PreferenceStore/getFloat/String,""
1533,method,org/eclipse/jface/preference/PreferenceStore/getInt/String,""
1534,method,org/eclipse/jface/preference/PreferenceStore/getLong/String,""
1535,method,org/eclipse/jface/preference/PreferenceStore/getString/String,""
1536,method,org/eclipse/jface/preference/PreferenceStore/isDefault/String,""
1537,method,org/eclipse/jface/preference/PreferenceStore/list/PrintStream," Prints the contents of this preference store to the given print stream.\n \n @param out\n            the print stream\n"
1538,method,org/eclipse/jface/preference/PreferenceStore/list/PrintWriter," Prints the contents of this preference store to the given print writer.\n \n @param out\n            the print writer\n"
1539,method,org/eclipse/jface/preference/PreferenceStore/load/," Loads this preference store from the file established in the constructor\n <code>PreferenceStore(java.lang.String)</code> (or by\n <code>setFileName</code>). Default preference values are not affected.\n \n @exception java.io.IOException\n                if there is a problem loading this store\n"
1540,method,org/eclipse/jface/preference/PreferenceStore/load/InputStream," Loads this preference store from the given input stream. Default\n preference values are not affected.\n \n @param in\n            the input stream\n @exception java.io.IOException\n                if there is a problem loading this store\n"
1541,method,org/eclipse/jface/preference/PreferenceStore/needsSaving/,""
1542,method,org/eclipse/jface/preference/PreferenceStore/preferenceNames/," Returns an enumeration of all preferences known to this store which have\n current values other than their default value.\n \n @return an array of preference names\n"
1543,method,org/eclipse/jface/preference/PreferenceStore/putValue/String;String,""
1544,method,org/eclipse/jface/preference/PreferenceStore/removePropertyChangeListener/IPropertyChangeListener,""
1545,method,org/eclipse/jface/preference/PreferenceStore/save/," Saves the non-default-valued preferences known to this preference store\n to the file from which they were originally loaded.\n \n @exception java.io.IOException\n                if there is a problem saving this store\n"
1546,method,org/eclipse/jface/preference/PreferenceStore/save/OutputStream;String," Saves this preference store to the given output stream. The given string\n is inserted as header information.\n \n @param out\n            the output stream\n @param header\n            the header\n @exception java.io.IOException\n                if there is a problem saving this store\n"
1547,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;double,""
1548,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;float,""
1549,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;int,""
1550,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;long,""
1551,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;String,""
1552,method,org/eclipse/jface/preference/PreferenceStore/setDefault/String;boolean,""
1553,method,org/eclipse/jface/preference/PreferenceStore/setFilename/String," Sets the name of the file used when loading and storing this preference\n store.\n <p>\n Afterward, the methods <code>load()</code> and <code>save()</code>\n can be used to load and store this preference store.\n </p>\n \n @param name\n            the file name\n @see #load()\n @see #save()\n"
1554,method,org/eclipse/jface/preference/PreferenceStore/setToDefault/String,""
1555,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;double,""
1556,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;float,""
1557,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;int,""
1558,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;long,""
1559,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;String,""
1560,method,org/eclipse/jface/preference/PreferenceStore/setValue/String;boolean,""
1561,method,org/eclipse/jface/preference/PreferenceStore/PreferenceStore/," Creates an empty preference store.\n <p>\n Use the methods <code>load(InputStream)</code> and\n <code>save(InputStream)</code> to load and store this preference store.\n </p>\n \n @see #load(InputStream)\n @see #save(OutputStream, String)\n"
1562,method,org/eclipse/jface/preference/PreferenceStore/PreferenceStore/String," Creates an empty preference store that loads from and saves to the a\n file.\n <p>\n Use the methods <code>load()</code> and <code>save()</code> to load\n and store this preference store.\n </p>\n \n @param filename\n            the file name\n @see #load()\n @see #save()\n"
1563,class,org/eclipse/jface/preference/PreferenceLabelProvider," Provides labels for <code>IPreferenceNode</code> objects.\n \n @since 3.0\n"
1566,method,org/eclipse/jface/preference/PreferenceLabelProvider/PreferenceLabelProvider/,""
1567,class,org/eclipse/jface/preference/DirectoryFieldEditor," A field editor for a directory path type preference. A standard directory\n dialog appears when the user presses the change button.\n"
1568,method,org/eclipse/jface/preference/DirectoryFieldEditor/changePressed/,""
1569,method,org/eclipse/jface/preference/DirectoryFieldEditor/doCheckState/,""
1570,method,org/eclipse/jface/preference/DirectoryFieldEditor/DirectoryFieldEditor/," Creates a new directory field editor \n"
1571,method,org/eclipse/jface/preference/DirectoryFieldEditor/DirectoryFieldEditor/String;String;Composite," Creates a directory field editor.\n \n @param name the name of the preference this field editor works on\n @param labelText the label text of the field editor\n @param parent the parent of the field editor's control\n"
1572,class,org/eclipse/jface/preference/PreferenceManager," A preference manager maintains a hierarchy of preference nodes and\n associated preference pages.\n"
1573,method,org/eclipse/jface/preference/PreferenceManager/addTo/String;IPreferenceNode," Adds the given preference node as a subnode of the\n node at the given path.\n\n @param path the path\n @param node the node to add\n @return <code>true</code> if the add was successful,\n  and <code>false</code> if there is no contribution at\n  the given path\n"
1575,method,org/eclipse/jface/preference/PreferenceManager/buildSequence/IPreferenceNode;List;int," Recursively enumerates all nodes at or below the given node\n and adds them to the given list in the given order.\n \n @param node the starting node\n @param sequence a read-write list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n @param order the traversal order, one of \n	<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n"
1576,method,org/eclipse/jface/preference/PreferenceManager/find/String," Finds and returns the contribution node at the given path.\n\n @param path the path\n @return the node, or <code>null</code> if none\n"
1577,method,org/eclipse/jface/preference/PreferenceManager/find/String;IPreferenceNode," Finds and returns the preference node directly\n below the top at the given path.\n\n @param path the path\n @param top top at the given path\n @return the node, or <code>null</code> if none\n \n @since 3.1\n"
1578,method,org/eclipse/jface/preference/PreferenceManager/getElements/int," Returns all preference nodes managed by this\n manager.\n\n @param order the traversal order, one of \n	<code>PRE_ORDER</code> and <code>POST_ORDER</code>\n @return a list of preference nodes\n  (element type: <code>IPreferenceNode</code>)\n  in the given order\n"
1580,method,org/eclipse/jface/preference/PreferenceManager/getRootSubNodes/," Returns the root level nodes of this preference manager.\n \n @return an array containing the root nodes\n @since 3.2\n"
1581,method,org/eclipse/jface/preference/PreferenceManager/remove/String," Removes the preference node at the given path.\n \n @param path\n            the path\n @return the node that was removed, or <code>null</code> if there was no\n         node at the given path\n"
1582,method,org/eclipse/jface/preference/PreferenceManager/remove/IPreferenceNode," Removes the given prefreence node if it is managed by\n this contribution manager.\n\n @param node the node to remove\n @return <code>true</code> if the node was removed,\n  and <code>false</code> otherwise\n"
1583,method,org/eclipse/jface/preference/PreferenceManager/removeAll/," Removes all contribution nodes known to this manager.\n"
1584,method,org/eclipse/jface/preference/PreferenceManager/PreferenceManager/," Creates a new preference manager.\n"
1585,method,org/eclipse/jface/preference/PreferenceManager/PreferenceManager/char," Creates a new preference manager with the given\n path separator.\n \n @param separatorChar\n"
1586,method,org/eclipse/jface/preference/PreferenceManager/PreferenceManager/char;PreferenceNode," Creates a new preference manager with the given\n path separator and root node.\n\n @param separatorChar the separator character\n @param rootNode the root node. \n\n @since 3.4\n"
1587,field,org/eclipse/jface/preference/PreferenceManager/PRE_ORDER," Pre-order traversal means visit the root first,\n then the children.\n"
1588,field,org/eclipse/jface/preference/PreferenceManager/POST_ORDER," Post-order means visit the children, and then the root.\n"
1589,interface,org/eclipse/jface/wizard/IWizard," Interface for a wizard.  A wizard maintains a list of wizard pages,\n stacked on top of each other in card layout fashion.\n <p>\n The class <code>Wizard</code> provides an abstract implementation\n of this interface. However, clients are also free to implement this \n interface if <code>Wizard</code> does not suit their needs.\n </p>\n @see Wizard\n"
1591,method,org/eclipse/jface/wizard/IWizard/canFinish/," Returns whether this wizard could be finished without further user\n interaction.\n <p>\n The result of this method is typically used by the wizard container to enable\n or disable the Finish button.\n </p>\n\n @return <code>true</code> if the wizard could be finished,\n   and <code>false</code> otherwise\n"
1593,method,org/eclipse/jface/wizard/IWizard/dispose/," Disposes of this wizard and frees all SWT resources.\n"
1594,method,org/eclipse/jface/wizard/IWizard/getContainer/," Returns the container of this wizard.\n\n @return the wizard container, or <code>null</code> if this\n   wizard has yet to be added to a container\n"
1595,method,org/eclipse/jface/wizard/IWizard/getDefaultPageImage/," Returns the default page image for this wizard.\n <p>\n This image can be used for pages which do not\n supply their own image.\n </p>\n\n @return the default page image\n"
1598,method,org/eclipse/jface/wizard/IWizard/getPage/String," Returns the wizard page with the given name belonging to this wizard.\n\n @param pageName the name of the wizard page\n @return the wizard page with the given name, or <code>null</code> if none\n"
1599,method,org/eclipse/jface/wizard/IWizard/getPageCount/," Returns the number of pages in this wizard.\n\n @return the number of wizard pages\n"
1600,method,org/eclipse/jface/wizard/IWizard/getPages/," Returns all the pages in this wizard.\n\n @return a list of pages\n"
1602,method,org/eclipse/jface/wizard/IWizard/getStartingPage/," Returns the first page to be shown in this wizard.\n\n @return the first wizard page\n"
1603,method,org/eclipse/jface/wizard/IWizard/getTitleBarColor/," Returns the title bar color for this wizard.\n\n @return the title bar color\n"
1604,method,org/eclipse/jface/wizard/IWizard/getWindowTitle/," Returns the window title string for this wizard.\n\n @return the window title string, or <code>null</code> for no title\n"
1605,method,org/eclipse/jface/wizard/IWizard/isHelpAvailable/," Returns whether help is available for this wizard.\n <p>\n The result of this method is typically used by the container to\n show or hide the Help button.\n </p>\n\n @return <code>true</code> if help is available,\n   and <code>false</code> if this wizard is helpless\n"
1608,method,org/eclipse/jface/wizard/IWizard/performCancel/," Performs any actions appropriate in response to the user \n having pressed the Cancel button, or refuse if canceling\n now is not permitted.\n\n @return <code>true</code> to indicate the cancel request\n   was accepted, and <code>false</code> to indicate\n   that the cancel request was refused\n"
1610,method,org/eclipse/jface/wizard/IWizard/setContainer/IWizardContainer," Sets or clears the container of this wizard.\n\n @param wizardContainer the wizard container, or <code>null</code> \n"
1611,interface,org/eclipse/jface/wizard/IWizardContainer2," <p><code>IWizardContainer2</code> is a supplement to \n <code>IWizardContainer</code> that adds a method for updating the size of \n the wizard shell based on the contents of the current page.</p>\n \n <p>The class <code>WizardDialog</code> provides a fully functional \n implementation of this interface which will meet the needs of\n most clients. However, clients are also free to implement this \n interface if <code>WizardDialog</code> does not suit their needs.\n </p>\n \n @see org.eclipse.jface.wizard.IWizardContainer\n @since 3.0\n"
1614,method,org/eclipse/jface/wizard/IWizardContainer/getCurrentPage/," Returns the current wizard page for this container.\n\n @return the current wizard page, or <code>null</code> if the container\n   is not yet showing the wizard\n @see #showPage\n"
1615,method,org/eclipse/jface/wizard/IWizardContainer/getShell/," Returns the shell for this wizard container.\n\n @return the shell, or <code>null</code> if this wizard\n   container does not have a shell\n"
1622,method,org/eclipse/jface/wizard/WizardDialog/backPressed/," The Back button has been pressed.\n"
1623,method,org/eclipse/jface/wizard/WizardDialog/buttonPressed/int,""
1624,method,org/eclipse/jface/wizard/WizardDialog/cancelPressed/,""
1625,method,org/eclipse/jface/wizard/WizardDialog/close/,""
1626,method,org/eclipse/jface/wizard/WizardDialog/configureShell/Shell,""
1628,method,org/eclipse/jface/wizard/WizardDialog/setButtonLayoutData/Button,""
1629,method,org/eclipse/jface/wizard/WizardDialog/getButton/int," Return the cancel button if the id is a the cancel id.\n \n @param id\n            the button id\n @return the button corresponding to the button id\n"
1631,method,org/eclipse/jface/wizard/WizardDialog/createDialogArea/Composite,""
1632,method,org/eclipse/jface/wizard/WizardDialog/createProgressMonitorPart/Composite;GridLayout," Create the progress monitor part in the receiver.\n \n @param composite\n @param pmlayout\n @return ProgressMonitorPart\n"
1633,method,org/eclipse/jface/wizard/WizardDialog/finishPressed/," The Finish button has been pressed.\n"
1634,method,org/eclipse/jface/wizard/WizardDialog/getCurrentPage/,""
1635,method,org/eclipse/jface/wizard/WizardDialog/getProgressMonitor/," Returns the progress monitor for this wizard dialog (if it has one).\n \n @return the progress monitor, or <code>null</code> if this wizard\n         dialog does not have one\n"
1636,method,org/eclipse/jface/wizard/WizardDialog/getWizard/," Returns the wizard this dialog is currently displaying.\n \n @return the current wizard\n"
1637,method,org/eclipse/jface/wizard/WizardDialog/helpPressed/," The Help button has been pressed.\n"
1638,method,org/eclipse/jface/wizard/WizardDialog/nextPressed/," The Next button has been pressed.\n"
1640,method,org/eclipse/jface/wizard/WizardDialog/setMinimumPageSize/int;int," Sets the minimum page size used for the pages.\n \n @param minWidth\n            the minimum page width\n @param minHeight\n            the minimum page height\n @see #setMinimumPageSize(Point)\n"
1641,method,org/eclipse/jface/wizard/WizardDialog/setMinimumPageSize/Point," Sets the minimum page size used for the pages.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setMinimumPageSize(int,int)\n"
1642,method,org/eclipse/jface/wizard/WizardDialog/setPageSize/int;int," Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param width\n            the page width\n @param height\n            the page height\n @see #setPageSize(Point)\n"
1643,method,org/eclipse/jface/wizard/WizardDialog/setPageSize/Point," Sets the size of all pages. The given size takes precedence over computed\n sizes.\n \n @param size\n            the page size encoded as <code>new Point(width,height)</code>\n @see #setPageSize(int,int)\n"
1644,method,org/eclipse/jface/wizard/WizardDialog/setWizard/IWizard," Sets the wizard this dialog is currently displaying.\n \n @param newWizard\n            the wizard\n"
1645,method,org/eclipse/jface/wizard/WizardDialog/showPage/IWizardPage,""
1646,method,org/eclipse/jface/wizard/WizardDialog/update/," Updates this dialog's controls to reflect the current page.\n"
1647,method,org/eclipse/jface/wizard/WizardDialog/updateButtons/,""
1648,method,org/eclipse/jface/wizard/WizardDialog/updateMessage/,""
1649,method,org/eclipse/jface/wizard/WizardDialog/updateSize/IWizardPage," Computes the correct dialog size for the current page and resizes its\n shell if nessessary. Also causes the container to refresh its layout.\n \n @param page\n            the wizard page to use to resize the dialog\n @since 2.0\n"
1650,method,org/eclipse/jface/wizard/WizardDialog/updateSize/,""
1651,method,org/eclipse/jface/wizard/WizardDialog/updateTitleBar/,""
1652,method,org/eclipse/jface/wizard/WizardDialog/updateWindowTitle/,""
1653,method,org/eclipse/jface/wizard/WizardDialog/getSelectedPage/,""
1654,method,org/eclipse/jface/wizard/WizardDialog/addPageChangedListener/IPageChangedListener,""
1655,method,org/eclipse/jface/wizard/WizardDialog/removePageChangedListener/IPageChangedListener,""
1657,method,org/eclipse/jface/wizard/WizardDialog/addPageChangingListener/IPageChangingListener," Adds a listener for page changes to the list of page changing listeners\n registered for this dialog. Has no effect if an identical listener is\n already registered.\n \n @param listener\n            a page changing listener\n @since 3.3\n"
1658,method,org/eclipse/jface/wizard/WizardDialog/removePageChangingListener/IPageChangingListener," Removes the provided page changing listener from the list of page\n changing listeners registered for the dialog.\n \n @param listener\n            a page changing listener\n @since 3.3\n"
1660,method,org/eclipse/jface/wizard/WizardDialog/WizardDialog/Shell;IWizard," Creates a new wizard dialog for the given wizard.\n \n @param parentShell\n            the parent shell\n @param newWizard\n            the wizard this dialog is working on\n"
1663,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/computeSize/Composite;int;int;boolean,""
1664,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/getClientArea/Composite," Returns the client area for the given composite according to this\n layout.\n \n @param c\n            the composite\n @return the client area rectangle\n"
1665,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/layout/Composite;boolean,""
1666,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/layoutPage/Control," Lays outs the page according to this layout.\n \n @param w\n            the control\n"
1667,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/setPageLocation/Control," Sets the location of the page so that its origin is in the upper left\n corner.\n \n @param w\n            the control\n"
1668,method,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/WizardDialog/PageContainerFillLayout/int;int;int;int," Creates new layout object.\n \n @param mw\n            the margin width\n @param mh\n            the margin height\n @param minW\n            the minimum width\n @param minH\n            the minimum height\n"
1669,field,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/marginWidth," The margin width; <code>5</code> pixels by default.\n"
1670,field,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/marginHeight," The margin height; <code>5</code> pixels by default.\n"
1671,field,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/minimumWidth," The minimum width; <code>0</code> pixels by default.\n"
1672,field,org/eclipse/jface/wizard/WizardDialog/PageContainerFillLayout/minimumHeight," The minimum height; <code>0</code> pixels by default.\n"
1677,method,org/eclipse/jface/wizard/IWizardNode/isContentCreated/," Returns whether a wizard has been created for this node.\n\n @return <code>true</code> if a wizard has been created,\n   and <code>false</code> otherwise\n"
1679,method,org/eclipse/jface/wizard/WizardSelectionPage/canFlipToNextPage/," The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns <code>true</code>\n if there is a selected node.\n"
1681,method,org/eclipse/jface/wizard/WizardSelectionPage/getNextPage/," The <code>WizardSelectionPage</code> implementation of \n this <code>IWizardPage</code> method returns the first page \n of the currently selected wizard if there is one.\n"
1682,method,org/eclipse/jface/wizard/WizardSelectionPage/getSelectedNode/," Returns the currently selected wizard node within this page.\n \n @return the wizard node, or <code>null</code> if no node is selected\n"
1683,method,org/eclipse/jface/wizard/WizardSelectionPage/setSelectedNode/IWizardNode," Sets or clears the currently selected wizard node within this page. \n \n @param node the wizard node, or <code>null</code> to clear\n"
1684,method,org/eclipse/jface/wizard/WizardSelectionPage/WizardSelectionPage/String," Creates a new wizard selection page with the given name, and\n with no title or image.\n\n @param pageName the name of the page\n"
1686,method,org/eclipse/jface/wizard/ProgressMonitorPart/attachToCancelComponent/Control," Attaches the progress monitor part to the given cancel\n component.\n @param cancelComponent the control whose selection will\n trigger a cancel\n"
1687,method,org/eclipse/jface/wizard/ProgressMonitorPart/beginTask/String;int," Implements <code>IProgressMonitor.beginTask</code>.\n @see IProgressMonitor#beginTask(java.lang.String, int)\n"
1688,method,org/eclipse/jface/wizard/ProgressMonitorPart/done/," Implements <code>IProgressMonitor.done</code>.\n @see IProgressMonitor#done()\n"
1689,method,org/eclipse/jface/wizard/ProgressMonitorPart/escapeMetaCharacters/String," Escapes any occurrence of '&' in the given String so that\n it is not considered as a mnemonic\n character in SWT ToolItems, MenuItems, Button and Labels.\n @param in the original String\n @return The converted String\n"
1690,method,org/eclipse/jface/wizard/ProgressMonitorPart/initialize/Layout;int," Creates the progress monitor's UI parts and layouts them\n according to the given layout. If the layout is <code>null</code>\n the part's default layout is used.\n @param layout The layout for the receiver.\n @param progressIndicatorHeight The suggested height of the indicator\n"
1691,method,org/eclipse/jface/wizard/ProgressMonitorPart/internalWorked/double," Implements <code>IProgressMonitor.internalWorked</code>.\n @see IProgressMonitor#internalWorked(double)\n"
1692,method,org/eclipse/jface/wizard/ProgressMonitorPart/isCanceled/," Implements <code>IProgressMonitor.isCanceled</code>.\n @see IProgressMonitor#isCanceled()\n"
1693,method,org/eclipse/jface/wizard/ProgressMonitorPart/removeFromCancelComponent/Control," Detach the progress monitor part from the given cancel\n component\n @param cc\n"
1694,method,org/eclipse/jface/wizard/ProgressMonitorPart/setCanceled/boolean," Implements <code>IProgressMonitor.setCanceled</code>.\n @see IProgressMonitor#setCanceled(boolean)\n"
1695,method,org/eclipse/jface/wizard/ProgressMonitorPart/setFont/Font," Sets the progress monitor part's font.\n"
1696,method,org/eclipse/jface/wizard/ProgressMonitorPart/setTaskName/String,""
1697,method,org/eclipse/jface/wizard/ProgressMonitorPart/subTask/String,""
1698,method,org/eclipse/jface/wizard/ProgressMonitorPart/updateLabel/," Updates the label with the current task and subtask names.\n"
1699,method,org/eclipse/jface/wizard/ProgressMonitorPart/worked/int," Implements <code>IProgressMonitor.worked</code>.\n @see IProgressMonitor#worked(int)\n"
1700,method,org/eclipse/jface/wizard/ProgressMonitorPart/clearBlocked/,""
1701,method,org/eclipse/jface/wizard/ProgressMonitorPart/setBlocked/IStatus,""
1702,method,org/eclipse/jface/wizard/ProgressMonitorPart/ProgressMonitorPart/Composite;Layout," Creates a ProgressMonitorPart.\n @param parent The SWT parent of the part.\n @param layout The SWT grid bag layout used by the part. A client\n can supply the layout to control how the progress monitor part\n is layed out. If null is passed the part uses its default layout.\n"
1703,method,org/eclipse/jface/wizard/ProgressMonitorPart/ProgressMonitorPart/Composite;Layout;int," Creates a ProgressMonitorPart.\n @param parent The SWT parent of the part.\n @param layout The SWT grid bag layout used by the part. A client\n can supply the layout to control how the progress monitor part\n is layed out. If null is passed the part uses its default layout.\n @param progressIndicatorHeight The height of the progress indicator in pixel.\n"
1704,field,org/eclipse/jface/wizard/ProgressMonitorPart/fLabel,"the label "
1705,field,org/eclipse/jface/wizard/ProgressMonitorPart/fTaskName,"the current task name "
1706,field,org/eclipse/jface/wizard/ProgressMonitorPart/fSubTaskName,"the current sub task name "
1707,field,org/eclipse/jface/wizard/ProgressMonitorPart/fProgressIndicator,"the progress indicator "
1708,field,org/eclipse/jface/wizard/ProgressMonitorPart/fCancelComponent,"the cancel component "
1709,field,org/eclipse/jface/wizard/ProgressMonitorPart/fIsCanceled,"true if canceled "
1710,field,org/eclipse/jface/wizard/ProgressMonitorPart/blockedStatus,"current blocked status "
1711,field,org/eclipse/jface/wizard/ProgressMonitorPart/fCancelListener,"the cancel lister attached to the cancel component "
1712,interface,org/eclipse/jface/wizard/IWizardPage," Interface for a wizard page.\n <p>\n The class <code>WizardPage</code> provides an abstract implementation\n of this interface. However, clients are also free to implement this \n interface if <code>WizardPage</code> does not suit their needs.\n </p>\n"
1713,method,org/eclipse/jface/wizard/IWizardPage/canFlipToNextPage/," Returns whether the next page could be displayed.\n\n @return <code>true</code> if the next page could be displayed,\n   and <code>false</code> otherwise\n"
1714,method,org/eclipse/jface/wizard/IWizardPage/getName/," Returns this page's name.\n\n @return the name of this page\n"
1715,method,org/eclipse/jface/wizard/IWizardPage/getNextPage/," Returns the wizard page that would to be shown if the user was to\n press the Next button.\n\n @return the next wizard page, or <code>null</code> if none\n"
1716,method,org/eclipse/jface/wizard/IWizardPage/getPreviousPage/," Returns the wizard page that would to be shown if the user was to\n press the Back button.\n\n @return the previous wizard page, or <code>null</code> if none\n"
1717,method,org/eclipse/jface/wizard/IWizardPage/getWizard/," Returns the wizard that hosts this wizard page.\n\n @return the wizard, or <code>null</code> if this page has not been\n   added to any wizard\n @see #setWizard\n"
1718,method,org/eclipse/jface/wizard/IWizardPage/isPageComplete/," Returns whether this page is complete or not.\n <p>\n This information is typically used by the wizard to decide\n when it is okay to finish.\n </p>\n\n @return <code>true</code> if this page is complete, and\n  <code>false</code> otherwise\n"
1722,method,org/eclipse/jface/wizard/Wizard/addPage/IWizardPage," Adds a new page to this wizard. The page is inserted at the end of the\n page list.\n \n @param page\n            the new page\n"
1724,method,org/eclipse/jface/wizard/Wizard/canFinish/,""
1727,method,org/eclipse/jface/wizard/Wizard/getContainer/,""
1728,method,org/eclipse/jface/wizard/Wizard/getDefaultPageImage/,""
1729,method,org/eclipse/jface/wizard/Wizard/getDialogSettings/,""
1730,method,org/eclipse/jface/wizard/Wizard/getNextPage/IWizardPage,""
1731,method,org/eclipse/jface/wizard/Wizard/getPage/String,""
1732,method,org/eclipse/jface/wizard/Wizard/getPageCount/,""
1733,method,org/eclipse/jface/wizard/Wizard/getPages/,""
1734,method,org/eclipse/jface/wizard/Wizard/getPreviousPage/IWizardPage,""
1735,method,org/eclipse/jface/wizard/Wizard/getShell/," Returns the wizard's shell if the wizard is visible. Otherwise\n <code>null</code> is returned.\n \n @return Shell\n"
1736,method,org/eclipse/jface/wizard/Wizard/getStartingPage/,""
1737,method,org/eclipse/jface/wizard/Wizard/getTitleBarColor/,""
1738,method,org/eclipse/jface/wizard/Wizard/getWindowTitle/,""
1739,method,org/eclipse/jface/wizard/Wizard/isHelpAvailable/,""
1740,method,org/eclipse/jface/wizard/Wizard/needsPreviousAndNextButtons/,""
1741,method,org/eclipse/jface/wizard/Wizard/needsProgressMonitor/,""
1744,method,org/eclipse/jface/wizard/Wizard/setContainer/IWizardContainer,""
1748,method,org/eclipse/jface/wizard/Wizard/setHelpAvailable/boolean," Sets whether help is available for this wizard.\n <p>\n The result of this method is typically used by the container to show or\n hide the Help button.\n </p>\n \n @param b\n            <code>true</code> if help is available, and\n            <code>false</code> if this wizard is helpless\n @see #isHelpAvailable()\n"
1750,method,org/eclipse/jface/wizard/Wizard/setTitleBarColor/RGB," Sets the title bar color for this wizard.\n \n @param color\n            the title bar color\n"
1751,method,org/eclipse/jface/wizard/Wizard/setWindowTitle/String," Sets the window title for the container that hosts this page to the given\n string.\n \n @param newTitle\n            the window title for the container\n"
1752,method,org/eclipse/jface/wizard/Wizard/Wizard/," Creates a new empty wizard.\n"
1753,field,org/eclipse/jface/wizard/Wizard/DEFAULT_IMAGE," Image registry key of the default image for wizard pages (value\n <code>"org.eclipse.jface.wizard.Wizard.pageImage"</code>).\n"
1756,method,org/eclipse/jface/wizard/WizardPage/getContainer/," Returns the wizard container for this wizard page.\n\n @return the wizard container, or <code>null</code> if this\n   wizard page has yet to be added to a wizard, or the\n   wizard has yet to be added to a container\n"
1757,method,org/eclipse/jface/wizard/WizardPage/getDialogSettings/," Returns the dialog settings for this wizard page.\n\n @return the dialog settings, or <code>null</code> if none\n"
1758,method,org/eclipse/jface/wizard/WizardPage/getImage/,""
1759,method,org/eclipse/jface/wizard/WizardPage/getName/,""
1760,method,org/eclipse/jface/wizard/WizardPage/getNextPage/,""
1761,method,org/eclipse/jface/wizard/WizardPage/getPreviousPage/,""
1763,method,org/eclipse/jface/wizard/WizardPage/getWizard/,""
1764,method,org/eclipse/jface/wizard/WizardPage/isCurrentPage/," Returns whether this page is the current one in the wizard's container.\n\n @return <code>true</code> if the page is active,\n  and <code>false</code> otherwise\n"
1767,method,org/eclipse/jface/wizard/WizardPage/setErrorMessage/String," The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n"
1768,method,org/eclipse/jface/wizard/WizardPage/setImageDescriptor/ImageDescriptor," The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this page is the current page.\n"
1769,method,org/eclipse/jface/wizard/WizardPage/setMessage/String;int," The <code>WizardPage</code> implementation of this method \n declared on <code>DialogPage</code> updates the container\n if this is the current page.\n"
1770,method,org/eclipse/jface/wizard/WizardPage/setPageComplete/boolean," Sets whether this page is complete. \n <p>\n This information is typically used by the wizard to decide\n when it is okay to move on to the next page or finish up.\n </p>\n\n @param complete <code>true</code> if this page is complete, and\n   and <code>false</code> otherwise\n @see #isPageComplete()\n"
1771,method,org/eclipse/jface/wizard/WizardPage/setPreviousPage/IWizardPage,""
1773,method,org/eclipse/jface/wizard/WizardPage/setWizard/IWizard,""
1775,method,org/eclipse/jface/wizard/WizardPage/WizardPage/String," Creates a new wizard page with the given name, and\n with no title or image.\n\n @param pageName the name of the page\n"
1776,method,org/eclipse/jface/wizard/WizardPage/WizardPage/String;String;ImageDescriptor," Creates a new wizard page with the given name, title, and image.\n\n @param pageName the name of the page\n @param title the title for this wizard page,\n   or <code>null</code> if none\n @param titleImage the image descriptor for the title of this wizard page,\n   or <code>null</code> if none\n"
1777,class,org/eclipse/jface/internal/text/SelectionProcessor," Processes {@link ITextSelection}s.\n \n @since 3.5\n"
1778,method,org/eclipse/jface/internal/text/SelectionProcessor/delete/ISelection," Returns a text edit describing the text modification that would be executed if the delete key\n was pressed on the given selection.\n \n @param selection the selection to delete\n @return a text edit describing the operation needed to delete <code>selection</code>\n @throws BadLocationException if computing the edit failed\n"
1779,method,org/eclipse/jface/internal/text/SelectionProcessor/backspace/ISelection," Returns a text edit describing the text modification that would be executed if the backspace\n key was pressed on the given selection.\n \n @param selection the selection to delete\n @return a text edit describing the operation needed to delete <code>selection</code>\n @throws BadLocationException if computing the edit failed\n"
1780,method,org/eclipse/jface/internal/text/SelectionProcessor/replace/ISelection;String," Returns a text edit describing the text modification that would be executed if the given\n selection was replaced by <code>replacement</code>.\n \n @param selection the selection to replace\n @param replacement the replacement text\n @return a text edit describing the operation needed to replace <code>selection</code>\n @throws BadLocationException if computing the edit failed\n"
1781,method,org/eclipse/jface/internal/text/SelectionProcessor/getText/ISelection," Returns the text covered by <code>selection</code>\n \n @param selection the selection\n @return the text covered by <code>selection</code>\n @throws BadLocationException if computing the edit failed\n"
1784,method,org/eclipse/jface/internal/text/SelectionProcessor/makeEmpty/ISelection;boolean," Returns a selection similar to <code>selection</code> but {@linkplain #isEmpty(ISelection)\n empty}. Typically, the selection is reduced to its extreme offsets.\n \n @param selection the selection\n @param beginning <code>true</code> to collapse the selection to its smallest position (i.e.\n            its left-most offset), <code>false</code> to collapse it to its greatest position\n            (e.g its right-most offset)\n @return an empty variant of <code>selection</code>\n @throws BadLocationException if accessing the document failed\n"
1785,method,org/eclipse/jface/internal/text/SelectionProcessor/doDelete/ISelection," Convenience method that applies the edit returned from {@link #delete(ISelection)} to the\n underlying document.\n \n @param selection the selection to delete\n @throws BadLocationException if accessing the document failed\n"
1786,method,org/eclipse/jface/internal/text/SelectionProcessor/doReplace/ISelection;String," Convenience method that applies the edit returned from {@link #replace(ISelection, String)}\n to the underlying document and adapts the selection accordingly.\n \n @param selection the selection to replace\n @param replacement the replacement text\n @throws BadLocationException if accessing the document failed\n"
1787,method,org/eclipse/jface/internal/text/SelectionProcessor/getRanges/ISelection," Returns the text regions covered by the given selection.\n \n @param selection the selection\n @return the text regions corresponding to <code>selection</code>\n @throws BadLocationException if accessing the document failed\n"
1789,method,org/eclipse/jface/internal/text/SelectionProcessor/SelectionProcessor/ITextViewer," Creates a new processor on the given viewer.\n \n @param viewer the viewer\n"
1791,class,org/eclipse/jface/internal/text/ResizableShellSupport," Workaround for https://bugs.eclipse.org/bugs/show_bug.cgi?id=23980 : Shells without borders are\n not resizable on GTK.\n \n @since 3.6\n"
1793,method,org/eclipse/jface/internal/text/ResizableShellSupport/ResizableShellSupport/,""
1795,method,org/eclipse/jface/internal/text/NonDeletingPositionUpdater/update/DocumentEvent,""
1796,method,org/eclipse/jface/internal/text/NonDeletingPositionUpdater/getCategory/," Returns the position category.\n\n @return the position category\n"
1797,method,org/eclipse/jface/internal/text/NonDeletingPositionUpdater/NonDeletingPositionUpdater/String," Creates a new updater for the given <code>category</code>.\n\n @param category the new category.\n"
1798,class,org/eclipse/jface/internal/text/TableOwnerDrawSupport," Adds owner draw support for tables.\n\n @since 3.4\n"
1799,method,org/eclipse/jface/internal/text/TableOwnerDrawSupport/install/Table,""
1800,method,org/eclipse/jface/internal/text/TableOwnerDrawSupport/storeStyleRanges/TableItem;int;StyleRange[]," Stores the styled ranges in the given table item.\n\n @param item table item\n @param column the column index\n @param ranges the styled ranges or <code>null</code> to remove them\n"
1801,method,org/eclipse/jface/internal/text/TableOwnerDrawSupport/handleEvent/Event,""
1802,class,org/eclipse/jface/internal/text/DelayedInputChangeListener," A delayed input change listener that forwards delayed input changes to an information control replacer.\n\n @since 3.4\n"
1803,method,org/eclipse/jface/internal/text/DelayedInputChangeListener/inputChanged/Object,""
1807,method,org/eclipse/jface/internal/text/InformationControlReplacer/computeInformation/,""
1808,method,org/eclipse/jface/internal/text/InformationControlReplacer/showInformationControl/Rectangle;Object," Opens the information control with the given information and the specified\n subject area. It also activates the information control closer.\n\n @param subjectArea the information area\n @param information the information\n"
1809,method,org/eclipse/jface/internal/text/InformationControlReplacer/hideInformationControl/,""
1810,method,org/eclipse/jface/internal/text/InformationControlReplacer/setDelayedInput/Object," @param input the delayed input, or <code>null</code> to request cancellation\n"
1811,method,org/eclipse/jface/internal/text/InformationControlReplacer/isReplacing/," Tells whether the replacer is currently replacing another information control.\n\n @return <code>true</code> while code from {@link #replaceInformationControl(IInformationControlCreator, Rectangle, Object, Rectangle, boolean)} is run\n"
1812,method,org/eclipse/jface/internal/text/InformationControlReplacer/getCurrentInformationControl2/," @return the current information control, or <code>null</code> if none available\n"
1813,method,org/eclipse/jface/internal/text/InformationControlReplacer/getKeepUpMargin/," The number of pixels to blow up the keep-up zone.\n\n @return the margin in pixels\n"
1814,method,org/eclipse/jface/internal/text/InformationControlReplacer/InformationControlReplacer/IInformationControlCreator," Creates a new information control replacer.\n\n @param creator the default information control creator\n"
1815,class,org/eclipse/jface/internal/text/InformationControlReplacer/DefaultInformationControlCreator," Default control creator.\n"
1816,method,org/eclipse/jface/internal/text/InformationControlReplacer/DefaultInformationControlCreator/doCreateInformationControl/Shell,""
1817,method,org/eclipse/jface/internal/text/InformationControlReplacer/DefaultInformationControlCreator/InformationControlReplacer/DefaultInformationControlCreator/,""
1819,method,org/eclipse/jface/internal/text/StickyHoverManager/showInformationControl/Rectangle,""
1820,method,org/eclipse/jface/internal/text/StickyHoverManager/hideInformationControl/,""
1821,method,org/eclipse/jface/internal/text/StickyHoverManager/handleInformationControlDisposed/,""
1822,method,org/eclipse/jface/internal/text/StickyHoverManager/requestWidgetToken/IWidgetTokenOwner,""
1823,method,org/eclipse/jface/internal/text/StickyHoverManager/requestWidgetToken/IWidgetTokenOwner;int,""
1824,method,org/eclipse/jface/internal/text/StickyHoverManager/setFocus/IWidgetTokenOwner,""
1825,method,org/eclipse/jface/internal/text/StickyHoverManager/StickyHoverManager/TextViewer," Creates a new sticky hover manager.\n\n @param textViewer the text viewer\n"
1827,method,org/eclipse/jface/internal/text/InternalAccessor/getCurrentInformationControl/," Returns the current information control, or <code>null</code> if none.\n\n @return the current information control, or <code>null</code> if none\n"
1829,method,org/eclipse/jface/internal/text/InternalAccessor/getInformationControlReplacer/," Returns the current information control replacer or <code>null</code> if none has been installed.\n\n @return the current information control replacer or <code>null</code> if none has been installed\n"
1830,method,org/eclipse/jface/internal/text/InternalAccessor/canReplace/IInformationControl," Tests whether the given information control is replaceable.\n\n @param iControl information control or <code>null</code> if none\n @return <code>true</code> if information control is replaceable, <code>false</code> otherwise\n"
1831,method,org/eclipse/jface/internal/text/InternalAccessor/isReplaceInProgress/," Tells whether this manager's information control is currently being replaced.\n\n @return <code>true</code> if a replace is in progress\n"
1832,method,org/eclipse/jface/internal/text/InternalAccessor/cropToClosestMonitor/Rectangle," Crops the given bounds such that they lie completely on the closest monitor.\n\n @param bounds shell bounds to crop\n"
1834,method,org/eclipse/jface/internal/text/InternalAccessor/getAllowMouseExit/," Indicates whether the mouse cursor is allowed to leave the subject area without closing the hover.\n\n @return whether the mouse cursor is allowed to leave the subject area without closing the hover\n"
1836,method,org/eclipse/jface/internal/text/InternalAccessor/InternalAccessor/,""
1838,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/getRevision/," Returns the revision that this region belongs to.\n\n @return the revision that this region belongs to\n"
1840,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/getAdjustedRanges/," Returns the list of {@link ILineRange}s of this change region for which the revision\n information is still valid.\n\n @return the list of adjusted line ranges\n"
1841,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/getAdjustedCoverage/," Returns the line coverage of the adjusted ranges, an empty range if the coverage is empty.\n\n @return the line coverage of the adjusted ranges\n"
1842,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/clearDiff/," Clears any adjusted ranges, restoring the original range.\n"
1843,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/adjustTo/Hunk," Adjusts this change region to a diff hunk. This will change the adjusted ranges.\n\n @param hunk the diff hunk to adjust to\n"
1844,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/toString/,""
1845,method,org/eclipse/jface/internal/text/revisions/ChangeRegion/ChangeRegion/Revision;ILineRange," Creates a new change region for the given revision and line range.\n\n @param revision the revision of the new region\n @param lines the line range of the new region\n @throws IndexOutOfBoundsException if the line range is not well-formed\n"
1847,method,org/eclipse/jface/internal/text/revisions/RevisionSelectionProvider/addSelectionChangedListener/ISelectionChangedListener,""
1848,method,org/eclipse/jface/internal/text/revisions/RevisionSelectionProvider/removeSelectionChangedListener/ISelectionChangedListener,""
1849,method,org/eclipse/jface/internal/text/revisions/RevisionSelectionProvider/getSelection/,""
1850,method,org/eclipse/jface/internal/text/revisions/RevisionSelectionProvider/setSelection/ISelection,""
1851,class,org/eclipse/jface/internal/text/revisions/HunkComputer," Computes the diff hunks from an {@link ILineDiffer}.\n\n @since 3.3\n"
1852,method,org/eclipse/jface/internal/text/revisions/HunkComputer/computeHunks/ILineDiffer;int," Converts the line-based information of {@link ILineDiffer} into {@link Hunk}s, grouping\n contiguous blocks of lines that are changed (added, deleted).\n\n @param differ the line differ to query\n @param lines the number of lines to query\n @return the corresponding {@link Hunk} information\n"
1853,class,org/eclipse/jface/internal/text/revisions/LineIndexOutOfBoundsException," Thrown to indicate that an attempt to create or modify a {@link Range} failed because it would\n have resulted in an illegal range. A range is illegal if its length is &lt;= 0 or if its start\n line is &lt; 0.\n\n @since 3.2\n"
1854,method,org/eclipse/jface/internal/text/revisions/LineIndexOutOfBoundsException/LineIndexOutOfBoundsException/," Constructs an <code>LineIndexOutOfBoundsException</code> with no detail message.\n"
1855,method,org/eclipse/jface/internal/text/revisions/LineIndexOutOfBoundsException/LineIndexOutOfBoundsException/String," Constructs an <code>LineIndexOutOfBoundsException</code> with the specified detail message.\n\n @param s the detail message.\n"
1856,method,org/eclipse/jface/internal/text/revisions/LineIndexOutOfBoundsException/LineIndexOutOfBoundsException/int," Constructs a new <code>LineIndexOutOfBoundsException</code>\n object with an argument indicating the illegal index.\n\n @param index the illegal index.\n"
1857,class,org/eclipse/jface/internal/text/revisions/RevisionPainter," A strategy for painting the live annotate colors onto the vertical ruler column. It also manages\n the revision hover.\n\n @since 3.2\n"
1858,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/setRevisionInformation/RevisionInformation," Sets the revision information to be drawn and triggers a redraw.\n\n @param info the revision information to show, <code>null</code> to draw none\n"
1859,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/setRenderingMode/RenderingMode," Changes the rendering mode and triggers redrawing if needed.\n\n @param renderingMode the rendering mode\n @since 3.3\n"
1860,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/setBackground/Color," Sets the background color.\n\n @param background the background color, <code>null</code> for the platform's list\n        background\n"
1863,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/setModel/IAnnotationModel," Sets the annotation model.\n\n @param model the annotation model, possibly <code>null</code>\n @see IVerticalRulerColumn#setModel(IAnnotationModel)\n"
1864,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/getHover/," Returns the revision hover.\n\n @return the revision hover\n"
1865,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/getRevisionSelectionProvider/," Returns the selection provider.\n\n @return the selection provider\n"
1866,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/setHover/IAnnotationHover," Sets the hover later returned by {@link #getHover()}.\n\n @param hover the hover\n"
1867,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/hasHover/int," Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n @param activeLine the document line of interest\n @return <code>true</code> if the receiver can provide a hover\n"
1868,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/hasInformation/," Returns <code>true</code> if a revision model has been set, <code>false</code> otherwise.\n\n @return <code>true</code> if a revision model has been set, <code>false</code> otherwise\n"
1870,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/showRevisionId/boolean," Enables showing the revision id.\n\n @param show <code>true</code> to show the revision, <code>false</code> to hide it\n"
1871,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/showRevisionAuthor/boolean," Enables showing the revision author.\n\n @param show <code>true</code> to show the author, <code>false</code> to hide it\n"
1872,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/addRevisionListener/IRevisionListener," Adds a revision listener.\n\n @param listener the listener\n @since 3.3\n"
1873,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/removeRevisionListener/IRevisionListener," Removes a revision listener.\n\n @param listener the listener\n @since 3.3\n"
1874,method,org/eclipse/jface/internal/text/revisions/RevisionPainter/RevisionPainter/IVerticalRulerColumn;ISharedTextColors," Creates a new revision painter for a vertical ruler column.\n\n @param column the column that will delegate{@link #paint(GC, ILineRange) painting} to the\n        newly created painter.\n @param sharedColors a shared colors object to store shaded colors in\n"
1875,class,org/eclipse/jface/internal/text/revisions/Range," A variable {@link org.eclipse.jface.text.source.ILineRange} with the following invariant:\n <ul>\n <li>{@link #start() start} &gt;= 0\n <li>{@link #length() length} &gt; 0, i.e. a range cannot be empty\n </ul>\n <p>\n Attempts to create or modify a <code>Range</code> such that this invariant would be violated\n result in a {@link LineIndexOutOfBoundsException} being\n thrown.\n </p>\n\n @since 3.2\n"
1876,method,org/eclipse/jface/internal/text/revisions/Range/copy/ILineRange," Creates a new range with the same start and length as the passed line range.\n\n @param range the range to copy\n @return a <code>Range</code> with the same start and length as <code>range</code>\n @throws LineIndexOutOfBoundsException if the passed {@link ILineRange} does not adhere to the\n         contract of {@link Range}\n"
1877,method,org/eclipse/jface/internal/text/revisions/Range/copy/Range," Creates a new range equal to the passed line range.\n\n @param range the range to copy\n @return a <code>Range</code> equal to <code>range</code>\n"
1880,method,org/eclipse/jface/internal/text/revisions/Range/getStartLine/,""
1881,method,org/eclipse/jface/internal/text/revisions/Range/getNumberOfLines/,""
1882,method,org/eclipse/jface/internal/text/revisions/Range/start/," Returns the first line contained in this range. Short equivalent of {@link #getStartLine()}.\n\n @return the first line contained in this range\n"
1883,method,org/eclipse/jface/internal/text/revisions/Range/length/," Returns the number of lines contained in this range. Short equivalent of {@link #getNumberOfLines()}.\n\n @return the number of lines contained in this range\n"
1886,method,org/eclipse/jface/internal/text/revisions/Range/moveEndTo/int," Moves this range such that the {@link #end()} is at <code>end</code>, keeping\n {@link #length()} constant.\n\n @param end the new end\n @throws LineIndexOutOfBoundsException if <code>end</code> &lt;= {@link #start()}\n"
1892,method,org/eclipse/jface/internal/text/revisions/Range/resizeBy/int," Resizes the range by <code>delta</code> lines, keeping {@link #start()} constant.\n\n @param delta the number of lines to resize the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {@link #length()}\n"
1893,method,org/eclipse/jface/internal/text/revisions/Range/resizeAndMoveBy/int," Resizes the range by <code>delta</code> lines by moving the start offset, {@link #end()} remains unchanged.\n\n @param delta the number of lines to resize the range\n @throws LineIndexOutOfBoundsException if <code>-delta</code> &gt;= {@link #length()}\n"
1895,method,org/eclipse/jface/internal/text/revisions/Range/equalRange/ILineRange," Returns <code>true</code> if the passed range has the same offset and length as the receiver.\n\n @param range another line range to compare the receiver to\n @return <code>true</code> if <code>range</code> has the same offset and length as the receiver\n"
1896,method,org/eclipse/jface/internal/text/revisions/Range/clone/,""
1897,class,org/eclipse/jface/internal/text/revisions/Colors," Utility for color operations.\n\n @since 3.3\n"
1904,class,org/eclipse/jface/internal/text/revisions/Hunk," A hunk describes a contiguous range of changed, added or deleted lines. <code>Hunk</code>s are separated by\n one or more unchanged lines.\n\n @since 3.3\n"
1905,method,org/eclipse/jface/internal/text/revisions/Hunk/toString/,""
1906,method,org/eclipse/jface/internal/text/revisions/Hunk/hashCode/,""
1907,method,org/eclipse/jface/internal/text/revisions/Hunk/equals/Object,""
1910,field,org/eclipse/jface/internal/text/revisions/Hunk/delta," The difference in lines compared to the corresponding line range in the original. Positive\n for added lines, negative for deleted lines.\n"
1912,class,org/eclipse/jface/internal/text/link/contentassist/LineBreakingReader,""
1913,method,org/eclipse/jface/internal/text/link/contentassist/LineBreakingReader/isFormattedLine/,""
1915,method,org/eclipse/jface/internal/text/link/contentassist/LineBreakingReader/LineBreakingReader/Reader;GC;int," Creates a reader that breaks an input text to fit in a given width.\n\n @param reader Reader of the input text\n @param gc The graphic context that defines the currently used font sizes\n @param maxLineWidth The max width (pixels) where the text has to fit in\n"
1916,interface,org/eclipse/jface/internal/text/link/contentassist/IProposalListener,"\n"
1917,method,org/eclipse/jface/internal/text/link/contentassist/IProposalListener/proposalChosen/ICompletionProposal," @param proposal the completion proposal\n"
1918,class,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2," A custom implementation of the <code>IContentAssistant</code> interface.\n This implementation is used by the linked mode UI. This is internal and subject\n to change without notice.\n"
1919,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setDocumentPartitioning/String," Sets the document partitioning this content assistant is using.\n\n @param partitioning the document partitioning for this content assistant\n"
1920,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/getDocumentPartitioning/,""
1921,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setContentAssistProcessor/IContentAssistProcessor;String," Registers a given content assist processor for a particular content type.\n If there is already a processor registered for this type, the new processor\n is registered instead of the old one.\n\n @param processor the content assist processor to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n"
1922,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/getContentAssistProcessor/String,""
1923,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/enableAutoActivation/boolean," Enables the content assistant's auto activation mode.\n\n @param enabled indicates whether auto activation is enabled or not\n"
1928,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setContextInformationPopupBackground/Color," Sets the context information popup's background color.\n\n @param background the background color\n"
1929,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setContextInformationPopupForeground/Color," Sets the context information popup's foreground color.\n\n @param foreground the foreground color\n @since 2.0\n"
1930,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setContextSelectorBackground/Color," Sets the context selector's background color.\n\n @param background the background color\n @since 2.0\n"
1931,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setContextSelectorForeground/Color," Sets the context selector's foreground color.\n\n @param foreground the foreground color\n @since 2.0\n"
1933,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/install/ITextViewer,""
1934,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/uninstall/,""
1935,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/showPossibleCompletions/,""
1936,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/hidePossibleCompletions/," Hides the proposal popup.\n"
1937,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/hide/," Hides any open pop-ups.\n"
1939,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/showContextInformation/,""
1941,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/requestWidgetToken/IWidgetTokenOwner,""
1942,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setCompletionPosition/int," @param completionPosition the completion position\n"
1943,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/getCompletionPosition/," @return the completion position\n"
1944,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setCompletions/String[]," @param proposals the proposals\n"
1945,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setCompletions/ICompletionProposal[]," @param proposals the proposals\n"
1946,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/requestWidgetToken/IWidgetTokenOwner;int,""
1947,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/setFocus/IWidgetTokenOwner,""
1948,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/hasFocus/," Returns whether any popups controlled by the receiver have the input focus.\n\n @return <code>true</code> if any of the managed popups have the focus, <code>false</code> otherwise\n"
1949,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/completePrefix/,""
1950,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/fireProposalChosen/ICompletionProposal," @param proposal the proposal\n"
1951,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/removeProposalListener/IProposalListener," @param listener the proposal listener\n"
1952,method,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/addProposalListener/IProposalListener," @param listener the proposal listener\n"
1955,field,org/eclipse/jface/internal/text/link/contentassist/ContentAssistant2/WIDGET_PRIORITY," The popup priority: &gt; info pop-ups, &lt; standard content assist.\n Default value: <code>10</code>.\n\n @since 3.0\n"
1956,class,org/eclipse/jface/internal/text/html/HTMLPrinter," Provides a set of convenience methods for creating HTML pages.\n <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n"
1957,method,org/eclipse/jface/internal/text/html/HTMLPrinter/convertToHTMLContent/String,""
1958,method,org/eclipse/jface/internal/text/html/HTMLPrinter/read/Reader,""
1959,method,org/eclipse/jface/internal/text/html/HTMLPrinter/insertPageProlog/StringBuffer;int;RGB;RGB;String,""
1960,method,org/eclipse/jface/internal/text/html/HTMLPrinter/insertStyles/StringBuffer;String[],""
1961,method,org/eclipse/jface/internal/text/html/HTMLPrinter/insertPageProlog/StringBuffer;int,""
1962,method,org/eclipse/jface/internal/text/html/HTMLPrinter/insertPageProlog/StringBuffer;int;URL,""
1963,method,org/eclipse/jface/internal/text/html/HTMLPrinter/insertPageProlog/StringBuffer;int;String,""
1964,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addPageProlog/StringBuffer,""
1965,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addPageEpilog/StringBuffer,""
1966,method,org/eclipse/jface/internal/text/html/HTMLPrinter/startBulletList/StringBuffer,""
1967,method,org/eclipse/jface/internal/text/html/HTMLPrinter/endBulletList/StringBuffer,""
1968,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addBullet/StringBuffer;String,""
1969,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addSmallHeader/StringBuffer;String,""
1970,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addParagraph/StringBuffer;String,""
1971,method,org/eclipse/jface/internal/text/html/HTMLPrinter/addParagraph/StringBuffer;Reader,""
1972,method,org/eclipse/jface/internal/text/html/HTMLPrinter/convertTopLevelFont/String;FontData," Replaces the following style attributes of the font definition of the <code>html</code>\n element:\n <ul>\n <li>font-size</li>\n <li>font-weight</li>\n <li>font-style</li>\n <li>font-family</li>\n </ul>\n The font's name is used as font family, a <code>sans-serif</code> default font family is\n appended for the case that the given font name is not available.\n <p>\n If the listed font attributes are not contained in the passed style list, nothing happens.\n </p>\n\n @param styles CSS style definitions\n @param fontData the font information to use\n @return the modified style definitions\n @since 3.3\n"
1973,class,org/eclipse/jface/internal/text/html/BrowserInformationControlInput," Provides input for a {@link BrowserInformationControl}.\n\n @since 3.4\n"
1974,method,org/eclipse/jface/internal/text/html/BrowserInformationControlInput/getLeadingImageWidth/," Returns the leading image width.\n\n @return the size of the leading image, by default <code>0</code> is returned\n @since 3.4\n"
1975,method,org/eclipse/jface/internal/text/html/BrowserInformationControlInput/getHtml/," @return the HTML contents\n"
1976,method,org/eclipse/jface/internal/text/html/BrowserInformationControlInput/toString/," Returns the HTML from {@link #getHtml()}.\n This is a fallback mode for platforms where the {@link BrowserInformationControl}\n is not available and this input is passed to a {@link DefaultInformationControl}.\n\n @return {@link #getHtml()}\n"
1977,method,org/eclipse/jface/internal/text/html/BrowserInformationControlInput/BrowserInformationControlInput/BrowserInformationControlInput," Creates the next browser input with the given input as previous one.\n\n @param previous the previous input or <code>null</code> if none\n"
1978,class,org/eclipse/jface/internal/text/html/SingleCharReader," <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n"
1979,method,org/eclipse/jface/internal/text/html/SingleCharReader/read/," @see Reader#read()\n"
1980,method,org/eclipse/jface/internal/text/html/SingleCharReader/read/char[];int;int," @see Reader#read(char[],int,int)\n"
1981,method,org/eclipse/jface/internal/text/html/SingleCharReader/ready/," @see Reader#ready()\n"
1982,method,org/eclipse/jface/internal/text/html/SingleCharReader/getString/," Returns the readable content as string.\n @return the readable content as string\n @exception IOException in case reading fails\n"
1983,method,org/eclipse/jface/internal/text/html/SingleCharReader/SingleCharReader/,""
1985,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/isAvailable/Composite," Tells whether the SWT Browser widget and hence this information\n control is available.\n\n @param parent the parent component used for checking or <code>null</code> if none\n @return <code>true</code> if this control is available\n"
1986,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/createContent/Composite,""
1989,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/setVisible/boolean,""
1990,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/setSize/int;int,""
1991,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/dispose/,""
1992,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/computeSizeHint/,""
1993,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/computeTrim/,""
1994,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/addLocationListener/LocationListener," Adds the listener to the collection of listeners who will be\n notified when the current location has changed or is about to change.\n\n @param listener the location listener\n @since 3.4\n"
1995,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/setForegroundColor/Color,""
1996,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/setBackgroundColor/Color,""
1997,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/hasContents/,""
1998,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/addInputChangeListener/IInputChangedListener," Adds a listener for input changes to this input change provider.\n Has no effect if an identical listener is already registered.\n\n @param inputChangeListener the listener to add\n @since 3.4\n"
1999,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/removeInputChangeListener/IInputChangedListener," Removes the given input change listener from this input change provider.\n Has no effect if an identical listener is not registered.\n\n @param inputChangeListener the listener to remove\n @since 3.4\n"
2000,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/setDelayedInputChangeListener/IInputChangedListener,""
2001,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/hasDelayedInputChangeListener/," Tells whether a delayed input change listener is registered.\n\n @return <code>true</code> iff a delayed input change\n         listener is currently registered\n @since 3.4\n"
2002,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/notifyDelayedInputChange/Object," Notifies listeners of a delayed input change.\n\n @param newInput the new input, or <code>null</code> to request cancellation\n @since 3.4\n"
2003,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/toString/,""
2004,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/getInput/," @return the current browser input or <code>null</code>\n"
2005,method,org/eclipse/jface/internal/text/html/BrowserInformationControl/computeSizeConstraints/int;int,""
2009,class,org/eclipse/jface/internal/text/html/BrowserInput," A browser input contains an input element and\n a previous and a next input, if available.\n\n The browser input also provides a human readable\n name of its input element.\n\n @since 3.4\n"
2010,method,org/eclipse/jface/internal/text/html/BrowserInput/getPrevious/," The previous input or <code>null</code> if this\n is the first.\n\n @return the previous input or <code>null</code>\n"
2011,method,org/eclipse/jface/internal/text/html/BrowserInput/getNext/," The next input or <code>null</code> if this\n is the last.\n\n @return the next input or <code>null</code>\n"
2012,method,org/eclipse/jface/internal/text/html/BrowserInput/getInputElement/," The element to use to set the browsers input.\n\n @return the input element\n"
2013,method,org/eclipse/jface/internal/text/html/BrowserInput/getInputName/," A human readable name for the input.\n\n @return the input name\n"
2014,method,org/eclipse/jface/internal/text/html/BrowserInput/BrowserInput/BrowserInput," Create a new Browser input.\n\n @param previous the input previous to this or <code>null</code> if this is the first\n"
2017,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/getReader/," Returns the internal reader.\n\n @return the internal reader\n"
2018,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/nextChar/," Returns the next character.\n @return the next character\n @throws IOException in case reading the character fails\n"
2019,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/read/," @see Reader#read()\n"
2020,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/ready/," @see Reader#ready()\n"
2021,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/close/," @see Reader#close()\n"
2022,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/reset/," @see Reader#reset()\n"
2023,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/setSkipWhitespace/boolean,""
2024,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/isSkippingWhitespace/,""
2025,method,org/eclipse/jface/internal/text/html/SubstitutionTextReader/SubstitutionTextReader/Reader,""
2026,field,org/eclipse/jface/internal/text/html/SubstitutionTextReader/LINE_DELIM,""
2027,field,org/eclipse/jface/internal/text/html/SubstitutionTextReader/fWasWhiteSpace,""
2028,class,org/eclipse/jface/internal/text/html/HTML2TextReader," Reads the text contents from a reader of HTML contents and translates\n the tags or cut them out.\n <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n"
2029,method,org/eclipse/jface/internal/text/html/HTML2TextReader/read/,""
2030,method,org/eclipse/jface/internal/text/html/HTML2TextReader/startBold/,""
2031,method,org/eclipse/jface/internal/text/html/HTML2TextReader/startPreformattedText/,""
2032,method,org/eclipse/jface/internal/text/html/HTML2TextReader/stopPreformattedText/,""
2033,method,org/eclipse/jface/internal/text/html/HTML2TextReader/stopBold/,""
2034,method,org/eclipse/jface/internal/text/html/HTML2TextReader/computeSubstitution/int,""
2035,method,org/eclipse/jface/internal/text/html/HTML2TextReader/entity2Text/String,""
2036,method,org/eclipse/jface/internal/text/html/HTML2TextReader/HTML2TextReader/Reader;TextPresentation," Transforms the HTML text from the reader to formatted text.\n\n @param reader the reader\n @param presentation If not <code>null</code>, formattings will be applied to\n the presentation.\n"
2037,class,org/eclipse/jface/internal/text/html/HTMLTextPresenter," <p>\n Moved into this package from <code>org.eclipse.jface.internal.text.revisions</code>.</p>\n"
2038,method,org/eclipse/jface/internal/text/html/HTMLTextPresenter/createReader/String;TextPresentation,""
2039,method,org/eclipse/jface/internal/text/html/HTMLTextPresenter/adaptTextPresentation/TextPresentation;int;int,""
2041,method,org/eclipse/jface/internal/text/html/HTMLTextPresenter/updatePresentation/Drawable;String;TextPresentation;int;int,""
2042,method,org/eclipse/jface/internal/text/html/HTMLTextPresenter/HTMLTextPresenter/boolean,""
2043,method,org/eclipse/jface/internal/text/html/HTMLTextPresenter/HTMLTextPresenter/,""
2048,method,org/eclipse/jface/internal/text/source/DiffPainter/setBackground/Color," Sets the background color.\n\n @param background the background color, <code>null</code> to use the platform's list background\n"
2050,method,org/eclipse/jface/internal/text/source/DiffPainter/setModel/IAnnotationModel," Sets the annotation model.\n\n @param model the annotation model, possibly <code>null</code>\n @see IVerticalRulerColumn#setModel(IAnnotationModel)\n"
2051,method,org/eclipse/jface/internal/text/source/DiffPainter/setAddedColor/Color," Sets the color for added lines.\n\n @param addedColor the color for added lines\n @see org.eclipse.jface.text.source.IChangeRulerColumn#setAddedColor(org.eclipse.swt.graphics.Color)\n"
2052,method,org/eclipse/jface/internal/text/source/DiffPainter/setChangedColor/Color," Sets the color for changed lines.\n\n @param changedColor the color for changed lines\n @see org.eclipse.jface.text.source.IChangeRulerColumn#setChangedColor(org.eclipse.swt.graphics.Color)\n"
2053,method,org/eclipse/jface/internal/text/source/DiffPainter/setDeletedColor/Color," Sets the color for deleted lines.\n\n @param deletedColor the color for deleted lines\n @see org.eclipse.jface.text.source.IChangeRulerColumn#setDeletedColor(org.eclipse.swt.graphics.Color)\n"
2054,method,org/eclipse/jface/internal/text/source/DiffPainter/hasHover/int," Returns <code>true</code> if the receiver can provide a hover for a certain document line.\n\n @param activeLine the document line of interest\n @return <code>true</code> if the receiver can provide a hover\n"
2055,method,org/eclipse/jface/internal/text/source/DiffPainter/getDisplayCharacter/int," Returns the display character for the accessibility mode for a certain model line.\n\n @param line the document line of interest\n @return the display character for <code>line</code>\n"
2056,method,org/eclipse/jface/internal/text/source/DiffPainter/hasInformation/," Returns <code>true</code> if diff information is being displayed, <code>false</code> otherwise.\n\n @return <code>true</code> if diff information is being displayed, <code>false</code> otherwise\n @since 3.3\n"
2059,method,org/eclipse/jface/bindings/ISchemeListener/schemeChanged/SchemeEvent," Notifies that one or more attributes of an instance of\n <code>IScheme</code> have changed. Specific details are described in\n the <code>SchemeEvent</code>.\n \n @param schemeEvent\n            the scheme event. Guaranteed not to be <code>null</code>.\n"
2061,method,org/eclipse/jface/bindings/BindingManagerEvent/getManager/," Returns the instance of the manager that changed.\n \n @return the instance of the manager that changed. Guaranteed not to be\n         <code>null</code>.\n"
2062,method,org/eclipse/jface/bindings/BindingManagerEvent/getScheme/," Returns the scheme that changed.\n \n @return The changed scheme\n"
2063,method,org/eclipse/jface/bindings/BindingManagerEvent/isActiveBindingsChanged/," Returns whether the active bindings have changed.\n \n @return <code>true</code> if the active bindings have changed;\n         <code>false</code> otherwise.\n"
2065,method,org/eclipse/jface/bindings/BindingManagerEvent/isActiveSchemeChanged/," Returns whether or not the active scheme changed.\n \n @return true, iff the active scheme property changed.\n"
2066,method,org/eclipse/jface/bindings/BindingManagerEvent/isLocaleChanged/," Returns whether the locale has changed\n \n @return <code>true</code> if the locale changed; <code>false</code>\n         otherwise.\n"
2067,method,org/eclipse/jface/bindings/BindingManagerEvent/isPlatformChanged/," Returns whether the platform has changed\n \n @return <code>true</code> if the platform changed; <code>false</code>\n         otherwise.\n"
2068,method,org/eclipse/jface/bindings/BindingManagerEvent/isSchemeChanged/," Returns whether the list of defined scheme identifiers has changed.\n \n @return <code>true</code> if the list of scheme identifiers has\n         changed; <code>false</code> otherwise.\n"
2069,method,org/eclipse/jface/bindings/BindingManagerEvent/isSchemeDefined/," Returns whether or not the scheme became defined\n \n @return <code>true</code> if the scheme became defined.\n"
2073,method,org/eclipse/jface/bindings/TriggerSequence/equals/Object,""
2077,method,org/eclipse/jface/bindings/TriggerSequence/hashCode/,""
2078,method,org/eclipse/jface/bindings/TriggerSequence/isEmpty/," Returns whether or not this trigger sequence is empty.\n \n @return <code>true</code>, iff the trigger sequence is empty.\n"
2081,field,org/eclipse/jface/bindings/TriggerSequence/hashCode," The hash code for this object. This value is computed lazily, and marked\n as invalid when one of the values on which it is based changes.  This\n values is <code>HASH_CODE_NOT_COMPUTED</code> iff the hash code has not\n yet been computed.\n"
2084,method,org/eclipse/jface/bindings/SchemeEvent/getScheme/," Returns the instance of the scheme that changed.\n \n @return the instance of the scheme that changed. Guaranteed not to be\n         <code>null</code>.\n"
2085,method,org/eclipse/jface/bindings/SchemeEvent/isParentIdChanged/," Returns whether or not the parentId property changed.\n \n @return true, iff the parentId property changed.\n"
2089,method,org/eclipse/jface/bindings/Scheme/compareTo/Object,""
2094,method,org/eclipse/jface/bindings/Scheme/undefine/," Makes this scheme become undefined. This has the side effect of changing\n the name, description and parent identifier to <code>null</code>.\n Notification is sent to all listeners.\n"
2097,method,org/eclipse/jface/bindings/Trigger/hashCode/," Computes the hash code for this object.\n \n @return The hash code for this object.\n"
2098,method,org/eclipse/jface/bindings/Trigger/Trigger/,""
2109,method,org/eclipse/jface/bindings/BindingManager/getBestActiveBindingFor/ParameterizedCommand," @param command\n @return\n 		a trigger sequence, or <code>null</code>\n @since 3.4\n"
2133,method,org/eclipse/jface/bindings/IBindingManagerListener/bindingManagerChanged/BindingManagerEvent," Notifies that attributes inside an instance of <code>BindingManager</code> have changed. \n Specific details are described in the <code>BindingManagerEvent</code>.  Changes in the\n binding manager can cause the set of defined or active schemes or bindings to change.\n \n @param event\n            the binding manager event. Guaranteed not to be <code>null</code>.\n"
2142,method,org/eclipse/jface/bindings/Binding/getType/," Returns the type for this binding. As it stands now, this value will\n either be <code>SYSTEM</code> or <code>USER</code>. In the future,\n more types might be added.\n \n @return The type for this binding.\n"
2143,method,org/eclipse/jface/bindings/Binding/hashCode/," Computes the hash code for this key binding based on all of its\n attributes.\n \n @return The hash code for this key binding.\n"
2146,field,org/eclipse/jface/bindings/Binding/SYSTEM," The type of binding that is defined by the system (i.e., by the\n application developer). In the case of an application based on the\n Eclipse workbench, this is the registry.\n"
2147,field,org/eclipse/jface/bindings/Binding/USER," The type of binding that is defined by the user (i.e., by the end user of\n the application). In the case of an application based on the Eclipse\n workbench, this is the preference store.\n"
2151,method,org/eclipse/jface/bindings/keys/KeySequenceText/clear/," Clears the text field and resets all the internal values.\n"
2157,method,org/eclipse/jface/bindings/keys/KeySequenceText/getKeyStrokeLimit/," Returns the maximum number of strokes that are permitted in this widget\n at one time.\n \n @return The maximum number of strokes; will be a positive integer or\n         <code>INFINITE</code>.\n"
2161,field,org/eclipse/jface/bindings/keys/KeySequenceText/P_KEY_SEQUENCE," The name of the property representing the current key sequence in this\n key sequence widget.\n \n @since 3.2\n"
2162,field,org/eclipse/jface/bindings/keys/KeySequenceText/TRAPPED_KEYS," The keys trapped by this widget. This list is guaranteed to be roughly\n accurate. Perfection is not possible, as SWT does not export traversal\n keys as constants.\n"
2163,class,org/eclipse/jface/bindings/keys/SWTKeyLookup," <p>\n A look-up table for the formal grammar for keys, and the integer values they\n represent. This look-up table is hard-coded to use SWT representations. By\n replacing this class (and\n {@link org.eclipse.jface.bindings.keys.SWTKeySupport}), you can remove the\n dependency on SWT.\n </p>\n \n @since 3.1\n @see org.eclipse.jface.bindings.keys.KeyLookupFactory\n"
2164,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/formalKeyLookup/String,""
2165,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/formalKeyLookupInteger/String,""
2166,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/formalModifierLookup/String,""
2167,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/formalNameLookup/int,""
2168,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/getAlt/,""
2169,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/getCommand/,""
2170,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/getCtrl/,""
2171,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/getShift/,""
2172,method,org/eclipse/jface/bindings/keys/SWTKeyLookup/isModifierKey/int,""
2173,class,org/eclipse/jface/bindings/keys/KeyLookupFactory," <p>\n A factory class for <code>ILookup</code> instances. This factory can be\n used to retrieve instances of look-ups defined by this package. It also\n allows you to define your own look-up for use in the classes.\n </p>\n \n @since 3.1\n"
2177,class,org/eclipse/jface/bindings/keys/SWTKeySupport," <p>\n A utility class for converting SWT events into key strokes.\n </p>\n \n @since 3.1\n"
2186,interface,org/eclipse/jface/bindings/keys/IKeyLookup," <p>\n A facilitiy for converting the formal representation for key strokes\n (i.e., used in persistence) into real key stroke instances.\n </p>\n \n @since 3.1\n"
2190,method,org/eclipse/jface/bindings/keys/IKeyLookup/formalNameLookup/int," Looks up a key value, and returns the formal string representation for\n that key\n \n @param key\n            The key to look-up.\n @return The formal string representation of this key. If this key cannot\n         be found, then it is simply the character corresponding to that\n         integer value.\n"
2191,method,org/eclipse/jface/bindings/keys/IKeyLookup/getAlt/," Returns the integer representation of the ALT key.\n \n @return The ALT key\n"
2192,method,org/eclipse/jface/bindings/keys/IKeyLookup/getCommand/," Returns the integer representation of the COMMAND key.\n \n @return The COMMAND key\n"
2193,method,org/eclipse/jface/bindings/keys/IKeyLookup/getCtrl/," Returns the integer representation of the CTRL key.\n \n @return The CTRL key\n"
2194,method,org/eclipse/jface/bindings/keys/IKeyLookup/getShift/," Returns the integer representation of the SHIFT key.\n \n @return The SHIFT key\n"
2195,method,org/eclipse/jface/bindings/keys/IKeyLookup/isModifierKey/int," Returns whether the given key is a modifier key.\n \n @param key\n            The integer value of the key to check.\n @return <code>true</code> if the key is one of the modifier keys;\n         <code>false</code> otherwise.\n"
2196,field,org/eclipse/jface/bindings/keys/IKeyLookup/ALT_NAME," The formal name of the 'Alt' key.\n"
2197,field,org/eclipse/jface/bindings/keys/IKeyLookup/ARROW_DOWN_NAME," The formal name of the 'Arrow Down' key.\n"
2198,field,org/eclipse/jface/bindings/keys/IKeyLookup/ARROW_LEFT_NAME," The formal name of the 'Arrow Left' key.\n"
2199,field,org/eclipse/jface/bindings/keys/IKeyLookup/ARROW_RIGHT_NAME," The formal name of the 'Arrow Right' key.\n"
2200,field,org/eclipse/jface/bindings/keys/IKeyLookup/ARROW_UP_NAME," The formal name of the 'Arrow Up' key.\n"
2201,field,org/eclipse/jface/bindings/keys/IKeyLookup/BACKSPACE_NAME," An alternate name for the backspace key.\n"
2202,field,org/eclipse/jface/bindings/keys/IKeyLookup/BREAK_NAME," The formal name for the 'Break' key.\n"
2203,field,org/eclipse/jface/bindings/keys/IKeyLookup/BS_NAME," The formal name of the backspace key.\n"
2205,field,org/eclipse/jface/bindings/keys/IKeyLookup/COMMAND_NAME," The formal name of the 'Command' key.\n"
2206,field,org/eclipse/jface/bindings/keys/IKeyLookup/CR_NAME," The formal name of the carriage return (U+000D)\n"
2207,field,org/eclipse/jface/bindings/keys/IKeyLookup/CTRL_NAME," The formal name of the 'Ctrl' key.\n"
2208,field,org/eclipse/jface/bindings/keys/IKeyLookup/DEL_NAME," The formal name of the delete (U+007F) key\n"
2210,field,org/eclipse/jface/bindings/keys/IKeyLookup/END_NAME," The formal name of the 'End' key.\n"
2212,field,org/eclipse/jface/bindings/keys/IKeyLookup/ESC_NAME," The formal name of the escape (U+001B) key.\n"
2214,field,org/eclipse/jface/bindings/keys/IKeyLookup/F1_NAME," The formal name of the 'F1' key.\n"
2215,field,org/eclipse/jface/bindings/keys/IKeyLookup/F10_NAME," The formal name of the 'F10' key.\n"
2216,field,org/eclipse/jface/bindings/keys/IKeyLookup/F11_NAME," The formal name of the 'F11' key.\n"
2217,field,org/eclipse/jface/bindings/keys/IKeyLookup/F12_NAME," The formal name of the 'F12' key.\n"
2218,field,org/eclipse/jface/bindings/keys/IKeyLookup/F13_NAME," The formal name of the 'F13' key.\n"
2219,field,org/eclipse/jface/bindings/keys/IKeyLookup/F14_NAME," The formal name of the 'F14' key.\n"
2220,field,org/eclipse/jface/bindings/keys/IKeyLookup/F15_NAME," The formal name of the 'F15' key.\n"
2221,field,org/eclipse/jface/bindings/keys/IKeyLookup/F16_NAME," The formal name of the 'F16' key.\n \n @since 3.6\n"
2222,field,org/eclipse/jface/bindings/keys/IKeyLookup/F17_NAME," The formal name of the 'F17' key.\n \n @since 3.6\n"
2223,field,org/eclipse/jface/bindings/keys/IKeyLookup/F18_NAME," The formal name of the 'F18' key.\n \n @since 3.6\n"
2224,field,org/eclipse/jface/bindings/keys/IKeyLookup/F19_NAME," The formal name of the 'F19' key.\n \n @since 3.6\n"
2225,field,org/eclipse/jface/bindings/keys/IKeyLookup/F20_NAME," The formal name of the 'F20' key.\n \n @since 3.6\n"
2226,field,org/eclipse/jface/bindings/keys/IKeyLookup/F2_NAME," The formal name of the 'F2' key.\n"
2227,field,org/eclipse/jface/bindings/keys/IKeyLookup/F3_NAME," The formal name of the 'F3' key.\n"
2228,field,org/eclipse/jface/bindings/keys/IKeyLookup/F4_NAME," The formal name of the 'F4' key.\n"
2229,field,org/eclipse/jface/bindings/keys/IKeyLookup/F5_NAME," The formal name of the 'F5' key.\n"
2230,field,org/eclipse/jface/bindings/keys/IKeyLookup/F6_NAME," The formal name of the 'F6' key.\n"
2231,field,org/eclipse/jface/bindings/keys/IKeyLookup/F7_NAME," The formal name of the 'F7' key.\n"
2232,field,org/eclipse/jface/bindings/keys/IKeyLookup/F8_NAME," The formal name of the 'F8' key.\n"
2233,field,org/eclipse/jface/bindings/keys/IKeyLookup/F9_NAME," The formal name of the 'F9' key.\n"
2234,field,org/eclipse/jface/bindings/keys/IKeyLookup/FF_NAME," The formal name of the form feed (U+000C) key.\n"
2235,field,org/eclipse/jface/bindings/keys/IKeyLookup/HOME_NAME," The formal name of the 'Home' key.\n"
2236,field,org/eclipse/jface/bindings/keys/IKeyLookup/INSERT_NAME," The formal name of the 'Insert' key.\n"
2237,field,org/eclipse/jface/bindings/keys/IKeyLookup/LF_NAME," The formal name of the line feed (U+000A) key.\n"
2238,field,org/eclipse/jface/bindings/keys/IKeyLookup/M1_NAME," The formal name of the 'M1' key.\n"
2239,field,org/eclipse/jface/bindings/keys/IKeyLookup/M2_NAME," The formal name of the 'M2' key.\n"
2240,field,org/eclipse/jface/bindings/keys/IKeyLookup/M3_NAME," The formal name of the 'M3' key.\n"
2241,field,org/eclipse/jface/bindings/keys/IKeyLookup/M4_NAME," The formal name of the 'M4' key.\n"
2242,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUL_NAME," The formal name of the null (U+0000) key.\n"
2243,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUM_LOCK_NAME," The formal name of the 'NumLock' key.\n"
2244,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_0_NAME," The formal name of the '0' key on the numpad.\n"
2245,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_1_NAME," The formal name of the '1' key on the numpad.\n"
2246,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_2_NAME," The formal name of the '2' key on the numpad.\n"
2247,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_3_NAME," The formal name of the '3' key on the numpad.\n"
2248,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_4_NAME," The formal name of the '4' key on the numpad.\n"
2249,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_5_NAME," The formal name of the '5' key on the numpad.\n"
2250,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_6_NAME," The formal name of the '6' key on the numpad.\n"
2251,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_7_NAME," The formal name of the '7' key on the numpad.\n"
2252,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_8_NAME," The formal name of the '8' key on the numpad.\n"
2253,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_9_NAME," The formal name of the '9' key on the numpad.\n"
2254,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_ADD_NAME," The formal name of the 'Add' key on the numpad.\n"
2255,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_DECIMAL_NAME," The formal name of the 'Decimal' key on the numpad.\n"
2256,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_DIVIDE_NAME," The formal name of the 'Divide' key on the numpad.\n"
2257,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_ENTER_NAME," The formal name of the 'Enter' key on the numpad.\n"
2258,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_EQUAL_NAME," The formal name of the '=' key on the numpad.\n"
2259,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_MULTIPLY_NAME," The formal name of the 'Multiply' key on the numpad.\n"
2260,field,org/eclipse/jface/bindings/keys/IKeyLookup/NUMPAD_SUBTRACT_NAME," The formal name of the 'Subtract' key on the numpad.\n"
2261,field,org/eclipse/jface/bindings/keys/IKeyLookup/PAGE_DOWN_NAME," The formal name of the 'Page Down' key.\n"
2262,field,org/eclipse/jface/bindings/keys/IKeyLookup/PAGE_UP_NAME," The formal name of the 'Page Up' key.\n"
2263,field,org/eclipse/jface/bindings/keys/IKeyLookup/PAUSE_NAME," The formal name for the 'Pause' key.\n"
2264,field,org/eclipse/jface/bindings/keys/IKeyLookup/PRINT_SCREEN_NAME," The formal name for the 'Print Screen' key.\n"
2267,field,org/eclipse/jface/bindings/keys/IKeyLookup/SHIFT_NAME," The formal name of the 'Shift' key.\n"
2268,field,org/eclipse/jface/bindings/keys/IKeyLookup/SPACE_NAME," The formal name of the space (U+0020) key.\n"
2269,field,org/eclipse/jface/bindings/keys/IKeyLookup/TAB_NAME," The formal name of the tab (U+0009) key.\n"
2270,field,org/eclipse/jface/bindings/keys/IKeyLookup/VT_NAME," The formal name of the vertical tab (U+000B) key.\n"
2272,method,org/eclipse/jface/bindings/keys/ParseException/ParseException/String," Constructs a <code>ParseException</code> with the specified detail\n message.\n \n @param s\n            the detail message.\n"
2274,method,org/eclipse/jface/bindings/keys/KeySequence/getInstance/," Gets an instance of <code>KeySequence</code>.\n \n @return a key sequence. This key sequence will have no key strokes.\n         Guaranteed not to be <code>null</code>.\n"
2279,method,org/eclipse/jface/bindings/keys/KeySequence/getInstance/String," Creates an instance of <code>KeySequence</code> by parsing a given\n formal string representation.\n \n @param string\n            the formal string representation to parse.\n @return a key sequence. Guaranteed not to be <code>null</code>.\n @throws ParseException\n             if the given formal string representation could not be parsed\n             to a valid key sequence.\n"
2280,method,org/eclipse/jface/bindings/keys/KeySequence/compareTo/Object,""
2283,method,org/eclipse/jface/bindings/keys/KeySequence/getPrefixes/,""
2284,method,org/eclipse/jface/bindings/keys/KeySequence/isComplete/," Returns whether or not this key sequence is complete. Key sequences are\n complete iff all of their key strokes are complete.\n \n @return <code>true</code>, iff the key sequence is complete.\n"
2285,method,org/eclipse/jface/bindings/keys/KeySequence/toString/," Returns the formal string representation for this key sequence.\n \n @return The formal string representation for this key sequence.\n         Guaranteed not to be <code>null</code>.\n @see java.lang.Object#toString()\n"
2288,field,org/eclipse/jface/bindings/keys/KeySequence/KEY_STROKE_DELIMITERS," The set of delimiters for <code>KeyStroke</code> objects allowed during\n parsing of the formal string representation.\n"
2291,method,org/eclipse/jface/bindings/keys/KeyBinding/getTriggerSequence/,""
2294,method,org/eclipse/jface/bindings/keys/KeyStroke/getInstance/int," Creates an instance of <code>KeyStroke</code> given a natural key.\n \n @param naturalKey\n            the natural key. The format of this integer is defined by\n            whichever widget toolkit you are using; <code>NO_KEY</code>\n            always means no natural key.\n @return a key stroke. This key stroke will have no modifier keys.\n         Guaranteed not to be <code>null</code>.\n @see SWTKeySupport\n"
2295,method,org/eclipse/jface/bindings/keys/KeyStroke/getInstance/int;int," Creates an instance of <code>KeyStroke</code> given a set of modifier keys\n and a natural key.\n \n @param modifierKeys\n            the modifier keys. The format of this integer is defined by\n            whichever widget toolkit you are using; <code>NO_KEY</code>\n            always means no modifier keys.\n @param naturalKey\n            the natural key. The format of this integer is defined by\n            whichever widget toolkit you are using; <code>NO_KEY</code>\n            always means no natural key.\n @return a key stroke. Guaranteed not to be <code>null</code>.\n @see SWTKeySupport\n"
2296,method,org/eclipse/jface/bindings/keys/KeyStroke/getInstance/String," Creates an instance of <code>KeyStroke</code> by parsing a given a formal\n string representation.\n \n @param string\n            the formal string representation to parse.\n @return a key stroke. Guaranteed not to be <code>null</code>.\n @throws ParseException\n             if the given formal string representation could not be parsed\n             to a valid key stroke.\n"
2297,method,org/eclipse/jface/bindings/keys/KeyStroke/compareTo/Object,""
2298,method,org/eclipse/jface/bindings/keys/KeyStroke/equals/Object,""
2300,method,org/eclipse/jface/bindings/keys/KeyStroke/getModifierKeys/," Returns the modifier keys for this key stroke.\n \n @return the bit mask of modifier keys; <code>NO_KEY</code> means that\n         there is no modifier key.\n"
2301,method,org/eclipse/jface/bindings/keys/KeyStroke/getNaturalKey/," Returns the natural key for this key stroke.\n \n @return The natural key for this key stroke. This value is\n         <code>NO_KEY</code> if the key stroke is incomplete (i.e., has\n         no natural key).\n"
2302,method,org/eclipse/jface/bindings/keys/KeyStroke/hashCode/,""
2303,method,org/eclipse/jface/bindings/keys/KeyStroke/isComplete/," Returns whether or not this key stroke is complete. Key strokes are\n complete iff they have a natural key which is not <code>NO_KEY</code>.\n \n @return <code>true</code>, iff the key stroke is complete.\n"
2304,method,org/eclipse/jface/bindings/keys/KeyStroke/toString/," Returns the formal string representation for this key stroke.\n \n @return The formal string representation for this key stroke. Guaranteed\n         not to be <code>null</code>.\n @see java.lang.Object#toString()\n"
2306,field,org/eclipse/jface/bindings/keys/KeyStroke/KEY_DELIMITERS," The set of delimiters for <code>Key</code> objects allowed during\n parsing of the formal string representation.\n"
2307,field,org/eclipse/jface/bindings/keys/KeyStroke/NO_KEY," The representation for no key.\n"
2308,class,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter," <p>\n Formats the keys in the internal key sequence grammar. This is used for\n persistence, and is not really intended for display to the user.\n </p>\n \n @since 3.1\n"
2309,method,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter/format/int,""
2310,method,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter/getKeyDelimiter/,""
2311,method,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter/getKeyStrokeDelimiter/,""
2312,method,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter/sortModifierKeys/int,""
2313,method,org/eclipse/jface/bindings/keys/formatting/FormalKeyFormatter/FormalKeyFormatter/,""
2314,interface,org/eclipse/jface/bindings/keys/formatting/IKeyFormatter," <p>\n Any formatter capable of taking a key sequence or a key stroke and converting\n it into a string. These formatters are used to produce the strings that the\n user sees in the keys preference page and the menus, as well as the strings\n that are used for persistent storage.\n </p>\n \n @since 3.1\n"
2318,class,org/eclipse/jface/bindings/keys/formatting/KeyFormatterFactory," <p>\n A cache for formatters. It keeps a few instances of pre-defined instances of\n <code>IKeyFormatter</code> available for use. It also allows the default\n formatter to be changed.\n </p>\n \n @since 3.1\n @see org.eclipse.jface.bindings.keys.formatting.IKeyFormatter\n"
2323,class,org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter," <p>\n A key formatter providing the Emacs-style accelerators using single letters\n to represent the modifier keys.\n </p>\n \n @since 3.1\n"
2325,method,org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter/getKeyDelimiter/,""
2326,method,org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter/getKeyStrokeDelimiter/,""
2327,method,org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter/sortModifierKeys/int,""
2328,method,org/eclipse/jface/bindings/keys/formatting/EmacsKeyFormatter/EmacsKeyFormatter/,""
2330,method,org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter/format/int,""
2331,method,org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter/format/KeySequence,""
2332,method,org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter/format/KeyStroke,""
2336,method,org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter/AbstractKeyFormatter/,""
2339,field,org/eclipse/jface/bindings/keys/formatting/AbstractKeyFormatter/NO_MODIFIER_KEYS," An empty integer array that can be used in\n <code>sortModifierKeys(int)</code>.\n"
2340,class,org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter," <p>\n Formats the key sequences and key strokes into the native human-readable\n format. This is typically what you would see on the menus for the given\n platform and locale.\n </p>\n \n @since 3.1\n"
2342,method,org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter/getKeyDelimiter/,""
2343,method,org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter/getKeyStrokeDelimiter/,""
2344,method,org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter/sortModifierKeys/int,""
2345,method,org/eclipse/jface/bindings/keys/formatting/NativeKeyFormatter/NativeKeyFormatter/,""
2351,interface,org/eclipse/jface/viewers/IDoubleClickListener," A listener which is notified of double-click events on viewers.\n"
2352,method,org/eclipse/jface/viewers/IDoubleClickListener/doubleClick/DoubleClickEvent," Notifies of a double click.\n\n @param event event object describing the double-click\n"
2353,interface,org/eclipse/jface/viewers/IElementComparer," This interface is used to compare elements in a viewer for equality,\n and to provide the hash code for an element.\n This allows the client of the viewer to specify different equality criteria\n and a different hash code implementation than the \n <code>equals</code> and <code>hashCode</code> implementations of the\n elements themselves. \n \n @see StructuredViewer#setComparer\n"
2354,method,org/eclipse/jface/viewers/IElementComparer/equals/Object;Object," Compares two elements for equality\n \n @param a the first element\n @param b the second element\n @return whether a is equal to b\n"
2355,method,org/eclipse/jface/viewers/IElementComparer/hashCode/Object," Returns the hash code for the given element.\n @param element the element the hash code is calculated for\n \n @return the hash code for the given element\n"
2356,interface,org/eclipse/jface/viewers/IColorProvider," Interface to provide color representation for a given element.\n @see org.eclipse.jface.viewers.IColorDecorator\n"
2357,method,org/eclipse/jface/viewers/IColorProvider/getForeground/Object," Provides a foreground color for the given element.\n \n @param element the element\n @return	the foreground color for the element, or <code>null</code> \n   to use the default foreground color\n"
2358,method,org/eclipse/jface/viewers/IColorProvider/getBackground/Object," Provides a background color for the given element.\n \n @param element the element\n @return	the background color for the element, or <code>null</code> \n   to use the default background color\n"
2360,method,org/eclipse/jface/viewers/ColumnViewer/hookControl/Control,""
2363,method,org/eclipse/jface/viewers/ColumnViewer/getCell/Point," Returns the viewer cell at the given widget-relative coordinates, or\n <code>null</code> if there is no cell at that location\n \n @param point\n 		the widget-relative coordinates\n @return the cell or <code>null</code> if no cell is found at the given\n 	point\n \n @since 3.4\n"
2364,method,org/eclipse/jface/viewers/ColumnViewer/getViewerRow/Point," Returns the viewer row at the given widget-relative coordinates.\n \n @param point\n 		the widget-relative coordinates of the viewer row\n @return ViewerRow the row or <code>null</code> if no row is found at the\n 	given coordinates\n"
2366,method,org/eclipse/jface/viewers/ColumnViewer/getColumnViewerOwner/int," Returns the column widget at the given column index.\n \n @param columnIndex\n 		the column index\n @return Widget the column widget\n"
2367,method,org/eclipse/jface/viewers/ColumnViewer/getItemAt/Point," Returns the {@link Item} at the given widget-relative coordinates, or\n <code>null</code> if there is no item at the given coordinates.\n \n @param point\n 		the widget-relative coordinates\n @return the {@link Item} at the coordinates or <code>null</code> if there\n 	is no item at the given coordinates\n"
2368,method,org/eclipse/jface/viewers/ColumnViewer/getItem/int;int,""
2371,method,org/eclipse/jface/viewers/ColumnViewer/applyEditorValue/," Apply the value of the active cell editor if one is active.\n \n @since 3.3\n"
2377,method,org/eclipse/jface/viewers/ColumnViewer/refresh/Object,""
2378,method,org/eclipse/jface/viewers/ColumnViewer/refresh/Object;boolean,""
2379,method,org/eclipse/jface/viewers/ColumnViewer/update/Object;String[],""
2384,method,org/eclipse/jface/viewers/ColumnViewer/getLabelProvider/int," Returns the label provider associated with the column at the given index\n or <code>null</code> if no column with this index is known.\n \n @param columnIndex\n 		the column index\n @return the label provider associated with the column or\n 	<code>null</code> if no column with this index is known\n \n @since 3.3\n"
2386,method,org/eclipse/jface/viewers/ColumnViewer/setColumnViewerEditor/ColumnViewerEditor," @param columnViewerEditor\n 		the new column viewer editor\n"
2387,method,org/eclipse/jface/viewers/ColumnViewer/getColumnViewerEditor/," @return the currently attached viewer editor\n"
2388,method,org/eclipse/jface/viewers/ColumnViewer/getRawChildren/Object,""
2392,method,org/eclipse/jface/viewers/ColumnViewer/ColumnViewer/," Create a new instance of the receiver.\n"
2393,class,org/eclipse/jface/viewers/DoubleClickEvent," Event object describing a double-click. The source of these\n events is a viewer.\n\n @see IDoubleClickListener\n"
2394,method,org/eclipse/jface/viewers/DoubleClickEvent/getSelection/," Returns the selection.\n\n @return the selection\n"
2395,method,org/eclipse/jface/viewers/DoubleClickEvent/getViewer/," Returns the viewer that is the source of this event.\n\n @return the originating viewer\n"
2396,method,org/eclipse/jface/viewers/DoubleClickEvent/DoubleClickEvent/Viewer;ISelection," Creates a new event for the given source and selection.\n\n @param source the viewer\n @param selection the selection\n"
2397,field,org/eclipse/jface/viewers/DoubleClickEvent/selection," The selection.\n"
2399,method,org/eclipse/jface/viewers/ComboViewer/listAdd/String;int,""
2400,method,org/eclipse/jface/viewers/ComboViewer/listSetItem/int;String,""
2401,method,org/eclipse/jface/viewers/ComboViewer/listGetSelectionIndices/,""
2402,method,org/eclipse/jface/viewers/ComboViewer/listGetItemCount/,""
2403,method,org/eclipse/jface/viewers/ComboViewer/listSetItems/String[],""
2404,method,org/eclipse/jface/viewers/ComboViewer/listRemoveAll/,""
2405,method,org/eclipse/jface/viewers/ComboViewer/listRemove/int,""
2406,method,org/eclipse/jface/viewers/ComboViewer/getControl/,""
2407,method,org/eclipse/jface/viewers/ComboViewer/getCCombo/," Returns this list viewer's list control. If the viewer was not created on\n a CCombo control, some kind of unchecked exception is thrown.\n \n @return the list control\n @since 3.3\n"
2408,method,org/eclipse/jface/viewers/ComboViewer/getCombo/," Returns this list viewer's list control. If the viewer was not created on\n a Combo control, some kind of unchecked exception is thrown.\n\n @return the list control\n"
2409,method,org/eclipse/jface/viewers/ComboViewer/reveal/Object,""
2410,method,org/eclipse/jface/viewers/ComboViewer/listSetSelection/int[],""
2411,method,org/eclipse/jface/viewers/ComboViewer/listDeselectAll/,""
2412,method,org/eclipse/jface/viewers/ComboViewer/listShowSelection/,""
2413,method,org/eclipse/jface/viewers/ComboViewer/ComboViewer/Composite," Creates a combo viewer on a newly-created combo control under the given parent.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n"
2414,method,org/eclipse/jface/viewers/ComboViewer/ComboViewer/Composite;int," Creates a combo viewer on a newly-created combo control under the given parent.\n The combo control is created using the given SWT style bits.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n @param style the SWT style bits\n"
2415,method,org/eclipse/jface/viewers/ComboViewer/ComboViewer/Combo," Creates a combo viewer on the given combo control.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param list the combo control\n"
2416,method,org/eclipse/jface/viewers/ComboViewer/ComboViewer/CCombo," Creates a combo viewer on the given CCombo control.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param list the CCombo control\n @since 3.3\n"
2417,class,org/eclipse/jface/viewers/ViewerCell," The ViewerCell is the JFace representation of a cell entry in a ViewerRow.\n \n @since 3.3\n \n"
2418,method,org/eclipse/jface/viewers/ViewerCell/getColumnIndex/," Get the index of the cell.\n \n @return the index\n"
2419,method,org/eclipse/jface/viewers/ViewerCell/getBounds/," Get the bounds of the cell.\n \n @return {@link Rectangle}\n"
2420,method,org/eclipse/jface/viewers/ViewerCell/getElement/," Get the element this row represents.\n \n @return {@link Object}\n"
2421,method,org/eclipse/jface/viewers/ViewerCell/getText/," Return the text for the cell.\n \n @return {@link String}\n"
2422,method,org/eclipse/jface/viewers/ViewerCell/getImage/," Return the Image for the cell.\n \n @return {@link Image} or <code>null</code>\n"
2423,method,org/eclipse/jface/viewers/ViewerCell/setBackground/Color," Set the background color of the cell.\n \n @param background\n"
2424,method,org/eclipse/jface/viewers/ViewerCell/setForeground/Color," Set the foreground color of the cell.\n \n @param foreground\n"
2425,method,org/eclipse/jface/viewers/ViewerCell/setFont/Font," Set the font of the cell.\n \n @param font\n"
2426,method,org/eclipse/jface/viewers/ViewerCell/setText/String," Set the text for the cell.\n \n @param text\n"
2427,method,org/eclipse/jface/viewers/ViewerCell/setImage/Image," Set the Image for the cell.\n \n @param image\n"
2429,method,org/eclipse/jface/viewers/ViewerCell/getStyleRanges/," Returns the style ranges to be applied on the text label or\n <code>null</code> if no style ranges have been set.\n \n @return styleRanges the styled ranges\n \n @since 3.4\n"
2430,method,org/eclipse/jface/viewers/ViewerCell/getItem/," Return the item for the receiver.\n \n @return {@link Item}\n"
2431,method,org/eclipse/jface/viewers/ViewerCell/getControl/," Get the control for this cell.\n \n @return {@link Control}\n"
2432,method,org/eclipse/jface/viewers/ViewerCell/getVisualIndex/," Get the current index. This can be different from the original index when\n columns are reordered\n \n @return the current index (as shown in the UI)\n @since 3.4\n"
2434,method,org/eclipse/jface/viewers/ViewerCell/getViewerRow/," @return the row\n"
2437,method,org/eclipse/jface/viewers/ViewerCell/getForeground/," Gets the foreground color of the cell.\n \n @return the foreground of the cell or <code>null</code> for the default\n         foreground\n \n @since 3.4\n"
2438,method,org/eclipse/jface/viewers/ViewerCell/getBackground/," Gets the background color of the cell.\n \n @return the background of the cell or <code>null</code> for the default\n         background\n \n @since 3.4\n"
2439,method,org/eclipse/jface/viewers/ViewerCell/getFont/," Gets the font of the cell.\n \n @return the font of the cell or <code>null</code> for the default font\n \n @since 3.4\n"
2440,method,org/eclipse/jface/viewers/ViewerCell/hashCode/,""
2441,method,org/eclipse/jface/viewers/ViewerCell/equals/Object,""
2442,method,org/eclipse/jface/viewers/ViewerCell/scrollIntoView/," Scroll the cell into view\n \n @return true if the cell was scrolled into view\n @since 3.5\n"
2443,field,org/eclipse/jface/viewers/ViewerCell/ABOVE," Constant denoting the cell above current one (value is 1).\n"
2444,field,org/eclipse/jface/viewers/ViewerCell/BELOW," Constant denoting the cell below current one (value is 2).\n"
2445,field,org/eclipse/jface/viewers/ViewerCell/LEFT," Constant denoting the cell to the left of the current one (value is 4).\n"
2446,field,org/eclipse/jface/viewers/ViewerCell/RIGHT," Constant denoting the cell to the right of the current one (value is 8).\n"
2447,class,org/eclipse/jface/viewers/AbstractListViewer," Abstract base class for viewers that contain lists of items (such as a combo or list).\n Most of the viewer implementation is in this base class, except for the minimal code that\n actually communicates with the underlying widget.\n \n @see org.eclipse.jface.viewers.ListViewer\n @see org.eclipse.jface.viewers.ComboViewer\n \n @since 3.0\n"
2448,method,org/eclipse/jface/viewers/AbstractListViewer/listAdd/String;int," Adds the given string to the underlying widget at the given index\n  \n @param string the string to add\n @param index position to insert the string into\n"
2449,method,org/eclipse/jface/viewers/AbstractListViewer/listSetItem/int;String," Sets the text of the item at the given index in the underlying widget.\n \n @param index index to modify\n @param string new text\n"
2451,method,org/eclipse/jface/viewers/AbstractListViewer/listGetItemCount/," Returns the number of items contained in the underlying widget.\n\n @return the number of items\n"
2452,method,org/eclipse/jface/viewers/AbstractListViewer/listSetItems/String[]," Sets the underlying widget's items to be the given array of items.\n\n @param labels the array of label text\n"
2453,method,org/eclipse/jface/viewers/AbstractListViewer/listRemoveAll/," Removes all of the items from the underlying widget.\n"
2454,method,org/eclipse/jface/viewers/AbstractListViewer/listRemove/int," Removes the item from the underlying widget at the given\n zero-relative index.\n \n @param index the index for the item\n"
2456,method,org/eclipse/jface/viewers/AbstractListViewer/listShowSelection/," Shows the selection.  If the selection is already showing in the receiver,\n this method simply returns.  Otherwise, the items are scrolled until\n the selection is visible.\n"
2457,method,org/eclipse/jface/viewers/AbstractListViewer/listDeselectAll/," Deselects all selected items in the underlying widget.\n"
2461,method,org/eclipse/jface/viewers/AbstractListViewer/doFindInputItem/Object,""
2462,method,org/eclipse/jface/viewers/AbstractListViewer/doFindItem/Object,""
2463,method,org/eclipse/jface/viewers/AbstractListViewer/doUpdateItem/Widget;Object;boolean,""
2464,method,org/eclipse/jface/viewers/AbstractListViewer/getElementAt/int," Returns the element with the given index from this list viewer.\n Returns <code>null</code> if the index is out of range.\n\n @param index the zero-based index\n @return the element at the given index, or <code>null</code> if the\n   index is out of range\n"
2465,method,org/eclipse/jface/viewers/AbstractListViewer/getLabelProvider/," The list viewer implementation of this <code>Viewer</code> framework\n method returns the label provider, which in the case of list\n viewers will be an instance of <code>ILabelProvider</code>.\n"
2466,method,org/eclipse/jface/viewers/AbstractListViewer/getSelectionFromWidget/,""
2468,method,org/eclipse/jface/viewers/AbstractListViewer/inputChanged/Object;Object,""
2469,method,org/eclipse/jface/viewers/AbstractListViewer/internalRefresh/Object,""
2470,method,org/eclipse/jface/viewers/AbstractListViewer/listGetTopIndex/," Returns the index of the item currently at the top of the viewable area.\n <p>\n Default implementation returns -1.\n </p>\n @return index, -1 for none\n @since 3.3\n"
2471,method,org/eclipse/jface/viewers/AbstractListViewer/listSetTopIndex/int," Sets the index of the item to be at the top of the viewable area.\n <p>\n Default implementation does nothing.\n </p>\n @param index the given index. -1 for none.  index will always refer to a valid index.\n @since 3.3\n"
2474,method,org/eclipse/jface/viewers/AbstractListViewer/setLabelProvider/IBaseLabelProvider," The list viewer implementation of this <code>Viewer</code> framework\n method ensures that the given label provider is an instance of\n <code>ILabelProvider</code>.\n \n <b>The optional interfaces {@link IColorProvider} and\n {@link IFontProvider} have no effect for this type of viewer</b>\n"
2475,method,org/eclipse/jface/viewers/AbstractListViewer/setSelectionToWidget/List;boolean,""
2476,method,org/eclipse/jface/viewers/AbstractListViewer/AbstractListViewer/,""
2479,method,org/eclipse/jface/viewers/ILabelProvider/getText/Object," Returns the text for the label of the given element.\n\n @param element the element for which to provide the label text\n @return the text string used to label the element, or <code>null</code>\n   if there is no text label for the given object\n"
2482,method,org/eclipse/jface/viewers/CheckboxTableViewer/addCheckStateListener/ICheckStateListener,""
2484,method,org/eclipse/jface/viewers/CheckboxTableViewer/doUpdateItem/Widget;Object;boolean,""
2485,method,org/eclipse/jface/viewers/CheckboxTableViewer/createTable/Composite;int," Creates a new table control with one column.\n\n @param parent the parent control\n @param style style bits\n @return a new table control\n"
2486,method,org/eclipse/jface/viewers/CheckboxTableViewer/getChecked/Object,""
2487,method,org/eclipse/jface/viewers/CheckboxTableViewer/getCheckedElements/," Returns a list of elements corresponding to checked table items in this\n viewer.\n <p>\n This method is typically used when preserving the interesting\n state of a viewer; <code>setCheckedElements</code> is used during the restore.\n </p>\n\n @return the array of checked elements\n @see #setCheckedElements\n"
2488,method,org/eclipse/jface/viewers/CheckboxTableViewer/getGrayed/Object," Returns the grayed state of the given element.\n\n @param element the element\n @return <code>true</code> if the element is grayed,\n   and <code>false</code> if not grayed\n"
2489,method,org/eclipse/jface/viewers/CheckboxTableViewer/getGrayedElements/," Returns a list of elements corresponding to grayed nodes in this\n viewer.\n <p>\n This method is typically used when preserving the interesting\n state of a viewer; <code>setGrayedElements</code> is used during the restore.\n </p>\n\n @return the array of grayed elements\n @see #setGrayedElements\n"
2490,method,org/eclipse/jface/viewers/CheckboxTableViewer/handleSelect/SelectionEvent,""
2491,method,org/eclipse/jface/viewers/CheckboxTableViewer/preservingSelection/Runnable,""
2492,method,org/eclipse/jface/viewers/CheckboxTableViewer/removeCheckStateListener/ICheckStateListener,""
2495,method,org/eclipse/jface/viewers/CheckboxTableViewer/setChecked/Object;boolean,""
2502,class,org/eclipse/jface/viewers/DecoratingLabelProvider," A decorating label provider is a label provider which combines \n a nested label provider and an optional decorator.\n The decorator decorates the label text, image, font and colors provided by \n the nested label provider.\n"
2503,method,org/eclipse/jface/viewers/DecoratingLabelProvider/addListener/ILabelProviderListener," The <code>DecoratingLabelProvider</code> implementation of this <code>IBaseLabelProvider</code> method\n adds the listener to both the nested label provider and the label decorator.\n\n @param listener a label provider listener\n"
2504,method,org/eclipse/jface/viewers/DecoratingLabelProvider/dispose/," The <code>DecoratingLabelProvider</code> implementation of this <code>IBaseLabelProvider</code> method\n disposes both the nested label provider and the label decorator.\n"
2505,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getImage/Object," The <code>DecoratingLabelProvider</code> implementation of this \n <code>ILabelProvider</code> method returns the image provided\n by the nested label provider's <code>getImage</code> method, \n decorated with the decoration provided by the label decorator's\n <code>decorateImage</code> method.\n"
2506,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getLabelDecorator/," Returns the label decorator, or <code>null</code> if none has been set.\n\n @return the label decorator, or <code>null</code> if none has been set.\n"
2507,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getLabelProvider/," Returns the nested label provider.\n\n @return the nested label provider\n"
2508,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getText/Object," The <code>DecoratingLabelProvider</code> implementation of this \n <code>ILabelProvider</code> method returns the text label provided\n by the nested label provider's <code>getText</code> method, \n decorated with the decoration provided by the label decorator's\n <code>decorateText</code> method.\n"
2509,method,org/eclipse/jface/viewers/DecoratingLabelProvider/isLabelProperty/Object;String," The <code>DecoratingLabelProvider</code> implementation of this \n <code>IBaseLabelProvider</code> method returns <code>true</code> if the corresponding method\n on the nested label provider returns <code>true</code> or if the corresponding method on the \n decorator returns <code>true</code>.\n"
2510,method,org/eclipse/jface/viewers/DecoratingLabelProvider/removeListener/ILabelProviderListener," The <code>DecoratingLabelProvider</code> implementation of this <code>IBaseLabelProvider</code> method\n removes the listener from both the nested label provider and the label decorator.\n\n @param listener a label provider listener\n"
2512,method,org/eclipse/jface/viewers/DecoratingLabelProvider/updateLabel/ViewerLabel;Object,""
2513,method,org/eclipse/jface/viewers/DecoratingLabelProvider/updateForDecorationReady/ViewerLabel;Object," Decoration is ready. Update anything else for the settings.\n @param settings The object collecting the settings.\n @param element The Object being decorated.\n @since 3.1\n"
2514,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getBackground/Object,""
2515,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getFont/Object,""
2516,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getForeground/Object,""
2517,method,org/eclipse/jface/viewers/DecoratingLabelProvider/getDecorationContext/," Return the decoration context associated with this label provider.\n It will be passed to the decorator if the decorator is an \n instance of {@link LabelDecorator}.\n @return the decoration context associated with this label provider\n \n @since 3.2\n"
2518,method,org/eclipse/jface/viewers/DecoratingLabelProvider/setDecorationContext/IDecorationContext," Set the decoration context that will be based to the decorator \n for this label provider if that decorator implements {@link LabelDecorator}.\n @param decorationContext the decoration context.\n \n @since 3.2\n"
2519,method,org/eclipse/jface/viewers/DecoratingLabelProvider/updateLabel/ViewerLabel;TreePath,""
2520,method,org/eclipse/jface/viewers/DecoratingLabelProvider/DecoratingLabelProvider/ILabelProvider;ILabelDecorator," Creates a decorating label provider which uses the given label decorator\n to decorate labels provided by the given label provider.\n\n @param provider the nested label provider\n @param decorator the label decorator, or <code>null</code> if no decorator is to be used initially\n"
2522,method,org/eclipse/jface/viewers/TableTreeViewer/addTreeListener/Control;TreeListener,""
2523,method,org/eclipse/jface/viewers/TableTreeViewer/cancelEditing/," Cancels a currently active cell editor. All changes already done in the\n cell editor are lost.\n"
2524,method,org/eclipse/jface/viewers/TableTreeViewer/doUpdateItem/Item;Object,""
2525,method,org/eclipse/jface/viewers/TableTreeViewer/editElement/Object;int," Starts editing the given element.\n \n @param element\n            the element\n @param column\n            the column number\n"
2526,method,org/eclipse/jface/viewers/TableTreeViewer/getCellEditors/," Returns the cell editors of this viewer.\n \n @return the list of cell editors\n"
2527,method,org/eclipse/jface/viewers/TableTreeViewer/getCellModifier/," Returns the cell modifier of this viewer.\n \n @return the cell modifier\n"
2528,method,org/eclipse/jface/viewers/TableTreeViewer/getChildren/Widget,""
2529,method,org/eclipse/jface/viewers/TableTreeViewer/getChild/Widget;int,""
2531,method,org/eclipse/jface/viewers/TableTreeViewer/getControl/,""
2532,method,org/eclipse/jface/viewers/TableTreeViewer/getElementAt/int," Returns the element with the given index from this viewer. Returns\n <code>null</code> if the index is out of range.\n <p>\n This method is internal to the framework.\n </p>\n \n @param index\n            the zero-based index\n @return the element at the given index, or <code>null</code> if the\n         index is out of range\n"
2533,method,org/eclipse/jface/viewers/TableTreeViewer/getExpanded/Item,""
2534,method,org/eclipse/jface/viewers/TableTreeViewer/getItemAt/Point,""
2535,method,org/eclipse/jface/viewers/TableTreeViewer/getItemCount/Control,""
2536,method,org/eclipse/jface/viewers/TableTreeViewer/getItemCount/Item,""
2537,method,org/eclipse/jface/viewers/TableTreeViewer/getItems/org/eclipse/swt/widgets/Item,""
2539,method,org/eclipse/jface/viewers/TableTreeViewer/getParentItem/Item,""
2540,method,org/eclipse/jface/viewers/TableTreeViewer/getSelection/Control,""
2541,method,org/eclipse/jface/viewers/TableTreeViewer/getTableTree/," Returns this table tree viewer's table tree control.\n \n @return the table tree control\n"
2542,method,org/eclipse/jface/viewers/TableTreeViewer/hookControl/Control,""
2543,method,org/eclipse/jface/viewers/TableTreeViewer/isCellEditorActive/," Returns whether there is an active cell editor.\n \n @return <code>true</code> if there is an active cell editor, and\n         <code>false</code> otherwise\n"
2544,method,org/eclipse/jface/viewers/TableTreeViewer/newItem/Widget;int;int,""
2545,method,org/eclipse/jface/viewers/TableTreeViewer/removeAll/Control,""
2546,method,org/eclipse/jface/viewers/TableTreeViewer/setCellEditors/CellEditor[]," Sets the cell editors of this table viewer.\n \n @param editors\n            the list of cell editors\n"
2547,method,org/eclipse/jface/viewers/TableTreeViewer/setCellModifier/ICellModifier," Sets the cell modifier of this table viewer.\n \n @param modifier\n            the cell modifier\n"
2549,method,org/eclipse/jface/viewers/TableTreeViewer/setExpanded/Item;boolean,""
2550,method,org/eclipse/jface/viewers/TableTreeViewer/setSelection/List,""
2551,method,org/eclipse/jface/viewers/TableTreeViewer/showItem/Item,""
2552,method,org/eclipse/jface/viewers/TableTreeViewer/TableTreeViewer/TableTree," Creates a table tree viewer on the given table tree control. The viewer\n has no input, no content provider, a default label provider, no sorter,\n and no filters.\n \n @param tree\n            the table tree control\n"
2553,method,org/eclipse/jface/viewers/TableTreeViewer/TableTreeViewer/Composite," Creates a table tree viewer on a newly-created table tree control under\n the given parent. The table tree control is created using the SWT style\n bits <code>MULTI, H_SCROLL, V_SCROLL, and BORDER</code>. The viewer\n has no input, no content provider, a default label provider, no sorter,\n and no filters.\n \n @param parent\n            the parent control\n"
2554,method,org/eclipse/jface/viewers/TableTreeViewer/TableTreeViewer/Composite;int," Creates a table tree viewer on a newly-created table tree control under\n the given parent. The table tree control is created using the given SWT\n style bits. The viewer has no input, no content provider, a default label\n provider, no sorter, and no filters.\n \n @param parent\n            the parent control\n @param style\n            the SWT style bits\n"
2555,interface,org/eclipse/jface/viewers/IColorDecorator," The IColorDecorator is an interface for objects that return a color to\n decorate either the foreground and background colors for displaying an\n an object.\n \n If an IColorDecorator decorates a foreground or background in an object \n that also has an IColorProvider the IColorDecorator will take precedence.\n @see IColorProvider\n \n @since 3.1\n"
2556,method,org/eclipse/jface/viewers/IColorDecorator/decorateForeground/Object," Return the foreground Color for element or <code>null</code> if there\n is not one.\n @param element\n @return Color or <code>null</code>\n"
2557,method,org/eclipse/jface/viewers/IColorDecorator/decorateBackground/Object," Return the background Color for element or <code>null</code> if there\n is not one.\n @param element\n @return Color or <code>null</code>\n"
2560,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationStrategy/getViewer/," @return the viewer\n"
2561,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationStrategy/setEnableEditorActivationWithKeyboard/boolean," Enable activation of cell editors by keyboard\n\n @param enable\n            <code>true</code> to enable\n"
2562,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationStrategy/ColumnViewerEditorActivationStrategy/ColumnViewer," @param viewer\n            the viewer the editor support is attached to\n"
2564,method,org/eclipse/jface/viewers/StyledString/createColorRegistryStyler/String;String," Creates a styler that takes the given foreground and background colors\n from the JFace color registry.\n \n @param foregroundColorName\n            the color name for the foreground color\n @param backgroundColorName\n            the color name for the background color\n \n @return the created style\n"
2565,method,org/eclipse/jface/viewers/StyledString/getString/," Returns the string of this {@link StyledString}.\n \n @return the current string of this {@link StyledString}.\n"
2566,method,org/eclipse/jface/viewers/StyledString/toString/," Returns the string of this {@link StyledString}.\n \n @return the current string of this {@link StyledString}.\n"
2567,method,org/eclipse/jface/viewers/StyledString/length/," Returns the length of the string of this {@link StyledString}.\n \n @return the length of the current string\n"
2568,method,org/eclipse/jface/viewers/StyledString/append/String," Appends a string to the {@link StyledString}. The appended string\n will have no associated styler.\n \n @param string\n            the string to append\n @return returns a reference to this object\n"
2569,method,org/eclipse/jface/viewers/StyledString/append/char[]," Appends the string representation of the given character array\n to the {@link StyledString}. The appended\n character array will have no associated styler.\n \n @param chars\n            the character array to append\n @return returns a reference to this object\n"
2570,method,org/eclipse/jface/viewers/StyledString/append/char," Appends the string representation of the given character\n to the {@link StyledString}. The appended\n character will have no associated styler.\n \n @param ch\n            the character to append\n @return returns a reference to this object\n"
2571,method,org/eclipse/jface/viewers/StyledString/append/StyledString," Appends a string with styles to the {@link StyledString}.\n \n @param string\n            the string to append\n @return returns a reference to this object\n"
2575,method,org/eclipse/jface/viewers/StyledString/insert/char;int," Inserts the character at the given offset. The inserted character will\n get the styler that is already at the given offset.\n \n @param ch\n            the character to insert\n @param offset\n            the insertion index\n @return returns a reference to this object\n @throws StringIndexOutOfBoundsException\n             if <code>offset</code> is less than zero, or if <code>offset</code>\n             is greater than the length of this object\n @since 3.5\n"
2577,method,org/eclipse/jface/viewers/StyledString/getStyleRanges/," Returns an array of {@link StyleRange} resulting from applying all\n associated stylers for this string builder.\n \n @return an array of all {@link StyleRange} resulting from applying the\n         stored stylers to this string.\n"
2578,method,org/eclipse/jface/viewers/StyledString/StyledString/," Creates an empty {@link StyledString}.\n"
2579,method,org/eclipse/jface/viewers/StyledString/StyledString/String," Creates an {@link StyledString} initialized with a string without\n a style associated.\n \n @param string\n            the string\n"
2580,method,org/eclipse/jface/viewers/StyledString/StyledString/String;Styler," Creates an {@link StyledString} initialized with a string and a\n style.\n \n @param string\n            the string\n @param styler\n            the styler for the string or <code>null</code> to not\n            associated a styler.\n"
2581,field,org/eclipse/jface/viewers/StyledString/QUALIFIER_STYLER," A built-in styler using the {@link JFacePreferences#QUALIFIER_COLOR}\n managed in the JFace color registry (See\n {@link JFaceResources#getColorRegistry()}).\n"
2582,field,org/eclipse/jface/viewers/StyledString/COUNTER_STYLER," A built-in styler using the {@link JFacePreferences#COUNTER_COLOR}\n managed in the JFace color registry (See\n {@link JFaceResources#getColorRegistry()}).\n"
2583,field,org/eclipse/jface/viewers/StyledString/DECORATIONS_STYLER," A built-in styler using the {@link JFacePreferences#DECORATIONS_COLOR}\n managed in the JFace color registry (See\n {@link JFaceResources#getColorRegistry()}).\n"
2584,class,org/eclipse/jface/viewers/StyledString/Styler," A styler will be asked to apply its styles to one ore more ranges in the\n {@link StyledString}.\n \n"
2585,method,org/eclipse/jface/viewers/StyledString/Styler/applyStyles/TextStyle," Applies the styles represented by this object to the given textStyle.\n \n @param textStyle\n            the {@link TextStyle} to modify\n"
2586,method,org/eclipse/jface/viewers/StyledString/Styler/StyledString/Styler/,""
2587,class,org/eclipse/jface/viewers/TableViewerEditor," This is an editor-implementation for {@link Table}\n \n @since 3.3\n \n"
2588,method,org/eclipse/jface/viewers/TableViewerEditor/create/TableViewer;SWTFocusCellManager;ColumnViewerEditorActivationStrategy;int," Create a customized editor with focusable cells\n \n @param viewer\n            the viewer the editor is created for\n @param focusCellManager\n            the cell focus manager if one needed else <code>null</code>\n @param editorActivationStrategy\n            activation strategy to control if an editor activated\n @param feature\n            bit mask controlling the editor\n            <ul>\n            <li>{@link ColumnViewerEditor#DEFAULT}</li>\n            <li>{@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}</li>\n            <li>{@link ColumnViewerEditor#TABBING_HORIZONTAL}</li>\n            <li>{@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}</li>\n            <li>{@link ColumnViewerEditor#TABBING_VERTICAL}</li>\n            </ul>\n @see #create(TableViewer, ColumnViewerEditorActivationStrategy, int)\n"
2589,method,org/eclipse/jface/viewers/TableViewerEditor/create/TableViewer;ColumnViewerEditorActivationStrategy;int," Create a customized editor whose activation process is customized\n \n @param viewer\n            the viewer the editor is created for\n @param editorActivationStrategy\n            activation strategy to control if an editor activated\n @param feature\n            bit mask controlling the editor\n            <ul>\n            <li>{@link ColumnViewerEditor#DEFAULT}</li>\n            <li>{@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}</li>\n            <li>{@link ColumnViewerEditor#TABBING_HORIZONTAL}</li>\n            <li>{@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}</li>\n            <li>{@link ColumnViewerEditor#TABBING_VERTICAL}</li>\n            </ul>\n"
2590,method,org/eclipse/jface/viewers/TableViewerEditor/setEditor/Control;Item;int,""
2591,method,org/eclipse/jface/viewers/TableViewerEditor/setLayoutData/LayoutData,""
2592,method,org/eclipse/jface/viewers/TableViewerEditor/getFocusCell/,""
2593,method,org/eclipse/jface/viewers/TableViewerEditor/updateFocusCell/ViewerCell;ColumnViewerEditorActivationEvent,""
2598,method,org/eclipse/jface/viewers/ViewerFilter/select/Viewer;Object;Object," Returns whether the given element makes it through this filter.\n\n @param viewer the viewer\n @param parentElement the parent element\n @param element the element\n @return <code>true</code> if element is included in the\n   filtered set, and <code>false</code> if excluded\n"
2599,method,org/eclipse/jface/viewers/ViewerFilter/ViewerFilter/," Creates a new viewer filter.\n"
2600,interface,org/eclipse/jface/viewers/IStructuredSelection," A selection containing elements.\n"
2601,method,org/eclipse/jface/viewers/IStructuredSelection/getFirstElement/," Returns the first element in this selection, or <code>null</code>\n if the selection is empty.\n\n @return an element, or <code>null</code> if none\n"
2602,method,org/eclipse/jface/viewers/IStructuredSelection/iterator/," Returns an iterator over the elements of this selection.\n\n @return an iterator over the selected elements\n"
2603,method,org/eclipse/jface/viewers/IStructuredSelection/size/," Returns the number of elements selected in this selection.\n\n @return the number of elements selected\n"
2604,method,org/eclipse/jface/viewers/IStructuredSelection/toArray/," Returns the elements in this selection as an array.\n\n @return the selected elements as an array\n"
2606,class,org/eclipse/jface/viewers/ComboBoxViewerCellEditor," A cell editor that presents a list of items in a combo box. In contrast to\n {@link ComboBoxCellEditor} it wraps the underlying {@link CCombo} using a\n {@link ComboViewer}\n @since 3.4\n"
2607,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/createControl/Composite,""
2608,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/doGetValue/," The <code>ComboBoxCellEditor</code> implementation of this\n <code>CellEditor</code> framework method returns the zero-based index\n of the current selection.\n\n @return the zero-based index of the current selection wrapped as an\n         <code>Integer</code>\n"
2609,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/doSetFocus/,""
2610,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/getLayoutData/," The <code>ComboBoxCellEditor</code> implementation of this\n <code>CellEditor</code> framework method sets the minimum width of the\n cell. The minimum width is 10 characters if <code>comboBox</code> is\n not <code>null</code> or <code>disposed</code> eles it is 60 pixels\n to make sure the arrow button and some text is visible. The list of\n CCombo will be wide enough to show its longest item.\n"
2611,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/doSetValue/Object," Set a new value\n\n @param value\n            the new value\n"
2612,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/setLabelProvider/IBaseLabelProvider," @param labelProvider\n            the label provider used\n @see StructuredViewer#setLabelProvider(IBaseLabelProvider)\n"
2613,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/setContenProvider/IStructuredContentProvider," @param provider\n            the content provider used\n @see StructuredViewer#setContentProvider(IContentProvider)\n"
2614,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/setInput/Object," @param input\n            the input used\n @see StructuredViewer#setInput(Object)\n"
2615,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/getViewer/," @return get the viewer\n"
2616,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/focusLost/,""
2617,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/keyReleaseOccured/KeyEvent,""
2618,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/ComboBoxViewerCellEditor/Composite," Creates a new cell editor with a combo viewer and a default style\n\n @param parent\n            the parent control\n"
2619,method,org/eclipse/jface/viewers/ComboBoxViewerCellEditor/ComboBoxViewerCellEditor/Composite;int," Creates a new cell editor with a combo viewer and the given style\n\n @param parent\n            the parent control\n @param style\n            the style bits\n"
2623,method,org/eclipse/jface/viewers/LabelProvider/LabelProvider/," Creates a new label provider.\n"
2625,method,org/eclipse/jface/viewers/OpenEvent/getSelection/," Returns the selection.\n\n @return the selection\n"
2626,method,org/eclipse/jface/viewers/OpenEvent/getViewer/," Returns the viewer that is the source of this event.\n\n @return the originating viewer\n"
2627,method,org/eclipse/jface/viewers/OpenEvent/OpenEvent/Viewer;ISelection," Creates a new event for the given source and selection.\n\n @param source the viewer\n @param selection the selection\n"
2628,field,org/eclipse/jface/viewers/OpenEvent/selection," The selection.\n"
2633,method,org/eclipse/jface/viewers/ViewerDropAdapter/dragEnter/DropTargetEvent,""
2634,method,org/eclipse/jface/viewers/ViewerDropAdapter/dragOperationChanged/DropTargetEvent,""
2635,method,org/eclipse/jface/viewers/ViewerDropAdapter/dragOver/DropTargetEvent,""
2636,method,org/eclipse/jface/viewers/ViewerDropAdapter/drop/DropTargetEvent,""
2637,method,org/eclipse/jface/viewers/ViewerDropAdapter/dropAccept/DropTargetEvent,""
2638,method,org/eclipse/jface/viewers/ViewerDropAdapter/getBounds/Item," Returns the bounds of the given SWT tree or table item.\n\n @param item the SWT Item\n @return the bounds, or <code>null</code> if it is not a known type of item\n"
2640,method,org/eclipse/jface/viewers/ViewerDropAdapter/getCurrentOperation/," Returns the current operation.\n\n @return a <code>DROP_*</code> constant from class <code>DND</code>\n\n @see DND#DROP_COPY\n @see DND#DROP_MOVE\n @see DND#DROP_LINK\n @see DND#DROP_NONE\n"
2641,method,org/eclipse/jface/viewers/ViewerDropAdapter/getCurrentTarget/," Returns the target object currently under the mouse.\n\n @return the current target object\n"
2644,method,org/eclipse/jface/viewers/ViewerDropAdapter/getSelectedObject/," Returns the object currently selected by the viewer.\n\n @return the selected object, or <code>null</code> if either no object or \n   multiple objects are selected\n"
2645,method,org/eclipse/jface/viewers/ViewerDropAdapter/getViewer/," @return the viewer to which this drop support has been added.\n"
2655,method,org/eclipse/jface/viewers/ViewerDropAdapter/ViewerDropAdapter/Viewer," Creates a new drop adapter for the given viewer.\n\n @param viewer the viewer\n"
2658,field,org/eclipse/jface/viewers/ViewerDropAdapter/LOCATION_ON," Constant describing the position of the cursor relative \n to the target object.  This means the mouse is positioned\n directly on the target.\n @see #getCurrentLocation()\n"
2659,field,org/eclipse/jface/viewers/ViewerDropAdapter/LOCATION_NONE," Constant describing the position of the cursor relative \n to the target object.  This means the mouse is not positioned\n over or near any valid target.\n @see #getCurrentLocation()\n"
2660,interface,org/eclipse/jface/viewers/ITableFontProvider," The ITableFontProvider is a font provider that provides fonts to \n individual cells within tables.\n @since 3.1\n"
2661,method,org/eclipse/jface/viewers/ITableFontProvider/getFont/Object;int," Provides a font for the given element at index\n columnIndex.\n @param element The element being displayed\n @param columnIndex The index of the column being displayed\n @return Font\n"
2662,interface,org/eclipse/jface/viewers/IPostSelectionProvider," Selection provider extension interface to allow providers\n to notify about post selection changed events.\n A post selection changed event is equivalent to selection changed event\n if the selection change was triggered by the mouse, but it has a delay \n if the selection change is triggered by keyboard navigation.\n\n @see ISelectionProvider\n \n @since 3.0\n"
2663,method,org/eclipse/jface/viewers/IPostSelectionProvider/addPostSelectionChangedListener/ISelectionChangedListener," Adds a listener for post selection changes in this selection provider.\n Has no effect if an identical listener is already registered.\n\n @param listener a selection changed listener\n"
2664,method,org/eclipse/jface/viewers/IPostSelectionProvider/removePostSelectionChangedListener/ISelectionChangedListener," Removes the given listener for post selection changes from this selection \n provider.\n Has no affect if an identical listener is not registered.\n\n @param listener a selection changed listener\n"
2666,method,org/eclipse/jface/viewers/TableLayout/addColumnData/ColumnLayoutData," Adds a new column of data to this table layout.\n \n @param data\n            the column layout data\n"
2667,method,org/eclipse/jface/viewers/TableLayout/computeSize/Composite;int;int;boolean,""
2668,method,org/eclipse/jface/viewers/TableLayout/layout/Composite;boolean,""
2669,method,org/eclipse/jface/viewers/TableLayout/TableLayout/," Creates a new table layout.\n"
2671,method,org/eclipse/jface/viewers/ColumnPixelData/ColumnPixelData/int," Creates a resizable column width of the given number of pixels.\n\n @param widthInPixels the width of column in pixels\n"
2672,method,org/eclipse/jface/viewers/ColumnPixelData/ColumnPixelData/int;boolean," Creates a column width of the given number of pixels.\n\n @param widthInPixels the width of column in pixels\n @param resizable <code>true</code> if the column is resizable,\n   and <code>false</code> if size of the column is fixed\n"
2673,method,org/eclipse/jface/viewers/ColumnPixelData/ColumnPixelData/int;boolean;boolean," Creates a column width of the given number of pixels.\n \n @param widthInPixels\n            the width of column in pixels\n @param resizable\n            <code>true</code> if the column is resizable, and\n            <code>false</code> if size of the column is fixed\n @param addTrim\n            <code>true</code> to allocate extra width to the column to\n            account for trim taken by the column itself,\n            <code>false</code> to use the given width exactly\n @since 3.1\n"
2674,field,org/eclipse/jface/viewers/ColumnPixelData/width," The column's width in pixels.\n"
2677,method,org/eclipse/jface/viewers/TextCellEditor/createControl/Composite,""
2678,method,org/eclipse/jface/viewers/TextCellEditor/doGetValue/," The <code>TextCellEditor</code> implementation of\n this <code>CellEditor</code> framework method returns\n the text string.\n\n @return the text string\n"
2679,method,org/eclipse/jface/viewers/TextCellEditor/doSetFocus/,""
2680,method,org/eclipse/jface/viewers/TextCellEditor/doSetValue/Object," The <code>TextCellEditor</code> implementation of\n this <code>CellEditor</code> framework method accepts\n a text string (type <code>String</code>).\n\n @param value a text string (type <code>String</code>)\n"
2682,method,org/eclipse/jface/viewers/TextCellEditor/getLayoutData/," Since a text editor field is scrollable we don't\n set a minimumSize.\n"
2683,method,org/eclipse/jface/viewers/TextCellEditor/handleDefaultSelection/SelectionEvent," Handles a default selection event from the text control by applying the editor\n value and deactivating this cell editor.\n \n @param event the selection event\n \n @since 3.0\n"
2684,method,org/eclipse/jface/viewers/TextCellEditor/isCopyEnabled/," The <code>TextCellEditor</code>  implementation of this \n <code>CellEditor</code> method returns <code>true</code> if \n the current selection is not empty.\n"
2685,method,org/eclipse/jface/viewers/TextCellEditor/isCutEnabled/," The <code>TextCellEditor</code>  implementation of this \n <code>CellEditor</code> method returns <code>true</code> if \n the current selection is not empty.\n"
2686,method,org/eclipse/jface/viewers/TextCellEditor/isDeleteEnabled/," The <code>TextCellEditor</code>  implementation of this \n <code>CellEditor</code> method returns <code>true</code>\n if there is a selection or if the caret is not positioned \n at the end of the text.\n"
2687,method,org/eclipse/jface/viewers/TextCellEditor/isPasteEnabled/," The <code>TextCellEditor</code>  implementation of this \n <code>CellEditor</code> method always returns <code>true</code>.\n"
2688,method,org/eclipse/jface/viewers/TextCellEditor/isSaveAllEnabled/," Check if save all is enabled\n @return true if it is \n"
2690,method,org/eclipse/jface/viewers/TextCellEditor/keyReleaseOccured/KeyEvent," Processes a key release event that occurred in this cell editor.\n <p>\n The <code>TextCellEditor</code> implementation of this framework method \n ignores when the RETURN key is pressed since this is handled in \n <code>handleDefaultSelection</code>.\n An exception is made for Ctrl+Enter for multi-line texts, since\n a default selection event is not sent in this case. \n </p>\n\n @param keyEvent the key event\n"
2691,method,org/eclipse/jface/viewers/TextCellEditor/performCopy/," The <code>TextCellEditor</code> implementation of this\n <code>CellEditor</code> method copies the\n current selection to the clipboard. \n"
2692,method,org/eclipse/jface/viewers/TextCellEditor/performCut/," The <code>TextCellEditor</code> implementation of this\n <code>CellEditor</code> method cuts the\n current selection to the clipboard. \n"
2693,method,org/eclipse/jface/viewers/TextCellEditor/performDelete/," The <code>TextCellEditor</code> implementation of this\n <code>CellEditor</code> method deletes the\n current selection or, if there is no selection,\n the character next character from the current position. \n"
2694,method,org/eclipse/jface/viewers/TextCellEditor/performPaste/," The <code>TextCellEditor</code> implementation of this\n <code>CellEditor</code> method pastes the\n the clipboard contents over the current selection. \n"
2695,method,org/eclipse/jface/viewers/TextCellEditor/performSelectAll/," The <code>TextCellEditor</code> implementation of this\n <code>CellEditor</code> method selects all of the\n current text. \n"
2697,method,org/eclipse/jface/viewers/TextCellEditor/TextCellEditor/," Creates a new text string cell editor with no control\n The cell editor value is the string itself, which is initially the empty\n string. Initially, the cell editor has no cell validator.\n \n @since 2.1\n"
2698,method,org/eclipse/jface/viewers/TextCellEditor/TextCellEditor/Composite," Creates a new text string cell editor parented under the given control.\n The cell editor value is the string itself, which is initially the empty string. \n Initially, the cell editor has no cell validator.\n\n @param parent the parent control\n"
2699,method,org/eclipse/jface/viewers/TextCellEditor/TextCellEditor/Composite;int," Creates a new text string cell editor parented under the given control.\n The cell editor value is the string itself, which is initially the empty string. \n Initially, the cell editor has no cell validator.\n\n @param parent the parent control\n @param style the style bits\n @since 2.1\n"
2700,field,org/eclipse/jface/viewers/TextCellEditor/text," The text control; initially <code>null</code>.\n"
2703,method,org/eclipse/jface/viewers/OwnerDrawLabelProvider/dispose/ColumnViewer;ViewerColumn,""
2706,method,org/eclipse/jface/viewers/OwnerDrawLabelProvider/update/ViewerCell,""
2708,method,org/eclipse/jface/viewers/OwnerDrawLabelProvider/measure/Event;Object," Handle the measure event.\n \n @param event\n            the measure event\n @param element\n            the model element\n @see SWT#MeasureItem\n"
2709,method,org/eclipse/jface/viewers/OwnerDrawLabelProvider/paint/Event;Object," Handle the paint event.\n \n @param event\n            the paint event\n @param element\n            the model element\n @see SWT#PaintItem\n"
2711,method,org/eclipse/jface/viewers/OwnerDrawLabelProvider/OwnerDrawLabelProvider/," Create a new instance of the receiver based on a column viewer.\n \n"
2712,class,org/eclipse/jface/viewers/SelectionChangedEvent," Event object describing a selection change. The source of these\n events is a selection provider.\n\n @see ISelection\n @see ISelectionProvider\n @see ISelectionChangedListener\n"
2713,method,org/eclipse/jface/viewers/SelectionChangedEvent/getSelection/," Returns the selection.\n\n @return the selection\n"
2714,method,org/eclipse/jface/viewers/SelectionChangedEvent/getSelectionProvider/," Returns the selection provider that is the source of this event.\n\n @return the originating selection provider\n"
2715,method,org/eclipse/jface/viewers/SelectionChangedEvent/SelectionChangedEvent/ISelectionProvider;ISelection," Creates a new event for the given source and selection.\n\n @param source the selection provider\n @param selection the selection\n"
2716,field,org/eclipse/jface/viewers/SelectionChangedEvent/selection," The selection.\n"
2719,method,org/eclipse/jface/viewers/ContentViewer/getInput/," The <code>ContentViewer</code> implementation of this <code>IInputProvider</code> \n method returns the current input of this viewer, or <code>null</code>\n if none. The viewer's input provides the "model" for the viewer's\n content.\n"
2728,method,org/eclipse/jface/viewers/ContentViewer/ContentViewer/," Creates a content viewer with no input, no content provider, and a\n default label provider.\n"
2729,interface,org/eclipse/jface/viewers/ICheckStateListener," A listener which is notified of changes to the checked\n state of items in checkbox viewers.\n\n @see CheckStateChangedEvent\n"
2730,method,org/eclipse/jface/viewers/ICheckStateListener/checkStateChanged/CheckStateChangedEvent," Notifies of a change to the checked state of an element.\n\n @param event event object describing the change\n"
2732,method,org/eclipse/jface/viewers/CellNavigationStrategy/isNavigationEvent/ColumnViewer;Event," is the given event an event which moves the selection to another cell\n \n @param viewer\n            the viewer we are working for\n @param event\n            the key event\n @return <code>true</code> if a new cell is searched\n"
2733,method,org/eclipse/jface/viewers/CellNavigationStrategy/isCollapseEvent/ColumnViewer;ViewerCell;Event," @param viewer\n            the viewer we are working for\n @param cellToCollapse\n            the cell to collapse\n @param event\n            the key event\n @return <code>true</code> if this event triggers collapsing of a node\n"
2734,method,org/eclipse/jface/viewers/CellNavigationStrategy/isExpandEvent/ColumnViewer;ViewerCell;Event," @param viewer\n            the viewer we are working for\n @param cellToExpand\n            the cell to expand\n @param event\n            the key event\n @return <code>true</code> if this event triggers expanding of a node\n"
2735,method,org/eclipse/jface/viewers/CellNavigationStrategy/expand/ColumnViewer;ViewerCell;Event," @param viewer\n            the viewer working for\n @param cellToExpand\n            the cell the user wants to expand\n @param event\n            the event triggering the expansion\n"
2736,method,org/eclipse/jface/viewers/CellNavigationStrategy/collapse/ColumnViewer;ViewerCell;Event," @param viewer\n            the viewer working for\n @param cellToCollapse\n            the cell the user wants to collapse\n @param event\n            the event triggering the expansion\n"
2737,method,org/eclipse/jface/viewers/CellNavigationStrategy/findSelectedCell/ColumnViewer;ViewerCell;Event," @param viewer\n            the viewer we are working for\n @param currentSelectedCell\n            the cell currently selected\n @param event\n            the key event\n @return the cell which is highlighted next or <code>null</code> if the\n         default implementation is taken. E.g. it's fairly impossible to\n         react on PAGE_DOWN requests\n"
2738,method,org/eclipse/jface/viewers/CellNavigationStrategy/shouldCancelEvent/ColumnViewer;Event," This method is consulted to decide whether an event has to be canceled or\n not. By default events who collapse/expand tree-nodes are canceled\n \n @param viewer\n            the viewer working for\n @param event\n            the event\n @return <code>true</code> if the event has to be canceled\n"
2740,method,org/eclipse/jface/viewers/CellNavigationStrategy/CellNavigationStrategy/,""
2744,method,org/eclipse/jface/viewers/ArrayContentProvider/inputChanged/Viewer;Object;Object," This implementation does nothing.\n"
2745,method,org/eclipse/jface/viewers/ArrayContentProvider/dispose/," This implementation does nothing.\n"
2746,method,org/eclipse/jface/viewers/ArrayContentProvider/ArrayContentProvider/,""
2747,interface,org/eclipse/jface/viewers/ITableColorProvider," Interface to provide color representation for a given cell within\n the row for an element in a table.\n @since 3.1\n"
2748,method,org/eclipse/jface/viewers/ITableColorProvider/getForeground/Object;int," Provides a foreground color for the given element.\n \n @param element the element\n @param columnIndex the zero-based index of the column in which\n 	the color appears\n @return the foreground color for the element, or <code>null</code> to\n         use the default foreground color\n"
2749,method,org/eclipse/jface/viewers/ITableColorProvider/getBackground/Object;int," Provides a background color for the given element at the specified index\n \n @param element the element\n @param columnIndex the zero-based index of the column in which the color appears\n @return the background color for the element, or <code>null</code> to\n         use the default background color\n  \n"
2751,method,org/eclipse/jface/viewers/DecorationOverlayIcon/equals/Object,""
2752,method,org/eclipse/jface/viewers/DecorationOverlayIcon/hashCode/,""
2753,method,org/eclipse/jface/viewers/DecorationOverlayIcon/drawCompositeImage/int;int,""
2754,method,org/eclipse/jface/viewers/DecorationOverlayIcon/getSize/,""
2755,method,org/eclipse/jface/viewers/DecorationOverlayIcon/getTransparentPixel/,""
2756,method,org/eclipse/jface/viewers/DecorationOverlayIcon/DecorationOverlayIcon/Image;ImageDescriptor[];Point," Create the decoration overlay for the base image using the array of\n provided overlays. The indices of the array correspond to the values\n of the 5 overlay constants defined on {@link IDecoration} \n ({@link IDecoration#TOP_LEFT}, {@link IDecoration#TOP_RIGHT},\n {@link IDecoration#BOTTOM_LEFT}, {@link IDecoration#BOTTOM_RIGHT} \n and{@link IDecoration#UNDERLAY}).\n \n @param baseImage the base image\n @param overlaysArray the overlay images\n @param sizeValue the size of the resulting image\n"
2757,method,org/eclipse/jface/viewers/DecorationOverlayIcon/DecorationOverlayIcon/Image;ImageDescriptor[]," Create the decoration overlay for the base image using the array of\n provided overlays. The indices of the array correspond to the values\n of the 5 overlay constants defined on {@link IDecoration} \n ({@link IDecoration#TOP_LEFT}, {@link IDecoration#TOP_RIGHT},\n {@link IDecoration#BOTTOM_LEFT}, {@link IDecoration#BOTTOM_RIGHT} \n and {@link IDecoration#UNDERLAY}).\n \n @param baseImage the base image\n @param overlaysArray the overlay images\n"
2758,method,org/eclipse/jface/viewers/DecorationOverlayIcon/DecorationOverlayIcon/Image;ImageDescriptor;int," Create a decoration overlay icon that will place the given overlay icon in\n the given quadrant of the base image.\n @param baseImage the base image\n @param overlayImage the overlay image\n @param quadrant the quadrant (one of {@link IDecoration} \n ({@link IDecoration#TOP_LEFT}, {@link IDecoration#TOP_RIGHT},\n {@link IDecoration#BOTTOM_LEFT}, {@link IDecoration#BOTTOM_RIGHT} \n or {@link IDecoration#UNDERLAY})\n"
2760,method,org/eclipse/jface/viewers/IDecoration/addPrefix/String," Adds a prefix to the element's label.\n \n @param prefix\n            the prefix\n"
2761,method,org/eclipse/jface/viewers/IDecoration/addSuffix/String," Adds a suffix to the element's label.\n \n @param suffix\n            the suffix\n"
2762,method,org/eclipse/jface/viewers/IDecoration/addOverlay/ImageDescriptor," Adds an overlay to the element's image.\n \n @param overlay\n            the overlay image descriptor\n"
2763,method,org/eclipse/jface/viewers/IDecoration/addOverlay/ImageDescriptor;int," Adds an overlay to the element's image.\n \n @param overlay\n            the overlay image descriptor\n @param quadrant\n            The constant for the quadrant to draw the image on.\n"
2764,method,org/eclipse/jface/viewers/IDecoration/setForegroundColor/Color," Set the foreground color for this decoration.\n @param color the color to be set for the foreground\n \n @since 3.1\n"
2765,method,org/eclipse/jface/viewers/IDecoration/setBackgroundColor/Color," Set the background color for this decoration.\n @param color the color to be set for the background\n \n @since 3.1\n"
2766,method,org/eclipse/jface/viewers/IDecoration/setFont/Font," Set the font for this decoration.\n @param font the font to use in this decoration\n \n @since 3.1\n"
2767,method,org/eclipse/jface/viewers/IDecoration/getDecorationContext/," Return the decoration context in which this decoration\n will be applied.\n @return the decoration context\n \n @since 3.2\n"
2768,field,org/eclipse/jface/viewers/IDecoration/TOP_LEFT," Constants for placement of image decorations.\n"
2769,field,org/eclipse/jface/viewers/IDecoration/TOP_RIGHT," Constant for the top right quadrant.\n"
2770,field,org/eclipse/jface/viewers/IDecoration/BOTTOM_LEFT," Constant for the bottom left quadrant.\n"
2771,field,org/eclipse/jface/viewers/IDecoration/BOTTOM_RIGHT," Constant for the bottom right quadrant.\n"
2772,field,org/eclipse/jface/viewers/IDecoration/UNDERLAY," Constant for the underlay.\n"
2774,field,org/eclipse/jface/viewers/IDecoration/ENABLE_REPLACE," Constant that is used as the property key on an\n {@link IDecorationContext}. To enable image replacement, set to\n {@link Boolean#TRUE}.\n \n @since 3.4\n @see IDecorationContext\n"
2775,interface,org/eclipse/jface/viewers/IInputProvider," Interface common to all objects that provide an input.\n"
2776,method,org/eclipse/jface/viewers/IInputProvider/getInput/," Returns the input.\n\n @return the input object\n"
2777,class,org/eclipse/jface/viewers/CheckStateChangedEvent," Event object describing a change to the checked state\n of a viewer element.\n\n @see ICheckStateListener\n"
2778,method,org/eclipse/jface/viewers/CheckStateChangedEvent/getCheckable/," Returns the checkable that is the source of this event.\n\n @return the originating checkable\n"
2779,method,org/eclipse/jface/viewers/CheckStateChangedEvent/getChecked/," Returns the checked state of the element.\n\n @return the checked state\n"
2780,method,org/eclipse/jface/viewers/CheckStateChangedEvent/getElement/," Returns the element whose check state changed.\n\n @return the element\n"
2781,method,org/eclipse/jface/viewers/CheckStateChangedEvent/CheckStateChangedEvent/ICheckable;Object;boolean," Creates a new event for the given source, element, and checked state.\n\n @param source the source\n @param element the element\n @param state the checked state\n"
2783,method,org/eclipse/jface/viewers/IViewerLabelProvider/updateLabel/ViewerLabel;Object," Updates the label for the given element.\n \n @param label the label to update\n @param element the element\n"
2784,class,org/eclipse/jface/viewers/BaseLabelProvider," BaseLabelProvider is a default concrete implementation of\n {@link IBaseLabelProvider} \n \n @since 3.3\n \n"
2785,method,org/eclipse/jface/viewers/BaseLabelProvider/addListener/ILabelProviderListener,""
2788,method,org/eclipse/jface/viewers/BaseLabelProvider/removeListener/ILabelProviderListener,""
2790,method,org/eclipse/jface/viewers/BaseLabelProvider/BaseLabelProvider/,""
2792,method,org/eclipse/jface/viewers/ViewerComparator/getComparator/," Returns the comparator used to sort strings.\n \n @return the comparator used to sort strings\n"
2797,method,org/eclipse/jface/viewers/ViewerComparator/ViewerComparator/," Creates a new {@link ViewerComparator}, which uses the default comparator\n to sort strings.\n\n"
2798,method,org/eclipse/jface/viewers/ViewerComparator/ViewerComparator/Comparator," Creates a new {@link ViewerComparator}, which uses the given comparator\n to sort strings.\n \n @param comparator\n"
2799,interface,org/eclipse/jface/viewers/ITreeViewerListener,"\n A listener which is notified when a tree viewer expands or collapses\n a node.\n"
2800,method,org/eclipse/jface/viewers/ITreeViewerListener/treeCollapsed/TreeExpansionEvent," Notifies that a node in the tree has been collapsed.\n\n @param event event object describing details\n"
2801,method,org/eclipse/jface/viewers/ITreeViewerListener/treeExpanded/TreeExpansionEvent," Notifies that a node in the tree has been expanded.\n\n @param event event object describing details\n"
2803,method,org/eclipse/jface/viewers/IBaseLabelProvider/addListener/ILabelProviderListener," Adds a listener to this label provider. \n Has no effect if an identical listener is already registered.\n <p>\n Label provider listeners are informed about state changes \n that affect the rendering of the viewer that uses this label provider.\n </p>\n\n @param listener a label provider listener\n"
2805,method,org/eclipse/jface/viewers/IBaseLabelProvider/isLabelProperty/Object;String," Returns whether the label would be affected \n by a change to the given property of the given element.\n This can be used to optimize a non-structural viewer update.\n If the property mentioned in the update does not affect the label,\n then the viewer need not update the label.\n\n @param element the element\n @param property the property\n @return <code>true</code> if the label would be affected,\n    and <code>false</code> if it would be unaffected\n"
2806,method,org/eclipse/jface/viewers/IBaseLabelProvider/removeListener/ILabelProviderListener," Removes a listener to this label provider.\n Has no affect if an identical listener is not registered.\n\n @param listener a label provider listener\n"
2807,interface,org/eclipse/jface/viewers/ISelection," Interface for a selection.\n\n @see ISelectionProvider\n @see ISelectionChangedListener\n @see SelectionChangedEvent\n"
2808,method,org/eclipse/jface/viewers/ISelection/isEmpty/," Returns whether this selection is empty.\n \n @return <code>true</code> if this selection is empty,\n   and <code>false</code> otherwise\n"
2810,method,org/eclipse/jface/viewers/ITableLabelProvider/getColumnImage/Object;int," Returns the label image for the given column of the given element.\n\n @param element the object representing the entire row, or \n    <code>null</code> indicating that no input object is set\n    in the viewer\n @param columnIndex the zero-based index of the column in which\n   the label appears\n @return Image or <code>null</code> if there is no image for the \n  given object at columnIndex\n"
2811,method,org/eclipse/jface/viewers/ITableLabelProvider/getColumnText/Object;int," Returns the label text for the given column of the given element.\n\n @param element the object representing the entire row, or\n   <code>null</code> indicating that no input object is set\n   in the viewer\n @param columnIndex the zero-based index of the column in which the label appears\n @return String or or <code>null</code> if there is no text for the \n  given object at columnIndex\n"
2813,method,org/eclipse/jface/viewers/ColumnWeightData/ColumnWeightData/int," Creates a resizable column width with the given weight and a default\n minimum width.\n\n @param weight the weight of the column\n"
2814,method,org/eclipse/jface/viewers/ColumnWeightData/ColumnWeightData/int;int," Creates a resizable column width with the given weight and minimum width.\n\n @param weight the weight of the column\n @param minimumWidth the minimum width of the column in pixels\n"
2815,method,org/eclipse/jface/viewers/ColumnWeightData/ColumnWeightData/int;int;boolean," Creates a column width with the given weight and minimum width.\n\n @param weight the weight of the column\n @param minimumWidth the minimum width of the column in pixels\n @param resizable <code>true</code> if the column is resizable,\n   and <code>false</code> if size of the column is fixed\n"
2816,method,org/eclipse/jface/viewers/ColumnWeightData/ColumnWeightData/int;boolean," Creates a column width with the given weight and a default\n minimum width.\n\n @param weight the weight of the column\n @param resizable <code>true</code> if the column is resizable,\n   and <code>false</code> if size of the column is fixed\n"
2817,field,org/eclipse/jface/viewers/ColumnWeightData/MINIMUM_WIDTH,"\n Default width of a column (in pixels).\n"
2818,field,org/eclipse/jface/viewers/ColumnWeightData/minimumWidth," The column's minimum width in pixels.\n"
2819,field,org/eclipse/jface/viewers/ColumnWeightData/weight," The column's weight.\n"
2821,method,org/eclipse/jface/viewers/ColumnLabelProvider/update/ViewerCell,""
2822,method,org/eclipse/jface/viewers/ColumnLabelProvider/getFont/Object,""
2823,method,org/eclipse/jface/viewers/ColumnLabelProvider/getBackground/Object,""
2824,method,org/eclipse/jface/viewers/ColumnLabelProvider/getForeground/Object,""
2825,method,org/eclipse/jface/viewers/ColumnLabelProvider/getImage/Object,""
2826,method,org/eclipse/jface/viewers/ColumnLabelProvider/getText/Object,""
2827,method,org/eclipse/jface/viewers/ColumnLabelProvider/ColumnLabelProvider/,""
2829,method,org/eclipse/jface/viewers/CheckboxCellEditor/activate/," The <code>CheckboxCellEditor</code> implementation of\n this <code>CellEditor</code> framework method simulates\n the toggling of the checkbox control and notifies\n listeners with <code>ICellEditorListener.applyEditorValue</code>.\n"
2830,method,org/eclipse/jface/viewers/CheckboxCellEditor/createControl/Composite," The <code>CheckboxCellEditor</code> implementation of\n this <code>CellEditor</code> framework method does\n nothing and returns <code>null</code>.\n"
2831,method,org/eclipse/jface/viewers/CheckboxCellEditor/doGetValue/," The <code>CheckboxCellEditor</code> implementation of\n this <code>CellEditor</code> framework method returns\n the checkbox setting wrapped as a <code>Boolean</code>.\n\n @return the Boolean checkbox value\n"
2832,method,org/eclipse/jface/viewers/CheckboxCellEditor/doSetFocus/,""
2833,method,org/eclipse/jface/viewers/CheckboxCellEditor/doSetValue/Object," The <code>CheckboxCellEditor</code> implementation of\n this <code>CellEditor</code> framework method accepts\n a value wrapped as a <code>Boolean</code>.\n\n @param value a Boolean value\n"
2834,method,org/eclipse/jface/viewers/CheckboxCellEditor/activate/ColumnViewerEditorActivationEvent,""
2835,method,org/eclipse/jface/viewers/CheckboxCellEditor/CheckboxCellEditor/," Creates a new checkbox cell editor with no control\n @since 2.1\n"
2836,method,org/eclipse/jface/viewers/CheckboxCellEditor/CheckboxCellEditor/Composite," Creates a new checkbox cell editor parented under the given control.\n The cell editor value is a boolean value, which is initially <code>false</code>.\n Initially, the cell editor has no cell validator.\n\n @param parent the parent control\n"
2837,method,org/eclipse/jface/viewers/CheckboxCellEditor/CheckboxCellEditor/Composite;int," Creates a new checkbox cell editor parented under the given control.\n The cell editor value is a boolean value, which is initially <code>false</code>.\n Initially, the cell editor has no cell validator.\n\n @param parent the parent control\n @param style the style bits\n @since 2.1\n"
2843,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationListener/ColumnViewerEditorActivationListener/,""
2845,method,org/eclipse/jface/viewers/IDecorationContext/getProperty/String," Get the value of the given property or <code>null</code>\n if the property does not exist in this context.\n @param property the property\n @return the value of the given property or <code>null</code>\n"
2846,method,org/eclipse/jface/viewers/IDecorationContext/getProperties/," Return the properties that exist in this context\n (i.e. the set of properties that have values associated\n with them.\n @return the properties that exist in this context\n"
2848,method,org/eclipse/jface/viewers/ICellModifier/canModify/Object;String," Checks whether the given property of the given element can be \n modified.\n\n @param element the element\n @param property the property\n @return <code>true</code> if the property can be modified,\n   and <code>false</code> if it is not modifiable\n"
2849,method,org/eclipse/jface/viewers/ICellModifier/getValue/Object;String," Returns the value for the given property of the given element.\n Returns <code>null</code> if the element does not have the given property.\n\n @param element the element\n @param property the property\n @return the property value\n"
2852,method,org/eclipse/jface/viewers/DecorationContext/getProperty/String,""
2853,method,org/eclipse/jface/viewers/DecorationContext/getProperties/,""
2854,method,org/eclipse/jface/viewers/DecorationContext/putProperty/String;Object," Set the given property to the given value. Setting the value of\n a property to <code>null</code> removes the property from\n the context.\n @param property the property\n @param value the value of the property or <code>null</code>\n if the property is to be removed.\n"
2855,method,org/eclipse/jface/viewers/DecorationContext/DecorationContext/," Create a decoration context.\n"
2856,field,org/eclipse/jface/viewers/DecorationContext/DEFAULT_CONTEXT," Constant that defines a default decoration context that has\n no context ids associated with it.\n"
2857,interface,org/eclipse/jface/viewers/ILabelProviderListener,"\n A listener which is notified when a label provider's state changes.\n\n @see IBaseLabelProvider#addListener\n @see IBaseLabelProvider#removeListener\n"
2858,method,org/eclipse/jface/viewers/ILabelProviderListener/labelProviderChanged/LabelProviderChangedEvent," Notifies this listener that the state of the label provider \n has changed in a way that affects the labels it computes.\n <p>\n A typical response would be to refresh all labels by \n re-requesting them from the label provider.\n </p>\n\n @param event the label provider change event\n"
2859,interface,org/eclipse/jface/viewers/IOpenListener," A listener which is notified of open events on viewers.\n"
2860,method,org/eclipse/jface/viewers/IOpenListener/open/OpenEvent," Notifies of an open event.\n\n @param event event object describing the open event\n"
2861,class,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider," A {@link DecoratingStyledCellLabelProvider} is a\n {@link DelegatingStyledCellLabelProvider} that uses a nested\n {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider} to compute\n styled text label and image and takes a {@link ILabelDecorator} to decorate\n the label.\n \n <p>\n Use this label provider as a replacement for the\n {@link DecoratingLabelProvider} when decorating styled text labels.\n </p>\n \n <p>\n The {@link DecoratingStyledCellLabelProvider} will try to evaluate the text\n decoration added by the {@link ILabelDecorator} and will apply the style\n returned by {@link #getDecorationStyle(Object)}\n </p>\n <p>\n The {@link ILabelDecorator} can optionally implement {@link IColorDecorator}\n and {@link IFontDecorator} to provide foreground and background color and\n font decoration.\n </p>\n \n @since 3.4\n"
2862,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getDecorationContext/," Returns the decoration context associated with this label provider. It\n will be passed to the decorator if the decorator is an instance of\n {@link LabelDecorator}.\n \n @return the decoration context associated with this label provider\n"
2863,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/setDecorationContext/IDecorationContext," Set the decoration context that will be based to the decorator for this\n label provider if that decorator implements {@link LabelDecorator}.\n \n @param decorationContext\n            the decoration context.\n"
2864,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/update/ViewerCell,""
2865,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getForeground/Object,""
2866,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getBackground/Object,""
2867,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getFont/Object,""
2868,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getImage/Object,""
2869,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getStyledText/Object," Returns the styled text for the label of the given element.\n \n @param element\n            the element for which to provide the styled label text\n @return the styled text string used to label the element\n"
2871,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/getLabelDecorator/," Returns the decorator or <code>null</code> if no decorator is installed\n \n @return the decorator or <code>null</code> if no decorator is installed\n"
2873,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/addListener/ILabelProviderListener,""
2874,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/removeListener/ILabelProviderListener,""
2875,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/isLabelProperty/Object;String,""
2876,method,org/eclipse/jface/viewers/DecoratingStyledCellLabelProvider/dispose/,""
2878,class,org/eclipse/jface/viewers/TreeViewerFocusCellManager," This class is responsible to provide the concept of cells for {@link Tree}.\n This concept is needed to provide features like editor activation with the\n keyboard\n\n @since 3.3\n\n"
2879,method,org/eclipse/jface/viewers/TreeViewerFocusCellManager/getFocusCell/,""
2880,method,org/eclipse/jface/viewers/TreeViewerFocusCellManager/TreeViewerFocusCellManager/TreeViewer;FocusCellHighlighter," Create a new manager using a default navigation strategy:\n <ul>\n <li><code>SWT.ARROW_UP</code>: navigate to cell above</li>\n <li><code>SWT.ARROW_DOWN</code>: navigate to cell below</li>\n <li><code>SWT.ARROW_RIGHT</code>: on first column (collapses if item\n is expanded) else navigate to next visible cell on the right</li>\n <li><code>SWT.ARROW_LEFT</code>: on first column (expands if item is\n collapsed) else navigate to next visible cell on the left</li>\n </ul>\n\n @param viewer\n            the viewer the manager is bound to\n @param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n"
2881,method,org/eclipse/jface/viewers/TreeViewerFocusCellManager/TreeViewerFocusCellManager/TreeViewer;FocusCellHighlighter;CellNavigationStrategy," Create a new manager with a custom navigation strategy\n\n @param viewer\n            the viewer the manager is bound to\n @param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n @param navigationStrategy\n            the strategy used to navigate the cells\n @since 3.4\n"
2883,method,org/eclipse/jface/viewers/TreePath/getSegment/int," Returns the element at the specified index in this path.\n \n @param index\n            index of element to return\n @return element at the specified index\n"
2884,method,org/eclipse/jface/viewers/TreePath/getSegmentCount/," Returns the number of elements in this path.\n \n @return the number of elements in this path\n"
2885,method,org/eclipse/jface/viewers/TreePath/getFirstSegment/," Returns the first element in this path, or <code>null</code> if this\n path has no segments.\n \n @return the first element in this path\n"
2886,method,org/eclipse/jface/viewers/TreePath/getLastSegment/," Returns the last element in this path, or <code>null</code> if this\n path has no segments.\n \n @return the last element in this path\n"
2887,method,org/eclipse/jface/viewers/TreePath/equals/Object,""
2888,method,org/eclipse/jface/viewers/TreePath/hashCode/," (non-Javadoc)\n \n @see java.lang.Object#hashCode()\n"
2892,method,org/eclipse/jface/viewers/TreePath/getParentPath/," Returns a copy of this tree path with one segment removed from the end,\n or <code>null</code> if this tree path has no segments.\n @return a tree path\n"
2893,method,org/eclipse/jface/viewers/TreePath/createChildPath/Object," Returns a copy of this tree path with the given segment added at the end.\n @param newSegment \n @return a tree path\n"
2894,method,org/eclipse/jface/viewers/TreePath/TreePath/Object[]," Constructs a path identifying a leaf node in a tree.\n \n @param segments\n            path of elements to a leaf node in a tree, starting with the\n            root element\n"
2895,field,org/eclipse/jface/viewers/TreePath/EMPTY," Constant for representing an empty tree path.\n"
2896,class,org/eclipse/jface/viewers/ViewerLabel," The ViewerLabel is the class that is passed to a viewer to handle updates of\n labels. It keeps track of both original and updates text.\n \n @see IViewerLabelProvider\n @since 3.0\n"
2897,method,org/eclipse/jface/viewers/ViewerLabel/getImage/," Get the image for the receiver. If the new image has been set return it,\n otherwise return the starting image.\n \n @return Returns the image.\n"
2898,method,org/eclipse/jface/viewers/ViewerLabel/setImage/Image," Set the image for the receiver.\n \n @param image\n            The image to set.\n"
2899,method,org/eclipse/jface/viewers/ViewerLabel/getText/," Get the text for the receiver. If the new text has been set return it,\n otherwise return the starting text.\n \n @return String or <code>null</code> if there was no initial text and\n         nothing was updated.\n"
2901,method,org/eclipse/jface/viewers/ViewerLabel/hasNewImage/," Return whether or not the image has been set.\n \n @return boolean. <code>true</code> if the image has been set to\n         something new.\n \n @since 3.1\n"
2902,method,org/eclipse/jface/viewers/ViewerLabel/hasNewText/," Return whether or not the text has been set.\n \n @return boolean. <code>true</code> if the text has been set to\n         something new.\n"
2903,method,org/eclipse/jface/viewers/ViewerLabel/hasNewBackground/," Return whether or not the background color has been set.\n \n @return boolean. <code>true</code> if the value has been set.\n"
2904,method,org/eclipse/jface/viewers/ViewerLabel/hasNewForeground/," Return whether or not the foreground color has been set.\n \n @return boolean. <code>true</code> if the value has been set.\n \n @since 3.1\n"
2905,method,org/eclipse/jface/viewers/ViewerLabel/hasNewFont/," Return whether or not the font has been set.\n \n @return boolean. <code>true</code> if the value has been set.\n \n @since 3.1\n"
2906,method,org/eclipse/jface/viewers/ViewerLabel/getBackground/," Get the background Color.\n \n @return Color or <code>null</code> if no new value was set.\n \n @since 3.1\n"
2908,method,org/eclipse/jface/viewers/ViewerLabel/getFont/," Get the font.\n \n @return Font or <code>null</code> if no new value was set.\n \n @since 3.1\n"
2910,method,org/eclipse/jface/viewers/ViewerLabel/getForeground/," Get the foreground Color.\n \n @return Color or <code>null</code> if no new value was set.\n \n @since 3.1\n"
2914,method,org/eclipse/jface/viewers/ViewerLabel/hasNewTooltipText/," Return whether or not the tool tip text has been set.\n \n @return <code>boolean</code>. <code>true</code> if the tool tip text\n         has been set.\n \n @since 3.3\n"
2915,method,org/eclipse/jface/viewers/ViewerLabel/getTooltipBackgroundColor/," Return the tool tip background color.\n \n @return {@link Color} or <code>null</code> if the tool tip background\n         color has not been set.\n \n @since 3.3\n"
2917,method,org/eclipse/jface/viewers/ViewerLabel/hasNewTooltipBackgroundColor/," Return whether or not the tool tip background color has been set.\n \n @return <code>boolean</code>. <code>true</code> if the tool tip text\n         has been set.\n \n @since 3.3\n"
2918,method,org/eclipse/jface/viewers/ViewerLabel/getTooltipForegroundColor/," Return the foreground {@link Color}.\n \n @return Returns {@link Color} or <code>null</code> if the tool tip\n         foreground color has not been set.\n \n @since 3.3\n"
2919,method,org/eclipse/jface/viewers/ViewerLabel/setTooltipForegroundColor/Color," Set the foreground {@link Color} for tool tip.\n \n @param tooltipForegroundColor\n            The tooltipForegroundColor to set.\n            \n @since 3.3\n"
2920,method,org/eclipse/jface/viewers/ViewerLabel/hasNewTooltipForegroundColor/," \n Return whether or not the tool tip foreground color has been set.\n \n @return <code>boolean</code>. <code>true</code> if the tool tip foreground\n         has been set.\n \n @since 3.3\n"
2921,method,org/eclipse/jface/viewers/ViewerLabel/getTooltipShift/," @return Returns the tooltipShift.\n @since 3.3\n"
2922,method,org/eclipse/jface/viewers/ViewerLabel/setTooltipShift/Point," @param tooltipShift\n            The tooltipShift to set.\n @since 3.3\n"
2923,method,org/eclipse/jface/viewers/ViewerLabel/hasTooltipShift/," @return Return whether or not the tool tip shift has been set.\n @since 3.3\n"
2924,method,org/eclipse/jface/viewers/ViewerLabel/ViewerLabel/String;Image," Create a new instance of the receiver with the supplied initial text and\n image.\n \n @param initialText\n @param initialImage\n"
2930,method,org/eclipse/jface/viewers/LabelDecorator/prepareDecoration/Object;String;IDecorationContext," Prepare the element for decoration. If it is already decorated and ready for update\n return true. If decoration is pending return false.\n @param element The element to be decorated\n @param originalText The starting text. \n @param context The decoration context\n @return boolean <code>true</code> if the decoration is ready for this element\n"
2931,method,org/eclipse/jface/viewers/LabelDecorator/LabelDecorator/,""
2933,method,org/eclipse/jface/viewers/ColumnLayoutData/ColumnLayoutData/boolean," Creates a new column layout data object.\n\n @param resizable <code>true</code> if the column is resizable, and <code>false</code> if not\n"
2934,field,org/eclipse/jface/viewers/ColumnLayoutData/resizable," Indicates whether the column is resizable.\n"
2935,interface,org/eclipse/jface/viewers/IInputSelectionProvider," Interface common to all objects that provide both an input and\n a selection.\n"
2937,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/getSelectedCellBackgroundColor/ViewerCell," The color to use when rendering the background of the selected cell when\n the control has the input focus\n \n @param cell\n            the cell which is colored\n @return the color or <code>null</code> to use the default\n"
2938,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/getSelectedCellForegroundColor/ViewerCell," The color to use when rendering the foreground (=text) of the selected\n cell when the control has the input focus\n \n @param cell\n            the cell which is colored\n @return the color or <code>null</code> to use the default\n"
2939,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/getSelectedCellForegroundColorNoFocus/ViewerCell," The color to use when rendering the foreground (=text) of the selected\n cell when the control has <b>no</b> input focus\n \n @param cell\n            the cell which is colored\n @return the color or <code>null</code> to use the same used when\n         control has focus\n @since 3.4\n"
2940,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/getSelectedCellBackgroundColorNoFocus/ViewerCell," The color to use when rendering the background of the selected cell when\n the control has <b>no</b> input focus\n \n @param cell\n            the cell which is colored\n @return the color or <code>null</code> to use the same used when\n         control has focus\n @since 3.4\n"
2942,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/focusCellChanged/ViewerCell;ViewerCell,""
2943,method,org/eclipse/jface/viewers/FocusCellOwnerDrawHighlighter/FocusCellOwnerDrawHighlighter/ColumnViewer," Create a new instance which can be passed to a\n {@link TreeViewerFocusCellManager}\n \n @param viewer\n            the viewer\n"
2944,class,org/eclipse/jface/viewers/LabelProviderChangedEvent," Event object describing a label provider state change.\n\n @see ILabelProviderListener\n"
2945,method,org/eclipse/jface/viewers/LabelProviderChangedEvent/getElement/," Returns the first element whose label needs to be updated,\n or <code>null</code> if all labels need to be updated.\n\n @return the element whose label needs to be updated or <code>null</code>\n"
2946,method,org/eclipse/jface/viewers/LabelProviderChangedEvent/getElements/," Returns the elements whose labels need to be updated,\n or <code>null</code> if all labels need to be updated.\n\n @return the element whose labels need to be updated or <code>null</code>\n"
2951,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipImage/Object," Get the image displayed in the tool tip for object.\n \n <p>\n <b>If {@link #getToolTipText(Object)} and\n {@link #getToolTipImage(Object)} both return <code>null</code> the\n control is set back to standard behavior</b>\n </p>\n \n @param object\n            the element for which the tool tip is shown\n @return {@link Image} or <code>null</code> if there is not image.\n"
2952,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipText/Object," Get the text displayed in the tool tip for object.\n \n <p>\n <b>If {@link #getToolTipText(Object)} and\n {@link #getToolTipImage(Object)} both return <code>null</code> the\n control is set back to standard behavior</b>\n </p>\n \n @param element\n            the element for which the tool tip is shown\n @return the {@link String} or <code>null</code> if there is not text to\n         display\n"
2953,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipBackgroundColor/Object," Return the background color used for the tool tip\n \n @param object\n            the {@link Object} for which the tool tip is shown\n \n @return the {@link Color} used or <code>null</code> if you want to use\n         the default color {@link SWT#COLOR_INFO_BACKGROUND}\n @see SWT#COLOR_INFO_BACKGROUND\n"
2954,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipForegroundColor/Object," The foreground color used to display the the text in the tool tip\n \n @param object\n            the {@link Object} for which the tool tip is shown\n @return the {@link Color} used or <code>null</code> if you want to use\n         the default color {@link SWT#COLOR_INFO_FOREGROUND}\n @see SWT#COLOR_INFO_FOREGROUND\n"
2955,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipFont/Object," Get the {@link Font} used to display the tool tip\n \n @param object\n            the element for which the tool tip is shown\n @return {@link Font} or <code>null</code> if the default font is to be\n         used.\n"
2958,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipTimeDisplayed/Object," The time in milliseconds the tool tip is shown for.\n \n @param object\n            the {@link Object} for which the tool tip is shown\n @return time in milliseconds the tool tip is shown for\n"
2959,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipDisplayDelayTime/Object," The time in milliseconds until the tool tip is displayed.\n \n @param object\n            the {@link Object} for which the tool tip is shown\n @return time in milliseconds until the tool tip is displayed\n"
2960,method,org/eclipse/jface/viewers/CellLabelProvider/getToolTipStyle/Object," The {@link SWT} style used to create the {@link CLabel} (see there for\n supported styles). By default {@link SWT#SHADOW_NONE} is used.\n \n @param object\n            the element for which the tool tip is shown\n @return the style used to create the label\n @see CLabel\n"
2961,method,org/eclipse/jface/viewers/CellLabelProvider/update/ViewerCell," Update the label for cell.\n \n @param cell\n            {@link ViewerCell}\n"
2964,method,org/eclipse/jface/viewers/CellLabelProvider/CellLabelProvider/," Create a new instance of the receiver.\n"
2966,method,org/eclipse/jface/viewers/ViewerRow/getBounds/int," Get the bounds of the entry at the columnIndex,\n \n @param columnIndex\n @return {@link Rectangle}\n"
2967,method,org/eclipse/jface/viewers/ViewerRow/getBounds/," Return the bounds for the whole item.\n \n @return {@link Rectangle}\n"
2968,method,org/eclipse/jface/viewers/ViewerRow/getItem/," Return the item for the receiver.\n \n @return {@link Widget}\n"
2969,method,org/eclipse/jface/viewers/ViewerRow/getColumnCount/," Return the number of columns for the receiver.\n \n @return the number of columns\n"
2970,method,org/eclipse/jface/viewers/ViewerRow/getImage/int," Return the image at the columnIndex.\n \n @param columnIndex\n @return {@link Image} or <code>null</code>\n"
2971,method,org/eclipse/jface/viewers/ViewerRow/setImage/int;Image," Set the image at the columnIndex\n \n @param columnIndex\n @param image\n"
2972,method,org/eclipse/jface/viewers/ViewerRow/getText/int," Get the text at the columnIndex.\n \n @param columnIndex\n @return {@link String}\n"
2973,method,org/eclipse/jface/viewers/ViewerRow/setText/int;String," Set the text at the columnIndex\n \n @param columnIndex\n @param text\n"
2974,method,org/eclipse/jface/viewers/ViewerRow/getBackground/int," Get the background at the columnIndex,\n \n @param columnIndex\n @return {@link Color} or <code>null</code>\n"
2975,method,org/eclipse/jface/viewers/ViewerRow/setBackground/int;Color," Set the background at the columnIndex.\n \n @param columnIndex\n @param color\n"
2976,method,org/eclipse/jface/viewers/ViewerRow/getForeground/int," Get the foreground at the columnIndex.\n \n @param columnIndex\n @return {@link Color} or <code>null</code>\n"
2977,method,org/eclipse/jface/viewers/ViewerRow/setForeground/int;Color," Set the foreground at the columnIndex.\n \n @param columnIndex\n @param color\n"
2978,method,org/eclipse/jface/viewers/ViewerRow/getFont/int," Get the font at the columnIndex.\n \n @param columnIndex\n @return {@link Font} or <code>null</code>\n"
2979,method,org/eclipse/jface/viewers/ViewerRow/setFont/int;Font," Set the {@link Font} at the columnIndex.\n \n @param columnIndex\n @param font\n"
2980,method,org/eclipse/jface/viewers/ViewerRow/getCell/Point," Get the ViewerCell at point.\n \n @param point\n @return @return {@link ViewerCell} or <code>null</code> if the point is\n         not in the bounds of a cell\n"
2981,method,org/eclipse/jface/viewers/ViewerRow/getColumnIndex/Point," Get the columnIndex of the point.\n \n @param point\n @return int or -1 if it cannot be found.\n"
2982,method,org/eclipse/jface/viewers/ViewerRow/getControl/," Get the Control for the receiver.\n \n @return {@link Control}\n"
2984,method,org/eclipse/jface/viewers/ViewerRow/getTreePath/," The tree path used to identify an element by the unique path\n \n @return the path\n"
2985,method,org/eclipse/jface/viewers/ViewerRow/clone/,""
2986,method,org/eclipse/jface/viewers/ViewerRow/getElement/," @return the model element\n"
2987,method,org/eclipse/jface/viewers/ViewerRow/hashCode/,""
2988,method,org/eclipse/jface/viewers/ViewerRow/equals/Object,""
2994,method,org/eclipse/jface/viewers/ViewerRow/getStyleRanges/int," Returns the style ranges to be applied on the text label at the column\n index or <code>null</code> if no style ranges have been set.\n \n @param columnIndex\n            the index of the column\n @return styleRanges the styled ranges\n \n @since 3.4\n"
2996,method,org/eclipse/jface/viewers/ViewerRow/isColumnVisible/int," Returns <code>true</code> if the column with the given index is visible\n \n @param columnIndex\n            the column index\n \n @return <code>true</code> if the column is visible\n @since 3.5\n"
2997,method,org/eclipse/jface/viewers/ViewerRow/ViewerRow/,""
2998,field,org/eclipse/jface/viewers/ViewerRow/ABOVE," Constant denoting the row above the current one (value is 1).\n \n @see #getNeighbor(int, boolean)\n"
2999,field,org/eclipse/jface/viewers/ViewerRow/BELOW," Constant denoting the row below the current one (value is 2).\n \n @see #getNeighbor(int, boolean)\n"
3000,interface,org/eclipse/jface/viewers/IFontProvider," Interface to provide font representation for a given element.\n @see org.eclipse.jface.viewers.IFontDecorator\n \n @since 3.0\n"
3001,method,org/eclipse/jface/viewers/IFontProvider/getFont/Object," Provides a font for the given element.\n \n @param element the element\n @return the font for the element, or <code>null</code> \n   to use the default font\n"
3002,class,org/eclipse/jface/viewers/ColumnViewerToolTipSupport," The ColumnViewerTooltipSupport is the class that provides tool tips for\n ColumnViewers.\n\n @since 3.3\n\n"
3005,method,org/eclipse/jface/viewers/ColumnViewerToolTipSupport/getToolTipArea/Event,""
3008,method,org/eclipse/jface/viewers/ColumnViewerToolTipSupport/shouldCreateToolTip/Event,""
3009,method,org/eclipse/jface/viewers/ColumnViewerToolTipSupport/afterHideToolTip/Event,""
3012,method,org/eclipse/jface/viewers/ViewerSorter/getCollator/," Returns the collator used to sort strings.\n\n @return the collator used to sort strings\n @deprecated as of 3.3 Use {@link ViewerComparator#getComparator()}\n"
3013,method,org/eclipse/jface/viewers/ViewerSorter/ViewerSorter/," Creates a new viewer sorter, which uses the default collator\n to sort strings.\n"
3014,method,org/eclipse/jface/viewers/ViewerSorter/ViewerSorter/Collator," Creates a new viewer sorter, which uses the given collator\n to sort strings.\n\n @param collator the collator to use to sort strings\n"
3015,field,org/eclipse/jface/viewers/ViewerSorter/collator," The collator used to sort strings.\n \n @deprecated as of 3.3 Use {@link ViewerComparator#getComparator()}\n"
3016,class,org/eclipse/jface/viewers/TableViewerFocusCellManager," This class is responsible to provide the concept of cells for {@link Table}.\n This concept is needed to provide features like editor activation with the\n keyboard\n\n @since 3.3\n\n"
3017,method,org/eclipse/jface/viewers/TableViewerFocusCellManager/getFocusCell/,""
3018,method,org/eclipse/jface/viewers/TableViewerFocusCellManager/TableViewerFocusCellManager/TableViewer;FocusCellHighlighter," Create a new manager with a default navigation strategy:\n <ul>\n <li><code>SWT.ARROW_UP</code>: navigate to cell above</li>\n <li><code>SWT.ARROW_DOWN</code>: navigate to cell below</li>\n <li><code>SWT.ARROW_RIGHT</code>: navigate to next visible cell on\n the right</li>\n <li><code>SWT.ARROW_LEFT</code>: navigate to next visible cell on the\n left</li>\n </ul>\n\n @param viewer\n            the viewer the manager is bound to\n @param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n"
3019,method,org/eclipse/jface/viewers/TableViewerFocusCellManager/TableViewerFocusCellManager/TableViewer;FocusCellHighlighter;CellNavigationStrategy," Create a new manager\n\n @param viewer\n            the viewer the manager is bound to\n @param focusDrawingDelegate\n            the delegate responsible to highlight selected cell\n @param navigationStrategy\n            the strategy used to navigate the cells\n @since 3.4\n"
3021,method,org/eclipse/jface/viewers/StructuredSelection/equals/Object," Returns whether this structured selection is equal to the given object.\n Two structured selections are equal if they contain the same elements\n in the same order.\n\n @param o the other object\n @return <code>true</code> if they are equal, and <code>false</code> otherwise\n"
3022,method,org/eclipse/jface/viewers/StructuredSelection/getFirstElement/,""
3023,method,org/eclipse/jface/viewers/StructuredSelection/isEmpty/,""
3024,method,org/eclipse/jface/viewers/StructuredSelection/iterator/,""
3025,method,org/eclipse/jface/viewers/StructuredSelection/size/,""
3026,method,org/eclipse/jface/viewers/StructuredSelection/toArray/,""
3027,method,org/eclipse/jface/viewers/StructuredSelection/toList/,""
3029,method,org/eclipse/jface/viewers/StructuredSelection/StructuredSelection/," Creates a new empty selection.  \n See also the static field <code>EMPTY</code> which contains an empty selection singleton.\n\n @see #EMPTY\n"
3032,method,org/eclipse/jface/viewers/StructuredSelection/StructuredSelection/List," Creates a structured selection from the given <code>List</code>. \n @param elements list of selected elements\n"
3035,interface,org/eclipse/jface/viewers/ICheckable," Interface for objects that support elements with a checked state.\n\n @see ICheckStateListener\n @see CheckStateChangedEvent\n"
3036,method,org/eclipse/jface/viewers/ICheckable/addCheckStateListener/ICheckStateListener," Adds a listener for changes to the checked state of elements\n in this viewer.\n Has no effect if an identical listener is already registered.\n\n @param listener a check state listener\n"
3037,method,org/eclipse/jface/viewers/ICheckable/getChecked/Object," Returns the checked state of the given element.\n\n @param element the element\n @return <code>true</code> if the element is checked,\n   and <code>false</code> if not checked\n"
3038,method,org/eclipse/jface/viewers/ICheckable/removeCheckStateListener/ICheckStateListener," Removes the given check state listener from this viewer.\n Has no effect if an identical listener is not registered.\n\n @param listener a check state listener\n"
3040,class,org/eclipse/jface/viewers/TreeNode," A simple data structure that is useful for implemented tree models. This can\n be returned by\n {@link org.eclipse.jface.viewers.IStructuredContentProvider#getElements(Object)}.\n It allows simple delegation of methods from\n {@link org.eclipse.jface.viewers.ITreeContentProvider} such as\n {@link org.eclipse.jface.viewers.ITreeContentProvider#getChildren(Object)},\n {@link org.eclipse.jface.viewers.ITreeContentProvider#getParent(Object)} and\n {@link org.eclipse.jface.viewers.ITreeContentProvider#hasChildren(Object)}\n \n @since 3.2\n"
3041,method,org/eclipse/jface/viewers/TreeNode/equals/Object,""
3045,method,org/eclipse/jface/viewers/TreeNode/hasChildren/," Returns whether the tree has any children.\n \n @return <code>true</code> if its array of children is not\n         <code>null</code> and is non-empty; <code>false</code>\n         otherwise.\n"
3046,method,org/eclipse/jface/viewers/TreeNode/hashCode/,""
3052,method,org/eclipse/jface/viewers/ListViewer/getControl/,""
3053,method,org/eclipse/jface/viewers/ListViewer/getList/," Returns this list viewer's list control.\n\n @return the list control\n"
3054,method,org/eclipse/jface/viewers/ListViewer/reveal/Object,""
3055,method,org/eclipse/jface/viewers/ListViewer/listAdd/String;int,""
3056,method,org/eclipse/jface/viewers/ListViewer/listSetItem/int;String,""
3057,method,org/eclipse/jface/viewers/ListViewer/listGetSelectionIndices/,""
3058,method,org/eclipse/jface/viewers/ListViewer/listGetItemCount/,""
3059,method,org/eclipse/jface/viewers/ListViewer/listSetItems/String[],""
3060,method,org/eclipse/jface/viewers/ListViewer/listRemoveAll/,""
3061,method,org/eclipse/jface/viewers/ListViewer/listRemove/int,""
3062,method,org/eclipse/jface/viewers/ListViewer/listSetSelection/int[],""
3063,method,org/eclipse/jface/viewers/ListViewer/listDeselectAll/,""
3064,method,org/eclipse/jface/viewers/ListViewer/listShowSelection/,""
3065,method,org/eclipse/jface/viewers/ListViewer/listGetTopIndex/,""
3066,method,org/eclipse/jface/viewers/ListViewer/listSetTopIndex/int,""
3067,method,org/eclipse/jface/viewers/ListViewer/setSelectionToWidget/List;boolean,""
3068,method,org/eclipse/jface/viewers/ListViewer/ListViewer/Composite," Creates a list viewer on a newly-created list control under the given parent.\n The list control is created using the SWT style bits <code>MULTI, H_SCROLL, V_SCROLL,</code> and <code>BORDER</code>.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n"
3069,method,org/eclipse/jface/viewers/ListViewer/ListViewer/Composite;int," Creates a list viewer on a newly-created list control under the given parent.\n The list control is created using the given SWT style bits.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n @param style the SWT style bits\n"
3070,method,org/eclipse/jface/viewers/ListViewer/ListViewer/org/eclipse/swt/widgets/List," Creates a list viewer on the given list control.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param list the list control\n"
3071,class,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent," This event is passed on when a cell-editor is going to be activated\n \n @since 3.3\n \n"
3072,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/ColumnViewerEditorActivationEvent/ViewerCell," This constructor can be used when no event exists. The type set is\n {@link #PROGRAMMATIC}\n \n @param cell\n            the cell\n"
3073,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/ColumnViewerEditorActivationEvent/ViewerCell;MouseEvent," This constructor is used for all types of mouse events. Currently the\n type is can be {@link #MOUSE_CLICK_SELECTION} and\n {@link #MOUSE_DOUBLE_CLICK_SELECTION}\n \n @param cell\n            the cell source of the event\n @param event\n            the event\n"
3074,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/ColumnViewerEditorActivationEvent/ViewerCell;KeyEvent," @param cell\n            the cell source of the event\n @param event\n            the event\n"
3075,method,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/ColumnViewerEditorActivationEvent/ViewerCell;TraverseEvent," This constructor is used to mark the activation triggered by a traversal\n \n @param cell\n            the cell source of the event\n @param event\n            the event\n"
3076,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/KEY_PRESSED," if a key is pressed on a selected cell\n"
3077,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/MOUSE_CLICK_SELECTION," if a cell is selected using a single click of the mouse\n"
3078,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/MOUSE_DOUBLE_CLICK_SELECTION," if a cell is selected using double clicking of the mouse\n"
3079,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/PROGRAMMATIC," if a cell is activated using code like e.g\n {@link ColumnViewer#editElement(Object, int)}\n"
3080,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/TRAVERSAL," is a cell is activated by traversing\n"
3081,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/sourceEvent," the original event triggered\n"
3082,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/time," The time the event is triggered\n"
3083,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/eventType," The event type triggered:\n <ul>\n <li>{@link #KEY_PRESSED} if a key is pressed on a selected cell</li>\n <li>{@link #MOUSE_CLICK_SELECTION} if a cell is selected using a single\n click of the mouse</li>\n <li>{@link #MOUSE_DOUBLE_CLICK_SELECTION} if a cell is selected using\n double clicking of the mouse</li>\n </ul>\n"
3086,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/stateMask," The statemask\n"
3087,field,org/eclipse/jface/viewers/ColumnViewerEditorActivationEvent/cancel," Cancel the event (=> editor is not activated)\n"
3088,interface,org/eclipse/jface/viewers/ILightweightLabelDecorator," The <code>ILightweightLabelDecorator</code> is a decorator that decorates\n using a prefix, suffix and overlay image rather than doing all \n of the image and text management itself like an <code>ILabelDecorator</code>.\n"
3089,method,org/eclipse/jface/viewers/ILightweightLabelDecorator/decorate/Object;IDecoration," Calculates decorations based on element. \n \n @param element the element to decorate\n @param decoration the decoration to set\n"
3090,interface,org/eclipse/jface/viewers/IStructuredContentProvider," An interface to content providers for structured viewers.\n\n @see StructuredViewer\n"
3096,class,org/eclipse/jface/viewers/TreeViewerEditor," This is an editor implementation for {@link Tree}\n\n @since 3.3\n"
3097,method,org/eclipse/jface/viewers/TreeViewerEditor/create/TreeViewer;SWTFocusCellManager;ColumnViewerEditorActivationStrategy;int," Create a customized editor with focusable cells\n\n @param viewer\n            the viewer the editor is created for\n @param focusCellManager\n            the cell focus manager if one needed else <code>null</code>\n @param editorActivationStrategy\n            activation strategy to control if an editor activated\n @param feature\n            bit mask controlling the editor\n            <ul>\n            <li>{@link ColumnViewerEditor#DEFAULT}</li>\n            <li>{@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}</li>\n            <li>{@link ColumnViewerEditor#TABBING_HORIZONTAL}</li>\n            <li>{@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}</li>\n            <li>{@link ColumnViewerEditor#TABBING_VERTICAL}</li>\n            </ul>\n @see #create(TreeViewer, ColumnViewerEditorActivationStrategy, int)\n"
3098,method,org/eclipse/jface/viewers/TreeViewerEditor/create/TreeViewer;ColumnViewerEditorActivationStrategy;int," Create a customized editor whose activation process is customized\n\n @param viewer\n            the viewer the editor is created for\n @param editorActivationStrategy\n            activation strategy to control if an editor activated\n @param feature\n            bit mask controlling the editor\n            <ul>\n            <li>{@link ColumnViewerEditor#DEFAULT}</li>\n            <li>{@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}</li>\n            <li>{@link ColumnViewerEditor#TABBING_HORIZONTAL}</li>\n            <li>{@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}</li>\n            <li>{@link ColumnViewerEditor#TABBING_VERTICAL}</li>\n            </ul>\n"
3099,method,org/eclipse/jface/viewers/TreeViewerEditor/setEditor/Control;Item;int,""
3100,method,org/eclipse/jface/viewers/TreeViewerEditor/setLayoutData/LayoutData,""
3101,method,org/eclipse/jface/viewers/TreeViewerEditor/getFocusCell/,""
3102,method,org/eclipse/jface/viewers/TreeViewerEditor/updateFocusCell/ViewerCell;ColumnViewerEditorActivationEvent,""
3103,interface,org/eclipse/jface/viewers/ITreePathLabelProvider," An extension to {@link ILabelProvider} that is given the \n path of the element being decorated, when it is available.\n @since 3.2\n"
3104,method,org/eclipse/jface/viewers/ITreePathLabelProvider/updateLabel/ViewerLabel;TreePath," Updates the label for the given element.\n \n @param label the label to update\n @param elementPath the path of the element being decorated\n"
3106,method,org/eclipse/jface/viewers/ColorCellEditor/createContents/Composite,""
3107,method,org/eclipse/jface/viewers/ColorCellEditor/dispose/,""
3108,method,org/eclipse/jface/viewers/ColorCellEditor/openDialogBox/Control,""
3109,method,org/eclipse/jface/viewers/ColorCellEditor/updateContents/Object,""
3110,method,org/eclipse/jface/viewers/ColorCellEditor/ColorCellEditor/Composite," Creates a new color cell editor parented under the given control.\n The cell editor value is black (<code>RGB(0,0,0)</code>) initially, and has no \n validator.\n\n @param parent the parent control\n"
3111,method,org/eclipse/jface/viewers/ColorCellEditor/ColorCellEditor/Composite;int," Creates a new color cell editor parented under the given control.\n The cell editor value is black (<code>RGB(0,0,0)</code>) initially, and has no \n validator.\n\n @param parent the parent control\n @param style the style bits\n @since 2.1\n"
3116,method,org/eclipse/jface/viewers/StructuredViewer/addDoubleClickListener/IDoubleClickListener," Adds a listener for double-clicks in this viewer. Has no effect if an\n identical listener is already registered.\n \n @param listener\n            a double-click listener\n"
3117,method,org/eclipse/jface/viewers/StructuredViewer/addOpenListener/IOpenListener," Adds a listener for selection-open in this viewer. Has no effect if an\n identical listener is already registered.\n \n @param listener\n            an open listener\n"
3118,method,org/eclipse/jface/viewers/StructuredViewer/addPostSelectionChangedListener/ISelectionChangedListener,""
3121,method,org/eclipse/jface/viewers/StructuredViewer/addFilter/ViewerFilter," Adds the given filter to this viewer, and triggers refiltering and\n resorting of the elements. If you want to add more than one filter\n consider using {@link StructuredViewer#setFilters(ViewerFilter[])}.\n \n @param filter\n            a viewer filter\n @see StructuredViewer#setFilters(ViewerFilter[])\n"
3122,method,org/eclipse/jface/viewers/StructuredViewer/assertElementsNotNull/Object[]," Asserts that the given array of elements is itself non- <code>null</code>\n and contains no <code>null</code> elements.\n \n @param elements\n            the array to check\n"
3123,method,org/eclipse/jface/viewers/StructuredViewer/associate/Object;Item," Associates the given element with the given widget. Sets the given item's\n data to be the element, and maps the element to the item in the element\n map (if enabled).\n \n @param element\n            the element\n @param item\n            the widget\n"
3124,method,org/eclipse/jface/viewers/StructuredViewer/disassociate/Item," Disassociates the given SWT item from its corresponding element. Sets the\n item's data to <code>null</code> and removes the element from the\n element map (if enabled).\n \n @param item\n            the widget\n"
3128,method,org/eclipse/jface/viewers/StructuredViewer/equals/Object;Object," Compares two elements for equality. Uses the element comparer if one has\n been set, otherwise uses the default <code>equals</code> method on the\n elements themselves.\n \n @param elementA\n            the first element\n @param elementB\n            the second element\n @return whether elementA is equal to elementB\n"
3135,method,org/eclipse/jface/viewers/StructuredViewer/getComparer/," Returns the comparer to use for comparing elements, or\n <code>null</code> if none has been set.  If specified,\n the viewer uses this to compare and hash elements rather\n than the elements' own equals and hashCode methods.\n           \n @return the comparer to use for comparing elements or\n            <code>null</code>\n"
3137,method,org/eclipse/jface/viewers/StructuredViewer/getFilters/," Returns this viewer's filters.\n \n @return an array of viewer filters\n @see StructuredViewer#setFilters(ViewerFilter[])\n"
3142,method,org/eclipse/jface/viewers/StructuredViewer/getSelectionFromWidget/," Retrieves the selection, as a <code>List</code>, from the underlying\n widget.\n \n @return the list of selected elements\n"
3152,method,org/eclipse/jface/viewers/StructuredViewer/hookControl/Control,""
3153,method,org/eclipse/jface/viewers/StructuredViewer/hasFilters/," Returns whether this viewer has any filters.\n @return boolean\n"
3154,method,org/eclipse/jface/viewers/StructuredViewer/internalRefresh/Object," Refreshes this viewer starting at the given element.\n \n @param element\n            the element\n"
3159,method,org/eclipse/jface/viewers/StructuredViewer/refresh/,""
3164,method,org/eclipse/jface/viewers/StructuredViewer/removeOpenListener/IOpenListener," Removes the given open listener from this viewer. Has no affect if an\n identical listener is not registered.\n \n @param listener\n            an open listener\n"
3165,method,org/eclipse/jface/viewers/StructuredViewer/removePostSelectionChangedListener/ISelectionChangedListener,""
3166,method,org/eclipse/jface/viewers/StructuredViewer/removeDoubleClickListener/IDoubleClickListener," Removes the given double-click listener from this viewer. Has no affect\n if an identical listener is not registered.\n \n @param listener\n            a double-click listener\n"
3168,method,org/eclipse/jface/viewers/StructuredViewer/setFilters/ViewerFilter[]," Sets the filters, replacing any previous filters, and triggers\n refiltering and resorting of the elements.\n \n @param filters\n            an array of viewer filters\n @since 3.3\n"
3169,method,org/eclipse/jface/viewers/StructuredViewer/resetFilters/," Discards this viewer's filters and triggers refiltering and resorting of\n the elements.\n"
3171,method,org/eclipse/jface/viewers/StructuredViewer/setContentProvider/IContentProvider,""
3172,method,org/eclipse/jface/viewers/StructuredViewer/assertContentProviderType/IContentProvider," Assert that the content provider is of one of the\n supported types.\n @param provider\n"
3173,method,org/eclipse/jface/viewers/StructuredViewer/setInput/Object,""
3174,method,org/eclipse/jface/viewers/StructuredViewer/setSelection/ISelection;boolean,""
3180,method,org/eclipse/jface/viewers/StructuredViewer/setComparer/IElementComparer," Sets the comparer to use for comparing elements, or <code>null</code>\n to use the default <code>equals</code> and <code>hashCode</code>\n methods on the elements themselves.\n \n @param comparer\n            the comparer to use for comparing elements or\n            <code>null</code>\n"
3181,method,org/eclipse/jface/viewers/StructuredViewer/testFindItem/Object," Hook for testing.\n @param element\n @return Widget\n"
3182,method,org/eclipse/jface/viewers/StructuredViewer/testFindItems/Object," Hook for testing.\n @param element\n @return Widget[]\n @since 3.2\n"
3192,method,org/eclipse/jface/viewers/StructuredViewer/setLabelProvider/IBaseLabelProvider,""
3193,method,org/eclipse/jface/viewers/StructuredViewer/buildLabel/ViewerLabel;Object," Build a label up for the element using the supplied label provider.\n @param updateLabel The ViewerLabel to collect the result in\n @param element The element being decorated.\n"
3194,method,org/eclipse/jface/viewers/StructuredViewer/getColorAndFontCollector/," Get the ColorAndFontCollector for the receiver.\n @return ColorAndFontCollector \n @since 3.1\n"
3195,method,org/eclipse/jface/viewers/StructuredViewer/handleDispose/DisposeEvent,""
3196,method,org/eclipse/jface/viewers/StructuredViewer/StructuredViewer/," Creates a structured element viewer. The viewer has no input, no content\n provider, a default label provider, no sorter, and no filters.\n"
3197,class,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollectorWithProviders," The ColorAndFontCollector is a helper class for viewers\n that have color and font support ad optionally decorators.\n @see IColorDecorator\n @see IFontDecorator\n @see IColorProvider\n @see IFontProvider\n @see IDecoration\n"
3198,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollectorWithProviders/setFontsAndColors/Object,""
3200,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollectorWithProviders/applyFontsAndColors/TreeItem,""
3201,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollectorWithProviders/applyFontsAndColors/TableTreeItem,""
3202,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollectorWithProviders/StructuredViewer/ColorAndFontCollectorWithProviders/IBaseLabelProvider," Create a new instance of the receiver using the supplied\n label provider. If it is an IColorProvider or IFontProvider\n set these values up.\n @param provider IBaseLabelProvider\n @see IColorProvider\n @see IFontProvider\n"
3203,class,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector," The ColorAndFontCollector collects fonts and colors without a\n a color or font provider.\n\n"
3204,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/clear/," Clear all of the results.\n"
3205,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/setFontsAndColors/Object," Set the initial fonts and colors for the element from the\n content providers.\n @param element Object\n"
3206,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/setUsedDecorators/," Set that decorators were applied.\n"
3210,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/setBackground/Color," Set the background color.\n @param background \n"
3211,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/setFont/Font," Set the font.\n @param font \n"
3212,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/setForeground/Color," Set the foreground color.\n @param foreground\n"
3213,method,org/eclipse/jface/viewers/StructuredViewer/ColorAndFontCollector/StructuredViewer/ColorAndFontCollector/," Create a new instance of the receiver with\n no color and font provider.	\n"
3214,class,org/eclipse/jface/viewers/TreeColumnViewerLabelProvider," TreeViewerLabelProvider is the ViewerLabelProvider that handles TreePaths.\n \n @since 3.3\n \n"
3215,method,org/eclipse/jface/viewers/TreeColumnViewerLabelProvider/updateLabel/ViewerLabel;TreePath," Update the label for the element with TreePath.\n \n @param label\n @param elementPath\n"
3216,method,org/eclipse/jface/viewers/TreeColumnViewerLabelProvider/setProviders/Object,""
3217,method,org/eclipse/jface/viewers/TreeColumnViewerLabelProvider/getTreePathProvider/," Return the ITreePathLabelProvider for the receiver.\n \n @return Returns the treePathProvider.\n"
3218,method,org/eclipse/jface/viewers/TreeColumnViewerLabelProvider/TreeColumnViewerLabelProvider/IBaseLabelProvider," Create a new instance of the receiver with the supplied labelProvider.\n \n @param labelProvider\n"
3219,interface,org/eclipse/jface/viewers/ITreeContentProvider," An interface to content providers for tree-structure-oriented\n viewers.\n\n @see AbstractTreeViewer\n"
3221,method,org/eclipse/jface/viewers/ITreeContentProvider/getParent/Object," Returns the parent for the given element, or <code>null</code> \n indicating that the parent can't be computed. \n In this case the tree-structured viewer can't expand\n a given node correctly if requested.\n\n @param element the element\n @return the parent element, or <code>null</code> if it\n   has none or if the parent cannot be computed\n"
3226,method,org/eclipse/jface/viewers/ILazyTreeContentProvider/getParent/Object," Returns the parent for the given element, or <code>null</code> \n indicating that the parent can't be computed. \n In this case the tree-structured viewer can't expand\n a given node correctly if requested.\n\n @param element the element\n @return the parent element, or <code>null</code> if it\n   has none or if the parent cannot be computed\n"
3227,class,org/eclipse/jface/viewers/TreeViewerColumn," ViewerColumn implementation for TreeViewer to enable column-specific label\n providers and editing support.\n \n @since 3.3\n \n"
3228,method,org/eclipse/jface/viewers/TreeViewerColumn/getColumn/," @return the underlying SWT column\n"
3229,method,org/eclipse/jface/viewers/TreeViewerColumn/TreeViewerColumn/TreeViewer;int," Creates a new viewer column for the given {@link TreeViewer} on a new\n {@link TreeColumn} with the given style bits. The column is inserted at\n the given index into the list of columns.\n \n @param viewer\n            the tree viewer to which this column belongs\n @param style\n            the style bits used to create the column, for applicable style bits\n            see {@link TreeColumn}\n @see TreeColumn#TreeColumn(Tree, int)\n"
3230,method,org/eclipse/jface/viewers/TreeViewerColumn/TreeViewerColumn/TreeViewer;int;int," Creates a new viewer column for the given {@link TreeViewer} on a new\n {@link TreeColumn} with the given style bits. The column is added at the\n end of the list of columns.\n \n @param viewer\n            the tree viewer to which this column belongs\n @param style\n            the style bits used to create the column, for applicable style bits\n            see {@link TreeColumn}\n @param index\n            the index at which to place the newly created column\n @see TreeColumn#TreeColumn(Tree, int, int)\n"
3231,method,org/eclipse/jface/viewers/TreeViewerColumn/TreeViewerColumn/TreeViewer;TreeColumn," Creates a new viewer column for the given {@link TreeViewer} on the given\n {@link TreeColumn}.\n \n @param viewer\n            the tree viewer to which this column belongs\n @param column\n            the underlying tree column\n"
3232,class,org/eclipse/jface/viewers/AbstractTableViewer," This is a widget independent class implementors of\n {@link org.eclipse.swt.widgets.Table} like widgets can use to provide a\n viewer on top of their widget implementations.\n\n @since 3.3\n"
3233,method,org/eclipse/jface/viewers/AbstractTableViewer/hookControl/Control,""
3234,method,org/eclipse/jface/viewers/AbstractTableViewer/handleDispose/DisposeEvent,""
3238,method,org/eclipse/jface/viewers/AbstractTableViewer/doFindInputItem/Object,""
3239,method,org/eclipse/jface/viewers/AbstractTableViewer/doFindItem/Object,""
3240,method,org/eclipse/jface/viewers/AbstractTableViewer/doUpdateItem/Widget;Object;boolean,""
3241,method,org/eclipse/jface/viewers/AbstractTableViewer/getColumnViewerOwner/int,""
3242,method,org/eclipse/jface/viewers/AbstractTableViewer/getElementAt/int," Returns the element with the given index from this table viewer. Returns\n <code>null</code> if the index is out of range.\n <p>\n This method is internal to the framework.\n </p>\n\n @param index\n            the zero-based index\n @return the element at the given index, or <code>null</code> if the\n         index is out of range\n"
3244,method,org/eclipse/jface/viewers/AbstractTableViewer/getSelectionFromWidget/,""
3246,method,org/eclipse/jface/viewers/AbstractTableViewer/inputChanged/Object;Object,""
3248,method,org/eclipse/jface/viewers/AbstractTableViewer/internalRefresh/Object,""
3249,method,org/eclipse/jface/viewers/AbstractTableViewer/internalRefresh/Object;boolean,""
3252,method,org/eclipse/jface/viewers/AbstractTableViewer/reveal/Object,""
3253,method,org/eclipse/jface/viewers/AbstractTableViewer/setSelectionToWidget/List;boolean,""
3254,method,org/eclipse/jface/viewers/AbstractTableViewer/setItemCount/int," Set the item count of the receiver.\n\n @param count\n            the new table size.\n\n @since 3.1\n"
3256,method,org/eclipse/jface/viewers/AbstractTableViewer/clear/int," Clear the table item at the specified index\n\n @param index\n            the index of the table item to be cleared\n\n @since 3.1\n"
3257,method,org/eclipse/jface/viewers/AbstractTableViewer/getRawChildren/Object,""
3258,method,org/eclipse/jface/viewers/AbstractTableViewer/assertContentProviderType/IContentProvider,""
3259,method,org/eclipse/jface/viewers/AbstractTableViewer/doIndexOf/Item," Searches the receiver's list starting at the first item (index 0) until\n an item is found that is equal to the argument, and returns the index of\n that item. If no item is found, returns -1.\n\n @param item\n            the search item\n @return the index of the item\n\n @since 3.3\n"
3260,method,org/eclipse/jface/viewers/AbstractTableViewer/doGetItemCount/," Returns the number of items contained in the receiver.\n\n @return the number of items\n\n @since 3.3\n"
3261,method,org/eclipse/jface/viewers/AbstractTableViewer/doSetItemCount/int," Sets the number of items contained in the receiver.\n\n @param count\n            the number of items\n\n @since 3.3\n"
3262,method,org/eclipse/jface/viewers/AbstractTableViewer/doGetItems/," Returns a (possibly empty) array of TableItems which are the items in the\n receiver.\n\n @return the items in the receiver\n\n @since 3.3\n"
3265,method,org/eclipse/jface/viewers/AbstractTableViewer/doGetSelection/," Returns an array of {@link Item} that are currently selected in the\n receiver. The order of the items is unspecified. An empty array indicates\n that no items are selected.\n\n @return an array representing the selection\n\n @since 3.3\n"
3266,method,org/eclipse/jface/viewers/AbstractTableViewer/doGetSelectionIndices/," Returns the zero-relative indices of the items which are currently\n selected in the receiver. The order of the indices is unspecified. The\n array is empty if no items are selected.\n\n @return an array representing the selection\n\n @since 3.3\n"
3267,method,org/eclipse/jface/viewers/AbstractTableViewer/doClearAll/," Clears all the items in the receiver. The text, icon and other attributes\n of the items are set to their default values. If the table was created\n with the <code>SWT.VIRTUAL</code> style, these attributes are requested\n again as needed.\n\n @since 3.3\n"
3268,method,org/eclipse/jface/viewers/AbstractTableViewer/doResetItem/Item," Resets the given item in the receiver. The text, icon and other attributes\n of the item are set to their default values.\n\n @param item the item to reset\n\n @since 3.3\n"
3270,method,org/eclipse/jface/viewers/AbstractTableViewer/doRemoveAll/," Removes all of the items from the receiver.\n\n @since 3.3\n"
3272,method,org/eclipse/jface/viewers/AbstractTableViewer/doShowItem/Item," Shows the item. If the item is already showing in the receiver, this\n method simply returns. Otherwise, the items are scrolled until the item\n is visible.\n\n @param item\n            the item to be shown\n\n @exception IllegalArgumentException -\n                if the item is null\n\n @since 3.3\n"
3273,method,org/eclipse/jface/viewers/AbstractTableViewer/doDeselectAll/," Deselects all selected items in the receiver.\n\n @since 3.3\n"
3275,method,org/eclipse/jface/viewers/AbstractTableViewer/doShowSelection/," Shows the selection. If the selection is already showing in the receiver,\n this method simply returns. Otherwise, the items are scrolled until the\n selection is visible.\n\n @since 3.3\n"
3278,method,org/eclipse/jface/viewers/AbstractTableViewer/AbstractTableViewer/," Create the new viewer for table like widgets\n"
3281,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalFindItems/Object," Find the items for the given element of tree path\n\n @param parentElementOrTreePath\n            the element or tree path\n @return the items for that element\n\n @since 3.3\n"
3284,method,org/eclipse/jface/viewers/AbstractTreeViewer/getSortedChildren/Object,""
3285,method,org/eclipse/jface/viewers/AbstractTreeViewer/getFilteredChildren/Object,""
3287,method,org/eclipse/jface/viewers/AbstractTreeViewer/addSelectionListener/Control;SelectionListener," Adds the given SWT selection listener to the given SWT control.\n\n @param control\n            the SWT control\n @param listener\n            the SWT selection listener\n @deprecated\n"
3288,method,org/eclipse/jface/viewers/AbstractTreeViewer/addTreeListener/ITreeViewerListener," Adds a listener for expand and collapse events in this viewer. Has no\n effect if an identical listener is already registered.\n\n @param listener\n            a tree viewer listener\n"
3289,method,org/eclipse/jface/viewers/AbstractTreeViewer/addTreeListener/Control;TreeListener," Adds the given SWT tree listener to the given SWT control.\n\n @param control\n            the SWT control\n @param listener\n            the SWT tree listener\n"
3290,method,org/eclipse/jface/viewers/AbstractTreeViewer/associate/Object;Item,""
3291,method,org/eclipse/jface/viewers/AbstractTreeViewer/collapseAll/," Collapses all nodes of the viewer's tree, starting with the root. This\n method is equivalent to <code>collapseToLevel(ALL_LEVELS)</code>.\n"
3292,method,org/eclipse/jface/viewers/AbstractTreeViewer/collapseToLevel/Object;int," Collapses the subtree rooted at the given element or tree path to the\n given level.\n\n @param elementOrTreePath\n            the element or tree path\n @param level\n            non-negative level, or <code>ALL_LEVELS</code> to collapse\n            all levels of the tree\n"
3295,method,org/eclipse/jface/viewers/AbstractTreeViewer/disassociate/Item," The <code>AbstractTreeViewer</code> implementation of this method also\n recurses over children of the corresponding element.\n"
3296,method,org/eclipse/jface/viewers/AbstractTreeViewer/doFindInputItem/Object,""
3297,method,org/eclipse/jface/viewers/AbstractTreeViewer/doFindItem/Object,""
3298,method,org/eclipse/jface/viewers/AbstractTreeViewer/doUpdateItem/Item;Object," Copies the attributes of the given element into the given SWT item.\n\n @param item\n            the SWT item\n @param element\n            the element\n"
3300,method,org/eclipse/jface/viewers/AbstractTreeViewer/doUpdateItem/Widget;Object;boolean,""
3301,method,org/eclipse/jface/viewers/AbstractTreeViewer/expandAll/," Expands all nodes of the viewer's tree, starting with the root. This\n method is equivalent to <code>expandToLevel(ALL_LEVELS)</code>.\n"
3302,method,org/eclipse/jface/viewers/AbstractTreeViewer/expandToLevel/int," Expands the root of the viewer's tree to the given level.\n\n @param level\n            non-negative level, or <code>ALL_LEVELS</code> to expand all\n            levels of the tree\n"
3303,method,org/eclipse/jface/viewers/AbstractTreeViewer/expandToLevel/Object;int," Expands all ancestors of the given element or tree path so that the given\n element becomes visible in this viewer's tree control, and then expands\n the subtree rooted at the given element to the given level.\n\n @param elementOrTreePath\n            the element\n @param level\n            non-negative level, or <code>ALL_LEVELS</code> to expand all\n            levels of the tree\n"
3306,method,org/eclipse/jface/viewers/AbstractTreeViewer/getAutoExpandLevel/," Returns the auto-expand level.\n\n @return non-negative level, or <code>ALL_LEVELS</code> if all levels of\n         the tree are expanded automatically\n @see #setAutoExpandLevel\n"
3307,method,org/eclipse/jface/viewers/AbstractTreeViewer/getChildren/Widget," Returns the SWT child items for the given SWT widget.\n\n @param widget\n            the widget\n @return the child items\n"
3309,method,org/eclipse/jface/viewers/AbstractTreeViewer/getExpanded/Item," Returns whether the given SWT item is expanded or collapsed.\n\n @param item\n            the item\n @return <code>true</code> if the item is considered expanded and\n         <code>false</code> if collapsed\n"
3310,method,org/eclipse/jface/viewers/AbstractTreeViewer/getExpandedElements/," Returns a list of elements corresponding to expanded nodes in this\n viewer's tree, including currently hidden ones that are marked as\n expanded but are under a collapsed ancestor.\n <p>\n This method is typically used when preserving the interesting state of a\n viewer; <code>setExpandedElements</code> is used during the restore.\n </p>\n\n @return the array of expanded elements\n @see #setExpandedElements\n"
3311,method,org/eclipse/jface/viewers/AbstractTreeViewer/getExpandedState/Object," Returns whether the node corresponding to the given element or tree path\n is expanded or collapsed.\n\n @param elementOrTreePath\n            the element\n @return <code>true</code> if the node is expanded, and\n         <code>false</code> if collapsed\n"
3312,method,org/eclipse/jface/viewers/AbstractTreeViewer/getItemCount/Control," Returns the number of child items of the given SWT control.\n\n @param control\n            the control\n @return the number of children\n"
3313,method,org/eclipse/jface/viewers/AbstractTreeViewer/getItemCount/Item," Returns the number of child items of the given SWT item.\n\n @param item\n            the item\n @return the number of children\n"
3314,method,org/eclipse/jface/viewers/AbstractTreeViewer/getItems/Item," Returns the child items of the given SWT item.\n\n @param item\n            the item\n @return the child items\n"
3316,method,org/eclipse/jface/viewers/AbstractTreeViewer/getParentItem/Item," Returns the parent item of the given item in the tree, or\n <code>null</code> if there is no parent item.\n\n @param item\n            the item\n @return the parent item, or <code>null</code> if none\n"
3318,method,org/eclipse/jface/viewers/AbstractTreeViewer/getRawChildren/Object,""
3319,method,org/eclipse/jface/viewers/AbstractTreeViewer/getSelection/Control," Returns all selected items for the given SWT control.\n\n @param control\n            the control\n @return the list of selected items\n"
3320,method,org/eclipse/jface/viewers/AbstractTreeViewer/getSelectionFromWidget/,""
3321,method,org/eclipse/jface/viewers/AbstractTreeViewer/handleDoubleSelect/SelectionEvent,""
3322,method,org/eclipse/jface/viewers/AbstractTreeViewer/handleTreeCollapse/TreeEvent," Handles a tree collapse event from the SWT widget.\n\n @param event\n            the SWT tree event\n"
3323,method,org/eclipse/jface/viewers/AbstractTreeViewer/handleTreeExpand/TreeEvent," Handles a tree expand event from the SWT widget.\n\n @param event\n            the SWT tree event\n"
3324,method,org/eclipse/jface/viewers/AbstractTreeViewer/hookControl/Control,""
3325,method,org/eclipse/jface/viewers/AbstractTreeViewer/inputChanged/Object;Object,""
3329,method,org/eclipse/jface/viewers/AbstractTreeViewer/getParentElement/Object," This method takes a tree path or an element. If the argument is not a\n tree path, returns the parent of the given element or <code>null</code>\n if the parent is not known. If the argument is a tree path with more than\n one segment, returns its parent tree path, otherwise returns\n <code>null</code>.\n\n @param elementOrTreePath\n @return the parent element, or parent path, or <code>null</code>\n\n @since 3.2\n"
3330,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalGetWidgetToSelect/Object," Returns the widget to be selected for the given element or tree path.\n\n @param elementOrTreePath\n            the element or tree path to select\n @return the widget to be selected, or <code>null</code> if not found\n\n @since 3.1\n"
3332,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalRefresh/Object,""
3333,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalRefresh/Object;boolean,""
3336,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalRemove/Object;Object[]," Removes the given elements from this viewer, whenever those elements\n appear as children of the given parent.\n\n @param parent the parent element\n @param elements\n            the elements to remove\n @since 3.1\n"
3338,method,org/eclipse/jface/viewers/AbstractTreeViewer/labelProviderChanged/,""
3339,method,org/eclipse/jface/viewers/AbstractTreeViewer/newItem/Widget;int;int," Creates a new item.\n\n @param parent\n            the parent widget\n @param style\n            SWT style bits\n @param index\n            if non-negative, indicates the position to insert the item\n            into its parent\n @return the newly-created item\n"
3343,method,org/eclipse/jface/viewers/AbstractTreeViewer/removeAll/Control," Removes all items from the given control.\n\n @param control\n            the control\n"
3344,method,org/eclipse/jface/viewers/AbstractTreeViewer/removeTreeListener/ITreeViewerListener," Removes a listener for expand and collapse events in this viewer. Has no\n affect if an identical listener is not registered.\n\n @param listener\n            a tree viewer listener\n"
3345,method,org/eclipse/jface/viewers/AbstractTreeViewer/reveal/Object," This implementation of reveal() reveals the given element or tree path.\n"
3346,method,org/eclipse/jface/viewers/AbstractTreeViewer/scrollDown/int;int,""
3347,method,org/eclipse/jface/viewers/AbstractTreeViewer/scrollUp/int;int,""
3349,method,org/eclipse/jface/viewers/AbstractTreeViewer/setContentProvider/IContentProvider," The <code>AbstractTreeViewer</code> implementation of this method\n checks to ensure that the content provider is an\n <code>ITreeContentProvider</code>.\n"
3350,method,org/eclipse/jface/viewers/AbstractTreeViewer/assertContentProviderType/IContentProvider,""
3351,method,org/eclipse/jface/viewers/AbstractTreeViewer/setExpanded/Item;boolean," Sets the expand state of the given item.\n\n @param item\n            the item\n @param expand\n            the expand state of the item\n"
3354,method,org/eclipse/jface/viewers/AbstractTreeViewer/setExpandedState/Object;boolean," Sets whether the node corresponding to the given element or tree path is\n expanded or collapsed.\n\n @param elementOrTreePath\n            the element\n @param expanded\n            <code>true</code> if the node is expanded, and\n            <code>false</code> if collapsed\n"
3355,method,org/eclipse/jface/viewers/AbstractTreeViewer/setSelection/List," Sets the selection to the given list of items.\n\n @param items\n            list of items (element type:\n            <code>org.eclipse.swt.widgets.Item</code>)\n"
3356,method,org/eclipse/jface/viewers/AbstractTreeViewer/setSelectionToWidget/List;boolean," This implementation of setSelectionToWidget accepts a list of elements or\n a list of tree paths.\n"
3357,method,org/eclipse/jface/viewers/AbstractTreeViewer/showItem/Item," Shows the given item.\n\n @param item\n            the item\n"
3362,method,org/eclipse/jface/viewers/AbstractTreeViewer/getTreePathFromItem/Item," Returns the tree path for the given item.\n @param item\n @return {@link TreePath}\n\n @since 3.2\n"
3363,method,org/eclipse/jface/viewers/AbstractTreeViewer/getSelection/," This implementation of getSelection() returns an instance of\n ITreeSelection.\n\n @since 3.2\n"
3364,method,org/eclipse/jface/viewers/AbstractTreeViewer/setSelectionToWidget/ISelection;boolean,""
3365,method,org/eclipse/jface/viewers/AbstractTreeViewer/getExpandedTreePaths/," Returns a list of tree paths corresponding to expanded nodes in this\n viewer's tree, including currently hidden ones that are marked as\n expanded but are under a collapsed ancestor.\n <p>\n This method is typically used when preserving the interesting state of a\n viewer; <code>setExpandedElements</code> is used during the restore.\n </p>\n\n @return the array of expanded tree paths\n @see #setExpandedElements\n\n @since 3.2\n"
3367,method,org/eclipse/jface/viewers/AbstractTreeViewer/getColumnViewerOwner/int,""
3372,method,org/eclipse/jface/viewers/AbstractTreeViewer/internalIsInputOrEmptyPath/Object," Returns true if the given object is either the input or an empty tree path.\n\n @param elementOrTreePath an element which could either be the viewer's input, or a tree path\n\n @return <code>true</code> if the given object is either the input or an empty tree path,\n <code>false</code> otherwise.\n @since 3.3\n"
3373,method,org/eclipse/jface/viewers/AbstractTreeViewer/getViewerRowFromItem/Widget,""
3374,method,org/eclipse/jface/viewers/AbstractTreeViewer/AbstractTreeViewer/," Creates an abstract tree viewer. The viewer has no input, no content\n provider, a default label provider, no sorter, no filters, and has\n auto-expand turned off.\n"
3376,interface,org/eclipse/jface/viewers/IBasicPropertyConstants," Predefined property names used for elements displayed in viewers.\n\n @see StructuredViewer#update(Object, String[])\n @see StructuredViewer#update(Object[], String[])\n @see IBaseLabelProvider#isLabelProperty\n @see ViewerComparator#isSorterProperty\n @see ViewerFilter#isFilterProperty\n"
3377,field,org/eclipse/jface/viewers/IBasicPropertyConstants/P_TEXT," Property name constant (value <code>"org.eclipse.jface.text"</code>)\n for an element's label text.\n\n @see org.eclipse.jface.viewers.ILabelProvider#getText\n"
3378,field,org/eclipse/jface/viewers/IBasicPropertyConstants/P_IMAGE," Property name constant (value <code>"org.eclipse.jface.image"</code>)\n for an element's label image.\n\n @see org.eclipse.jface.viewers.ILabelProvider#getImage\n"
3379,field,org/eclipse/jface/viewers/IBasicPropertyConstants/P_CHILDREN," Property name constant (value <code>"org.eclipse.jface.children"</code>)\n for an element's children.\n"
3380,field,org/eclipse/jface/viewers/IBasicPropertyConstants/P_PARENT," Property name constant (value <code>"org.eclipse.jface.parent"</code>)\n for an element's parent object.\n"
3381,class,org/eclipse/jface/viewers/TableViewerColumn," ViewerColumn implementation for TableViewer to enable column-specific label\n providers and editing support.\n \n @since 3.3\n"
3382,method,org/eclipse/jface/viewers/TableViewerColumn/getColumn/," @return the underlying SWT table column\n"
3383,method,org/eclipse/jface/viewers/TableViewerColumn/TableViewerColumn/TableViewer;int," Creates a new viewer column for the given {@link TableViewer} on a new\n {@link TableColumn} with the given style bits. The column is added at the\n end of the list of columns.\n \n @param viewer\n            the table viewer to which this column belongs\n @param style\n            the style used to create the column, for applicable style bits\n            see {@link TableColumn}\n @see TableColumn#TableColumn(Table, int)\n"
3384,method,org/eclipse/jface/viewers/TableViewerColumn/TableViewerColumn/TableViewer;int;int," Creates a new viewer column for the given {@link TableViewer} on a new\n {@link TableColumn} with the given style bits. The column is inserted at\n the given index into the list of columns.\n \n @param viewer\n            the table viewer to which this column belongs\n @param style\n            the style used to create the column, for applicable style bits\n            see {@link TableColumn}\n @param index\n            the index at which to place the newly created column\n @see TableColumn#TableColumn(Table, int, int)\n"
3385,method,org/eclipse/jface/viewers/TableViewerColumn/TableViewerColumn/TableViewer;TableColumn," Creates a new viewer column for the given {@link TableViewer} on the given\n {@link TableColumn}.\n \n @param viewer\n            the table viewer to which this column belongs\n @param column\n            the underlying table column\n"
3390,method,org/eclipse/jface/viewers/TableViewer/getControl/,""
3391,method,org/eclipse/jface/viewers/TableViewer/getTable/," Returns this table viewer's table control.\n \n @return the table control\n"
3392,method,org/eclipse/jface/viewers/TableViewer/createViewerEditor/,""
3394,method,org/eclipse/jface/viewers/TableViewer/getViewerRowFromItem/Widget,""
3395,method,org/eclipse/jface/viewers/TableViewer/internalCreateNewRowPart/int;int," Create a new row with style at index\n \n @param style\n @param rowIndex\n @return ViewerRow\n @since 3.3\n"
3396,method,org/eclipse/jface/viewers/TableViewer/getItemAt/Point,""
3397,method,org/eclipse/jface/viewers/TableViewer/doGetItemCount/,""
3398,method,org/eclipse/jface/viewers/TableViewer/doIndexOf/Item,""
3399,method,org/eclipse/jface/viewers/TableViewer/doSetItemCount/int,""
3400,method,org/eclipse/jface/viewers/TableViewer/doGetItems/,""
3401,method,org/eclipse/jface/viewers/TableViewer/doGetColumnCount/,""
3402,method,org/eclipse/jface/viewers/TableViewer/doGetColumn/int,""
3403,method,org/eclipse/jface/viewers/TableViewer/doGetItem/int,""
3404,method,org/eclipse/jface/viewers/TableViewer/doGetSelection/,""
3405,method,org/eclipse/jface/viewers/TableViewer/doGetSelectionIndices/,""
3406,method,org/eclipse/jface/viewers/TableViewer/doClearAll/,""
3407,method,org/eclipse/jface/viewers/TableViewer/doResetItem/Item,""
3408,method,org/eclipse/jface/viewers/TableViewer/doRemove/int;int,""
3409,method,org/eclipse/jface/viewers/TableViewer/doRemoveAll/,""
3410,method,org/eclipse/jface/viewers/TableViewer/doRemove/int[],""
3411,method,org/eclipse/jface/viewers/TableViewer/doShowItem/Item,""
3412,method,org/eclipse/jface/viewers/TableViewer/doDeselectAll/,""
3413,method,org/eclipse/jface/viewers/TableViewer/doSetSelection/Item[],""
3414,method,org/eclipse/jface/viewers/TableViewer/doShowSelection/,""
3415,method,org/eclipse/jface/viewers/TableViewer/doClear/int,""
3416,method,org/eclipse/jface/viewers/TableViewer/doSelect/int[],""
3419,method,org/eclipse/jface/viewers/TableViewer/remove/Object[],""
3420,method,org/eclipse/jface/viewers/TableViewer/doFindItem/Object,""
3421,method,org/eclipse/jface/viewers/TableViewer/TableViewer/Composite," Creates a table viewer on a newly-created table control under the given\n parent. The table control is created using the SWT style bits\n <code>MULTI, H_SCROLL, V_SCROLL,</code> and <code>BORDER</code>. The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters. The table has no columns.\n \n @param parent\n 		the parent control\n"
3422,method,org/eclipse/jface/viewers/TableViewer/TableViewer/Composite;int," Creates a table viewer on a newly-created table control under the given\n parent. The table control is created using the given style bits. The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters. The table has no columns.\n \n @param parent\n 		the parent control\n @param style\n 		SWT style bits\n"
3423,method,org/eclipse/jface/viewers/TableViewer/TableViewer/Table," Creates a table viewer on the given table control. The viewer has no\n input, no content provider, a default label provider, no sorter, and no\n filters.\n \n @param table\n 		the table control\n"
3424,class,org/eclipse/jface/viewers/TreePathViewerSorter," A viewer sorter that is provided extra context in the form of the path of the\n parent element of the elements being sorted.\n \n @since 3.2\n"
3429,method,org/eclipse/jface/viewers/TreePathViewerSorter/TreePathViewerSorter/,""
3431,method,org/eclipse/jface/viewers/ColumnViewerEditorDeactivationEvent/ColumnViewerEditorDeactivationEvent/Object," @param source\n"
3432,field,org/eclipse/jface/viewers/ColumnViewerEditorDeactivationEvent/eventType," The event type\n @since 3.4\n"
3433,field,org/eclipse/jface/viewers/ColumnViewerEditorDeactivationEvent/EDITOR_CANCELED," Event when editor is canceled\n @since 3.4\n"
3434,field,org/eclipse/jface/viewers/ColumnViewerEditorDeactivationEvent/EDITOR_SAVED," Event when editor is saved\n @since 3.4\n"
3436,method,org/eclipse/jface/viewers/CheckboxTreeViewer/addCheckStateListener/ICheckStateListener,""
3438,method,org/eclipse/jface/viewers/CheckboxTreeViewer/doUpdateItem/Item;Object,""
3440,method,org/eclipse/jface/viewers/CheckboxTreeViewer/getChecked/Object,""
3441,method,org/eclipse/jface/viewers/CheckboxTreeViewer/getCheckedElements/," Returns a list of checked elements in this viewer's tree, \n including currently hidden ones that are marked as\n checked but are under a collapsed ancestor.\n <p>\n This method is typically used when preserving the interesting\n state of a viewer; <code>setCheckedElements</code> is used during the restore.\n </p>\n\n @return the array of checked elements\n\n @see #setCheckedElements\n"
3442,method,org/eclipse/jface/viewers/CheckboxTreeViewer/getGrayed/Object," Returns the grayed state of the given element.\n\n @param element the element\n @return <code>true</code> if the element is grayed,\n   and <code>false</code> if not grayed\n"
3443,method,org/eclipse/jface/viewers/CheckboxTreeViewer/getGrayedElements/," Returns a list of grayed elements in this viewer's tree, \n including currently hidden ones that are marked as\n grayed but are under a collapsed ancestor.\n <p>\n This method is typically used when preserving the interesting\n state of a viewer; <code>setGrayedElements</code> is used during the restore.\n </p>\n\n @return the array of grayed elements\n\n @see #setGrayedElements\n"
3444,method,org/eclipse/jface/viewers/CheckboxTreeViewer/handleDoubleSelect/SelectionEvent,""
3445,method,org/eclipse/jface/viewers/CheckboxTreeViewer/handleSelect/SelectionEvent,""
3446,method,org/eclipse/jface/viewers/CheckboxTreeViewer/preservingSelection/Runnable,""
3447,method,org/eclipse/jface/viewers/CheckboxTreeViewer/removeCheckStateListener/ICheckStateListener,""
3448,method,org/eclipse/jface/viewers/CheckboxTreeViewer/setChecked/Object;boolean,""
3456,method,org/eclipse/jface/viewers/CheckboxTreeViewer/CheckboxTreeViewer/Composite," Creates a tree viewer on a newly-created tree control under the given parent.\n The tree control is created using the SWT style bits: <code>CHECK</code> and <code>BORDER</code>.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n"
3457,method,org/eclipse/jface/viewers/CheckboxTreeViewer/CheckboxTreeViewer/Composite;int," Creates a tree viewer on a newly-created tree control under the given parent.\n The tree control is created using the given SWT style bits, plus the <code>CHECK</code> style bit.\n The viewer has no input, no content provider, a default label provider, \n no sorter, and no filters.\n\n @param parent the parent control\n @param style the SWT style bits\n"
3459,interface,org/eclipse/jface/viewers/ITreePathContentProvider," An interface to content providers for tree-structure-oriented viewers that\n provides content based on the path of elements in the tree viewer..\n \n @see AbstractTreeViewer\n @since 3.2\n"
3463,interface,org/eclipse/jface/viewers/ISelectionChangedListener,"\n A listener which is notified when a viewer's selection changes.\n\n @see ISelection\n @see ISelectionProvider\n @see SelectionChangedEvent\n"
3464,method,org/eclipse/jface/viewers/ISelectionChangedListener/selectionChanged/SelectionChangedEvent," Notifies that the selection has changed.\n\n @param event event object describing the change\n"
3467,method,org/eclipse/jface/viewers/CellEditor/addListener/ICellEditorListener," Adds a listener to this cell editor. Has no effect if an identical\n listener is already registered.\n\n @param listener\n            a cell editor listener\n"
3468,method,org/eclipse/jface/viewers/CellEditor/addPropertyChangeListener/IPropertyChangeListener," Adds a property change listener to this cell editor. Has no effect if an\n identical property change listener is already registered.\n\n @param listener\n            a property change listener\n"
3470,method,org/eclipse/jface/viewers/CellEditor/create/Composite," Creates the control for this cell editor under the given parent control.\n\n @param parent\n            the parent control\n @since 2.1\n"
3471,method,org/eclipse/jface/viewers/CellEditor/deactivate/," Hides this cell editor's control. Does nothing if this cell editor is not\n visible.\n"
3472,method,org/eclipse/jface/viewers/CellEditor/dispose/," Disposes of this cell editor and frees any associated SWT resources.\n"
3477,method,org/eclipse/jface/viewers/CellEditor/fireCancelEditor/," Notifies all registered cell editor listeners that editing has been\n canceled.\n\n @see ICellEditorListener#cancelEditor\n"
3479,method,org/eclipse/jface/viewers/CellEditor/fireEnablementChanged/String," Notifies all registered property listeners of an enablement change.\n\n @param actionId\n            the id indicating what action's enablement has changed.\n"
3480,method,org/eclipse/jface/viewers/CellEditor/setStyle/int," Sets the style bits for this cell editor.\n\n @param style\n            the SWT style bits for this cell editor\n @since 2.1\n"
3481,method,org/eclipse/jface/viewers/CellEditor/getStyle/," Returns the style bits for this cell editor.\n\n @return the style for this cell editor\n @since 2.1\n"
3482,method,org/eclipse/jface/viewers/CellEditor/getControl/," Returns the control used to implement this cell editor.\n\n @return the control, or <code>null</code> if this cell editor has no\n         control\n"
3485,method,org/eclipse/jface/viewers/CellEditor/getValidator/," Returns the input validator for this cell editor.\n\n @return the input validator, or <code>null</code> if none\n"
3486,method,org/eclipse/jface/viewers/CellEditor/getValue/," Returns this cell editor's value provided that it has a valid one.\n\n @return the value of this cell editor, or <code>null</code> if the cell\n         editor does not contain a valid value\n"
3487,method,org/eclipse/jface/viewers/CellEditor/isActivated/," Returns whether this cell editor is activated.\n\n @return <code>true</code> if this cell editor's control is currently\n         activated, and <code>false</code> if not activated\n"
3489,method,org/eclipse/jface/viewers/CellEditor/isCorrect/Object," Returns whether the given value is valid for this cell editor. This cell\n editor's validator (if any) makes the actual determination.\n\n @param value\n            the value to check for\n\n @return <code>true</code> if the value is valid, and <code>false</code>\n         if invalid\n"
3493,method,org/eclipse/jface/viewers/CellEditor/markDirty/," Marks this cell editor as dirty.\n\n @since 2.1\n"
3499,method,org/eclipse/jface/viewers/CellEditor/isValueValid/," Returns whether this cell editor has a valid value. The default value is\n false.\n\n @return <code>true</code> if the value is valid, and <code>false</code>\n         if invalid\n\n @see #setValueValid(boolean)\n"
3510,method,org/eclipse/jface/viewers/CellEditor/removeListener/ICellEditorListener," Removes the given listener from this cell editor. Has no affect if an\n identical listener is not registered.\n\n @param listener\n            a cell editor listener\n"
3511,method,org/eclipse/jface/viewers/CellEditor/removePropertyChangeListener/IPropertyChangeListener," Removes the given property change listener from this cell editor. Has no\n affect if an identical property change listener is not registered.\n\n @param listener\n            a property change listener\n"
3513,method,org/eclipse/jface/viewers/CellEditor/setFocus/," Sets the focus to the cell editor's control.\n"
3514,method,org/eclipse/jface/viewers/CellEditor/setValidator/ICellEditorValidator," Sets the input validator for this cell editor.\n\n @param validator\n            the input validator, or <code>null</code> if none\n"
3515,method,org/eclipse/jface/viewers/CellEditor/setValue/Object," Sets this cell editor's value.\n\n @param value\n            the value of this cell editor\n"
3520,method,org/eclipse/jface/viewers/CellEditor/deactivate/ColumnViewerEditorDeactivationEvent," @param event\n            deactivation event\n @since 3.4\n\n"
3522,method,org/eclipse/jface/viewers/CellEditor/CellEditor/," Creates a new cell editor with no control The cell editor has no cell\n validator.\n\n @since 2.1\n"
3523,method,org/eclipse/jface/viewers/CellEditor/CellEditor/Composite," Creates a new cell editor under the given parent control. The cell editor\n has no cell validator.\n\n @param parent\n            the parent control\n"
3524,method,org/eclipse/jface/viewers/CellEditor/CellEditor/Composite;int," Creates a new cell editor under the given parent control. The cell editor\n has no cell validator.\n\n @param parent\n            the parent control\n @param style\n            the style bits\n @since 2.1\n"
3525,field,org/eclipse/jface/viewers/CellEditor/COPY," Property name for the copy action\n"
3526,field,org/eclipse/jface/viewers/CellEditor/CUT," Property name for the cut action\n"
3527,field,org/eclipse/jface/viewers/CellEditor/DELETE," Property name for the delete action\n"
3528,field,org/eclipse/jface/viewers/CellEditor/FIND," Property name for the find action\n"
3529,field,org/eclipse/jface/viewers/CellEditor/PASTE," Property name for the paste action\n"
3530,field,org/eclipse/jface/viewers/CellEditor/REDO," Property name for the redo action\n"
3531,field,org/eclipse/jface/viewers/CellEditor/SELECT_ALL," Property name for the select all action\n"
3532,field,org/eclipse/jface/viewers/CellEditor/UNDO," Property name for the undo action\n"
3534,method,org/eclipse/jface/viewers/CellEditor/LayoutData/CellEditor/LayoutData/,""
3535,field,org/eclipse/jface/viewers/CellEditor/LayoutData/horizontalAlignment," Horizontal alignment; <code>SWT.LEFT</code> by default.\n"
3537,field,org/eclipse/jface/viewers/CellEditor/LayoutData/minimumWidth," Minimum width in pixels; <code>50</code> pixels by default.\n"
3538,field,org/eclipse/jface/viewers/CellEditor/LayoutData/minimumHeight," Minimum height in pixels; by default the height is aligned to the\n row-height\n @since 3.4\n"
3539,field,org/eclipse/jface/viewers/CellEditor/LayoutData/verticalAlignment," The vertical alignment; <code>SWT.CENTER</code> by default.\n @since 3.4\n"
3543,method,org/eclipse/jface/viewers/IDelayedLabelDecorator/prepareDecoration/Object;String," Prepare the element for decoration. If it is already decorated and ready for update\n return true. If decoration is pending return false.\n @param element The element to be decorated\n @param originalText The starting text. \n @return boolean <code>true</code> if the decoration is ready for this element\n"
3545,method,org/eclipse/jface/viewers/Viewer/addHelpListener/HelpListener," Adds a listener for help requests in this viewer.\n Has no effect if an identical listener is already registered.\n\n @param listener a help listener\n"
3546,method,org/eclipse/jface/viewers/Viewer/addSelectionChangedListener/ISelectionChangedListener,""
3549,method,org/eclipse/jface/viewers/Viewer/getControl/," Returns the primary control associated with this viewer.\n\n @return the SWT control which displays this viewer's content\n"
3551,method,org/eclipse/jface/viewers/Viewer/getInput/,""
3552,method,org/eclipse/jface/viewers/Viewer/getSelection/,""
3553,method,org/eclipse/jface/viewers/Viewer/handleHelpRequest/HelpEvent," Handles a help request from the underlying SWT control.\n The default behavior is to fire a help request,\n with the event's data modified to hold this viewer.\n @param event the event\n \n"
3555,method,org/eclipse/jface/viewers/Viewer/refresh/," Refreshes this viewer completely with information freshly obtained from this\n viewer's model.\n"
3556,method,org/eclipse/jface/viewers/Viewer/removeHelpListener/HelpListener," Removes the given help listener from this viewer.\n Has no affect if an identical listener is not registered.\n\n @param listener a help listener\n"
3557,method,org/eclipse/jface/viewers/Viewer/removeSelectionChangedListener/ISelectionChangedListener,""
3558,method,org/eclipse/jface/viewers/Viewer/scrollDown/int;int," Scrolls the viewer's control down by one item from the given\n display-relative coordinates.  Returns the newly revealed Item,\n or <code>null</code> if no scrolling occurred or if the viewer\n doesn't represent an item-based widget.\n\n @param x horizontal coordinate\n @param y vertical coordinate\n @return the item scrolled down to\n"
3559,method,org/eclipse/jface/viewers/Viewer/scrollUp/int;int," Scrolls the viewer's control up by one item from the given\n display-relative coordinates.  Returns the newly revealed Item,\n or <code>null</code> if no scrolling occurred or if the viewer\n doesn't represent an item-based widget.\n\n @param x horizontal coordinate\n @param y vertical coordinate\n @return the item scrolled up to\n"
3561,method,org/eclipse/jface/viewers/Viewer/setInput/Object," Sets or clears the input for this viewer.\n\n @param input the input of this viewer, or <code>null</code> if none\n"
3564,method,org/eclipse/jface/viewers/Viewer/Viewer/," Creates a new viewer.\n"
3565,field,org/eclipse/jface/viewers/Viewer/WIDGET_DATA_KEY," Unique key for associating element data with widgets.\n @see org.eclipse.swt.widgets.Widget#setData(String, Object)\n"
3566,interface,org/eclipse/jface/viewers/ILabelDecorator," A label decorator decorates the label text and image for some element.\n The original label text and image are obtained by some other means,\n for example by a label provider.\n\n @see ILabelProvider\n"
3569,class,org/eclipse/jface/viewers/NamedHandleObjectLabelProvider," A label provider for instances of <code>NamedHandlerObject</code>, which\n exposes the name as the label.\n \n @since 3.2\n"
3571,method,org/eclipse/jface/viewers/NamedHandleObjectLabelProvider/NamedHandleObjectLabelProvider/,""
3573,method,org/eclipse/jface/viewers/StyledCellLabelProvider/isOwnerDrawEnabled/," Returns <code>true</code> is the owner draw rendering is enabled for this label provider.\n By default owner draw rendering is enabled. If owner draw rendering is disabled, rending is\n done by the viewer and no styled ranges (see {@link ViewerCell#getStyleRanges()})\n are drawn.\n \n @return <code>true</code> is the rendering of styles is enabled.\n"
3575,method,org/eclipse/jface/viewers/StyledCellLabelProvider/getViewer/," Returns the viewer on which this label provider is installed on or <code>null</code> if the\n label provider is not installed.\n \n @return the viewer on which this label provider is installed on or <code>null</code> if the\n label provider is not installed.\n"
3576,method,org/eclipse/jface/viewers/StyledCellLabelProvider/getColumn/," Returns the column on which this label provider is installed on or <code>null</code> if the\n label provider is not installed.\n \n @return the column on which this label provider is installed on or <code>null</code> if the\n label provider is not installed.\n"
3577,method,org/eclipse/jface/viewers/StyledCellLabelProvider/initialize/ColumnViewer;ViewerColumn,""
3578,method,org/eclipse/jface/viewers/StyledCellLabelProvider/dispose/,""
3579,method,org/eclipse/jface/viewers/StyledCellLabelProvider/update/ViewerCell,""
3581,method,org/eclipse/jface/viewers/StyledCellLabelProvider/erase/Event;Object," Handle the erase event. The default implementation does nothing to ensure\n keep native selection highlighting working.\n \n @param event\n            the erase event\n @param element\n            the model object\n @see SWT#EraseItem\n"
3582,method,org/eclipse/jface/viewers/StyledCellLabelProvider/measure/Event;Object,""
3583,method,org/eclipse/jface/viewers/StyledCellLabelProvider/paint/Event;Object,""
3584,method,org/eclipse/jface/viewers/StyledCellLabelProvider/styleDecoratedString/String;Styler;StyledString," Applies decoration styles to the decorated string and adds the styles of the previously\n undecorated string.\n <p>\n If the <code>decoratedString</code> contains the <code>styledString</code>, then the result\n keeps the styles of the <code>styledString</code> and styles the decorations with the\n <code>decorationStyler</code>. Otherwise, the decorated string is returned without any\n styles.\n \n @param decoratedString the decorated string\n @param decorationStyler the styler to use for the decoration or <code>null</code> for no\n            styles\n @param styledString the original styled string\n \n @return the styled decorated string (can be the given <code>styledString</code>)\n @since 3.5\n"
3585,method,org/eclipse/jface/viewers/StyledCellLabelProvider/StyledCellLabelProvider/," Creates a new StyledCellLabelProvider. By default, owner draw is enabled, focus is drawn and no\n colors are painted on selected elements.\n"
3586,method,org/eclipse/jface/viewers/StyledCellLabelProvider/StyledCellLabelProvider/int," Creates a new StyledCellLabelProvider. By default, owner draw is enabled.\n \n @param style\n            the style bits\n @see StyledCellLabelProvider#COLORS_ON_SELECTION\n @see StyledCellLabelProvider#NO_FOCUS\n"
3587,field,org/eclipse/jface/viewers/StyledCellLabelProvider/COLORS_ON_SELECTION," Style constant for indicating that the styled colors are to be applied\n even it the viewer's item is selected. Default is not to apply colors.\n"
3588,field,org/eclipse/jface/viewers/StyledCellLabelProvider/NO_FOCUS," Style constant for indicating to draw the focus if requested by the owner\n draw event. Default is to draw the focus.\n"
3590,method,org/eclipse/jface/viewers/StructuredViewerInternals/setAssociateListener/StructuredViewer;AssociateListener," Nothing to see here. Sets or resets the AssociateListener for the given\n Viewer.\n \n @param viewer\n            the viewer\n @param listener\n            the {@link AssociateListener}\n @noreference This method is not intended to be referenced by clients.\n"
3591,method,org/eclipse/jface/viewers/StructuredViewerInternals/getItems/StructuredViewer;Object," Nothing to see here. Returns the items for the given element.\n \n @param viewer\n @param element\n @return the Widgets corresponding to the element\n \n @noreference This method is not intended to be referenced by clients.\n"
3592,method,org/eclipse/jface/viewers/StructuredViewerInternals/StructuredViewerInternals/,""
3596,class,org/eclipse/jface/viewers/TreeExpansionEvent," Event object describing a tree node being expanded\n or collapsed. The source of these events is the tree viewer.\n\n @see ITreeViewerListener\n"
3597,method,org/eclipse/jface/viewers/TreeExpansionEvent/getElement/," Returns the element that got expanded or collapsed.\n\n @return the element\n"
3598,method,org/eclipse/jface/viewers/TreeExpansionEvent/getTreeViewer/," Returns the originator of the event.\n\n @return the originating tree viewer\n"
3599,method,org/eclipse/jface/viewers/TreeExpansionEvent/TreeExpansionEvent/AbstractTreeViewer;Object," Creates a new event for the given source and element.\n\n @param source the tree viewer\n @param element the element\n"
3602,interface,org/eclipse/jface/viewers/IFilter," Interface for filters. Can accept or reject items.\n \n @since 3.1\n"
3603,method,org/eclipse/jface/viewers/IFilter/select/Object," Determines if the given object passes this filter.\n \n @param toTest object to compare against the filter \n \n @return <code>true</code> if the object is accepted by the filter.\n"
3605,method,org/eclipse/jface/viewers/ComboBoxCellEditor/getItems/," Returns the list of choices for the combo box\n\n @return the list of choices for the combo box\n"
3606,method,org/eclipse/jface/viewers/ComboBoxCellEditor/setItems/String[]," Sets the list of choices for the combo box\n\n @param items\n            the list of choices for the combo box\n"
3607,method,org/eclipse/jface/viewers/ComboBoxCellEditor/createControl/Composite,""
3608,method,org/eclipse/jface/viewers/ComboBoxCellEditor/doGetValue/," The <code>ComboBoxCellEditor</code> implementation of this\n <code>CellEditor</code> framework method returns the zero-based index\n of the current selection.\n\n @return the zero-based index of the current selection wrapped as an\n         <code>Integer</code>\n"
3609,method,org/eclipse/jface/viewers/ComboBoxCellEditor/doSetFocus/,""
3610,method,org/eclipse/jface/viewers/ComboBoxCellEditor/getLayoutData/," The <code>ComboBoxCellEditor</code> implementation of this\n <code>CellEditor</code> framework method sets the minimum width of the\n cell. The minimum width is 10 characters if <code>comboBox</code> is\n not <code>null</code> or <code>disposed</code> else it is 60 pixels\n to make sure the arrow button and some text is visible. The list of\n CCombo will be wide enough to show its longest item.\n"
3611,method,org/eclipse/jface/viewers/ComboBoxCellEditor/doSetValue/Object," The <code>ComboBoxCellEditor</code> implementation of this\n <code>CellEditor</code> framework method accepts a zero-based index of\n a selection.\n\n @param value\n            the zero-based index of the selection wrapped as an\n            <code>Integer</code>\n"
3612,method,org/eclipse/jface/viewers/ComboBoxCellEditor/focusLost/,""
3613,method,org/eclipse/jface/viewers/ComboBoxCellEditor/keyReleaseOccured/KeyEvent,""
3614,method,org/eclipse/jface/viewers/ComboBoxCellEditor/ComboBoxCellEditor/," Creates a new cell editor with no control and no st of choices.\n Initially, the cell editor has no cell validator.\n\n @since 2.1\n @see CellEditor#setStyle\n @see CellEditor#create\n @see ComboBoxCellEditor#setItems\n @see CellEditor#dispose\n"
3615,method,org/eclipse/jface/viewers/ComboBoxCellEditor/ComboBoxCellEditor/Composite;String[]," Creates a new cell editor with a combo containing the given list of\n choices and parented under the given control. The cell editor value is\n the zero-based index of the selected item. Initially, the cell editor has\n no cell validator and the first item in the list is selected.\n\n @param parent\n            the parent control\n @param items\n            the list of strings for the combo box\n"
3616,method,org/eclipse/jface/viewers/ComboBoxCellEditor/ComboBoxCellEditor/Composite;String[];int," Creates a new cell editor with a combo containing the given list of\n choices and parented under the given control. The cell editor value is\n the zero-based index of the selected item. Initially, the cell editor has\n no cell validator and the first item in the list is selected.\n\n @param parent\n            the parent control\n @param items\n            the list of strings for the combo box\n @param style\n            the style bits\n @since 2.1\n"
3618,method,org/eclipse/jface/viewers/ITreeSelection/getPaths/," Returns the paths in this selection\n \n @return the paths in this selection\n"
3619,method,org/eclipse/jface/viewers/ITreeSelection/getPathsFor/Object," Returns the paths in this selection whose last segment is equal\n to the given element\n \n @param element the element to get the tree paths for\n \n @return the array of tree paths\n"
3621,method,org/eclipse/jface/viewers/EditingSupport/getCellEditor/Object," The editor to be shown\n\n @param element\n            the model element\n @return the CellEditor\n"
3622,method,org/eclipse/jface/viewers/EditingSupport/canEdit/Object," Is the cell editable\n\n @param element\n            the model element\n @return true if editable\n"
3623,method,org/eclipse/jface/viewers/EditingSupport/getValue/Object," Get the value to set to the editor\n\n @param element\n            the model element\n @return the value shown\n"
3625,method,org/eclipse/jface/viewers/EditingSupport/getViewer/," @return the viewer this editing support works for\n"
3628,method,org/eclipse/jface/viewers/EditingSupport/EditingSupport/ColumnViewer," @param viewer\n            a new viewer\n"
3629,interface,org/eclipse/jface/viewers/IFontDecorator," The IFontDecorator is an interface for objects that return a font to\n decorate an object.\n \n If an IFontDecorator decorates a font in an object that also has\n an IFontProvider the IFontDecorator will take precedence.\n @see IFontProvider\n \n @since 3.1\n"
3630,method,org/eclipse/jface/viewers/IFontDecorator/decorateFont/Object," Return the font for element or <code>null</code> if there\n is not one.\n \n @param element\n @return Font or <code>null</code>\n"
3631,class,org/eclipse/jface/viewers/FocusCellHighlighter," @since 3.3\n\n"
3632,method,org/eclipse/jface/viewers/FocusCellHighlighter/getFocusCell/," @return the focus cell\n"
3636,method,org/eclipse/jface/viewers/FocusCellHighlighter/FocusCellHighlighter/ColumnViewer," @param viewer\n"
3641,method,org/eclipse/jface/viewers/ViewerColumn/getViewer/," Returns the viewer of this viewer column.\n \n @return Returns the viewer.\n \n @since 3.4\n"
3642,method,org/eclipse/jface/viewers/ViewerColumn/ViewerColumn/ColumnViewer;Widget," Create a new instance of the receiver at columnIndex.\n \n @param viewer\n            the viewer the column is part of\n @param columnOwner\n            the widget owning the viewer in case the widget has no columns\n            this could be the widget itself\n"
3644,method,org/eclipse/jface/viewers/TreeSelection/getElementComparer/," Returns the element comparer passed in when the tree selection\n has been created or <code>null</code> if no comparer has been\n provided.\n \n @return the element comparer or <code>null</code>\n \n @since 3.2\n"
3645,method,org/eclipse/jface/viewers/TreeSelection/equals/Object,""
3646,method,org/eclipse/jface/viewers/TreeSelection/hashCode/,""
3647,method,org/eclipse/jface/viewers/TreeSelection/getPaths/,""
3648,method,org/eclipse/jface/viewers/TreeSelection/getPathsFor/Object,""
3649,method,org/eclipse/jface/viewers/TreeSelection/TreeSelection/TreePath[]," Constructs a selection based on the elements identified by the given tree\n paths.\n \n @param paths\n            tree paths\n"
3650,method,org/eclipse/jface/viewers/TreeSelection/TreeSelection/TreePath[];IElementComparer," Constructs a selection based on the elements identified by the given tree\n paths.\n \n @param paths\n            tree paths\n @param comparer \n            the comparer, or <code>null</code> if default equals is to be used\n"
3651,method,org/eclipse/jface/viewers/TreeSelection/TreeSelection/TreePath," Constructs a selection based on the elements identified by the given tree\n path.\n \n @param treePath\n            tree path, or <code>null</code> for an empty selection\n"
3652,method,org/eclipse/jface/viewers/TreeSelection/TreeSelection/TreePath;IElementComparer," Constructs a selection based on the elements identified by the given tree\n path.\n \n @param treePath\n            tree path, or <code>null</code> for an empty selection\n @param comparer \n            the comparer, or <code>null</code> if default equals is to be used\n"
3653,method,org/eclipse/jface/viewers/TreeSelection/TreeSelection/," Creates a new empty selection. See also the static field\n <code>EMPTY</code> which contains an empty selection singleton.\n \n @see #EMPTY\n"
3655,class,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider," A {@link DelegatingStyledCellLabelProvider} is a\n {@link StyledCellLabelProvider} that delegates requests for the styled string\n and the image to a\n {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider}.\n \n <p>\n Existing label providers can be enhanced by implementing\n {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider} so they can be\n used in viewers with styled labels.\n </p>\n \n <p>\n The {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider} can\n optionally implement {@link IColorProvider} and {@link IFontProvider} to\n provide foreground and background color and a default font.\n </p>\n \n @since 3.4\n"
3656,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/update/ViewerCell,""
3657,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/getForeground/Object," Provides a foreground color for the given element.\n \n @param element\n            the element\n @return the foreground color for the element, or <code>null</code> to\n         use the default foreground color\n"
3658,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/getBackground/Object," Provides a background color for the given element.\n \n @param element\n            the element\n @return the background color for the element, or <code>null</code> to\n         use the default background color\n"
3659,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/getFont/Object," Provides a font for the given element.\n \n @param element\n            the element\n @return the font for the element, or <code>null</code> to use the\n         default font\n"
3661,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/getStyledText/Object," Returns the styled text for the label of the given element.\n \n @param element\n            the element for which to provide the styled label text\n @return the styled text string used to label the element\n"
3662,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/getStyledStringProvider/," Returns the styled string provider.\n \n @return the wrapped label provider\n"
3663,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/addListener/ILabelProviderListener,""
3664,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/removeListener/ILabelProviderListener,""
3665,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/isLabelProperty/Object;String,""
3666,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/dispose/,""
3667,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/DelegatingStyledCellLabelProvider/IStyledLabelProvider," Creates a {@link DelegatingStyledCellLabelProvider} that delegates the\n requests for the styled labels and the images to a\n {@link IStyledLabelProvider}.\n \n @param labelProvider\n            the label provider that provides the styled labels and the\n            images\n"
3668,interface,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/IStyledLabelProvider," Interface marking a label provider that provides styled text labels and\n images.\n <p>\n The {@link DelegatingStyledCellLabelProvider.IStyledLabelProvider} can\n optionally implement {@link IColorProvider} and {@link IFontProvider} to\n provide foreground and background color and a default font.\n </p>\n"
3669,method,org/eclipse/jface/viewers/DelegatingStyledCellLabelProvider/IStyledLabelProvider/getStyledText/Object," Returns the styled text label for the given element\n \n @param element\n            the element to evaluate the styled string for\n \n @return the styled string.\n"
3672,method,org/eclipse/jface/viewers/TreeViewer/addTreeListener/Control;TreeListener,""
3673,method,org/eclipse/jface/viewers/TreeViewer/getColumnViewerOwner/int,""
3674,method,org/eclipse/jface/viewers/TreeViewer/getChildren/Widget,""
3675,method,org/eclipse/jface/viewers/TreeViewer/getControl/,""
3676,method,org/eclipse/jface/viewers/TreeViewer/getExpanded/Item,""
3677,method,org/eclipse/jface/viewers/TreeViewer/getItemAt/Point,""
3678,method,org/eclipse/jface/viewers/TreeViewer/getItemCount/Control,""
3679,method,org/eclipse/jface/viewers/TreeViewer/getItemCount/Item,""
3680,method,org/eclipse/jface/viewers/TreeViewer/getItems/Item,""
3682,method,org/eclipse/jface/viewers/TreeViewer/getParentItem/Item,""
3683,method,org/eclipse/jface/viewers/TreeViewer/getSelection/Control,""
3684,method,org/eclipse/jface/viewers/TreeViewer/getTree/," Returns this tree viewer's tree control.\n\n @return the tree control\n"
3685,method,org/eclipse/jface/viewers/TreeViewer/hookControl/Control,""
3686,method,org/eclipse/jface/viewers/TreeViewer/createViewerEditor/,""
3687,method,org/eclipse/jface/viewers/TreeViewer/newItem/Widget;int;int,""
3688,method,org/eclipse/jface/viewers/TreeViewer/removeAll/Control,""
3689,method,org/eclipse/jface/viewers/TreeViewer/setExpanded/Item;boolean,""
3690,method,org/eclipse/jface/viewers/TreeViewer/setSelection/List,""
3691,method,org/eclipse/jface/viewers/TreeViewer/showItem/Item,""
3692,method,org/eclipse/jface/viewers/TreeViewer/getChild/Widget;int,""
3693,method,org/eclipse/jface/viewers/TreeViewer/assertContentProviderType/IContentProvider,""
3694,method,org/eclipse/jface/viewers/TreeViewer/getRawChildren/Object,""
3695,method,org/eclipse/jface/viewers/TreeViewer/setChildCount/Object;int," For a TreeViewer with a tree with the VIRTUAL style bit set, set the\n number of children of the given element or tree path. To set the number\n of children of the invisible root of the tree, you can pass the input\n object or an empty tree path.\n\n @param elementOrTreePath\n            the element, or tree path\n @param count\n\n @since 3.2\n"
3697,method,org/eclipse/jface/viewers/TreeViewer/isExpandable/Object,""
3698,method,org/eclipse/jface/viewers/TreeViewer/getParentElement/Object,""
3699,method,org/eclipse/jface/viewers/TreeViewer/createChildren/Widget,""
3700,method,org/eclipse/jface/viewers/TreeViewer/internalAdd/Widget;Object;Object[],""
3701,method,org/eclipse/jface/viewers/TreeViewer/internalRefreshStruct/Widget;Object;boolean,""
3702,method,org/eclipse/jface/viewers/TreeViewer/mapElement/Object;Widget,""
3703,method,org/eclipse/jface/viewers/TreeViewer/getViewerRowFromItem/Widget,""
3704,method,org/eclipse/jface/viewers/TreeViewer/internalInitializeTree/Control,""
3705,method,org/eclipse/jface/viewers/TreeViewer/updatePlus/Item;Object,""
3707,method,org/eclipse/jface/viewers/TreeViewer/handleTreeExpand/TreeEvent,""
3708,method,org/eclipse/jface/viewers/TreeViewer/handleTreeCollapse/TreeEvent,""
3709,method,org/eclipse/jface/viewers/TreeViewer/setContentProvider/IContentProvider,""
3711,method,org/eclipse/jface/viewers/TreeViewer/disassociate/Item,""
3712,method,org/eclipse/jface/viewers/TreeViewer/doGetColumnCount/,""
3714,method,org/eclipse/jface/viewers/TreeViewer/editElement/Object;int,""
3715,method,org/eclipse/jface/viewers/TreeViewer/TreeViewer/Composite," Creates a tree viewer on a newly-created tree control under the given\n parent. The tree control is created using the SWT style bits\n <code>MULTI, H_SCROLL, V_SCROLL,</code> and <code>BORDER</code>. The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters.\n\n @param parent\n            the parent control\n"
3716,method,org/eclipse/jface/viewers/TreeViewer/TreeViewer/Composite;int," Creates a tree viewer on a newly-created tree control under the given\n parent. The tree control is created using the given SWT style bits. The\n viewer has no input, no content provider, a default label provider, no\n sorter, and no filters.\n\n @param parent\n            the parent control\n @param style\n            the SWT style bits used to create the tree.\n"
3717,method,org/eclipse/jface/viewers/TreeViewer/TreeViewer/Tree," Creates a tree viewer on the given tree control. The viewer has no input,\n no content provider, a default label provider, no sorter, and no filters.\n\n @param tree\n            the tree control\n"
3721,method,org/eclipse/jface/viewers/DialogCellEditor/createControl/Composite,""
3722,method,org/eclipse/jface/viewers/DialogCellEditor/deactivate/,""
3723,method,org/eclipse/jface/viewers/DialogCellEditor/doGetValue/,""
3724,method,org/eclipse/jface/viewers/DialogCellEditor/doSetFocus/,""
3725,method,org/eclipse/jface/viewers/DialogCellEditor/doSetValue/Object,""
3726,method,org/eclipse/jface/viewers/DialogCellEditor/getDefaultLabel/," Returns the default label widget created by <code>createContents</code>.\n\n @return the default label widget\n"
3729,method,org/eclipse/jface/viewers/DialogCellEditor/DialogCellEditor/," Creates a new dialog cell editor with no control\n @since 2.1\n"
3730,method,org/eclipse/jface/viewers/DialogCellEditor/DialogCellEditor/Composite," Creates a new dialog cell editor parented under the given control.\n The cell editor value is <code>null</code> initially, and has no \n validator.\n\n @param parent the parent control\n"
3731,method,org/eclipse/jface/viewers/DialogCellEditor/DialogCellEditor/Composite;int," Creates a new dialog cell editor parented under the given control.\n The cell editor value is <code>null</code> initially, and has no \n validator.\n\n @param parent the parent control\n @param style the style bits\n @since 2.1\n"
3732,field,org/eclipse/jface/viewers/DialogCellEditor/CELL_EDITOR_IMG_DOTS_BUTTON," Image registry key for three dot image (value <code>"cell_editor_dots_button_image"</code>).\n"
3733,class,org/eclipse/jface/viewers/TreeViewerRow," TreeViewerRow is the Tree implementation of ViewerRow.\n\n @since 3.3\n\n"
3734,method,org/eclipse/jface/viewers/TreeViewerRow/getBounds/int,""
3735,method,org/eclipse/jface/viewers/TreeViewerRow/getBounds/,""
3736,method,org/eclipse/jface/viewers/TreeViewerRow/getColumnCount/,""
3737,method,org/eclipse/jface/viewers/TreeViewerRow/getItem/,""
3738,method,org/eclipse/jface/viewers/TreeViewerRow/getBackground/int,""
3739,method,org/eclipse/jface/viewers/TreeViewerRow/getFont/int,""
3740,method,org/eclipse/jface/viewers/TreeViewerRow/getForeground/int,""
3741,method,org/eclipse/jface/viewers/TreeViewerRow/getImage/int,""
3742,method,org/eclipse/jface/viewers/TreeViewerRow/getText/int,""
3743,method,org/eclipse/jface/viewers/TreeViewerRow/setBackground/int;Color,""
3744,method,org/eclipse/jface/viewers/TreeViewerRow/setFont/int;Font,""
3745,method,org/eclipse/jface/viewers/TreeViewerRow/setForeground/int;Color,""
3746,method,org/eclipse/jface/viewers/TreeViewerRow/setImage/int;Image,""
3747,method,org/eclipse/jface/viewers/TreeViewerRow/setText/int;String,""
3748,method,org/eclipse/jface/viewers/TreeViewerRow/getControl/,""
3749,method,org/eclipse/jface/viewers/TreeViewerRow/getNeighbor/int;boolean,""
3750,method,org/eclipse/jface/viewers/TreeViewerRow/getTreePath/,""
3751,method,org/eclipse/jface/viewers/TreeViewerRow/clone/,""
3752,method,org/eclipse/jface/viewers/TreeViewerRow/getElement/,""
3753,method,org/eclipse/jface/viewers/TreeViewerRow/getVisualIndex/int,""
3754,method,org/eclipse/jface/viewers/TreeViewerRow/getCreationIndex/int,""
3755,method,org/eclipse/jface/viewers/TreeViewerRow/getTextBounds/int,""
3756,method,org/eclipse/jface/viewers/TreeViewerRow/getImageBounds/int,""
3757,method,org/eclipse/jface/viewers/TreeViewerRow/scrollCellIntoView/int,""
3759,method,org/eclipse/jface/viewers/TreeNodeContentProvider/dispose/,""
3760,method,org/eclipse/jface/viewers/TreeNodeContentProvider/getChildren/Object,""
3761,method,org/eclipse/jface/viewers/TreeNodeContentProvider/getElements/Object,""
3762,method,org/eclipse/jface/viewers/TreeNodeContentProvider/getParent/Object,""
3763,method,org/eclipse/jface/viewers/TreeNodeContentProvider/hasChildren/Object,""
3764,method,org/eclipse/jface/viewers/TreeNodeContentProvider/inputChanged/Viewer;Object;Object,""
3765,method,org/eclipse/jface/viewers/TreeNodeContentProvider/TreeNodeContentProvider/,""
3766,class,org/eclipse/jface/viewers/AcceptAllFilter," Filter that accepts everything. Available as a singleton since having\n more than one instance would be wasteful.\n \n @since 3.1\n"
3767,method,org/eclipse/jface/viewers/AcceptAllFilter/getInstance/," Returns the singleton instance of AcceptAllFilter\n \n @return the singleton instance of AcceptAllFilter\n"
3768,method,org/eclipse/jface/viewers/AcceptAllFilter/select/Object,""
3769,method,org/eclipse/jface/viewers/AcceptAllFilter/equals/Object,""
3770,method,org/eclipse/jface/viewers/AcceptAllFilter/AcceptAllFilter/,""
3772,method,org/eclipse/jface/viewers/ColumnViewerEditor/addEditorActivationListener/ColumnViewerEditorActivationListener," Adds the given listener, it is to be notified when the cell editor is\n activated or deactivated.\n\n @param listener\n            the listener to add\n"
3773,method,org/eclipse/jface/viewers/ColumnViewerEditor/removeEditorActivationListener/ColumnViewerEditorActivationListener," Removes the given listener.\n\n @param listener\n            the listener to remove\n"
3775,method,org/eclipse/jface/viewers/ColumnViewerEditor/setEditor/Control;Item;int," Position the editor inside the control\n\n @param w\n            the editor control\n @param item\n            the item (row) in which the editor is drawn in\n @param fColumnNumber\n            the column number in which the editor is shown\n"
3776,method,org/eclipse/jface/viewers/ColumnViewerEditor/setLayoutData/LayoutData," set the layout data for the editor\n\n @param layoutData\n            the layout data used when editor is displayed\n"
3777,method,org/eclipse/jface/viewers/ColumnViewerEditor/updateFocusCell/ViewerCell;ColumnViewerEditorActivationEvent," @param focusCell\n            updates the cell with the current input focus\n @param event\n            the event requesting to update the focusCell\n"
3778,method,org/eclipse/jface/viewers/ColumnViewerEditor/getFocusCell/," @return the cell currently holding the focus if no cell has the focus or\n         the viewer implementation doesn't support <code>null</code> is\n         returned\n\n"
3779,method,org/eclipse/jface/viewers/ColumnViewerEditor/getViewer/," @return the viewer working for\n"
3780,method,org/eclipse/jface/viewers/ColumnViewerEditor/ColumnViewerEditor/ColumnViewer;ColumnViewerEditorActivationStrategy;int," @param viewer\n            the viewer this editor is attached to\n @param editorActivationStrategy\n            the strategy used to decide about editor activation\n @param feature\n            bit mask controlling the editor\n            <ul>\n            <li>{@link ColumnViewerEditor#DEFAULT}</li>\n            <li>{@link ColumnViewerEditor#TABBING_CYCLE_IN_ROW}</li>\n            <li>{@link ColumnViewerEditor#TABBING_HORIZONTAL}</li>\n            <li>{@link ColumnViewerEditor#TABBING_MOVE_TO_ROW_NEIGHBOR}</li>\n            <li>{@link ColumnViewerEditor#TABBING_VERTICAL}</li>\n            </ul>\n"
3781,field,org/eclipse/jface/viewers/ColumnViewerEditor/DEFAULT," Tabbing from cell to cell is turned off\n"
3784,field,org/eclipse/jface/viewers/ColumnViewerEditor/TABBING_VERTICAL," Support tabbing to Cell above/below the current cell\n"
3786,field,org/eclipse/jface/viewers/ColumnViewerEditor/KEYBOARD_ACTIVATION," Style mask used to enable keyboard activation\n"
3787,field,org/eclipse/jface/viewers/ColumnViewerEditor/KEEP_EDITOR_ON_DOUBLE_CLICK," Style mask used to turn <b>off</b> the feature that an editor activation\n is canceled on double click. It is also possible to turn off this feature\n per cell-editor using {@link CellEditor#getDoubleClickTimeout()}\n @since 3.4\n"
3788,interface,org/eclipse/jface/viewers/ISelectionProvider," Interface common to all objects that provide a selection.\n\n @see ISelection\n @see ISelectionChangedListener\n @see SelectionChangedEvent\n"
3789,method,org/eclipse/jface/viewers/ISelectionProvider/addSelectionChangedListener/ISelectionChangedListener," Adds a listener for selection changes in this selection provider.\n Has no effect if an identical listener is already registered.\n\n @param listener a selection changed listener\n"
3790,method,org/eclipse/jface/viewers/ISelectionProvider/getSelection/," Returns the current selection for this provider.\n \n @return the current selection\n"
3791,method,org/eclipse/jface/viewers/ISelectionProvider/removeSelectionChangedListener/ISelectionChangedListener," Removes the given selection change listener from this selection provider.\n Has no affect if an identical listener is not registered.\n\n @param listener a selection changed listener\n"
3792,method,org/eclipse/jface/viewers/ISelectionProvider/setSelection/ISelection," Sets the current selection for this selection provider.\n\n @param selection the new selection\n"
3793,class,org/eclipse/jface/viewers/TableViewerRow," TableViewerRow is the Table specific implementation of ViewerRow\n @since 3.3\n\n"
3794,method,org/eclipse/jface/viewers/TableViewerRow/getBounds/int,""
3795,method,org/eclipse/jface/viewers/TableViewerRow/getBounds/,""
3796,method,org/eclipse/jface/viewers/TableViewerRow/getItem/,""
3797,method,org/eclipse/jface/viewers/TableViewerRow/getColumnCount/,""
3798,method,org/eclipse/jface/viewers/TableViewerRow/getBackground/int,""
3799,method,org/eclipse/jface/viewers/TableViewerRow/getFont/int,""
3800,method,org/eclipse/jface/viewers/TableViewerRow/getForeground/int,""
3801,method,org/eclipse/jface/viewers/TableViewerRow/getImage/int,""
3802,method,org/eclipse/jface/viewers/TableViewerRow/getText/int,""
3803,method,org/eclipse/jface/viewers/TableViewerRow/setBackground/int;Color,""
3804,method,org/eclipse/jface/viewers/TableViewerRow/setFont/int;Font,""
3805,method,org/eclipse/jface/viewers/TableViewerRow/setForeground/int;Color,""
3806,method,org/eclipse/jface/viewers/TableViewerRow/setImage/int;Image,""
3807,method,org/eclipse/jface/viewers/TableViewerRow/setText/int;String,""
3808,method,org/eclipse/jface/viewers/TableViewerRow/getControl/,""
3809,method,org/eclipse/jface/viewers/TableViewerRow/getNeighbor/int;boolean,""
3810,method,org/eclipse/jface/viewers/TableViewerRow/getTreePath/,""
3811,method,org/eclipse/jface/viewers/TableViewerRow/clone/,""
3812,method,org/eclipse/jface/viewers/TableViewerRow/getElement/,""
3813,method,org/eclipse/jface/viewers/TableViewerRow/getVisualIndex/int,""
3814,method,org/eclipse/jface/viewers/TableViewerRow/getCreationIndex/int,""
3815,method,org/eclipse/jface/viewers/TableViewerRow/getTextBounds/int,""
3816,method,org/eclipse/jface/viewers/TableViewerRow/getImageBounds/int,""
3817,method,org/eclipse/jface/viewers/TableViewerRow/scrollCellIntoView/int,""
3819,method,org/eclipse/jface/viewers/deferred/DeferredContentProvider/dispose/,""
3820,method,org/eclipse/jface/viewers/deferred/DeferredContentProvider/inputChanged/Viewer;Object;Object,""
3824,method,org/eclipse/jface/viewers/deferred/DeferredContentProvider/getLimit/," Returns the current maximum number of rows or -1 if unbounded\n \n @return the current maximum number of rows or -1 if unbounded\n"
3825,method,org/eclipse/jface/viewers/deferred/DeferredContentProvider/updateElement/int,""
3826,method,org/eclipse/jface/viewers/deferred/DeferredContentProvider/DeferredContentProvider/Comparator," Create a DeferredContentProvider with the given sort order.\n @param sortOrder a comparator that sorts the content.\n"
3829,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/size/," Returns the number of elements in the collection\n \n @return the number of elements in the collection\n"
3831,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/add/Object," Adds the given object to the collection. Runs in O(1) amortized time.\n \n @param toAdd object to add\n"
3832,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/addAll/Collection," Adds all items from the given collection to this collection \n \n @param toAdd objects to add\n"
3833,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/addAll/Object[]," Adds all items from the given array to the collection\n \n @param toAdd objects to add\n"
3834,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/isEmpty/," Returns true iff the collection is empty\n \n @return true iff the collection contains no elements\n"
3835,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/remove/Object," Removes the given object from the collection. Has no effect if\n the element does not exist in this collection.\n \n @param toRemove element to remove\n"
3836,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/removeAll/Object[]," Removes all elements in the given array from this collection.\n \n @param toRemove elements to remove \n"
3838,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/removeRange/int;int," Removes all elements in the given range from this collection.\n For example, removeRange(10, 3) would remove the 11th through 13th\n smallest items from the collection.\n \n @param first 0-based index of the smallest item to remove\n @param length number of items to remove\n"
3839,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/clear/," Removes all elements from the collection\n"
3840,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/getComparator/," Returns the comparator that is determining the sort order for this collection\n \n @return comparator for this collection\n"
3843,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/getItem/int," Returns the item at the given index. Indexes are based on sorted order.\n \n @param index index to test\n @return the item at the given index\n"
3845,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/contains/Object," Returns true iff this collection contains the given item\n \n @param item item to test\n @return true iff this collection contains the given item\n"
3846,method,org/eclipse/jface/viewers/deferred/LazySortedCollection/LazySortedCollection/Comparator," Creates a new sorted collection using the given comparator to determine\n sort order.\n \n @param c comparator that determines the sort order\n"
3853,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/addListener/IConcurrentModelListener,""
3854,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/fireAdd/Object[]," Fires an add notification to all listeners\n \n @param added objects added to the set\n"
3855,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/fireRemove/Object[]," Fires a remove notification to all listeners\n \n @param removed objects removed from the set\n"
3856,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/fireUpdate/Object[]," Fires an update notification to all listeners\n \n @param updated objects that have changed\n"
3857,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/getListeners/," Returns the array of listeners for this model\n \n @return the array of listeners for this model \n"
3858,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/removeListener/IConcurrentModelListener,""
3859,method,org/eclipse/jface/viewers/deferred/AbstractConcurrentModel/AbstractConcurrentModel/,""
3861,method,org/eclipse/jface/viewers/deferred/SetModel/getElements/," Return the contents of the model.\n @return the array of elements\n \n"
3862,method,org/eclipse/jface/viewers/deferred/SetModel/set/Object[]," Sets the contents to the given array of elements\n \n @param newContents new contents of this set\n"
3863,method,org/eclipse/jface/viewers/deferred/SetModel/clear/," Empties the set\n"
3864,method,org/eclipse/jface/viewers/deferred/SetModel/addAll/Object[]," Adds the given elements to the set\n \n @param toAdd elements to add\n"
3865,method,org/eclipse/jface/viewers/deferred/SetModel/addAll/Collection," Adds the given elements to the set. Duplicate elements are ignored.\n \n @param toAdd elements to add\n"
3866,method,org/eclipse/jface/viewers/deferred/SetModel/changeAll/Object[]," Fires a change notification for all elements in the given array\n \n @param changed array of elements that have changed\n"
3867,method,org/eclipse/jface/viewers/deferred/SetModel/removeAll/Object[]," Removes all of the given elements from the set.\n \n @param toRemove elements to remove\n"
3868,method,org/eclipse/jface/viewers/deferred/SetModel/requestUpdate/IConcurrentModelListener,""
3869,method,org/eclipse/jface/viewers/deferred/SetModel/SetModel/,""
3870,interface,org/eclipse/jface/viewers/deferred/IConcurrentModelListener," Interface for objects that can listen to changes in an IConcurrentModel.\n Elements in an IConcurrentModel are unordered.\n \n @since 3.1\n"
3878,method,org/eclipse/jface/window/WindowManager/add/Window," Adds the given window to the set of windows managed by\n this window manager. Does nothing is this window is\n already managed by this window manager.\n\n @param window the window\n"
3879,method,org/eclipse/jface/window/WindowManager/close/," Attempts to close all windows managed by this window manager,\n as well as windows managed by any descendent window managers.\n\n @return <code>true</code> if all windows were sucessfully closed, \n and <code>false</code> if any window refused to close\n"
3880,method,org/eclipse/jface/window/WindowManager/getWindowCount/," Returns this window manager's number of windows\n \n @return the number of windows\n @since 3.0\n"
3881,method,org/eclipse/jface/window/WindowManager/getWindows/," Returns this window manager's set of windows.\n\n @return a possibly empty list of window\n"
3882,method,org/eclipse/jface/window/WindowManager/remove/Window," Removes the given window from the set of windows managed by\n this window manager. Does nothing is this window is\n not managed by this window manager.\n\n @param window the window\n"
3883,method,org/eclipse/jface/window/WindowManager/WindowManager/," Creates an empty window manager without a parent window\n manager (that is, a root window manager).\n"
3884,method,org/eclipse/jface/window/WindowManager/WindowManager/WindowManager," Creates an empty window manager with the given\n window manager as parent.\n\n @param parent the parent window manager\n"
3890,method,org/eclipse/jface/window/Window/constrainShellSize/," Constrain the shell size to be no larger than the display bounds.\n \n @since 2.0\n"
3894,method,org/eclipse/jface/window/Window/getContents/," Returns the top level control for this window. The parent of this control\n is the shell.\n \n @return the top level control, or <code>null</code> if this window's\n         control has not been created yet\n"
3895,method,org/eclipse/jface/window/Window/getDefaultImage/," Returns the default image. This is the image that will be used for\n windows that have no shell image at the time they are opened. There is no\n default image unless one is installed via <code>setDefaultImage</code>.\n \n @return the default image, or <code>null</code> if none\n @see #setDefaultImage\n"
3896,method,org/eclipse/jface/window/Window/getDefaultImages/," Returns the array of default images to use for newly opened windows. It\n is expected that the array will contain the same icon rendered at\n different resolutions.\n \n @see org.eclipse.swt.widgets.Decorations#setImages(org.eclipse.swt.graphics.Image[])\n \n @return the array of images to be used when a new window is opened\n @see #setDefaultImages\n @since 3.0\n"
3897,method,org/eclipse/jface/window/Window/getInitialLocation/Point," Returns the initial location to use for the shell. The default\n implementation centers the shell horizontally (1/2 of the difference to\n the left and 1/2 to the right) and vertically (1/3 above and 2/3 below)\n relative to the parent shell, or display bounds if there is no parent\n shell.\n \n @param initialSize\n            the initial size of the shell, as returned by\n            <code>getInitialSize</code>.\n @return the initial location of the shell\n"
3898,method,org/eclipse/jface/window/Window/getInitialSize/," Returns the initial size to use for the shell. The default implementation\n returns the preferred size of the shell, using\n <code>Shell.computeSize(SWT.DEFAULT, SWT.DEFAULT, true)</code>.\n \n @return the initial size of the shell\n"
3899,method,org/eclipse/jface/window/Window/getParentShell/," Returns parent shell, under which this window's shell is created.\n \n @return the parent shell, or <code>null</code> if there is no parent\n         shell\n"
3900,method,org/eclipse/jface/window/Window/getReturnCode/," Returns this window's return code. A window's return codes are\n window-specific, although two standard return codes are predefined:\n <code>OK</code> and <code>CANCEL</code>.\n \n @return the return code\n"
3901,method,org/eclipse/jface/window/Window/getShell/," Returns this window's shell.\n \n @return this window's shell, or <code>null</code> if this window's\n         shell has not been created yet\n"
3904,method,org/eclipse/jface/window/Window/getWindowManager/," Returns the window manager of this window.\n \n @return the WindowManager, or <code>null</code> if none\n"
3908,method,org/eclipse/jface/window/Window/open/," Opens this window, creating it first if it has not yet been created.\n <p>\n If this window has been configured to block on open (\n <code>setBlockOnOpen</code>), this method waits until the window is\n closed by the end user, and then it returns the window's return code;\n otherwise, this method returns immediately. A window's return codes are\n window-specific, although two standard return codes are predefined:\n <code>OK</code> and <code>CANCEL</code>.\n </p>\n \n @return the return code\n \n @see #create()\n"
3910,method,org/eclipse/jface/window/Window/setDefaultImage/Image," Sets the default image. This is the image that will be used for windows\n that have no shell image at the time they are opened. There is no default\n image unless one is installed via this method.\n \n @param image\n            the default image, or <code>null</code> if none\n"
3911,method,org/eclipse/jface/window/Window/setDefaultImages/Image[]," Sets the array of default images to use for newly opened windows. It is\n expected that the array will contain the same icon rendered at different\n resolutions.\n \n @see org.eclipse.swt.widgets.Decorations#setImages(org.eclipse.swt.graphics.Image[])\n \n @param images\n            the array of images to be used when this window is opened\n @since 3.0\n"
3913,method,org/eclipse/jface/window/Window/setReturnCode/int," Sets this window's return code. The return code is automatically returned\n by <code>open</code> if block on open is enabled. For non-blocking\n opens, the return code needs to be retrieved manually using\n <code>getReturnCode</code>.\n \n @param code\n            the return code\n"
3918,method,org/eclipse/jface/window/Window/setDefaultModalParent/IShellProvider," Sets the default parent for modal Windows. This will be used to locate\n the parent for any modal Window constructed with a null parent.\n \n @param provider shell provider that will be used to locate the parent shell\n whenever a Window is created with a null parent\n @since 3.1\n"
3919,method,org/eclipse/jface/window/Window/getDefaultOrientation/," Gets the default orientation for windows. If it is not\n set the default value will be unspecified (SWT#NONE).\n \n \n @return SWT#NONE, SWT.RIGHT_TO_LEFT or SWT.LEFT_TO_RIGHT\n @see SWT#RIGHT_TO_LEFT\n @see SWT#LEFT_TO_RIGHT\n @see SWT#NONE\n @since 3.1\n"
3920,method,org/eclipse/jface/window/Window/setDefaultOrientation/int," Sets the default orientation of windows.\n @param defaultOrientation one of \n 	SWT#RIGHT_TO_LEFT, SWT#LEFT_TO_RIGHT ,SWT#NONE\n @see SWT#RIGHT_TO_LEFT\n @see SWT#LEFT_TO_RIGHT\n @see SWT#NONE\n @since 3.1\n"
3922,field,org/eclipse/jface/window/Window/OK," Standard return code constant (value 0) indicating that the window was\n opened.\n \n @see #open\n"
3923,field,org/eclipse/jface/window/Window/CANCEL," Standard return code constant (value 1) indicating that the window was\n canceled.\n \n @see #open\n"
3925,method,org/eclipse/jface/window/Window/IExceptionHandler/handleException/Throwable," Handle the exception.\n \n @param t\n            The exception that occured.\n"
3927,method,org/eclipse/jface/window/ApplicationWindow/getSeperator1/," Return the top seperator.\n @return Label\n"
3932,method,org/eclipse/jface/window/ApplicationWindow/canHandleShellCloseEvent/,""
3933,method,org/eclipse/jface/window/ApplicationWindow/close/,""
3935,method,org/eclipse/jface/window/ApplicationWindow/createTrimWidgets/Shell," Creates the trim widgets around the content area.\n \n @param shell the shell\n @since 3.0\n"
3936,method,org/eclipse/jface/window/ApplicationWindow/getLayout/,""
3948,method,org/eclipse/jface/window/ApplicationWindow/getMenuBarManager/," Returns the menu bar manager for this window (if it has one).\n\n @return the menu bar manager, or <code>null</code> if\n   this window does not have a menu bar\n @see #addMenuBar()\n"
3949,method,org/eclipse/jface/window/ApplicationWindow/getStatusLineManager/," Returns the status line manager for this window (if it has one).\n\n @return the status line manager, or <code>null</code> if\n   this window does not have a status line\n @see #addStatusLine\n"
3951,method,org/eclipse/jface/window/ApplicationWindow/getToolBarManager/," Returns the tool bar manager for this window (if it has one).\n\n @return the tool bar manager, or <code>null</code> if\n   this window does not have a tool bar\n @see #addToolBar(int)\n"
3952,method,org/eclipse/jface/window/ApplicationWindow/getToolBarManager2/," Returns the tool bar manager for this window (if it has one).\n \n @return the tool bar manager, or <code>null</code> if\n   this window does not have a tool bar\n @see #addToolBar(int)\n @since 3.2\n"
3953,method,org/eclipse/jface/window/ApplicationWindow/getCoolBarManager/," Returns the cool bar manager for this window.\n\n @return the cool bar manager, or <code>null</code> if\n   this window does not have a cool bar\n @see #addCoolBar(int)\n @since 3.0\n"
3954,method,org/eclipse/jface/window/ApplicationWindow/getCoolBarManager2/," Returns the cool bar manager for this window.\n \n @return the cool bar manager, or <code>null</code> if\n   this window does not have a cool bar\n @see #addCoolBar(int)\n @since 3.2\n"
3958,method,org/eclipse/jface/window/ApplicationWindow/setStatus/String," Sets or clears the message displayed in this window's status\n line (if it has one). This method has no effect if the\n window does not have a status line.\n\n @param message the status message, or <code>null</code> to clear it\n"
3959,method,org/eclipse/jface/window/ApplicationWindow/toolBarChildrenExist/," Returns whether or not children exist for the Application Window's\n toolbar control.\n <p>\n @return boolean true if children exist, false otherwise\n"
3960,method,org/eclipse/jface/window/ApplicationWindow/coolBarChildrenExist/," Returns whether or not children exist for this application window's\n cool bar control.\n \n @return boolean true if children exist, false otherwise\n @since 3.0\n"
3963,class,org/eclipse/jface/window/ToolTip," This class gives implementors to provide customized tooltips for any control.\n \n @since 3.3\n"
3964,method,org/eclipse/jface/window/ToolTip/setData/String;Object," Restore arbitrary data under the given key\n \n @param key\n            the key\n @param value\n            the value\n"
3965,method,org/eclipse/jface/window/ToolTip/getData/String," Get the data restored under the key\n \n @param key\n            the key\n @return data or <code>null</code> if no entry is restored under the key\n"
3966,method,org/eclipse/jface/window/ToolTip/setShift/Point," Set the shift (from the mouse position triggered the event) used to\n display the tooltip.\n <p>\n By default the tooltip is shifted 3 pixels to the right.\n </p>\n \n @param p\n            the new shift\n"
3967,method,org/eclipse/jface/window/ToolTip/activate/," Activate tooltip support for this control\n"
3968,method,org/eclipse/jface/window/ToolTip/deactivate/," Deactivate tooltip support for the underlying control\n"
3969,method,org/eclipse/jface/window/ToolTip/isRespectDisplayBounds/," Return whether the tooltip respects bounds of the display.\n \n @return <code>true</code> if the tooltip respects bounds of the display\n"
3971,method,org/eclipse/jface/window/ToolTip/isRespectMonitorBounds/," Return whether the tooltip respects bounds of the monitor.\n \n @return <code>true</code> if tooltip respects the bounds of the monitor\n"
3975,method,org/eclipse/jface/window/ToolTip/show/Point," Start up the tooltip programmatically\n \n @param location\n            the location relative to the control the tooltip is shown\n"
3977,method,org/eclipse/jface/window/ToolTip/createToolTipContentArea/Event;Composite," Creates the content area of the the tooltip.\n \n @param event\n            the event that triggered the activation of the tooltip\n @param parent\n            the parent of the content area\n @return the content area created\n"
3981,method,org/eclipse/jface/window/ToolTip/isHideOnMouseDown/," Return if hiding on mouse down is set.\n \n @return <code>true</code> if hiding on mouse down in the tool tip is on\n"
3983,method,org/eclipse/jface/window/ToolTip/hide/," Hide the currently active tool tip\n"
3984,method,org/eclipse/jface/window/ToolTip/ToolTip/Control," Create new instance which add TooltipSupport to the widget\n \n @param control\n            the control on whose action the tooltip is shown\n"
3985,method,org/eclipse/jface/window/ToolTip/ToolTip/Control;int;boolean," @param control\n            the control to which the tooltip is bound\n @param style\n            style passed to control tooltip behavior\n \n @param manualActivation\n            <code>true</code> if the activation is done manually using\n            {@link #show(Point)}\n @see #RECREATE\n @see #NO_RECREATE\n"
3986,field,org/eclipse/jface/window/ToolTip/RECREATE," Recreate the tooltip on every mouse move\n"
3987,field,org/eclipse/jface/window/ToolTip/NO_RECREATE," Don't recreate the tooltip as long the mouse doesn't leave the area\n triggering the tooltip creation\n"
3990,method,org/eclipse/jface/window/DefaultToolTip/getStyle/Event," The style used to create the {@link CLabel} in the default implementation\n \n @param event\n            the event triggered the popup of the tooltip\n @return the style\n"
3996,method,org/eclipse/jface/window/DefaultToolTip/getText/Event," The text displayed in the {@link CLabel} in the default implementation\n \n @param event\n            the event triggered the popup of the tooltip\n @return the text or <code>null</code> if no text has to be displayed\n"
4002,method,org/eclipse/jface/window/DefaultToolTip/setStyle/int," The style used to create the {@link CLabel} in the default implementation\n \n @param style\n            the event triggered the popup of the tooltip\n"
4003,method,org/eclipse/jface/window/DefaultToolTip/setText/String," The text displayed in the {@link CLabel} in the default implementation\n \n @param text\n            the text or <code>null</code> if no text has to be displayed\n"
4004,method,org/eclipse/jface/window/DefaultToolTip/DefaultToolTip/Control," Create new instance which add TooltipSupport to the widget\n \n @param control the control on whose action the tooltip is shown\n"
4005,method,org/eclipse/jface/window/DefaultToolTip/DefaultToolTip/Control;int;boolean," Create new instance which add TooltipSupport to the widget\n \n @param control the control to which the tooltip is bound\n @param style style passed to control tooltip behaviour\n @param manualActivation <code>true</code> if the activation is done manually using\n            {@link #show(Point)}\n @see #RECREATE\n @see #NO_RECREATE\n"
4006,class,org/eclipse/jface/window/SameShellProvider," Standard shell provider that always returns the shell containing the given\n control. This will always return the correct shell for the control, even if\n the control is reparented.\n \n @since 3.1\n"
4007,method,org/eclipse/jface/window/SameShellProvider/getShell/,""
4009,class,org/eclipse/jface/menus/AbstractTrimWidget," This extension to the {@link IWidget} interface allows clients adding\n elements to the trim to receive notifications if the User moves the widget to\n another trim area.\n <p>\n This class is intended to be the base for any trim contributions.\n </p>\n @since 3.2\n \n"
4011,method,org/eclipse/jface/menus/AbstractTrimWidget/dispose/,""
4012,method,org/eclipse/jface/menus/AbstractTrimWidget/fill/Composite,""
4013,method,org/eclipse/jface/menus/AbstractTrimWidget/fill/Menu;int,""
4014,method,org/eclipse/jface/menus/AbstractTrimWidget/fill/ToolBar;int,""
4015,method,org/eclipse/jface/menus/AbstractTrimWidget/fill/CoolBar;int,""
4016,method,org/eclipse/jface/menus/AbstractTrimWidget/AbstractTrimWidget/,""
4019,method,org/eclipse/jface/menus/IWidget/fill/Composite," Fills the given composite control with controls representing this widget.\n \n @param parent\n            the parent control\n"
4020,method,org/eclipse/jface/menus/IWidget/fill/Menu;int," Fills the given menu with controls representing this widget.\n \n @param parent\n            the parent menu\n @param index\n            the index where the controls are inserted, or <code>-1</code>\n            to insert at the end\n"
4021,method,org/eclipse/jface/menus/IWidget/fill/ToolBar;int," Fills the given tool bar with controls representing this contribution\n item.\n \n @param parent\n            the parent tool bar\n @param index\n            the index where the controls are inserted, or <code>-1</code>\n            to insert at the end\n"
4022,method,org/eclipse/jface/menus/IWidget/fill/CoolBar;int," Fills the given cool bar with controls representing this contribution\n item.\n \n @param parent\n            the parent cool bar\n @param index\n            the index where the controls are inserted, or <code>-1</code>\n            to insert at the end\n"
4026,method,org/eclipse/jface/menus/TextState/load/IPreferenceStore;String,""
4027,method,org/eclipse/jface/menus/TextState/save/IPreferenceStore;String,""
4028,method,org/eclipse/jface/menus/TextState/setValue/Object,""
4029,method,org/eclipse/jface/menus/TextState/TextState/,""
4031,method,org/eclipse/jface/text/TextViewerUndoManager/beginCompoundChange/,""
4032,method,org/eclipse/jface/text/TextViewerUndoManager/endCompoundChange/,""
4033,method,org/eclipse/jface/text/TextViewerUndoManager/setMaximalUndoLevel/int,""
4034,method,org/eclipse/jface/text/TextViewerUndoManager/connect/ITextViewer,""
4035,method,org/eclipse/jface/text/TextViewerUndoManager/disconnect/,""
4036,method,org/eclipse/jface/text/TextViewerUndoManager/reset/,""
4037,method,org/eclipse/jface/text/TextViewerUndoManager/redoable/,""
4038,method,org/eclipse/jface/text/TextViewerUndoManager/undoable/,""
4039,method,org/eclipse/jface/text/TextViewerUndoManager/redo/,""
4040,method,org/eclipse/jface/text/TextViewerUndoManager/undo/,""
4041,method,org/eclipse/jface/text/TextViewerUndoManager/getUndoContext/,""
4042,method,org/eclipse/jface/text/TextViewerUndoManager/TextViewerUndoManager/int," Creates a new undo manager who remembers the specified number of edit commands.\n\n @param undoLevel the length of this manager's history\n"
4045,method,org/eclipse/jface/text/IPainter/paint/int," Requests this painter to repaint because of the given reason. Based on\n the given reason the painter can decide whether it will repaint or not.\n If it repaints and is inactive, it will activate itself.\n\n @param reason the repaint reason, value is one of the constants defined\n            in this interface\n"
4047,method,org/eclipse/jface/text/IPainter/setPositionManager/IPaintPositionManager," Sets the paint position manager that can be used by this painter or removes any previously\n set paint position manager.\n\n @param manager the paint position manager or <code>null</code>\n"
4048,field,org/eclipse/jface/text/IPainter/SELECTION," Constant describing the reason of a repaint request: selection changed.\n"
4049,field,org/eclipse/jface/text/IPainter/TEXT_CHANGE," Constant describing the reason of a repaint request: text changed.\n"
4050,field,org/eclipse/jface/text/IPainter/KEY_STROKE," Constant describing the reason of a repaint request: key pressed.\n"
4051,field,org/eclipse/jface/text/IPainter/MOUSE_BUTTON," Constant describing the reason of a repaint request: mouse button pressed.\n"
4052,field,org/eclipse/jface/text/IPainter/INTERNAL," Constant describing the reason of a repaint request: paint manager internal change.\n"
4053,field,org/eclipse/jface/text/IPainter/CONFIGURATION," Constant describing the reason of a repaint request: paint manager or painter configuration changed.\n"
4055,method,org/eclipse/jface/text/ITextOperationTarget/canDoOperation/int," Returns whether the operation specified by the given operation code\n can be performed.\n\n @param operation the operation code\n @return <code>true</code> if the specified operation can be performed\n"
4057,field,org/eclipse/jface/text/ITextOperationTarget/UNDO," Text operation code for undoing the last edit command.\n"
4058,field,org/eclipse/jface/text/ITextOperationTarget/REDO," Text operation code for redoing the last undone edit command.\n"
4059,field,org/eclipse/jface/text/ITextOperationTarget/CUT," Text operation code for moving the selected text to the clipboard.\n"
4060,field,org/eclipse/jface/text/ITextOperationTarget/COPY," Text operation code for copying the selected text to the clipboard.\n"
4061,field,org/eclipse/jface/text/ITextOperationTarget/PASTE," Text operation code for inserting the clipboard content at the\n current position.\n"
4062,field,org/eclipse/jface/text/ITextOperationTarget/DELETE," Text operation code for deleting the selected text or if selection\n is empty the character  at the right of the current position.\n"
4063,field,org/eclipse/jface/text/ITextOperationTarget/SELECT_ALL," Text operation code for selecting the complete text.\n"
4064,field,org/eclipse/jface/text/ITextOperationTarget/SHIFT_RIGHT," Text operation code for shifting the selected text block to the right.\n"
4065,field,org/eclipse/jface/text/ITextOperationTarget/SHIFT_LEFT," Text operation code for shifting the selected text block to the left.\n"
4066,field,org/eclipse/jface/text/ITextOperationTarget/PRINT," Text operation code for printing the complete text.\n"
4067,field,org/eclipse/jface/text/ITextOperationTarget/PREFIX," Text operation code for prefixing the selected text block.\n"
4068,field,org/eclipse/jface/text/ITextOperationTarget/STRIP_PREFIX," Text operation code for removing the prefix from the selected text block.\n"
4069,interface,org/eclipse/jface/text/ITextViewerExtension6," Extension interface for {@link org.eclipse.jface.text.ITextViewer}.\n Introduces the concept of text hyperlinks and adds access to the undo manager.\n\n @see org.eclipse.jface.text.hyperlink.IHyperlink\n @see org.eclipse.jface.text.hyperlink.IHyperlinkDetector\n @since 3.1\n"
4070,method,org/eclipse/jface/text/ITextViewerExtension6/setHyperlinkDetectors/IHyperlinkDetector[];int," Sets this viewer's hyperlink detectors for the given state mask.\n\n @param hyperlinkDetectors	the new array of hyperlink detectors, <code>null</code>\n 									or an empty array to disable hyperlinking\n @param eventStateMask		the SWT event state mask to activate hyperlink mode\n"
4071,method,org/eclipse/jface/text/ITextViewerExtension6/getUndoManager/," Returns this viewer's undo manager.\n\n @return the undo manager or <code>null</code> if it has not been plugged-in\n @since 3.1\n"
4075,method,org/eclipse/jface/text/IRewriteTarget/getDocument/," Returns the document of this target.\n\n @return the document of this target\n"
4079,interface,org/eclipse/jface/text/IAutoIndentStrategy," Exists for backward compatibility.\n\n @deprecated since 3.0, use <code>IAutoEditStrategy</code> directly\n"
4081,method,org/eclipse/jface/text/IMarkSelection/getDocument/," Returns the marked document.\n\n @return the marked document\n"
4085,method,org/eclipse/jface/text/ITextViewerExtension8/print/StyledTextPrintOptions," Print the text viewer contents using the given options.\n\n @param options the print options\n"
4087,class,org/eclipse/jface/text/ITextViewerExtension8/EnrichMode," Type-safe enum of the available enrich modes.\n"
4088,method,org/eclipse/jface/text/ITextViewerExtension8/EnrichMode/toString/,""
4090,field,org/eclipse/jface/text/ITextViewerExtension8/EnrichMode/IMMEDIATELY," Enrich the hover immediately when the mouse is moved into it.\n\n @see ITextViewerExtension8#setHoverEnrichMode(org.eclipse.jface.text.ITextViewerExtension8.EnrichMode)\n"
4091,field,org/eclipse/jface/text/ITextViewerExtension8/EnrichMode/ON_CLICK," Enrich the hover on explicit mouse click.\n\n @see ITextViewerExtension8#setHoverEnrichMode(org.eclipse.jface.text.ITextViewerExtension8.EnrichMode)\n"
4092,class,org/eclipse/jface/text/AbstractHoverInformationControlManager," An information control manager that shows information in response to mouse\n hover events. The mouse hover events are caught by registering a\n {@link org.eclipse.swt.events.MouseTrackListener} on the manager's subject\n control. The manager has by default an information control closer that closes\n the information control as soon as the mouse pointer leaves the subject area,\n the user presses a key, or the subject control is resized, moved, or\n deactivated.\n <p>\n When being activated by a mouse hover event, the manager disables itself,\n until the mouse leaves the subject area. Thus, the manager is usually still\n disabled, when the information control has already been closed by the closer.\n\n @see org.eclipse.swt.events.MouseTrackListener\n @since 2.0\n"
4093,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/hideInformationControl/,""
4094,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/presentInformation/,""
4096,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/dispose/," Disposes this manager's information control.\n"
4097,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/getHoverEventLocation/," Returns the location at which the most recent mouse hover event\n has been issued.\n\n @return the location of the most recent mouse hover event\n"
4098,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/getHoverEvent/," Returns the most recent mouse hover event.\n\n @return the most recent mouse hover event or <code>null</code>\n @since 3.0\n"
4099,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/getHoverEventStateMask/," Returns the SWT event state of the most recent mouse hover event.\n\n @return the SWT event state of the most recent mouse hover event\n"
4101,method,org/eclipse/jface/text/AbstractHoverInformationControlManager/AbstractHoverInformationControlManager/IInformationControlCreator," Creates a new hover information control manager using the given information control creator.\n By default a <code>Closer</code> instance is set as this manager's closer.\n\n @param creator the information control creator\n"
4104,interface,org/eclipse/jface/text/IUndoManagerExtension," Extension interface for {@link org.eclipse.jface.text.IUndoManager}.\n Introduces access to the undo context.\n\n @see org.eclipse.jface.text.IUndoManager\n @since 3.1\n"
4105,method,org/eclipse/jface/text/IUndoManagerExtension/getUndoContext/," Returns this undo manager's undo context.\n\n @return the undo context or <code>null</code> if the undo manager is not connected\n @see org.eclipse.core.commands.operations.IUndoContext\n"
4107,method,org/eclipse/jface/text/CursorLinePainter/setHighlightColor/Color," Sets the color in which to draw the background of the cursor line.\n\n @param highlightColor the color in which to draw the background of the cursor line\n"
4108,method,org/eclipse/jface/text/CursorLinePainter/lineGetBackground/LineBackgroundEvent,""
4109,method,org/eclipse/jface/text/CursorLinePainter/deactivate/boolean,""
4110,method,org/eclipse/jface/text/CursorLinePainter/dispose/,""
4111,method,org/eclipse/jface/text/CursorLinePainter/paint/int,""
4112,method,org/eclipse/jface/text/CursorLinePainter/setPositionManager/IPaintPositionManager,""
4113,method,org/eclipse/jface/text/CursorLinePainter/CursorLinePainter/ITextViewer," Creates a new painter for the given source viewer.\n\n @param textViewer the source viewer for which to create a painter\n"
4115,method,org/eclipse/jface/text/FindReplaceDocumentAdapterContentProposalProvider/getProposals/String;int,""
4116,method,org/eclipse/jface/text/FindReplaceDocumentAdapterContentProposalProvider/FindReplaceDocumentAdapterContentProposalProvider/boolean," Creates a new completion proposal provider.\n\n @param isFind <code>true</code> if the provider is used for the 'find' field\n 					<code>false</code> if the provider is used for the 'replace' field\n"
4117,interface,org/eclipse/jface/text/IPaintPositionManager," Manages and updates positions used by {@link IPainter}s.\n\n @see org.eclipse.jface.text.IPainter\n @since 2.1\n"
4120,interface,org/eclipse/jface/text/IInformationControlExtension2," Extension interface for {@link org.eclipse.jface.text.IInformationControl}.\n <p>\n Replaces the concept of textual information to be displayed with the more\n general concept of an input of the information control. Text to be displayed\n set with <code>setInformation(String)</code> is ignored.\n\n @see org.eclipse.jface.text.IInformationControl\n @since 2.1\n"
4121,method,org/eclipse/jface/text/IInformationControlExtension2/setInput/Object," Sets the input to be presented in this information control. The concrete\n contract the input object is expected to adhere is defined by the\n implementer of this interface.\n\n @param input the object to be used as input for this control\n"
4124,method,org/eclipse/jface/text/IInformationControlExtension3/computeTrim/," Computes the trim for this control. The trim is the space around the\n information control's actual content area. It includes all borders of the\n control and other static content placed around the content area (e.g. a\n toolbar).\n\n @return The receiver's trim. <code>x</code> and <code>y</code> denote\n         the upper left corner of the trimming relative to this control's\n         location i.e. this will most likely be negative values.\n         <code>width</code> and <code>height</code> represent the\n         border sizes (the sum of the horizontal and vertical trimmings,\n         respectively).\n"
4130,interface,org/eclipse/jface/text/IMarkRegionTarget," A mark region target to support marked regions as found in emacs.\n\n @since 2.0\n"
4131,method,org/eclipse/jface/text/IMarkRegionTarget/setMarkAtCursor/boolean," Sets or clears a mark at the current cursor position.\n\n @param set sets the mark if <code>true</code>, clears otherwise.\n"
4132,method,org/eclipse/jface/text/IMarkRegionTarget/swapMarkAndCursor/," Swaps the mark and cursor position if the mark is in the visible region.\n"
4134,method,org/eclipse/jface/text/DefaultInformationControl/createContent/Composite,""
4135,method,org/eclipse/jface/text/DefaultInformationControl/setInformation/String,""
4136,method,org/eclipse/jface/text/DefaultInformationControl/setVisible/boolean,""
4137,method,org/eclipse/jface/text/DefaultInformationControl/computeSizeHint/,""
4138,method,org/eclipse/jface/text/DefaultInformationControl/computeTrim/,""
4139,method,org/eclipse/jface/text/DefaultInformationControl/setForegroundColor/Color,""
4140,method,org/eclipse/jface/text/DefaultInformationControl/setBackgroundColor/Color,""
4141,method,org/eclipse/jface/text/DefaultInformationControl/hasContents/,""
4143,method,org/eclipse/jface/text/DefaultInformationControl/getInformationPresenterControlCreator/,""
4145,method,org/eclipse/jface/text/DefaultInformationControl/DefaultInformationControl/Shell;String," Creates a default information control with the given shell as parent. An information\n presenter that can handle simple HTML is used to process the information to be displayed.\n\n @param parent the parent shell\n @param statusFieldText the text to be used in the status field or <code>null</code> to hide the status field\n @since 3.4\n"
4149,method,org/eclipse/jface/text/DefaultInformationControl/DefaultInformationControl/Shell," Creates a default information control with the given shell as parent.\n No information presenter is used to process the information\n to be displayed.\n\n @param parent the parent shell\n"
4150,method,org/eclipse/jface/text/DefaultInformationControl/DefaultInformationControl/Shell;IInformationPresenter," Creates a default information control with the given shell as parent. The given\n information presenter is used to process the information to be displayed.\n\n @param parent the parent shell\n @param presenter the presenter to be used\n"
4162,method,org/eclipse/jface/text/IUndoManager/connect/ITextViewer," Connects this undo manager to the given text viewer.\n\n @param viewer the viewer the undo manager is connected to\n"
4165,method,org/eclipse/jface/text/IUndoManager/endCompoundChange/," Signals the undo manager that the sequence of changes which started with\n <code>beginCompoundChange</code> has been finished. All subsequent changes\n are considered to be individually undo-able.\n"
4167,method,org/eclipse/jface/text/IUndoManager/setMaximalUndoLevel/int," The given parameter determines the maximal length of the history\n remembered by the undo manager.\n\n @param undoLevel the length of this undo manager's history\n"
4168,method,org/eclipse/jface/text/IUndoManager/undoable/," Returns whether at least one text change can be rolled back.\n\n @return <code>true</code> if at least one text change can be rolled back\n"
4170,method,org/eclipse/jface/text/IUndoManager/undo/," Rolls back the most recently executed text change.\n"
4171,method,org/eclipse/jface/text/IUndoManager/redo/," Repeats the most recently rolled back text change.\n"
4173,method,org/eclipse/jface/text/IWidgetTokenOwner/requestWidgetToken/IWidgetTokenKeeper," Requests the widget token from this token owner. Returns\n <code>true</code> if the token has been acquired or is already owned by\n the requester. This method is non-blocking.\n <p>\n Replaced by\n {@link IWidgetTokenOwnerExtension#requestWidgetToken(IWidgetTokenKeeper, int)}.\n\n @param requester the token requester\n @return <code>true</code> if requester acquires the token,\n         <code>false</code> otherwise\n"
4174,method,org/eclipse/jface/text/IWidgetTokenOwner/releaseWidgetToken/IWidgetTokenKeeper," The given token keeper releases the token to this\n token owner. If the token has previously not been held\n by the given token keeper, nothing happens. This\n method is non-blocking.\n\n @param tokenKeeper the token keeper\n"
4179,method,org/eclipse/jface/text/ITextListener/textChanged/TextEvent," The visual representation of a text viewer this listener is registered with\n has been changed.\n\n @param event the description of the change\n"
4181,method,org/eclipse/jface/text/TextViewer/createTextWidget/Composite;int," Factory method to create the text widget to be used as the viewer's text widget.\n\n @param parent the parent of the styled text\n @param styles the styles for the styled text\n @return the text widget to be used\n"
4182,method,org/eclipse/jface/text/TextViewer/createDocumentAdapter/," Factory method to create the document adapter to be used by this viewer.\n\n @return the document adapter to be used\n"
4183,method,org/eclipse/jface/text/TextViewer/createControl/Composite;int," Creates the viewer's SWT control. The viewer's text widget either is\n the control or is a child of the control.\n\n @param parent the parent of the viewer's control\n @param styles the SWT style bits for the viewer's control\n"
4184,method,org/eclipse/jface/text/TextViewer/getControl/,""
4185,method,org/eclipse/jface/text/TextViewer/activatePlugins/,""
4186,method,org/eclipse/jface/text/TextViewer/resetPlugins/,""
4188,method,org/eclipse/jface/text/TextViewer/getTextWidget/,""
4192,method,org/eclipse/jface/text/TextViewer/prependAutoEditStrategy/IAutoEditStrategy;String,""
4193,method,org/eclipse/jface/text/TextViewer/removeAutoEditStrategy/IAutoEditStrategy;String,""
4194,method,org/eclipse/jface/text/TextViewer/setEventConsumer/IEventConsumer,""
4195,method,org/eclipse/jface/text/TextViewer/setIndentPrefixes/String[];String,""
4196,method,org/eclipse/jface/text/TextViewer/getTopInset/,""
4197,method,org/eclipse/jface/text/TextViewer/isEditable/,""
4198,method,org/eclipse/jface/text/TextViewer/setEditable/boolean,""
4199,method,org/eclipse/jface/text/TextViewer/setDefaultPrefixes/String[];String,""
4200,method,org/eclipse/jface/text/TextViewer/setUndoManager/IUndoManager,""
4201,method,org/eclipse/jface/text/TextViewer/getUndoManager/,""
4202,method,org/eclipse/jface/text/TextViewer/setTextHover/ITextHover;String,""
4203,method,org/eclipse/jface/text/TextViewer/setTextHover/ITextHover;String;int,""
4204,method,org/eclipse/jface/text/TextViewer/removeTextHovers/String,""
4205,method,org/eclipse/jface/text/TextViewer/getTextHover/int," Returns the text hover for a given offset.\n\n @param offset the offset for which to return the text hover\n @return the text hover for the given offset\n"
4206,method,org/eclipse/jface/text/TextViewer/getTextHover/int;int," Returns the text hover for a given offset and a given state mask.\n\n @param offset the offset for which to return the text hover\n @param stateMask the SWT event state mask\n @return the text hover for the given offset and state mask\n @since 2.1\n"
4207,method,org/eclipse/jface/text/TextViewer/getTextHoveringController/," Returns the text hovering controller of this viewer.\n\n @return the text hovering controller of this viewer\n @since 2.0\n"
4208,method,org/eclipse/jface/text/TextViewer/setHoverControlCreator/IInformationControlCreator," Sets the creator for the hover controls.\n\n @param creator the hover control creator\n @since 2.0\n"
4210,method,org/eclipse/jface/text/TextViewer/requestWidgetToken/IWidgetTokenKeeper,""
4211,method,org/eclipse/jface/text/TextViewer/requestWidgetToken/IWidgetTokenKeeper;int,""
4212,method,org/eclipse/jface/text/TextViewer/releaseWidgetToken/IWidgetTokenKeeper,""
4213,method,org/eclipse/jface/text/TextViewer/getSelectedRange/,""
4214,method,org/eclipse/jface/text/TextViewer/setSelectedRange/int;int,""
4216,method,org/eclipse/jface/text/TextViewer/setSelection/ISelection;boolean,""
4217,method,org/eclipse/jface/text/TextViewer/getSelection/,""
4218,method,org/eclipse/jface/text/TextViewer/getSelectionProvider/,""
4219,method,org/eclipse/jface/text/TextViewer/addPostSelectionChangedListener/ISelectionChangedListener,""
4220,method,org/eclipse/jface/text/TextViewer/removePostSelectionChangedListener/ISelectionChangedListener,""
4221,method,org/eclipse/jface/text/TextViewer/firePostSelectionChanged/int;int," Sends out a text selection changed event to all registered post selection changed listeners.\n\n @param offset the offset of the newly selected range in the visible document\n @param length the length of the newly selected range in the visible document\n @since 3.0\n"
4222,method,org/eclipse/jface/text/TextViewer/selectionChanged/int;int," Sends out a text selection changed event to all registered listeners and\n registers the selection changed event to be sent out to all post selection\n listeners.\n\n @param offset the offset of the newly selected range in the visible document\n @param length the length of the newly selected range in the visible document\n"
4223,method,org/eclipse/jface/text/TextViewer/fireSelectionChanged/int;int," Sends out a text selection changed event to all registered listeners.\n\n @param offset the offset of the newly selected range in the visible document\n @param length the length of the newly selected range in the visible document\n @since 3.0\n"
4225,method,org/eclipse/jface/text/TextViewer/addTextListener/ITextListener,""
4226,method,org/eclipse/jface/text/TextViewer/removeTextListener/ITextListener,""
4227,method,org/eclipse/jface/text/TextViewer/updateTextListeners/WidgetCommand," Informs all registered text listeners about the change specified by the\n widget command. This method does not use a robust iterator.\n\n @param cmd the widget command translated into a text event sent to all text listeners\n"
4228,method,org/eclipse/jface/text/TextViewer/addTextInputListener/ITextInputListener,""
4229,method,org/eclipse/jface/text/TextViewer/removeTextInputListener/ITextInputListener,""
4230,method,org/eclipse/jface/text/TextViewer/fireInputDocumentAboutToBeChanged/IDocument;IDocument," Informs all registered text input listeners about the forthcoming input change,\n This method does not use a robust iterator.\n\n @param oldInput the old input document\n @param newInput the new input document\n"
4231,method,org/eclipse/jface/text/TextViewer/fireInputDocumentChanged/IDocument;IDocument," Informs all registered text input listeners about the successful input change,\n This method does not use a robust iterator.\n\n @param oldInput the old input document\n @param newInput the new input document\n"
4232,method,org/eclipse/jface/text/TextViewer/getInput/,""
4233,method,org/eclipse/jface/text/TextViewer/getDocument/,""
4234,method,org/eclipse/jface/text/TextViewer/setInput/Object,""
4235,method,org/eclipse/jface/text/TextViewer/setDocument/IDocument,""
4236,method,org/eclipse/jface/text/TextViewer/setDocument/IDocument;int;int,""
4237,method,org/eclipse/jface/text/TextViewer/createSlaveDocument/IDocument," Creates a slave document for the given document if there is a slave document manager\n associated with this viewer.\n\n @param document the master document\n @return the newly created slave document\n @since 2.1\n"
4238,method,org/eclipse/jface/text/TextViewer/updateVisibleDocument/IDocument;int;int," Sets the given slave document to the specified range of its master document.\n\n @param visibleDocument the slave document\n @param visibleRegionOffset the offset of the master document range\n @param visibleRegionLength the length of the master document range\n @return <code>true</code> if the slave has been adapted successfully\n @throws BadLocationException in case the specified range is not valid in the master document\n @since 2.1\n @deprecated use <code>updateSlaveDocument</code> instead\n"
4239,method,org/eclipse/jface/text/TextViewer/updateSlaveDocument/IDocument;int;int," Updates the given slave document to show the specified range of its master document.\n\n @param slaveDocument the slave document\n @param modelRangeOffset the offset of the master document range\n @param modelRangeLength the length of the master document range\n @return <code>true</code> if the slave has been adapted successfully\n @throws BadLocationException in case the specified range is not valid in the master document\n @since 3.0\n"
4240,method,org/eclipse/jface/text/TextViewer/addViewportListener/IViewportListener,""
4241,method,org/eclipse/jface/text/TextViewer/removeViewportListener/IViewportListener,""
4243,method,org/eclipse/jface/text/TextViewer/getTopIndex/,""
4244,method,org/eclipse/jface/text/TextViewer/setTopIndex/int,""
4246,method,org/eclipse/jface/text/TextViewer/getBottomIndex/,""
4247,method,org/eclipse/jface/text/TextViewer/getTopIndexStartOffset/,""
4248,method,org/eclipse/jface/text/TextViewer/getBottomIndexEndOffset/,""
4249,method,org/eclipse/jface/text/TextViewer/revealRange/int;int,""
4250,method,org/eclipse/jface/text/TextViewer/internalRevealRange/int;int," Reveals the given range of the visible document.\n\n @param start the start offset of the range\n @param end the end offset of the range\n"
4251,method,org/eclipse/jface/text/TextViewer/getWidthInPixels/String," Returns the width of the text when being drawn into this viewer's widget.\n\n @param text the string to measure\n @return the width of the presentation of the given string\n @deprecated use <code>getWidthInPixels(int, int)</code> instead\n"
4252,method,org/eclipse/jface/text/TextViewer/getExtent/int;int," Returns the region covered by the given start and end offset.\n The result is relative to the upper left corner of the widget\n client area.\n\n @param start offset relative to the start of this viewer's view port\n 	0 <= offset <= getCharCount()\n @param end offset relative to the start of this viewer's view port\n 	0 <= offset <= getCharCount()\n @return the region covered by start and end offset\n"
4253,method,org/eclipse/jface/text/TextViewer/getWidthInPixels/int;int," Returns the width of the representation of a text range in the\n visible region of the viewer's document as drawn in this viewer's\n widget.\n\n @param offset the offset of the text range in the visible region\n @param length the length of the text range in the visible region\n @return the width of the presentation of the specified text range\n @since 2.0\n"
4254,method,org/eclipse/jface/text/TextViewer/getAverageCharWidth/," Returns the average character width of this viewer's widget.\n\n @return the average character width of this viewer's widget\n"
4255,method,org/eclipse/jface/text/TextViewer/refresh/,""
4256,method,org/eclipse/jface/text/TextViewer/getSlaveDocumentManager/," Returns the slave document manager\n\n @return the slave document manager\n @since 2.1\n"
4257,method,org/eclipse/jface/text/TextViewer/createSlaveDocumentManager/," Creates a new slave document manager. This implementation always\n returns a <code>ChildDocumentManager</code>.\n\n @return ISlaveDocumentManager\n @since 2.1\n"
4258,method,org/eclipse/jface/text/TextViewer/invalidateTextPresentation/,""
4259,method,org/eclipse/jface/text/TextViewer/invalidateTextPresentation/int;int," Invalidates the given range of the text presentation.\n\n @param offset the offset of the range to be invalidated\n @param length the length of the range to be invalidated\n @since 2.1\n"
4260,method,org/eclipse/jface/text/TextViewer/freeSlaveDocument/IDocument," Frees the given document if it is a slave document.\n\n @param slave the potential slave document\n @since 3.0\n"
4261,method,org/eclipse/jface/text/TextViewer/setVisibleDocument/IDocument," Sets this viewer's visible document. The visible document represents the\n visible region of the viewer's input document.\n\n @param document the visible document\n"
4265,method,org/eclipse/jface/text/TextViewer/getVisibleDocument/," Returns the viewer's visible document.\n\n @return the viewer's visible document\n"
4266,method,org/eclipse/jface/text/TextViewer/_getVisibleRegionOffset/," Returns the offset of the visible region.\n\n @return the offset of the visible region\n"
4267,method,org/eclipse/jface/text/TextViewer/getVisibleRegion/,""
4268,method,org/eclipse/jface/text/TextViewer/overlapsWithVisibleRegion/int;int,""
4269,method,org/eclipse/jface/text/TextViewer/setVisibleRegion/int;int,""
4270,method,org/eclipse/jface/text/TextViewer/resetVisibleRegion/,""
4271,method,org/eclipse/jface/text/TextViewer/setTextDoubleClickStrategy/ITextDoubleClickStrategy;String,""
4272,method,org/eclipse/jface/text/TextViewer/selectContentTypePlugin/int;Map," Selects from the given map the one which is registered under the content type of the\n partition in which the given offset is located.\n \n @param plugins the map from which to choose\n @param offset the offset for which to find the plug-in\n @return the plug-in registered under the offset's content type or <code>null</code> if none\n"
4274,method,org/eclipse/jface/text/TextViewer/handleVerifyEvent/VerifyEvent," Handles the verify event issued by the viewer's text widget.\n\n @see VerifyListener#verifyText(VerifyEvent)\n @param e the verify event\n"
4275,method,org/eclipse/jface/text/TextViewer/canDoOperation/int,""
4276,method,org/eclipse/jface/text/TextViewer/doOperation/int,""
4278,method,org/eclipse/jface/text/TextViewer/isIgnoringAutoEditStrategies/," Returns whether this viewer ignores the registered auto edit strategies.\n\n @return <code>true</code> if the strategies are ignored\n @since 2.1\n"
4279,method,org/eclipse/jface/text/TextViewer/enableOperation/int;boolean,""
4282,method,org/eclipse/jface/text/TextViewer/isBlockSelected/," A block is selected if the character preceding the start of the\n selection is a new line character.\n\n @return <code>true</code> if a block is selected\n"
4283,method,org/eclipse/jface/text/TextViewer/areMultipleLinesSelected/," Returns <code>true</code> if one line is completely selected or if multiple lines are selected.\n Being completely selected means that all characters except the new line characters are\n selected.\n\n @return <code>true</code> if one or multiple lines are selected\n @since 2.0\n"
4286,method,org/eclipse/jface/text/TextViewer/isPrintable/," Returns whether the shown text can be printed.\n\n @return the viewer's printable mode\n"
4289,method,org/eclipse/jface/text/TextViewer/canPerformFind/," Adheres to the contract of {@link IFindReplaceTarget#canPerformFind()}.\n\n @return <code>true</code> if find can be performed, <code>false</code> otherwise\n"
4293,method,org/eclipse/jface/text/TextViewer/setTextColor/Color,""
4294,method,org/eclipse/jface/text/TextViewer/setTextColor/Color;int;int;boolean,""
4295,method,org/eclipse/jface/text/TextViewer/_internalGetVisibleRegion/," Returns the visible region if it is not equal to the whole document.\n Otherwise returns <code>null</code>.\n\n @return the viewer's visible region if smaller than input document, otherwise <code>null</code>\n"
4296,method,org/eclipse/jface/text/TextViewer/changeTextPresentation/TextPresentation;boolean,""
4297,method,org/eclipse/jface/text/TextViewer/getFindReplaceTarget/,""
4298,method,org/eclipse/jface/text/TextViewer/getFindReplaceDocumentAdapter/," Returns the find/replace document adapter.\n\n @return the find/replace document adapter.\n @since 3.0\n"
4299,method,org/eclipse/jface/text/TextViewer/getTextOperationTarget/,""
4300,method,org/eclipse/jface/text/TextViewer/appendVerifyKeyListener/VerifyKeyListener,""
4301,method,org/eclipse/jface/text/TextViewer/prependVerifyKeyListener/VerifyKeyListener,""
4302,method,org/eclipse/jface/text/TextViewer/removeVerifyKeyListener/VerifyKeyListener,""
4303,method,org/eclipse/jface/text/TextViewer/getMark/,""
4304,method,org/eclipse/jface/text/TextViewer/setMark/int,""
4305,method,org/eclipse/jface/text/TextViewer/inputChanged/Object;Object,""
4306,method,org/eclipse/jface/text/TextViewer/enabledRedrawing/," Enables the redrawing of this text viewer.\n @since 2.0\n"
4307,method,org/eclipse/jface/text/TextViewer/enabledRedrawing/int," Enables the redrawing of this text viewer.\n\n @param topIndex the top index to be set or <code>-1</code>\n @since 3.0\n"
4309,method,org/eclipse/jface/text/TextViewer/setRedraw/boolean,""
4311,method,org/eclipse/jface/text/TextViewer/redraws/," Returns whether this viewer redraws itself.\n\n @return <code>true</code> if this viewer redraws itself\n @since 2.0\n"
4312,method,org/eclipse/jface/text/TextViewer/startSequentialRewriteMode/boolean," Starts  the sequential rewrite mode of the viewer's document.\n\n @param normalized <code>true</code> if the rewrite is performed from the start to the end of the document\n @since 2.0\n @deprecated since 3.1 use {@link IDocumentExtension4#startRewriteSession(DocumentRewriteSessionType)} instead\n"
4313,method,org/eclipse/jface/text/TextViewer/stopSequentialRewriteMode/," Sets the sequential rewrite mode of the viewer's document.\n\n @since 2.0\n @deprecated since 3.1 use {@link IDocumentExtension4#stopRewriteSession(DocumentRewriteSession)} instead\n"
4314,method,org/eclipse/jface/text/TextViewer/getRewriteTarget/,""
4315,method,org/eclipse/jface/text/TextViewer/getCurrentTextHover/,""
4316,method,org/eclipse/jface/text/TextViewer/getHoverEventLocation/,""
4317,method,org/eclipse/jface/text/TextViewer/getPaintManager/," Returns the paint manager of this viewer.\n\n @return the paint manager of this viewer\n @since 2.1\n"
4318,method,org/eclipse/jface/text/TextViewer/addPainter/IPainter," Adds the given  painter to this viewer. If the painter is already registered\n this method is without effect.\n\n @param painter the painter to be added\n @since 2.1\n"
4319,method,org/eclipse/jface/text/TextViewer/removePainter/IPainter," Removes the given painter from this viewer. If the painter has previously not been\n added to this viewer this method is without effect.\n\n @param painter the painter to be removed\n @since 2.1\n"
4320,method,org/eclipse/jface/text/TextViewer/modelLine2WidgetLine/int," Implements the contract of {@link ITextViewerExtension5#modelLine2WidgetLine(int)}.\n\n @param modelLine the model line\n @return the corresponding widget line or <code>-1</code>\n @since 2.1\n"
4321,method,org/eclipse/jface/text/TextViewer/modelOffset2WidgetOffset/int," Implements the contract of {@link ITextViewerExtension5#modelOffset2WidgetOffset(int)}.\n\n @param modelOffset the model offset\n @return the corresponding widget offset or <code>-1</code>\n @since 2.1\n"
4322,method,org/eclipse/jface/text/TextViewer/modelRange2WidgetRange/IRegion," Implements the contract of {@link ITextViewerExtension5#modelRange2WidgetRange(IRegion)}.\n\n @param modelRange the model range\n @return the corresponding widget range or <code>null</code>\n @since 2.1\n"
4323,method,org/eclipse/jface/text/TextViewer/modelRange2ClosestWidgetRange/IRegion," Similar to {@link #modelRange2WidgetRange(IRegion)}, but more forgiving:\n if <code>modelRange</code> describes a region entirely hidden in the\n image, then this method returns the zero-length region at the offset of\n the folded region.\n\n @param modelRange the model range\n @return the corresponding widget range, or <code>null</code>\n @since 3.1\n"
4324,method,org/eclipse/jface/text/TextViewer/widgetlLine2ModelLine/int," Implements the contract of {@link ITextViewerExtension5#widgetLine2ModelLine(int)}.\n\n @param widgetLine the widget line\n @return the corresponding model line\n @since 2.1\n"
4325,method,org/eclipse/jface/text/TextViewer/widgetLine2ModelLine/int," Implements the contract of {@link ITextViewerExtension5#widgetLine2ModelLine(int)}.\n\n @param widgetLine the widget line\n @return the corresponding model line or <code>-1</code>\n @since 3.0\n"
4326,method,org/eclipse/jface/text/TextViewer/widgetOffset2ModelOffset/int," Implements the contract of {@link ITextViewerExtension5#widgetOffset2ModelOffset(int)}.\n\n @param widgetOffset the widget offset\n @return the corresponding model offset or <code>-1</code>\n @since 2.1\n"
4327,method,org/eclipse/jface/text/TextViewer/widgetRange2ModelRange/IRegion," Implements the contract of {@link ITextViewerExtension5#widgetRange2ModelRange(IRegion)}.\n\n @param widgetRange the widget range\n @return the corresponding model range or <code>null</code>\n @since 2.1\n"
4328,method,org/eclipse/jface/text/TextViewer/getModelCoverage/," Implements the contract of {@link ITextViewerExtension5#getModelCoverage()}.\n\n @return the model coverage\n @since 2.1\n"
4330,method,org/eclipse/jface/text/TextViewer/modelStyleRange2WidgetStyleRange/StyleRange," Translates a style range given relative to the viewer's document into style\n ranges relative to the viewer's widget or <code>null</code>.\n\n @param range the style range in the coordinates of the viewer's document\n @return the style range in the coordinates of the viewer's widget or <code>null</code>\n @since 2.1\n"
4331,method,org/eclipse/jface/text/TextViewer/modelRange2WidgetRange/Position," Same as {@link #modelRange2WidgetRange(IRegion)} just for a {@link org.eclipse.jface.text.Position}.\n\n @param modelPosition the position describing a range in the viewer's document\n @return a region describing a range in the viewer's widget\n @since 2.1\n"
4332,method,org/eclipse/jface/text/TextViewer/event2ModelRange/VerifyEvent," Translates the widget region of the given verify event into\n the corresponding region of the viewer's document.\n\n @param event the verify event\n @return the region of the viewer's document corresponding to the verify event\n @since 2.1\n"
4333,method,org/eclipse/jface/text/TextViewer/widgetSelection2ModelSelection/Point," Translates the given widget selection into the corresponding region\n of the viewer's document or returns <code>null</code> if this fails.\n\n @param widgetSelection the widget selection\n @return the region of the viewer's document corresponding to the widget selection or <code>null</code>\n @since 2.1\n"
4334,method,org/eclipse/jface/text/TextViewer/modelSelection2WidgetSelection/Point," Translates the given selection range of the viewer's document into\n the corresponding widget range or returns <code>null</code> of this fails.\n\n @param modelSelection the selection range of the viewer's document\n @return the widget range corresponding to the selection range or <code>null</code>\n @since 2.1\n"
4335,method,org/eclipse/jface/text/TextViewer/widgetLineOfWidgetOffset/int," Implements the contract of {@link ITextViewerExtension5#widgetLineOfWidgetOffset(int)}.\n\n @param widgetOffset the widget offset\n @return  the corresponding widget line or <code>-1</code>\n @since 2.1\n"
4336,method,org/eclipse/jface/text/TextViewer/moveFocusToWidgetToken/,""
4337,method,org/eclipse/jface/text/TextViewer/setDocumentPartitioning/String," Sets the document partitioning of this viewer. The partitioning is used by this viewer to\n access partitioning information of the viewers input document.\n\n @param partitioning the partitioning name\n @since 3.0\n"
4338,method,org/eclipse/jface/text/TextViewer/getDocumentPartitioning/," Returns the document partitioning for this viewer.\n\n @return the document partitioning for this viewer\n @since 3.0\n"
4339,method,org/eclipse/jface/text/TextViewer/addTextPresentationListener/ITextPresentationListener,""
4340,method,org/eclipse/jface/text/TextViewer/removeTextPresentationListener/ITextPresentationListener,""
4341,method,org/eclipse/jface/text/TextViewer/register/IEditingSupport,""
4342,method,org/eclipse/jface/text/TextViewer/unregister/IEditingSupport,""
4343,method,org/eclipse/jface/text/TextViewer/getRegisteredSupports/,""
4344,method,org/eclipse/jface/text/TextViewer/setHyperlinkDetectors/IHyperlinkDetector[];int,""
4346,method,org/eclipse/jface/text/TextViewer/setTabsToSpacesConverter/IAutoEditStrategy,""
4348,method,org/eclipse/jface/text/TextViewer/TextViewer/Composite;int," Create a new text viewer with the given SWT style bits.\n The viewer is ready to use but does not have any plug-in installed.\n\n @param parent the parent of the viewer's control\n @param styles the SWT style bits for the viewer's control,\n 			<em>if <code>SWT.WRAP</code> is set then a custom document adapter needs to be provided, see {@link #createDocumentAdapter()}\n"
4350,field,org/eclipse/jface/text/TextViewer/SCROLLER," Identifies the scrollbars as originators of a view port change.\n"
4351,field,org/eclipse/jface/text/TextViewer/MOUSE," Identifies  mouse moves as originators of a view port change.\n"
4352,field,org/eclipse/jface/text/TextViewer/MOUSE_END," Identifies mouse button up as originator of a view port change.\n"
4353,field,org/eclipse/jface/text/TextViewer/KEY," Identifies key strokes as originators of a view port change.\n"
4354,field,org/eclipse/jface/text/TextViewer/RESIZE," Identifies window resizing as originator of a view port change.\n"
4355,field,org/eclipse/jface/text/TextViewer/INTERNAL," Identifies internal reasons as originators of a view port change.\n"
4356,field,org/eclipse/jface/text/TextViewer/SHIFTING,"Internal name of the position category used selection preservation during shift. "
4357,field,org/eclipse/jface/text/TextViewer/fMarkPosition," The mark position.\n @since 2.0\n"
4359,field,org/eclipse/jface/text/TextViewer/fIndentChars,"The strings a line is prefixed with on SHIFT_RIGHT and removed from each line on SHIFT_LEFT "
4360,field,org/eclipse/jface/text/TextViewer/fDefaultPrefixChars,"The string a line is prefixed with on PREFIX and removed from each line on STRIP_PREFIX "
4361,field,org/eclipse/jface/text/TextViewer/fDoubleClickStrategies,"The text viewer's text double click strategies "
4362,field,org/eclipse/jface/text/TextViewer/fUndoManager,"The text viewer's undo manager "
4363,field,org/eclipse/jface/text/TextViewer/fAutoIndentStrategies,"The text viewer's auto indent strategies "
4364,field,org/eclipse/jface/text/TextViewer/fTextHovers,"The text viewer's text hovers "
4365,field,org/eclipse/jface/text/TextViewer/fViewportListeners,"All registered view port listeners> "
4366,field,org/eclipse/jface/text/TextViewer/fLastTopPixel,"The last visible vertical position of the top line "
4367,field,org/eclipse/jface/text/TextViewer/fTextListeners,"All registered text listeners "
4368,field,org/eclipse/jface/text/TextViewer/fTextInputListeners,"All registered text input listeners "
4369,field,org/eclipse/jface/text/TextViewer/fEventConsumer,"The text viewer's event consumer "
4371,field,org/eclipse/jface/text/TextViewer/fHoverControlCreator," The creator of the text hover control\n @since 2.0\n"
4373,field,org/eclipse/jface/text/TextViewer/fPaintManager," The viewer's paint manager.\n @since 2.1\n"
4374,field,org/eclipse/jface/text/TextViewer/fPartitioning," The viewers partitioning. I.e. the partitioning name the viewer uses to access partitioning information of its input document.\n @since 3.0\n"
4375,field,org/eclipse/jface/text/TextViewer/fTextPresentationListeners," All registered text presentation listeners.\n since 3.0\n"
4376,field,org/eclipse/jface/text/TextViewer/fFindReplaceDocumentAdapter," The find/replace document adapter.\n @since 3.0\n"
4377,field,org/eclipse/jface/text/TextViewer/fHyperlinkDetectors," The text viewer's hyperlink detectors.\n @since 3.1\n"
4378,field,org/eclipse/jface/text/TextViewer/fHyperlinkPresenter," The text viewer's hyperlink presenter.\n @since 3.1\n"
4379,field,org/eclipse/jface/text/TextViewer/fHyperlinkManager," The text viewer's hyperlink manager.\n @since 3.1\n"
4380,field,org/eclipse/jface/text/TextViewer/fHyperlinkStateMask," The SWT key modifier mask which in combination\n with the left mouse button triggers the hyperlink mode.\n @since 3.1\n"
4382,method,org/eclipse/jface/text/TextViewer/WidgetCommand/setEvent/DocumentEvent," Translates a document event into the presentation coordinates of this text viewer.\n\n @param e the event to be translated\n"
4383,method,org/eclipse/jface/text/TextViewer/WidgetCommand/TextViewer/WidgetCommand/,""
4384,field,org/eclipse/jface/text/TextViewer/WidgetCommand/event,"The document event encapsulated by this command. "
4385,field,org/eclipse/jface/text/TextViewer/WidgetCommand/start,"The start of the event. "
4386,field,org/eclipse/jface/text/TextViewer/WidgetCommand/length,"The length of the event. "
4387,field,org/eclipse/jface/text/TextViewer/WidgetCommand/text,"The inserted and replaced text segments of <code>event</code>. "
4388,field,org/eclipse/jface/text/TextViewer/WidgetCommand/preservedText,"The replaced text segments of <code>event</code>. "
4390,method,org/eclipse/jface/text/TextViewer/TextHoverKey/equals/Object,""
4391,method,org/eclipse/jface/text/TextViewer/TextHoverKey/hashCode/,""
4392,method,org/eclipse/jface/text/TextViewer/TextHoverKey/TextViewer/TextHoverKey/String;int," Creates a new text hover key for the given content type and state mask.\n\n @param contentType the content type\n @param stateMask the state mask\n"
4393,class,org/eclipse/jface/text/AbstractReusableInformationControlCreator," Abstract class for a reusable information control creators.\n\n @since 3.3\n"
4394,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/doCreateInformationControl/Shell," Creates the control.\n\n @param parent the parent shell\n @return the created information control\n"
4395,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/createInformationControl/Shell,""
4396,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/widgetDisposed/DisposeEvent,""
4397,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/canReuse/IInformationControl,""
4398,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/canReplace/IInformationControlCreator,""
4399,method,org/eclipse/jface/text/AbstractReusableInformationControlCreator/AbstractReusableInformationControlCreator/,""
4401,method,org/eclipse/jface/text/AbstractInformationControl/getShell/," The shell of the popup window.\n\n @return the shell used for the popup window\n"
4402,method,org/eclipse/jface/text/AbstractInformationControl/getToolBarManager/," The toolbar manager used to manage the toolbar, or <code>null</code> if\n no toolbar is shown.\n\n @return the tool bar manager or <code>null</code>\n"
4406,method,org/eclipse/jface/text/AbstractInformationControl/isResizable/," Returns whether the information control is resizable.\n\n @return <code>true</code> if the information control is resizable,\n         <code>false</code> if it is not resizable.\n"
4407,method,org/eclipse/jface/text/AbstractInformationControl/setVisible/boolean,""
4408,method,org/eclipse/jface/text/AbstractInformationControl/dispose/,""
4409,method,org/eclipse/jface/text/AbstractInformationControl/setSize/int;int,""
4410,method,org/eclipse/jface/text/AbstractInformationControl/setLocation/Point,""
4411,method,org/eclipse/jface/text/AbstractInformationControl/setSizeConstraints/int;int,""
4412,method,org/eclipse/jface/text/AbstractInformationControl/getSizeConstraints/," Returns the size constraints.\n\n @return the size constraints or <code>null</code> if not set\n @see #setSizeConstraints(int, int)\n"
4413,method,org/eclipse/jface/text/AbstractInformationControl/computeSizeHint/,""
4415,method,org/eclipse/jface/text/AbstractInformationControl/getBounds/,""
4418,method,org/eclipse/jface/text/AbstractInformationControl/addDisposeListener/DisposeListener,""
4419,method,org/eclipse/jface/text/AbstractInformationControl/removeDisposeListener/DisposeListener,""
4420,method,org/eclipse/jface/text/AbstractInformationControl/setForegroundColor/Color,""
4421,method,org/eclipse/jface/text/AbstractInformationControl/setBackgroundColor/Color,""
4427,method,org/eclipse/jface/text/AbstractInformationControl/containsControl/Control,""
4428,method,org/eclipse/jface/text/AbstractInformationControl/isVisible/,""
4435,method,org/eclipse/jface/text/ITextViewerExtension2/invalidateTextPresentation/int;int," Invalidates the viewer's text presentation for the given range.\n\n @param offset the offset of the first character to be redrawn\n @param length the length of the range to be redrawn\n"
4436,method,org/eclipse/jface/text/ITextViewerExtension2/setTextHover/ITextHover;String;int," Sets this viewer's text hover for the given content type and the given state mask. If the given text hover\n is <code>null</code>, any hover installed for the given content type and state mask is removed.\n\n @param textViewerHover the new hover or <code>null</code>\n @param contentType the type for which the hover is to be registered or unregistered\n @param stateMask the SWT event state mask; <code>DEFAULT_HOVER_STATE_MASK</code> indicates that\n 			the hover is installed as the default hover.\n"
4438,method,org/eclipse/jface/text/ITextViewerExtension2/getCurrentTextHover/," Returns the currently displayed text hover if any, <code>null</code> otherwise.\n\n @return the currently displayed text hover or <code>null</code>\n"
4439,method,org/eclipse/jface/text/ITextViewerExtension2/getHoverEventLocation/," Returns the location at which the most recent mouse hover event\n has occurred.\n\n @return the location of the most recent mouse hover event\n"
4441,method,org/eclipse/jface/text/ITextViewerExtension2/removeAutoEditStrategy/IAutoEditStrategy;String," Removes the first occurrence of the given auto edit strategy in the list of strategies\n registered under the specified content type.\n\n @param strategy the auto edit strategy\n @param contentType the content type\n"
4442,method,org/eclipse/jface/text/ITextViewerExtension2/addPainter/IPainter," Adds the given painter to this viewer.\n\n @param painter the painter to be added\n"
4444,field,org/eclipse/jface/text/ITextViewerExtension2/DEFAULT_HOVER_STATE_MASK," The state mask of the default hover (value <code>0xff</code>).\n"
4445,interface,org/eclipse/jface/text/ITextHoverExtension2," Extension interface for {@link org.eclipse.jface.text.ITextHover}.\n <p>\n Provides a way for hovers to return hover-specific information objects.\n </p>\n\n @see org.eclipse.jface.text.ITextHover\n @since 3.4\n"
4448,method,org/eclipse/jface/text/IInformationControlExtension/hasContents/," Returns whether this information control has contents to be displayed.\n\n @return <code>true</code> if there is contents to be displayed.\n"
4449,interface,org/eclipse/jface/text/ITextOperationTargetExtension," Extension interface for {@link org.eclipse.jface.text.ITextOperationTarget}.\n <p>\n Allows a client to control the enable state of operations provided by this\n target.\n\n @see org.eclipse.jface.text.ITextOperationTarget\n @since 2.0\n"
4450,method,org/eclipse/jface/text/ITextOperationTargetExtension/enableOperation/int;boolean," Enables/disabled the given text operation.\n\n @param operation the operation to enable/disable\n @param enable <code>true</code> to enable the operation otherwise <code>false</code>\n"
4451,interface,org/eclipse/jface/text/IFindReplaceTargetExtension," Extension interface for {@link org.eclipse.jface.text.IFindReplaceTarget}.\n <p>\n Introduces the concepts of find/replace sessions, searching in a limiting\n scope and a replace-all mode.\n <p>\n If a scope is set, <code>findAndSelect</code> is limited to the scope.\n Occurrences outside of the scope are not considered.\n\n @since 2.0\n"
4453,method,org/eclipse/jface/text/IFindReplaceTargetExtension/endSession/," Indicates that a session with the target ends.\n\n @see #beginSession()\n"
4456,method,org/eclipse/jface/text/IFindReplaceTargetExtension/getLineSelection/," Returns the currently selected range of lines as a offset and length.\n\n @return the currently selected line range\n"
4457,method,org/eclipse/jface/text/IFindReplaceTargetExtension/setSelection/int;int," Sets a selection.\n\n @param offset the offset of the selection\n @param length the length of the selection\n"
4458,method,org/eclipse/jface/text/IFindReplaceTargetExtension/setScopeHighlightColor/Color," Sets the scope highlight color\n\n @param color the color of the scope highlight\n"
4460,interface,org/eclipse/jface/text/IInformationControlExtension4," Extension interface for {@link org.eclipse.jface.text.IInformationControl}.\n Adds API which allows to set this information control's status field text.\n\n @see org.eclipse.jface.text.IInformationControl\n @since 3.3\n"
4463,method,org/eclipse/jface/text/TextEvent/getOffset/," Returns the offset of the event.\n\n @return the offset of the event\n"
4464,method,org/eclipse/jface/text/TextEvent/getLength/," Returns the length of the event.\n\n @return the length of the event\n"
4465,method,org/eclipse/jface/text/TextEvent/getText/," Returns the text of the event.\n\n @return the text of the event\n"
4466,method,org/eclipse/jface/text/TextEvent/getReplacedText/," Returns the text replaced by this event.\n\n @return the text replaced by this event\n"
4468,method,org/eclipse/jface/text/TextEvent/getViewerRedrawState/," Returns the viewer's redraw state.\n\n @return <code>true</code> if the viewer's redraw state is <code>true</code>\n @since 2.0\n"
4469,method,org/eclipse/jface/text/TextEvent/TextEvent/int;int;String;String;DocumentEvent;boolean," Creates a new <code>TextEvent</code> based on the specification.\n\n @param offset the offset\n @param length the length\n @param text the inserted text\n @param replacedText the replaced text\n @param event the associated document event or <code>null</code> if none\n @param viewerRedrawState the redraw state of the viewer\n"
4471,method,org/eclipse/jface/text/ITextSelection/getOffset/," Returns the offset of the selected text.\n\n @return the offset of the selected text or -1 if there is no valid text information\n"
4472,method,org/eclipse/jface/text/ITextSelection/getLength/," Returns the length of the selected text.\n\n @return the length of the selected text or -1 if there is no valid text information\n"
4477,method,org/eclipse/jface/text/IAutoEditStrategy/customizeDocumentCommand/IDocument;DocumentCommand," Allows the strategy to manipulate the document command.\n\n @param document the document that will be changed\n @param command the document command describing the change\n"
4478,class,org/eclipse/jface/text/WhitespaceCharacterPainter," A painter for drawing visible characters for (invisible) whitespace\n characters.\n\n @since 3.3\n"
4479,method,org/eclipse/jface/text/WhitespaceCharacterPainter/dispose/,""
4480,method,org/eclipse/jface/text/WhitespaceCharacterPainter/paint/int,""
4481,method,org/eclipse/jface/text/WhitespaceCharacterPainter/deactivate/boolean,""
4482,method,org/eclipse/jface/text/WhitespaceCharacterPainter/setPositionManager/IPaintPositionManager,""
4483,method,org/eclipse/jface/text/WhitespaceCharacterPainter/paintControl/PaintEvent,""
4486,method,org/eclipse/jface/text/TextPresentation/applyTextPresentation/TextPresentation;StyledText," Applies the given presentation to the given text widget. Helper method.\n\n @param presentation the style information\n @param text the widget to which to apply the style information\n @since 2.0\n"
4488,method,org/eclipse/jface/text/TextPresentation/setDefaultStyleRange/StyleRange," Set the default style range of this presentation.\n The default style range defines the overall area covered\n by this presentation and its style information.\n\n @param range the range describing the default region\n"
4489,method,org/eclipse/jface/text/TextPresentation/getDefaultStyleRange/," Returns this presentation's default style range. The returned <code>StyleRange</code>\n is relative to the start of the result window.\n\n @return this presentation's default style range\n"
4495,method,org/eclipse/jface/text/TextPresentation/getNonDefaultStyleRangeIterator/," Returns an iterator which enumerates all style ranged which define a style\n different from the presentation's default style range. The default style range\n is not enumerated.\n\n @return a style range iterator\n"
4496,method,org/eclipse/jface/text/TextPresentation/getAllStyleRangeIterator/," Returns an iterator which enumerates all style ranges of this presentation\n except the default style range. The returned <code>StyleRange</code>s\n are relative to the start of the presentation's result window.\n\n @return a style range iterator\n"
4497,method,org/eclipse/jface/text/TextPresentation/isEmpty/," Returns whether this collection contains any style range including\n the default style range.\n\n @return <code>true</code> if there is no style range in this presentation\n"
4498,method,org/eclipse/jface/text/TextPresentation/getDenumerableRanges/," Returns the number of style ranges in the presentation not counting the default\n style range.\n\n @return the number of style ranges in the presentation excluding the default style range\n"
4499,method,org/eclipse/jface/text/TextPresentation/getFirstStyleRange/," Returns the style range with the smallest offset ignoring the default style range or null\n if the presentation is empty.\n\n @return the style range with the smallest offset different from the default style range\n"
4500,method,org/eclipse/jface/text/TextPresentation/getLastStyleRange/," Returns the style range with the highest offset ignoring the default style range.\n\n @return the style range with the highest offset different from the default style range\n"
4501,method,org/eclipse/jface/text/TextPresentation/getCoverage/," Returns the coverage of this presentation as clipped by the presentation's\n result window.\n\n @return the coverage of this presentation\n"
4502,method,org/eclipse/jface/text/TextPresentation/getExtent/," Returns the extent of this presentation clipped by the\n presentation's result window.\n\n @return the clipped extent\n @since 3.0\n"
4503,method,org/eclipse/jface/text/TextPresentation/clear/," Clears this presentation by resetting all applied changes.\n @since 2.0\n"
4504,method,org/eclipse/jface/text/TextPresentation/TextPresentation/," Creates a new empty text presentation.\n"
4505,method,org/eclipse/jface/text/TextPresentation/TextPresentation/int," Creates a new empty text presentation. <code>sizeHint</code>  tells the\n expected size of this presentation.\n\n @param sizeHint the expected size of this presentation\n"
4506,method,org/eclipse/jface/text/TextPresentation/TextPresentation/IRegion;int," Creates a new empty text presentation with the given extent.\n <code>sizeHint</code>  tells the expected size of this presentation.\n\n @param extent the extent of the created <code>TextPresentation</code>\n @param sizeHint the expected size of this presentation\n @since 3.0\n"
4511,method,org/eclipse/jface/text/ITextViewerExtension/getControl/," Returns the control of this viewer.\n\n @return the control of this viewer\n"
4512,method,org/eclipse/jface/text/ITextViewerExtension/setMark/int," Sets a mark at the given offset or clears the mark if the specified\n offset is <code>-1</code>. If a mark is set and the selection is\n empty, cut and copy actions performed on this text viewer work on the\n region described by the positions of the mark and the cursor.\n\n @param offset the offset of the mark\n"
4513,method,org/eclipse/jface/text/ITextViewerExtension/getMark/," Returns the position of the mark, <code>-1</code> if the mark is not set.\n\n @return the position of the mark or <code>-1</code> if no mark is set\n"
4515,method,org/eclipse/jface/text/ITextViewerExtension/getRewriteTarget/," Returns the viewer's rewrite target.\n\n @return the viewer's rewrite target\n"
4516,interface,org/eclipse/jface/text/IWidgetTokenKeeperExtension," Extension interface for {@link org.eclipse.jface.text.IWidgetTokenKeeper}.\n <p>\n Replaces the original <code>requestWidgetToken</code> functionality with a\n new priority based approach. Adds the concept of focus handling.\n\n @since 3.0\n"
4519,interface,org/eclipse/jface/text/ITextViewerExtension5," Extension interface for {@link org.eclipse.jface.text.ITextViewer}. Defines\n a conceptual replacement of the original visible region concept. This interface\n replaces {@link org.eclipse.jface.text.ITextViewerExtension3}.\n <p>\n Introduces the explicit concept of model and widget coordinates. For example,\n a selection returned by the text viewer's control is a widget selection. A\n widget selection always maps to a certain range of the viewer's document.\n This range is considered the model selection.\n <p>\n All model ranges that have a corresponding widget ranges are considered\n "exposed model ranges". The viewer can be requested to expose a given model\n range. Thus, a visible region is a particular degeneration of exposed model\n ranges.\n <p>\n This interface allows implementers to follow a sophisticated presentation\n model in which the visible presentation is a complex projection of the\n viewer's input document.\n\n @since 3.0\n"
4520,method,org/eclipse/jface/text/ITextViewerExtension5/getModelCoverage/," Returns the minimal region of the viewer's input document that completely\n comprises everything that is visible in the viewer's widget or\n <code>null</code> if there is no such region.\n\n @return the minimal region of the viewer's document comprising the\n         contents of the viewer's widget or <code>null</code>\n"
4521,method,org/eclipse/jface/text/ITextViewerExtension5/modelLine2WidgetLine/int," Returns the widget line that corresponds to the given line of the\n viewer's input document or <code>-1</code> if there is no such line.\n\n @param modelLine the line of the viewer's document\n @return the corresponding widget line or <code>-1</code>\n"
4522,method,org/eclipse/jface/text/ITextViewerExtension5/modelOffset2WidgetOffset/int," Returns the widget offset that corresponds to the given offset in the\n viewer's input document or <code>-1</code> if there is no such offset\n\n @param modelOffset the offset in the viewer's document\n @return the corresponding widget offset or <code>-1</code>\n"
4523,method,org/eclipse/jface/text/ITextViewerExtension5/modelRange2WidgetRange/IRegion," Returns the minimal region of the viewer's widget that completely\n comprises the given region of the viewer's input document or\n <code>null</code> if there is no such region.\n\n @param modelRange the region of the viewer's document\n @return the minimal region of the widget comprising\n         <code>modelRange</code> or <code>null</code>\n"
4524,method,org/eclipse/jface/text/ITextViewerExtension5/widgetOffset2ModelOffset/int," Returns the offset of the viewer's input document that corresponds to the\n given widget offset or <code>-1</code> if there is no such offset\n\n @param widgetOffset the widget offset\n @return the corresponding offset in the viewer's document or\n         <code>-1</code>\n"
4525,method,org/eclipse/jface/text/ITextViewerExtension5/widgetRange2ModelRange/IRegion," Returns the minimal region of the viewer's input document that completely\n comprises the given widget region or <code>null</code> if there is no\n such region.\n\n @param widgetRange the widget region\n @return the minimal region of the viewer's document comprising\n         <code>widgetlRange</code> or <code>null</code>\n"
4526,method,org/eclipse/jface/text/ITextViewerExtension5/widgetLine2ModelLine/int," Returns the line of the viewer's input document that corresponds to the\n given widget line or <code>-1</code> if there is no such line.\n\n @param widgetLine the widget line\n @return the corresponding line of the viewer's document or\n         <code>-1</code>\n"
4527,method,org/eclipse/jface/text/ITextViewerExtension5/widgetLineOfWidgetOffset/int," Returns the widget line of the given widget offset.\n\n @param widgetOffset the widget offset\n @return the widget line of the widget offset\n"
4528,method,org/eclipse/jface/text/ITextViewerExtension5/getCoveredModelRanges/IRegion," Returns the maximal subranges of the given model range thus that there is\n no offset inside a subrange for which there is no image offset.\n\n @param modelRange the model range\n @return the list of subranges\n"
4531,method,org/eclipse/jface/text/IDocumentAdapterExtension/stopForwardingDocumentChanges/," Stops forwarding document changes to the styled text.\n"
4534,method,org/eclipse/jface/text/TextSelection/emptySelection/," Returns the shared instance of the empty text selection.\n\n @return the shared instance of an empty text selection\n"
4535,method,org/eclipse/jface/text/TextSelection/isEmpty/," Tells whether this text selection is the empty selection.\n <p>\n A selection of length 0 is not an empty text selection as it\n describes, e.g., the cursor position in a viewer.</p>\n\n @return <code>true</code> if this selection is empty\n @see #emptySelection()\n"
4536,method,org/eclipse/jface/text/TextSelection/getOffset/,""
4537,method,org/eclipse/jface/text/TextSelection/getLength/,""
4538,method,org/eclipse/jface/text/TextSelection/getStartLine/,""
4539,method,org/eclipse/jface/text/TextSelection/getEndLine/,""
4540,method,org/eclipse/jface/text/TextSelection/getText/,""
4541,method,org/eclipse/jface/text/TextSelection/equals/Object,""
4542,method,org/eclipse/jface/text/TextSelection/hashCode/,""
4543,method,org/eclipse/jface/text/TextSelection/getDocument/," Returns the document underlying the receiver, possibly <code>null</code>.\n \n @return the document underlying the receiver, possibly <code>null</code>\n @since 3.5\n"
4550,method,org/eclipse/jface/text/AbstractInformationControlManager/setCloser/IInformationControlCloser," Sets the information control closer for this manager.\n\n @param closer the information control closer for this manager\n"
4551,method,org/eclipse/jface/text/AbstractInformationControlManager/setMargins/int;int," Sets the horizontal and vertical margin to be used when laying out the\n information control relative to the subject control.\n\n @param xMargin the x-margin\n @param yMargin the y-Margin\n"
4552,method,org/eclipse/jface/text/AbstractInformationControlManager/setSizeConstraints/int;int;boolean;boolean," Sets the width- and height constraints of the information control.\n\n @param widthInChar the width constraint in number of characters\n @param heightInChar the height constrain in number of characters\n @param enforceAsMinimalSize indicates whether the constraints describe the minimal allowed size of the control\n @param enforceAsMaximalSize indicates whether the constraints describe the maximal allowed size of the control\n"
4554,method,org/eclipse/jface/text/AbstractInformationControlManager/setAnchor/Anchor," Sets the anchor used for laying out the information control relative to the\n subject control. E.g, using <code>ANCHOR_TOP</code> indicates that the\n information control is position above the area for which the information to\n be displayed is valid.\n\n @param anchor the layout anchor\n"
4559,method,org/eclipse/jface/text/AbstractInformationControlManager/install/Control," Installs this manager on the given control. The control is now taking the role of\n the subject control. This implementation sets the control also as the information\n control closer's subject control and automatically enables this manager.\n\n @param subjectControl the subject control\n"
4560,method,org/eclipse/jface/text/AbstractInformationControlManager/getSubjectControl/," Returns the subject control of this manager/information control.\n\n @return the subject control\n"
4561,method,org/eclipse/jface/text/AbstractInformationControlManager/getSubjectArea/," Returns the actual subject area.\n\n @return the actual subject area\n"
4562,method,org/eclipse/jface/text/AbstractInformationControlManager/setEnabled/boolean," Sets the enable state of this manager.\n\n @param enabled the enable state\n @deprecated visibility will be changed to protected\n"
4563,method,org/eclipse/jface/text/AbstractInformationControlManager/isEnabled/," Returns whether this manager is enabled or not.\n\n @return <code>true</code> if this manager is enabled otherwise <code>false</code>\n"
4564,method,org/eclipse/jface/text/AbstractInformationControlManager/computeSizeConstraints/Control;IInformationControl," Computes the size constraints of the information control in points based on the\n default font of the given subject control as well as the size constraints in character\n width.\n\n @param subjectControl the subject control\n @param informationControl the information control whose size constraints are computed\n @return the computed size constraints in points\n"
4565,method,org/eclipse/jface/text/AbstractInformationControlManager/computeSizeConstraints/Control;Rectangle;IInformationControl," Computes the size constraints of the information control in points.\n\n @param subjectControl the subject control\n @param subjectArea the subject area\n @param informationControl the information control whose size constraints are computed\n @return the computed size constraints in points\n @since 3.0\n"
4566,method,org/eclipse/jface/text/AbstractInformationControlManager/handleInformationControlDisposed/," Handles the disposal of the information control. By default, the information\n control closer is stopped.\n"
4567,method,org/eclipse/jface/text/AbstractInformationControlManager/getInformationControl/," Returns the information control. If the information control has not been created yet,\n it is automatically created.\n\n @return the information control\n"
4568,method,org/eclipse/jface/text/AbstractInformationControlManager/computeLocation/Rectangle;Point;Anchor," Computes the display location of the information control. The location is computed\n considering the given subject area, the anchor at the subject area, and the\n size of the information control. This method does not care about whether the information\n control would be completely visible when placed at the result location.\n\n @param subjectArea the subject area\n @param controlSize the size of the information control\n @param anchor the anchor at the subject area\n @return the display location of the information control\n"
4569,method,org/eclipse/jface/text/AbstractInformationControlManager/computeAvailableArea/Rectangle;Rectangle;Anchor," Computes the area available for an information control given an anchor and the subject area\n within <code>bounds</code>.\n\n @param subjectArea the subject area\n @param bounds the bounds\n @param anchor the anchor at the subject area\n @return the area available at the given anchor relative to the subject area, confined to the\n         monitor's client area\n @since 3.3\n"
4572,method,org/eclipse/jface/text/AbstractInformationControlManager/computeInformationControlLocation/Rectangle;Point," Computes the location of the information control depending on the\n subject area and the size of the information control. This method attempts\n to find a location at which the information control lies completely in the display's\n client area while honoring the manager's default anchor. If this isn't possible using the\n default anchor, the fallback anchors are tried out.\n\n @param subjectArea the information area\n @param controlSize the size of the information control\n @return the computed location of the information control\n"
4574,method,org/eclipse/jface/text/AbstractInformationControlManager/doShowInformation/," Computes information to be displayed as well as the subject area\n and initiates that this information is presented in the information control.\n"
4576,method,org/eclipse/jface/text/AbstractInformationControlManager/hideInformationControl/," Hides the information control and stops the information control closer.\n"
4578,method,org/eclipse/jface/text/AbstractInformationControlManager/disposeInformationControl/," Disposes this manager's information control.\n"
4580,method,org/eclipse/jface/text/AbstractInformationControlManager/storeInformationControlBounds/," Stores the information control's bounds.\n\n @since 3.0\n"
4581,method,org/eclipse/jface/text/AbstractInformationControlManager/restoreInformationControlBounds/," Restores the information control's bounds.\n\n @return the stored bounds\n @since 3.0\n"
4583,method,org/eclipse/jface/text/AbstractInformationControlManager/AbstractInformationControlManager/IInformationControlCreator," Creates a new information control manager using the given information control creator.\n By default the following configuration is given:\n <ul>\n <li> enabled == false\n <li> horizontal margin == 5 points\n <li> vertical margin == 5 points\n <li> width constraint == 60 characters\n <li> height constraint == 6 characters\n <li> enforce constraints as minimal size == false\n <li> enforce constraints as maximal size == false\n <li> layout anchor == ANCHOR_BOTTOM\n <li> fall back anchors == { ANCHOR_TOP, ANCHOR_BOTTOM, ANCHOR_LEFT, ANCHOR_RIGHT, ANCHOR_GLOBAL }\n <li> takes focus when visible == false\n </ul>\n\n @param creator the information control creator\n"
4584,field,org/eclipse/jface/text/AbstractInformationControlManager/ANCHOR_TOP,"Anchor representing the top of the information area "
4585,field,org/eclipse/jface/text/AbstractInformationControlManager/ANCHOR_BOTTOM,"Anchor representing the bottom of the information area "
4586,field,org/eclipse/jface/text/AbstractInformationControlManager/ANCHOR_LEFT,"Anchor representing the left side of the information area "
4587,field,org/eclipse/jface/text/AbstractInformationControlManager/ANCHOR_RIGHT,"Anchor representing the right side of the information area "
4588,field,org/eclipse/jface/text/AbstractInformationControlManager/ANCHOR_GLOBAL," Anchor representing the middle of the subject control\n @since 2.1\n"
4589,field,org/eclipse/jface/text/AbstractInformationControlManager/STORE_LOCATION_X," Dialog store constant for the location's x-coordinate.\n @since 3.0\n"
4590,field,org/eclipse/jface/text/AbstractInformationControlManager/STORE_LOCATION_Y," Dialog store constant for the location's y-coordinate.\n @since 3.0\n"
4591,field,org/eclipse/jface/text/AbstractInformationControlManager/STORE_SIZE_WIDTH," Dialog store constant for the size's width.\n @since 3.0\n"
4592,field,org/eclipse/jface/text/AbstractInformationControlManager/STORE_SIZE_HEIGHT," Dialog store constant for the size's height.\n @since 3.0\n"
4601,method,org/eclipse/jface/text/AbstractInformationControlManager/IInformationControlCloser/start/Rectangle," Tells this closer to start monitoring the subject and the information\n control. The presented information is considered valid for the given\n area of the subject control's display.\n\n @param subjectArea the area for which the presented information is valid\n"
4602,method,org/eclipse/jface/text/AbstractInformationControlManager/IInformationControlCloser/stop/," Tells this closer to stop monitoring the subject and the information control.\n"
4603,class,org/eclipse/jface/text/AbstractInformationControlManager/Anchor," Constitutes entities to enumerate anchors for the layout of the information control.\n"
4604,method,org/eclipse/jface/text/AbstractInformationControlManager/Anchor/toString/,""
4606,method,org/eclipse/jface/text/IInformationControlExtension5/containsControl/Control," Tests whether the given control is this information control\n or a child of this information control.\n\n @param control the control to test\n @return <code>true</code> iff the given control is this information control\n or a child of this information control\n"
4607,method,org/eclipse/jface/text/IInformationControlExtension5/isVisible/," @return <code>true</code> iff the information control is currently visible\n"
4610,class,org/eclipse/jface/text/MarkSelection," Default implementation of {@link org.eclipse.jface.text.IMarkSelection}.\n\n @since 2.0\n"
4611,method,org/eclipse/jface/text/MarkSelection/getDocument/,""
4612,method,org/eclipse/jface/text/MarkSelection/getOffset/,""
4613,method,org/eclipse/jface/text/MarkSelection/getLength/,""
4614,method,org/eclipse/jface/text/MarkSelection/isEmpty/,""
4620,method,org/eclipse/jface/text/IBlockTextSelection/getRegions/," Returns a non-empty array containing the selected text range for each line covered by the\n selection.\n \n @return an array containing a the covered text range for each line covered by the receiver\n"
4622,method,org/eclipse/jface/text/IInformationControlCreator/createInformationControl/Shell," Creates a new information control with the given shell as the control's parent.\n\n @param parent the parent shell\n @return the created information control\n"
4623,interface,org/eclipse/jface/text/ITextHoverExtension," Extension interface for {@link org.eclipse.jface.text.ITextHover}.\n <p>\n It provides a way for hovers to specify the information control creator they\n want to have used in order to create the hover control.</p>\n\n @see org.eclipse.jface.text.IInformationControlCreator\n @see org.eclipse.jface.text.ITextHover\n @since 3.0\n"
4624,method,org/eclipse/jface/text/ITextHoverExtension/getHoverControlCreator/," Returns the hover control creator of this text hover or <code>null</code>\n\n @return the hover control creator or <code>null</code>\n"
4626,method,org/eclipse/jface/text/IEditingSupportRegistry/register/IEditingSupport," Register a support with the registry. If the support is already\n registered, nothing happens.\n\n @param support an editor support\n"
4627,method,org/eclipse/jface/text/IEditingSupportRegistry/unregister/IEditingSupport," Deregister a support with the registry. If the support is not registered,\n or <code>support</code> is <code>null</code>, nothing happens.\n\n @param support the helper to deregister, or <code>null</code>\n"
4628,method,org/eclipse/jface/text/IEditingSupportRegistry/getRegisteredSupports/," Returns the current editor helpers.\n\n @return an non- <code>null</code> array of currently registered editor\n         helpers\n"
4629,class,org/eclipse/jface/text/DefaultTextDoubleClickStrategy," Standard implementation of\n {@link org.eclipse.jface.text.ITextDoubleClickStrategy}.\n <p>\n Selects words using <code>java.text.BreakIterator</code> for the default\n locale.</p>\n\n @see java.text.BreakIterator\n"
4630,method,org/eclipse/jface/text/DefaultTextDoubleClickStrategy/doubleClicked/ITextViewer,""
4632,method,org/eclipse/jface/text/DefaultTextDoubleClickStrategy/findWord/IDocument;int," Tries to find the word at the given offset.\n \n @param document the document\n @param offset the offset\n @return the word or <code>null</code> if none\n @since 3.5\n"
4633,method,org/eclipse/jface/text/DefaultTextDoubleClickStrategy/DefaultTextDoubleClickStrategy/," Creates a new default text double click strategy.\n"
4634,class,org/eclipse/jface/text/BlockTextSelection," Standard implementation of {@link org.eclipse.jface.text.IBlockTextSelection}.\n \n @since 3.5\n"
4635,method,org/eclipse/jface/text/BlockTextSelection/getStartLine/,""
4636,method,org/eclipse/jface/text/BlockTextSelection/getStartColumn/,""
4637,method,org/eclipse/jface/text/BlockTextSelection/getEndLine/,""
4638,method,org/eclipse/jface/text/BlockTextSelection/getEndColumn/,""
4639,method,org/eclipse/jface/text/BlockTextSelection/getText/,""
4640,method,org/eclipse/jface/text/BlockTextSelection/hashCode/,""
4641,method,org/eclipse/jface/text/BlockTextSelection/equals/Object,""
4642,method,org/eclipse/jface/text/BlockTextSelection/getRegions/,""
4643,method,org/eclipse/jface/text/BlockTextSelection/BlockTextSelection/IDocument;int;int;int;int;int," Creates a column selection for the given lines and columns.\n \n @param document the document that this selection refers to\n @param startLine the start line\n @param startColumn the possibly virtual start column, measured in characters from the start\n        of <code>startLine</code>\n @param endLine the inclusive end line\n @param endColumn the exclusive and possibly virtual end column, measured in characters from\n        the start of <code>endLine</code>\n @param tabWidth the tabulator width used to compute the visual offsets from character offsets\n"
4645,method,org/eclipse/jface/text/ITextDoubleClickStrategy/doubleClicked/ITextViewer," The mouse has been double clicked on the given text viewer.\n\n @param viewer the viewer into which has been double clicked\n"
4646,interface,org/eclipse/jface/text/IWidgetTokenOwnerExtension," Extension interface for {@link org.eclipse.jface.text.IWidgetTokenOwner}.\n <p>\n Replaces the original <code>requestWidgetToken</code> functionality with a\n new priority based approach.\n\n @since 3.0\n"
4647,method,org/eclipse/jface/text/IWidgetTokenOwnerExtension/requestWidgetToken/IWidgetTokenKeeper;int," Requests the widget token from this token owner. Returns\n <code>true</code> if the token has been acquired or is\n already owned by the requester. This method is non-blocking.\n\n <p><code>priority</code> is forwarded to any existing token keeper\n to give it an estimate on whether the request has higher priority than\n the current keeper's. There is, however, no guarantee that another keeper\n will release the token even if it has a high priority.</p>\n\n @param requester the token requester\n @param priority the priority of the request\n @return <code>true</code> if requester acquires the token,\n 	<code>false</code> otherwise\n"
4648,class,org/eclipse/jface/text/DefaultTextHover," Standard implementation of {@link org.eclipse.jface.text.ITextHover}.\n\n @since 3.2\n"
4650,method,org/eclipse/jface/text/DefaultTextHover/getHoverRegion/ITextViewer;int,""
4652,method,org/eclipse/jface/text/DefaultTextHover/DefaultTextHover/ISourceViewer," Creates a new annotation hover.\n\n @param sourceViewer this hover's annotation model\n"
4654,method,org/eclipse/jface/text/PropagatingFontFieldEditor/doLoad/,""
4655,method,org/eclipse/jface/text/PropagatingFontFieldEditor/doLoadDefault/,""
4656,method,org/eclipse/jface/text/PropagatingFontFieldEditor/startPropagate/IPreferenceStore;String;IPreferenceStore;String," Starts the propagation of the font preference stored in the source preference\n store under the source key to the target preference store using the target\n preference key.\n\n @param source the source preference store\n @param sourceKey the key to be used in the source preference store\n @param target the target preference store\n @param targetKey the key to be used in the target preference store\n"
4659,method,org/eclipse/jface/text/ISelectionValidator/isValid/ISelection," Tests whether the given post selection is still valid.\n\n @param selection the selection\n @return <code>true</code> if the selection is still valid\n"
4661,method,org/eclipse/jface/text/JFaceTextUtil/computeLineHeight/StyledText;int;int;int," Computes the line height for the given line range.\n\n @param textWidget the <code>StyledText</code> widget\n @param startLine the start line\n @param endLine the end line (exclusive)\n @param lineCount the line count used by the old API\n @return the height of all lines starting with <code>startLine</code> and ending above <code>endLime</code>\n"
4665,method,org/eclipse/jface/text/JFaceTextUtil/getVisibleModelLines/ITextViewer," Returns the range of lines that is visible in the viewer, including any partially visible\n lines.\n\n @param viewer the viewer\n @return the range of lines that is visible in the viewer, <code>null</code> if no lines are\n         visible\n"
4666,method,org/eclipse/jface/text/JFaceTextUtil/widgetLine2ModelLine/ITextViewer;int," Converts a widget line into a model (i.e. {@link IDocument}) line using the\n {@link ITextViewerExtension5} if available, otherwise by adapting the widget line to the\n viewer's {@link ITextViewer#getVisibleRegion() visible region}.\n\n @param viewer the viewer\n @param widgetLine the widget line to convert.\n @return the model line corresponding to <code>widgetLine</code> or -1 to signal that there\n         is no corresponding model line\n"
4667,method,org/eclipse/jface/text/JFaceTextUtil/modelLineToWidgetLine/ITextViewer;int," Converts a model (i.e. {@link IDocument}) line into a widget line using the\n {@link ITextViewerExtension5} if available, otherwise by adapting the model line to the\n viewer's {@link ITextViewer#getVisibleRegion() visible region}.\n\n @param viewer the viewer\n @param modelLine the model line to convert.\n @return the widget line corresponding to <code>modelLine</code> or -1 to signal that there\n         is no corresponding widget line\n"
4668,method,org/eclipse/jface/text/JFaceTextUtil/getHiddenTopLinePixels/StyledText," Returns the number of hidden pixels of the first partially visible line. If there is no\n partially visible line, zero is returned.\n\n @param textWidget the widget\n @return the number of hidden pixels of the first partial line, always &gt;= 0\n"
4669,method,org/eclipse/jface/text/JFaceTextUtil/getLinePixel/StyledText;int,""
4670,method,org/eclipse/jface/text/JFaceTextUtil/getLineIndex/StyledText;int,""
4671,method,org/eclipse/jface/text/JFaceTextUtil/isShowingEntireContents/StyledText," Returns <code>true</code> if the widget displays the entire contents, i.e. it cannot\n be vertically scrolled.\n\n @param widget the widget\n @return <code>true</code> if the widget displays the entire contents, i.e. it cannot\n         be vertically scrolled, <code>false</code> otherwise\n"
4673,method,org/eclipse/jface/text/JFaceTextUtil/getAverageCharWidth/Control," Returns the average character width of the given control's font.\n\n @param control the control to calculate the average char width for\n @return the average character width of the controls font\n\n @since 3.4\n"
4675,method,org/eclipse/jface/text/JFaceTextUtil/getCoveredRanges/ITextViewer;ITextSelection," Returns the text regions covered by the given selection in the given viewer.\n \n @param viewer the viewer\n @param selection the selection\n @return the text regions corresponding to <code>selection</code>\n @throws BadLocationException if accessing the document failed\n @since 3.5\n"
4676,method,org/eclipse/jface/text/JFaceTextUtil/getOffsetForCursorLocation/ITextViewer," Returns the offset in the given viewer that corresponds to the current cursor location.\n \n @param viewer the viewer\n @return the offset for the current cursor location or -1 if not available\n @since 3.5\n"
4678,method,org/eclipse/jface/text/ITextViewerExtension4/moveFocusToWidgetToken/," Instructs the receiver to request the {@link IWidgetTokenKeeper}\n currently holding the widget token to take the keyboard focus.\n\n @return <code>true</code> if there was any\n         <code>IWidgetTokenKeeper</code> that was asked to take the\n         focus, <code>false</code> otherwise\n"
4681,interface,org/eclipse/jface/text/IInformationControlCreatorExtension," Extension interface for {@link org.eclipse.jface.text.IInformationControlCreator}<p>\n Introduces tests whether information controls can be reused and whether information\n control creators can replace each other.\n\n @see org.eclipse.jface.text.IInformationControlCreator\n @see org.eclipse.jface.text.IInformationControl\n @since 3.0\n"
4682,method,org/eclipse/jface/text/IInformationControlCreatorExtension/canReuse/IInformationControl," Tests if an existing information control can be reused.\n\n @param control the information control to test\n @return <code>true</code> if the control can be reused\n"
4683,method,org/eclipse/jface/text/IInformationControlCreatorExtension/canReplace/IInformationControlCreator," Tests whether this information control creator can replace the given\n information control creator. This is the case if the two creators create\n the same kind of information controls.\n\n @param creator the creator to be checked\n @return <code>true</code> if the given creator can be replaced,\n         <code>false</code> otherwise\n"
4686,method,org/eclipse/jface/text/MarginPainter/setMarginRulerStyle/int," Sets the line style of the margin line.\n\n @param lineStyle a <code>SWT</code> style constant describing the line style\n"
4687,method,org/eclipse/jface/text/MarginPainter/setMarginRulerWidth/int," Sets the line width of the margin line.\n\n @param lineWidth the line width\n"
4690,method,org/eclipse/jface/text/MarginPainter/deactivate/boolean,""
4691,method,org/eclipse/jface/text/MarginPainter/dispose/,""
4692,method,org/eclipse/jface/text/MarginPainter/paint/int,""
4693,method,org/eclipse/jface/text/MarginPainter/paintControl/PaintEvent,""
4694,method,org/eclipse/jface/text/MarginPainter/setPositionManager/IPaintPositionManager,""
4695,method,org/eclipse/jface/text/MarginPainter/MarginPainter/ITextViewer," Creates a new painter for the given text viewer.\n\n @param textViewer the text viewer\n"
4697,method,org/eclipse/jface/text/IDocumentAdapter/setDocument/IDocument," Sets the adapters document.\n\n @param document the document to be adapted\n"
4699,method,org/eclipse/jface/text/IInformationControl/setInformation/String," Sets the information to be presented by this information control.\n <p>\n Replaced by {@link IInformationControlExtension2#setInput(Object)}.\n\n @param information the information to be presented\n"
4701,method,org/eclipse/jface/text/IInformationControl/computeSizeHint/," Computes and returns a proposal for the size of this information control depending\n on the information to present. The method tries to honor known size constraints but might\n return a size that exceeds them.\n\n @return the computed size hint\n"
4703,method,org/eclipse/jface/text/IInformationControl/setSize/int;int," Sets the size of this information control.\n\n @param width the width of the control\n @param height the height of the control\n"
4704,method,org/eclipse/jface/text/IInformationControl/setLocation/Point," Sets the location of this information control.\n\n @param location the location\n"
4705,method,org/eclipse/jface/text/IInformationControl/dispose/," Disposes this information control.\n"
4706,method,org/eclipse/jface/text/IInformationControl/addDisposeListener/DisposeListener," Adds the given listener to the list of dispose listeners.\n If the listener is already registered it is not registered again.\n\n @param listener the listener to be added\n"
4708,method,org/eclipse/jface/text/IInformationControl/setForegroundColor/Color," Sets the foreground color of this information control.\n\n @param foreground the foreground color of this information control\n"
4709,method,org/eclipse/jface/text/IInformationControl/setBackgroundColor/Color," Sets the background color of this information control.\n\n @param background the background color of this information control\n"
4710,method,org/eclipse/jface/text/IInformationControl/isFocusControl/," Returns whether this information control (or one of its children) has the focus.\n The suggested implementation is like this (<code>fShell</code> is this information control's shell):\n <pre>return fShell.getDisplay().getActiveShell() == fShell</pre>\n\n @return <code>true</code> when the information control has the focus, otherwise <code>false</code>\n"
4711,method,org/eclipse/jface/text/IInformationControl/setFocus/," Sets the keyboard focus to this information control.\n"
4715,method,org/eclipse/jface/text/IFindReplaceTarget/canPerformFind/," Returns whether a find operation can be performed.\n\n @return whether a find operation can be performed\n"
4717,method,org/eclipse/jface/text/IFindReplaceTarget/getSelection/," Returns the currently selected range of characters as a offset and length in widget coordinates.\n\n @return the currently selected character range in widget coordinates\n"
4718,method,org/eclipse/jface/text/IFindReplaceTarget/getSelectionText/," Returns the currently selected characters as a string.\n\n @return the currently selected characters\n"
4719,method,org/eclipse/jface/text/IFindReplaceTarget/isEditable/," Returns whether this target can be modified.\n\n @return <code>true</code> if target can be modified\n"
4722,method,org/eclipse/jface/text/DefaultIndentLineAutoEditStrategy/findEndOfWhiteSpace/IDocument;int;int," Returns the first offset greater than <code>offset</code> and smaller than\n <code>end</code> whose character is not a space or tab character. If no such\n offset is found, <code>end</code> is returned.\n\n @param document the document to search in\n @param offset the offset at which searching start\n @param end the offset at which searching stops\n @return the offset in the specified range whose character is not a space or tab\n @exception BadLocationException if position is an invalid range in the given document\n"
4723,method,org/eclipse/jface/text/DefaultIndentLineAutoEditStrategy/customizeDocumentCommand/IDocument;DocumentCommand,""
4724,method,org/eclipse/jface/text/DefaultIndentLineAutoEditStrategy/DefaultIndentLineAutoEditStrategy/," Creates a new indent line auto edit strategy which can be installed on\n text viewers.\n"
4725,interface,org/eclipse/jface/text/ITextViewerExtension7," Extension interface for {@link org.eclipse.jface.text.ITextViewer}.\n Adds the ability to install tabs to spaces conversion.\n\n @since 3.3\n"
4727,interface,org/eclipse/jface/text/ITextViewerExtension3," Extension interface for {@link org.eclipse.jface.text.ITextViewer}. <p>\n This interface has been replaced by {@link org.eclipse.jface.text.ITextViewerExtension5}.\n Clients are not supposed to use this interface any longer.\n\n @since 2.1\n @deprecated replaced by {@link org.eclipse.jface.text.ITextViewerExtension5}\n"
4728,method,org/eclipse/jface/text/ITextViewerExtension3/getModelCoverage/," Returns the minimal region of the viewer's document that completely comprises everything that is\n visible in the viewer's widget or <code>null</code> if there is no such region.\n\n @return the minimal region of the viewer's document comprising the contents of the viewer's widget or <code>null</code>\n"
4729,method,org/eclipse/jface/text/ITextViewerExtension3/modelLine2WidgetLine/int," Returns the widget line that corresponds to the given line of the viewer's document or <code>-1</code> if there is no such line.\n\n @param modelLine the line of the viewer's document\n @return the corresponding widget line or <code>-1</code>\n"
4730,method,org/eclipse/jface/text/ITextViewerExtension3/modelOffset2WidgetOffset/int," Returns the widget offset that corresponds to the given offset in the viewer's document\n or <code>-1</code> if there is no such offset\n\n @param modelOffset the offset in the viewer's document\n @return the corresponding widget offset or <code>-1</code>\n"
4731,method,org/eclipse/jface/text/ITextViewerExtension3/modelRange2WidgetRange/IRegion," Returns the minimal region of the viewer's widget that completely comprises the given region of the\n viewer's document or <code>null</code> if there is no such region.\n\n @param modelRange the region of the viewer's document\n @return the minimal region of the widget comprising <code>modelRange</code> or <code>null</code>\n"
4732,method,org/eclipse/jface/text/ITextViewerExtension3/widgetOffset2ModelOffset/int," Returns the offset of the viewer's document that corresponds to the given widget offset\n or <code>-1</code> if there is no such offset\n\n @param widgetOffset the widget offset\n @return the corresponding offset in the viewer's document or <code>-1</code>\n"
4733,method,org/eclipse/jface/text/ITextViewerExtension3/widgetRange2ModelRange/IRegion," Returns the minimal region of the viewer's document that completely comprises the given widget region\n or <code>null</code> if there is no such region.\n\n @param widgetRange the widget region\n @return the minimal region of the viewer's document comprising <code>widgetRange</code> or <code>null</code>\n"
4734,method,org/eclipse/jface/text/ITextViewerExtension3/widgetlLine2ModelLine/int," Returns the line of the viewer's document that corresponds to the given widget line or <code>-1</code> if there is no such line.\n\n @param widgetLine the widget line\n @return the corresponding line of the viewer's document or <code>-1</code>\n"
4735,method,org/eclipse/jface/text/ITextViewerExtension3/widgetLineOfWidgetOffset/int," Returns the widget line of the given widget offset.\n\n @param widgetOffset the widget offset\n @return the widget line of the widget offset\n"
4736,class,org/eclipse/jface/text/PaintManager," Manages the {@link org.eclipse.jface.text.IPainter} object registered with an\n {@link org.eclipse.jface.text.ITextViewer}.\n <p>\n Clients usually instantiate and configure objects of this type.</p>\n\n @since 2.1\n"
4737,method,org/eclipse/jface/text/PaintManager/addPainter/IPainter," Adds the given painter to the list of painters managed by this paint manager.\n If the painter is already registered with this paint manager, this method is\n without effect.\n\n @param painter the painter to be added\n"
4738,method,org/eclipse/jface/text/PaintManager/removePainter/IPainter," Removes the given painter from the list of painters managed by this\n paint manager. If the painter has not previously been added to this\n paint manager, this method is without effect.\n\n @param painter the painter to be removed\n"
4740,method,org/eclipse/jface/text/PaintManager/keyPressed/KeyEvent,""
4741,method,org/eclipse/jface/text/PaintManager/keyReleased/KeyEvent,""
4742,method,org/eclipse/jface/text/PaintManager/mouseDoubleClick/MouseEvent,""
4743,method,org/eclipse/jface/text/PaintManager/mouseDown/MouseEvent,""
4744,method,org/eclipse/jface/text/PaintManager/mouseUp/MouseEvent,""
4745,method,org/eclipse/jface/text/PaintManager/selectionChanged/SelectionChangedEvent,""
4746,method,org/eclipse/jface/text/PaintManager/textChanged/TextEvent,""
4747,method,org/eclipse/jface/text/PaintManager/inputDocumentAboutToBeChanged/IDocument;IDocument,""
4748,method,org/eclipse/jface/text/PaintManager/inputDocumentChanged/IDocument;IDocument,""
4749,method,org/eclipse/jface/text/PaintManager/PaintManager/ITextViewer," Creates a new paint manager for the given text viewer.\n\n @param textViewer the text viewer associated to this newly created paint manager\n"
4751,method,org/eclipse/jface/text/TabsToSpacesConverter/setNumberOfSpacesPerTab/int,""
4752,method,org/eclipse/jface/text/TabsToSpacesConverter/setLineTracker/ILineTracker,""
4753,method,org/eclipse/jface/text/TabsToSpacesConverter/customizeDocumentCommand/IDocument;DocumentCommand,""
4754,method,org/eclipse/jface/text/TabsToSpacesConverter/TabsToSpacesConverter/,""
4755,class,org/eclipse/jface/text/DocumentCommand," Represents a text modification as a document replace command. The text\n modification is given as a {@link org.eclipse.swt.events.VerifyEvent} and\n translated into a document replace command relative to a given offset. A\n document command can also be used to initialize a given\n <code>VerifyEvent</code>.\n <p>\n A document command can also represent a list of related changes.</p>\n"
4757,method,org/eclipse/jface/text/DocumentCommand/getCommandIterator/," Returns an iterator over the commands in ascending position order.\n The iterator includes the original document command.\n Commands cannot be removed.\n\n @return returns the command iterator\n"
4758,method,org/eclipse/jface/text/DocumentCommand/getCommandCount/," Returns the number of commands including the original document command.\n\n @return returns the number of commands\n @since 2.1\n"
4759,method,org/eclipse/jface/text/DocumentCommand/DocumentCommand/," Creates a new document command.\n"
4761,field,org/eclipse/jface/text/DocumentCommand/offset,"The offset of the command. "
4762,field,org/eclipse/jface/text/DocumentCommand/length,"The length of the command "
4763,field,org/eclipse/jface/text/DocumentCommand/text,"The text to be inserted "
4764,field,org/eclipse/jface/text/DocumentCommand/owner," The owner of the document command which will not be notified.\n @since 2.1\n"
4771,method,org/eclipse/jface/text/DefaultAutoIndentStrategy/DefaultAutoIndentStrategy/," Creates a new default auto indent strategy.\n"
4772,class,org/eclipse/jface/text/TextAttribute," Description of textual attributes such as color and style. Text attributes\n are considered value objects.\n <p>\n Clients usually instantiate object of the class.</p>\n"
4773,method,org/eclipse/jface/text/TextAttribute/equals/Object,""
4774,method,org/eclipse/jface/text/TextAttribute/hashCode/,""
4775,method,org/eclipse/jface/text/TextAttribute/getForeground/," Returns the attribute's foreground color.\n\n @return the attribute's foreground color or <code>null</code> if not set\n"
4776,method,org/eclipse/jface/text/TextAttribute/getBackground/," Returns the attribute's background color.\n\n @return the attribute's background color or <code>null</code> if not set\n"
4777,method,org/eclipse/jface/text/TextAttribute/getStyle/," Returns the attribute's style.\n\n @return the attribute's style\n"
4778,method,org/eclipse/jface/text/TextAttribute/getFont/," Returns the attribute's font.\n\n @return the attribute's font or <code>null</code> if not set\n @since 3.3\n"
4779,method,org/eclipse/jface/text/TextAttribute/TextAttribute/Color;Color;int," Creates a text attribute with the given colors and style.\n\n @param foreground the foreground color, <code>null</code> if none\n @param background the background color, <code>null</code> if none\n @param style the style\n"
4780,method,org/eclipse/jface/text/TextAttribute/TextAttribute/Color;Color;int;Font," Creates a text attribute with the given colors and style.\n\n @param foreground the foreground color, <code>null</code> if none\n @param background the background color, <code>null</code> if none\n @param style the style\n @param font the font, <code>null</code> if none\n @since 3.3\n"
4781,method,org/eclipse/jface/text/TextAttribute/TextAttribute/Color," Creates a text attribute for the given foreground color, no background color and\n with the SWT normal style.\n\n @param foreground the foreground color, <code>null</code> if none\n"
4782,field,org/eclipse/jface/text/TextAttribute/STRIKETHROUGH," Text attribute for strikethrough style.\n (value <code>1 << 29</code>).\n @since 3.1\n"
4783,field,org/eclipse/jface/text/TextAttribute/UNDERLINE," Text attribute for underline style.\n (value <code>1 << 30</code>)\n @since 3.1\n"
4786,method,org/eclipse/jface/text/IEditingSupport/ownsFocusShell/," Returns <code>true</code> if the receiver is showing a shell which has\n focus, <code>false</code> if it does not have focus or the helper has\n no shell.\n\n @return <code>true</code> if the support's shell has focus,\n         <code>false</code> otherwise\n"
4787,interface,org/eclipse/jface/text/ITextPresentationListener," Text presentation listeners registered with an\n {@link org.eclipse.jface.text.ITextViewer} are informed when a\n {@link org.eclipse.jface.text.TextPresentation} is about to be applied to the\n text viewer. The listener can apply changes to the text presentation and thus\n participate in the process of text presentation creation.\n\n @since 3.0\n"
4791,method,org/eclipse/jface/text/ITextViewer/setUndoManager/IUndoManager," Sets this viewer's undo manager.\n\n @param undoManager the new undo manager. <code>null</code> is a valid argument.\n"
4792,method,org/eclipse/jface/text/ITextViewer/setTextDoubleClickStrategy/ITextDoubleClickStrategy;String," Sets this viewer's text double click strategy for the given content type.\n\n @param strategy the new double click strategy. <code>null</code> is a valid argument.\n @param contentType the type for which the strategy is registered\n"
4796,method,org/eclipse/jface/text/ITextViewer/resetPlugins/," Resets the installed plug-ins. If plug-ins change their state or\n behavior over the course of time, this method causes them to be set\n back to their initial state and behavior. E.g., if an {@link IUndoManager}\n has been installed on this text viewer, the manager's list of remembered\n text editing operations is removed.\n"
4803,method,org/eclipse/jface/text/ITextViewer/setDocument/IDocument," Sets the given document as the text viewer's model and updates the\n presentation accordingly. An appropriate <code>TextEvent</code> is\n issued. This text event does not carry a related document event.\n\n @param document the viewer's new input document <code>null</code> if none\n"
4804,method,org/eclipse/jface/text/ITextViewer/getDocument/," Returns the text viewer's input document.\n\n @return the viewer's input document or <code>null</code> if none\n"
4805,method,org/eclipse/jface/text/ITextViewer/setEventConsumer/IEventConsumer," Registers an event consumer with this viewer. This method has been\n replaces with the {@link org.eclipse.swt.custom.VerifyKeyListener}\n management methods in {@link ITextViewerExtension}.\n\n @param consumer the viewer's event consumer. <code>null</code> is a\n            valid argument.\n"
4806,method,org/eclipse/jface/text/ITextViewer/setEditable/boolean," Sets the editable state.\n\n @param editable the editable state\n"
4807,method,org/eclipse/jface/text/ITextViewer/isEditable/," Returns whether the shown text can be manipulated.\n\n @return the viewer's editable state\n"
4808,method,org/eclipse/jface/text/ITextViewer/setDocument/IDocument;int;int," Sets the given document as this viewer's model and\n exposes the specified region. An appropriate\n <code>TextEvent</code> is issued. The text event does not carry a\n related document event. This method is a convenience method for\n <code>setDocument(document);setVisibleRegion(offset, length)</code>.\n\n @param document the new input document or <code>null</code> if none\n @param modelRangeOffset the offset of the model range\n @param modelRangeLength the length of the model range\n"
4810,method,org/eclipse/jface/text/ITextViewer/resetVisibleRegion/," Resets the region of this viewer's document which is visible in the presentation.\n Afterwards, the whole input document is visible.\n"
4814,method,org/eclipse/jface/text/ITextViewer/invalidateTextPresentation/," Marks the currently applied text presentation as invalid. It is the\n viewer's responsibility to take any action it can to repair the text\n presentation.\n <p>\n See {@link ITextViewerExtension2#invalidateTextPresentation(int, int)}\n for a way to invalidate specific regions rather than the presentation as\n a whole.\n\n @since 2.0\n"
4815,method,org/eclipse/jface/text/ITextViewer/setTextColor/Color," Applies the given color as text foreground color to this viewer's\n selection.\n\n @param color the color to be applied\n"
4817,method,org/eclipse/jface/text/ITextViewer/getTextOperationTarget/," Returns the text operation target of this viewer.\n\n @return the text operation target of this viewer\n"
4818,method,org/eclipse/jface/text/ITextViewer/getFindReplaceTarget/," Returns the find/replace operation target of this viewer.\n\n @return the find/replace operation target of this viewer\n"
4819,method,org/eclipse/jface/text/ITextViewer/setDefaultPrefixes/String[];String," Sets the strings that are used as prefixes when lines of the given content type\n are prefixed using the prefix text operation. The prefixes are considered equivalent.\n Inserting a prefix always inserts the defaultPrefixes[0].\n Removing a prefix removes all of the specified prefixes.\n\n @param defaultPrefixes the prefixes to be used\n @param contentType the content type for which the prefixes are specified\n @since 2.0\n"
4820,method,org/eclipse/jface/text/ITextViewer/setIndentPrefixes/String[];String," Sets the strings that are used as prefixes when lines of the given content type\n are shifted using the shift text operation. The prefixes are considered equivalent.\n Thus "\t" and "    " can both be used as prefix characters.\n Shift right always inserts the indentPrefixes[0].\n Shift left removes all of the specified prefixes.\n\n @param indentPrefixes the prefixes to be used\n @param contentType the content type for which the prefixes are specified\n"
4821,method,org/eclipse/jface/text/ITextViewer/setSelectedRange/int;int," Sets the selection to the specified range.\n\n @param offset the offset of the selection range\n @param length the length of the selection range. A negative length places\n            the caret at the visual start of the selection.\n"
4822,method,org/eclipse/jface/text/ITextViewer/getSelectedRange/," Returns the range of the current selection in coordinates of this viewer's document.\n\n @return a <code>Point</code> with x as the offset and y as the length of the current selection\n"
4824,method,org/eclipse/jface/text/ITextViewer/revealRange/int;int," Ensures that the given range is visible.\n\n @param offset the offset of the range to be revealed\n @param length the length of the range to be revealed\n"
4826,method,org/eclipse/jface/text/ITextViewer/getTopIndex/," Returns the visible line with the smallest line number.\n\n @return the number of the top most visible line\n"
4827,method,org/eclipse/jface/text/ITextViewer/getTopIndexStartOffset/," Returns the document offset of the upper left corner of this viewer's view port.\n\n @return the upper left corner offset\n"
4828,method,org/eclipse/jface/text/ITextViewer/getBottomIndex/," Returns the visible line with the highest line number.\n\n @return the number of the bottom most line\n"
4829,method,org/eclipse/jface/text/ITextViewer/getBottomIndexEndOffset/," Returns the document offset of the lower right\n corner of this viewer's view port. This is the visible character\n with the highest character position. If the content of this viewer\n is shorter, the position of the last character of the content is returned.\n\n @return the lower right corner offset\n"
4830,method,org/eclipse/jface/text/ITextViewer/getTopInset/," Returns the vertical offset of the first visible line.\n\n @return the vertical offset of the first visible line\n"
4832,method,org/eclipse/jface/text/DefaultUndoManager/beginCompoundChange/,""
4833,method,org/eclipse/jface/text/DefaultUndoManager/endCompoundChange/,""
4834,method,org/eclipse/jface/text/DefaultUndoManager/setMaximalUndoLevel/int,""
4835,method,org/eclipse/jface/text/DefaultUndoManager/connect/ITextViewer,""
4836,method,org/eclipse/jface/text/DefaultUndoManager/disconnect/,""
4837,method,org/eclipse/jface/text/DefaultUndoManager/reset/,""
4838,method,org/eclipse/jface/text/DefaultUndoManager/redoable/,""
4839,method,org/eclipse/jface/text/DefaultUndoManager/undoable/,""
4840,method,org/eclipse/jface/text/DefaultUndoManager/redo/,""
4841,method,org/eclipse/jface/text/DefaultUndoManager/undo/,""
4842,method,org/eclipse/jface/text/DefaultUndoManager/selectAndReveal/int;int," Selects and reveals the specified range.\n\n @param offset the offset of the range\n @param length the length of the range\n @since 3.0\n"
4843,method,org/eclipse/jface/text/DefaultUndoManager/getUndoContext/,""
4844,method,org/eclipse/jface/text/DefaultUndoManager/DefaultUndoManager/int," Creates a new undo manager who remembers the specified number of edit commands.\n\n @param undoLevel the length of this manager's history\n"
4845,field,org/eclipse/jface/text/DefaultUndoManager/fPreservedUndoModificationStamp,"The document modification stamp for undo. "
4846,field,org/eclipse/jface/text/DefaultUndoManager/fPreservedRedoModificationStamp,"The document modification stamp for redo. "
4848,method,org/eclipse/jface/text/IDelayedInputChangeProvider/setDelayedInputChangeListener/IInputChangedListener," Sets or clears the delayed input change listener.\n\n @param inputChangeListener the new delayed input change listener, or\n        <code>null</code> if none\n @since 3.4\n"
4852,method,org/eclipse/jface/text/revisions/IRevisionRulerColumn/setRevisionInformation/RevisionInformation," Sets the revision information.\n\n @param info the new revision information, or <code>null</code> to reset the ruler\n"
4853,interface,org/eclipse/jface/text/revisions/IRevisionListener," A listener which is notified when revision information changes.\n\n @see RevisionInformation\n @see IRevisionRulerColumnExtension\n @since 3.3\n"
4854,method,org/eclipse/jface/text/revisions/IRevisionListener/revisionInformationChanged/RevisionEvent," Notifies the receiver that the revision information has been updated. This typically occurs\n when revision information is being displayed in an editor and the annotated document is\n modified.\n\n @param e the revision event describing the change\n"
4861,method,org/eclipse/jface/text/revisions/Revision/getDate/," Returns the modification date of this revision.\n\n @return the modification date of this revision\n"
4862,method,org/eclipse/jface/text/revisions/Revision/toString/,""
4864,method,org/eclipse/jface/text/revisions/Revision/Revision/," Creates a new revision.\n"
4865,class,org/eclipse/jface/text/revisions/RevisionRange," An unmodifiable line range that belongs to a {@link Revision}.\n\n @since 3.3\n @noinstantiate This class is not intended to be instantiated by clients.\n"
4866,method,org/eclipse/jface/text/revisions/RevisionRange/getRevision/," Returns the revision that this range belongs to.\n\n @return the revision that this range belongs to\n"
4867,method,org/eclipse/jface/text/revisions/RevisionRange/getStartLine/,""
4868,method,org/eclipse/jface/text/revisions/RevisionRange/getNumberOfLines/,""
4869,method,org/eclipse/jface/text/revisions/RevisionRange/toString/,""
4870,interface,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension," Extension interface for {@link IRevisionRulerColumn}.\n <p>\n Introduces the ability to register a selection listener on revisions and configurable rendering\n modes.\n </p>\n\n @see IRevisionRulerColumn\n @since 3.3\n"
4871,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/setRevisionRenderingMode/RenderingMode," Changes the rendering mode and triggers redrawing if needed.\n\n @param mode the rendering mode\n"
4872,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/showRevisionId/boolean," Enables showing the revision id.\n\n @param show <code>true</code> to show the revision, <code>false</code> to hide it\n"
4873,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/showRevisionAuthor/boolean," Enables showing the revision author.\n\n @param show <code>true</code> to show the author, <code>false</code> to hide it\n"
4874,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/getRevisionSelectionProvider/," Returns the revision selection provider.\n\n @return the revision selection provider\n"
4875,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/addRevisionListener/IRevisionListener," Adds a revision listener that will be notified when the displayed revision information\n changes.\n\n @param listener the listener to add\n"
4876,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/removeRevisionListener/IRevisionListener," Removes a previously registered revision listener; nothing happens if <code>listener</code>\n was not registered with the receiver.\n\n @param listener the listener to remove\n"
4877,field,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/AUTHOR," Rendering mode that assigns a unique color to each revision author.\n"
4878,field,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/AGE," Rendering mode that assigns colors to revisions by their age.\n <p>\n Currently the most recent revision is red, the oldest is a faint yellow.\n The coloring scheme can change in future releases.\n </p>\n"
4879,field,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/AUTHOR_SHADED_BY_AGE," Rendering mode that assigns unique colors per revision author and\n uses different color intensity depending on the age.\n <p>\n Currently it selects lighter colors for older revisions and more intense\n colors for more recent revisions.\n The coloring scheme can change in future releases.\n </p>\n"
4880,class,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/RenderingMode," Rendering mode type-safe enum.\n"
4881,method,org/eclipse/jface/text/revisions/IRevisionRulerColumnExtension/RenderingMode/name/," Returns the name of the rendering mode.\n @return the name of the rendering mode\n"
4883,method,org/eclipse/jface/text/revisions/RevisionInformation/addRevision/Revision," Adds a revision.\n\n @param revision a revision\n"
4884,method,org/eclipse/jface/text/revisions/RevisionInformation/getRevisions/," Returns the contained revisions.\n\n @return an unmodifiable view of the contained revisions (element type: {@link Revision})\n"
4887,method,org/eclipse/jface/text/revisions/RevisionInformation/getHoverControlCreator/,""
4890,method,org/eclipse/jface/text/revisions/RevisionInformation/setInformationPresenterControlCreator/IInformationControlCreator," Sets the information presenter control creator.\n\n @param creator the control creator\n @since 3.3\n"
4891,method,org/eclipse/jface/text/revisions/RevisionInformation/RevisionInformation/," Creates a new revision information model.\n"
4893,method,org/eclipse/jface/text/revisions/RevisionEvent/getRevisionInformation/," Returns the revision information that has changed.\n\n @return the revision information that has changed\n"
4894,method,org/eclipse/jface/text/revisions/RevisionEvent/RevisionEvent/RevisionInformation," Creates a new event.\n\n @param information the revision info\n"
4897,method,org/eclipse/jface/text/reconciler/MonoReconciler/getReconcilingStrategy/String,""
4898,method,org/eclipse/jface/text/reconciler/MonoReconciler/process/DirtyRegion,""
4899,method,org/eclipse/jface/text/reconciler/MonoReconciler/reconcilerDocumentChanged/IDocument,""
4900,method,org/eclipse/jface/text/reconciler/MonoReconciler/setProgressMonitor/IProgressMonitor,""
4901,method,org/eclipse/jface/text/reconciler/MonoReconciler/initialProcess/,""
4902,method,org/eclipse/jface/text/reconciler/MonoReconciler/MonoReconciler/IReconcilingStrategy;boolean," Creates a new reconciler that uses the same reconciling strategy to\n reconcile its document independent of the type of the document's contents.\n\n @param strategy the reconciling strategy to be used\n @param isIncremental the indication whether strategy is incremental or not\n"
4905,method,org/eclipse/jface/text/reconciler/IReconciler/uninstall/," Removes the reconciler from the text viewer it has\n previously been installed on.\n"
4906,method,org/eclipse/jface/text/reconciler/IReconciler/getReconcilingStrategy/String," Returns the reconciling strategy registered with the reconciler\n for the specified content type.\n\n @param contentType the content type for which to determine the reconciling strategy\n @return the reconciling strategy registered for the given content type, or\n		<code>null</code> if there is no such strategy\n"
4908,method,org/eclipse/jface/text/reconciler/Reconciler/setDocumentPartitioning/String," Sets the document partitioning for this reconciler.\n\n @param partitioning the document partitioning for this reconciler\n @since 3.0\n"
4909,method,org/eclipse/jface/text/reconciler/Reconciler/getDocumentPartitioning/,""
4910,method,org/eclipse/jface/text/reconciler/Reconciler/setReconcilingStrategy/IReconcilingStrategy;String," Registers a given reconciling strategy for a particular content type.\n If there is already a strategy registered for this type, the new strategy\n is registered instead of the old one.\n\n @param strategy the reconciling strategy to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n"
4911,method,org/eclipse/jface/text/reconciler/Reconciler/getReconcilingStrategy/String,""
4912,method,org/eclipse/jface/text/reconciler/Reconciler/process/DirtyRegion," Processes a dirty region. If the dirty region is <code>null</code> the whole\n document is consider being dirty. The dirty region is partitioned by the\n document and each partition is handed over to a reconciling strategy registered\n for the partition's content type.\n\n @param dirtyRegion the dirty region to be processed\n @see AbstractReconciler#process(DirtyRegion)\n"
4913,method,org/eclipse/jface/text/reconciler/Reconciler/reconcilerDocumentChanged/IDocument,""
4914,method,org/eclipse/jface/text/reconciler/Reconciler/setProgressMonitor/IProgressMonitor,""
4915,method,org/eclipse/jface/text/reconciler/Reconciler/initialProcess/,""
4916,method,org/eclipse/jface/text/reconciler/Reconciler/Reconciler/," Creates a new reconciler with the following configuration: it is\n an incremental reconciler with a standard delay of 500 milliseconds. There\n are no predefined reconciling strategies. The partitioning it uses\n is the default partitioning {@link IDocumentExtension3#DEFAULT_PARTITIONING}.\n"
4926,method,org/eclipse/jface/text/reconciler/AbstractReconciler/process/DirtyRegion," Processes a dirty region. If the dirty region is <code>null</code> the whole\n document is consider being dirty. The dirty region is partitioned by the\n document and each partition is handed over to a reconciling strategy registered\n for the partition's content type.\n\n @param dirtyRegion the dirty region to be processed\n"
4929,method,org/eclipse/jface/text/reconciler/AbstractReconciler/setIsIncrementalReconciler/boolean," Tells the reconciler whether any of the available reconciling strategies\n is interested in getting detailed dirty region information or just in the\n fact that the document has been changed. In the second case, the reconciling\n can not incrementally be pursued.\n\n @param isIncremental indicates whether this reconciler will be configured with\n		incremental reconciling strategies\n\n @see DirtyRegion\n @see IReconcilingStrategy\n"
4931,method,org/eclipse/jface/text/reconciler/AbstractReconciler/setProgressMonitor/IProgressMonitor," Sets the progress monitor of this reconciler.\n\n @param monitor the monitor to be used\n"
4932,method,org/eclipse/jface/text/reconciler/AbstractReconciler/isIncrementalReconciler/," Returns whether any of the reconciling strategies is interested in\n detailed dirty region information.\n\n @return whether this reconciler is incremental\n\n @see IReconcilingStrategy\n"
4933,method,org/eclipse/jface/text/reconciler/AbstractReconciler/getDocument/," Returns the input document of the text viewer this reconciler is installed on.\n\n @return the reconciler document\n"
4934,method,org/eclipse/jface/text/reconciler/AbstractReconciler/getTextViewer/," Returns the text viewer this reconciler is installed on.\n\n @return the text viewer this reconciler is installed on\n"
4935,method,org/eclipse/jface/text/reconciler/AbstractReconciler/getProgressMonitor/," Returns the progress monitor of this reconciler.\n\n @return the progress monitor of this reconciler\n"
4936,method,org/eclipse/jface/text/reconciler/AbstractReconciler/install/ITextViewer,""
4937,method,org/eclipse/jface/text/reconciler/AbstractReconciler/uninstall/,""
4944,method,org/eclipse/jface/text/reconciler/AbstractReconciler/AbstractReconciler/," Creates a new reconciler without configuring it.\n"
4946,method,org/eclipse/jface/text/reconciler/IReconcilerExtension/getDocumentPartitioning/," Returns the partitioning this reconciler is using.\n\n @return the partitioning this reconciler is using\n"
4947,class,org/eclipse/jface/text/reconciler/DirtyRegion," A dirty region describes a document range which has been changed.\n"
4948,method,org/eclipse/jface/text/reconciler/DirtyRegion/getOffset/,""
4949,method,org/eclipse/jface/text/reconciler/DirtyRegion/getLength/,""
4950,method,org/eclipse/jface/text/reconciler/DirtyRegion/getType/,""
4951,method,org/eclipse/jface/text/reconciler/DirtyRegion/getText/," Returns the text that changed as part of the region change.\n\n @return the changed text\n"
4952,method,org/eclipse/jface/text/reconciler/DirtyRegion/DirtyRegion/int;int;String;String," Creates a new dirty region.\n\n @param offset the offset within the document where the change occurred\n @param length the length of the text within the document that changed\n @param type the type of change that this region represents: {@link #INSERT} {@link #REMOVE}\n @param text the substitution text\n"
4953,field,org/eclipse/jface/text/reconciler/DirtyRegion/INSERT," Identifies an insert operation.\n"
4954,field,org/eclipse/jface/text/reconciler/DirtyRegion/REMOVE," Identifies a remove operation.\n"
4956,method,org/eclipse/jface/text/reconciler/IReconcileStep/isLastStep/," Returns whether this is the last reconcile step or not.\n\n @return <code>true</code> iff this is the last reconcile step\n"
4957,method,org/eclipse/jface/text/reconciler/IReconcileStep/isFirstStep/," Returns whether this is the first reconcile step or not.\n\n @return <code>true</code> iff this is the first reconcile step\n"
4961,method,org/eclipse/jface/text/reconciler/IReconcileStep/setProgressMonitor/IProgressMonitor," Sets the progress monitor for this reconcile step.\n\n @param monitor the progress monitor to be used\n"
4962,method,org/eclipse/jface/text/reconciler/IReconcileStep/getProgressMonitor/," Returns the progress monitor used to report progress.\n\n @return a progress monitor or <code>null</code> if no progress monitor is available\n"
4964,class,org/eclipse/jface/text/reconciler/AbstractReconcileStep," Abstract implementation of a reconcile step.\n\n @since 3.0\n"
4965,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/isLastStep/,""
4966,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/isFirstStep/,""
4967,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/setProgressMonitor/IProgressMonitor,""
4968,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/getProgressMonitor/,""
4969,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/reconcile/IRegion,""
4970,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/reconcile/DirtyRegion;IRegion,""
4972,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/convertToInputModel/IReconcileResult[]," Adapts the given an array with reconcile results to\n this step's input model and returns it.\n\n @param inputResults an array with reconcile results\n @return an array with the reconcile results adapted to the input model\n"
4973,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/isCanceled/,""
4974,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/setPreviousStep/IReconcileStep,""
4975,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/setInputModel/IReconcilableModel,""
4976,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/getInputModel/," Returns the reconcilable input model.\n\n @return the reconcilable input model.\n"
4977,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/getModel/," Returns the reconcilable model.\n\n @return the reconcilable model\n"
4978,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/AbstractReconcileStep/IReconcileStep," Creates an intermediate reconcile step which adds\n the given step to the pipe.\n\n @param step the reconcile step\n"
4979,method,org/eclipse/jface/text/reconciler/AbstractReconcileStep/AbstractReconcileStep/," Creates the last reconcile step of the pipe.\n"
4980,field,org/eclipse/jface/text/reconciler/AbstractReconcileStep/fInputModel,""
4982,method,org/eclipse/jface/text/link/ProposalPosition/equals/Object,""
4984,method,org/eclipse/jface/text/link/ProposalPosition/hashCode/,""
4985,method,org/eclipse/jface/text/link/ProposalPosition/ProposalPosition/IDocument;int;int;int;ICompletionProposal[]," Creates a new instance.\n\n @param document the document\n @param offset the offset of the position\n @param length the length of the position\n @param sequence the iteration sequence rank\n @param proposals the proposals to be shown when entering this position\n"
4986,method,org/eclipse/jface/text/link/ProposalPosition/ProposalPosition/IDocument;int;int;ICompletionProposal[]," Creates a new instance, with no sequence number.\n\n @param document the document\n @param offset the offset of the position\n @param length the length of the position\n @param proposals the proposals to be shown when entering this position\n"
4988,method,org/eclipse/jface/text/link/LinkedModeUI/enter/," Starts this UI on the first position.\n"
4989,method,org/eclipse/jface/text/link/LinkedModeUI/setExitPolicy/IExitPolicy," Sets an <code>IExitPolicy</code> to customize the exit behavior of\n this linked mode UI.\n\n @param policy the exit policy to use.\n"
4993,method,org/eclipse/jface/text/link/LinkedModeUI/getSelectedRegion/," Returns the currently selected region or <code>null</code>.\n\n @return the currently selected region or <code>null</code>\n"
4997,method,org/eclipse/jface/text/link/LinkedModeUI/enableColoredLabels/boolean," Enables the support for colored labels in the proposal popup.\n <p>Completion proposals can implement {@link ICompletionProposalExtension6}\n to provide colored proposal labels.</p>\n\n @param isEnabled if <code>true</code> the support for colored labels is enabled in the proposal popup\n @since 3.4\n"
5010,method,org/eclipse/jface/text/link/LinkedModeUI/LinkedModeUITarget/LinkedModeUI/LinkedModeUITarget/,""
5012,method,org/eclipse/jface/text/link/LinkedModeUI/ExitFlags/LinkedModeUI/ExitFlags/int;boolean," Creates a new instance.\n\n @param flags the exit flags\n @param doit the doit flag for the verify event\n"
5013,field,org/eclipse/jface/text/link/LinkedModeUI/ExitFlags/flags,"The flags to return in the <code>leave</code> method. "
5014,field,org/eclipse/jface/text/link/LinkedModeUI/ExitFlags/doit,"The doit flag of the checked <code>VerifyKeyEvent</code>. "
5018,field,org/eclipse/jface/text/contentassist/ContentAssistEvent/assistant," The content assistant computing proposals.\n"
5019,field,org/eclipse/jface/text/contentassist/ContentAssistEvent/processor," The processor for the current partition.\n"
5025,method,org/eclipse/jface/text/contentassist/ICompletionProposalExtension/isValidFor/IDocument;int," Returns whether this completion proposal is valid for the given\n position in the given document.\n\n @param document the document for which the proposal is tested\n @param offset the offset for which the proposal is tested\n @return <code>true</code> iff valid\n"
5026,method,org/eclipse/jface/text/contentassist/ICompletionProposalExtension/getTriggerCharacters/," Returns the characters which trigger the application of this completion proposal.\n\n @return the completion characters for this completion proposal or <code>null</code>\n		if no completion other than the new line character is possible\n"
5027,method,org/eclipse/jface/text/contentassist/ICompletionProposalExtension/getContextInformationPosition/," Returns the position to which the computed context information refers to or\n <code>-1</code> if no context information can be provided by this completion proposal.\n\n @return the position to which the context information refers to or <code>-1</code> for no information\n"
5029,method,org/eclipse/jface/text/contentassist/ICompletionProposalExtension3/getInformationControlCreator/," Returns the information control creator of this completion proposal.\n\n @return the information control creator, or <code>null</code> if no custom control creator is available\n"
5031,method,org/eclipse/jface/text/contentassist/ICompletionProposalExtension3/getPrefixCompletionStart/IDocument;int," Returns the document offset at which the receiver would insert its\n proposal.\n\n @param document the document that the receiver applies to\n @param completionOffset the offset into <code>document</code> where the\n        completion takes place\n @return the offset at which the proposal would insert its proposal\n"
5033,method,org/eclipse/jface/text/contentassist/IContextInformationExtension/getContextInformationPosition/," Returns the start offset of the range for which this context\n information is valid or <code>-1</code> if unknown.\n\n @return the start offset of the range for which this context\n         information is valid\n"
5035,method,org/eclipse/jface/text/contentassist/ContentAssistant/setDocumentPartitioning/String," Sets the document partitioning this content assistant is using.\n\n @param partitioning the document partitioning for this content assistant\n @since 3.0\n"
5036,method,org/eclipse/jface/text/contentassist/ContentAssistant/getDocumentPartitioning/,""
5037,method,org/eclipse/jface/text/contentassist/ContentAssistant/setContentAssistProcessor/IContentAssistProcessor;String," Registers a given content assist processor for a particular content type. If there is already\n a processor registered for this type, the new processor is registered instead of the old one.\n\n @param processor the content assist processor to register, or <code>null</code> to remove\n        an existing one\n @param contentType the content type under which to register\n"
5038,method,org/eclipse/jface/text/contentassist/ContentAssistant/getContentAssistProcessor/String,""
5039,method,org/eclipse/jface/text/contentassist/ContentAssistant/enableAutoActivation/boolean," Enables the content assistant's auto activation mode.\n\n @param enabled indicates whether auto activation is enabled or not\n"
5046,method,org/eclipse/jface/text/contentassist/ContentAssistant/setContextInformationPopupBackground/Color," Sets the context information popup's background color.\n\n @param background the background color\n"
5047,method,org/eclipse/jface/text/contentassist/ContentAssistant/setContextInformationPopupForeground/Color," Sets the context information popup's foreground color.\n\n @param foreground the foreground color\n @since 2.0\n"
5050,method,org/eclipse/jface/text/contentassist/ContentAssistant/setContextSelectorBackground/Color," Sets the context selector's background color.\n\n @param background the background color\n @since 2.0\n"
5051,method,org/eclipse/jface/text/contentassist/ContentAssistant/setContextSelectorForeground/Color," Sets the context selector's foreground color.\n\n @param foreground the foreground color\n @since 2.0\n"
5053,method,org/eclipse/jface/text/contentassist/ContentAssistant/install/IContentAssistSubjectControl,""
5054,method,org/eclipse/jface/text/contentassist/ContentAssistant/install/ITextViewer,""
5055,method,org/eclipse/jface/text/contentassist/ContentAssistant/install/,""
5056,method,org/eclipse/jface/text/contentassist/ContentAssistant/uninstall/,""
5057,method,org/eclipse/jface/text/contentassist/ContentAssistant/showPossibleCompletions/,""
5058,method,org/eclipse/jface/text/contentassist/ContentAssistant/completePrefix/,""
5060,method,org/eclipse/jface/text/contentassist/ContentAssistant/showContextInformation/,""
5062,method,org/eclipse/jface/text/contentassist/ContentAssistant/requestWidgetToken/IWidgetTokenOwner,""
5063,method,org/eclipse/jface/text/contentassist/ContentAssistant/requestWidgetToken/IWidgetTokenOwner;int,""
5064,method,org/eclipse/jface/text/contentassist/ContentAssistant/setFocus/IWidgetTokenOwner,""
5065,method,org/eclipse/jface/text/contentassist/ContentAssistant/hide/," Hides any open pop-ups.\n\n @since 3.0\n"
5067,method,org/eclipse/jface/text/contentassist/ContentAssistant/storeCompletionProposalPopupSize/," Stores the content assist pop-up's size.\n"
5068,method,org/eclipse/jface/text/contentassist/ContentAssistant/restoreCompletionProposalPopupSize/," Restores the content assist pop-up's size.\n\n @return the stored size\n @since 3.0\n"
5069,method,org/eclipse/jface/text/contentassist/ContentAssistant/enablePrefixCompletion/boolean," Sets the prefix completion property. If enabled, content assist delegates completion to\n prefix completion.\n\n @param enabled <code>true</code> to enable prefix completion, <code>false</code> to\n        disable\n"
5070,method,org/eclipse/jface/text/contentassist/ContentAssistant/hasProposalPopupFocus/," Returns whether the content assistant proposal popup has the focus.\n\n @return <code>true</code> if the proposal popup has the focus\n @since 3.0\n"
5071,method,org/eclipse/jface/text/contentassist/ContentAssistant/addCompletionListener/ICompletionListener,""
5072,method,org/eclipse/jface/text/contentassist/ContentAssistant/removeCompletionListener/ICompletionListener,""
5073,method,org/eclipse/jface/text/contentassist/ContentAssistant/setRepeatedInvocationMode/boolean,""
5074,method,org/eclipse/jface/text/contentassist/ContentAssistant/setShowEmptyList/boolean,""
5075,method,org/eclipse/jface/text/contentassist/ContentAssistant/setStatusLineVisible/boolean,""
5076,method,org/eclipse/jface/text/contentassist/ContentAssistant/setStatusMessage/String,""
5077,method,org/eclipse/jface/text/contentassist/ContentAssistant/setEmptyMessage/String,""
5078,method,org/eclipse/jface/text/contentassist/ContentAssistant/setRepeatedInvocationTrigger/KeySequence,""
5079,method,org/eclipse/jface/text/contentassist/ContentAssistant/isProposalPopupActive/," Returns whether proposal popup is active.\n\n @return <code>true</code> if the proposal popup is active, <code>false</code> otherwise\n @since 3.4\n"
5080,method,org/eclipse/jface/text/contentassist/ContentAssistant/isContextInfoPopupActive/," Returns whether the context information popup is active.\n\n @return <code>true</code> if the context information popup is active, <code>false</code> otherwise\n @since 3.4\n"
5082,method,org/eclipse/jface/text/contentassist/ContentAssistant/registerHandler/String;IHandler," Registers the given handler under the given command identifier.\n\n @param commandId the command identifier\n @param handler the handler\n @since 3.4\n"
5085,field,org/eclipse/jface/text/contentassist/ContentAssistant/SELECT_NEXT_PROPOSAL_COMMAND_ID," Content assist command identifier for 'select next proposal'.\n\n @since 3.4\n"
5086,field,org/eclipse/jface/text/contentassist/ContentAssistant/SELECT_PREVIOUS_PROPOSAL_COMMAND_ID," Content assist command identifier for 'select previous proposal'.\n\n @since 3.4\n"
5087,field,org/eclipse/jface/text/contentassist/ContentAssistant/STORE_SIZE_X," Dialog store constants.\n\n @since 3.0\n"
5088,field,org/eclipse/jface/text/contentassist/ContentAssistant/STORE_SIZE_Y,""
5089,field,org/eclipse/jface/text/contentassist/ContentAssistant/WIDGET_PRIORITY," The popup priority: &gt; linked position proposals and hover pop-ups. Default value:\n <code>20</code>;\n\n @since 3.0\n"
5091,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/start/int,""
5092,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/run/,""
5093,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/reset/int,""
5094,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/stop/,""
5095,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/keyPressed/KeyEvent,""
5096,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/verifyKey/VerifyEvent,""
5097,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/showAssist/int,""
5098,method,org/eclipse/jface/text/contentassist/ContentAssistant/AutoAssistListener/ContentAssistant/AutoAssistListener/,""
5101,method,org/eclipse/jface/text/contentassist/IContentAssistantExtension2/removeCompletionListener/ICompletionListener," Removes a completion listener.\n\n @param listener the listener to remove\n"
5103,method,org/eclipse/jface/text/contentassist/IContentAssistantExtension2/setShowEmptyList/boolean," Enables displaying an empty completion proposal pop-up. The default is not to show an empty\n list.\n\n @param showEmpty <code>true</code> to show empty lists\n"
5105,method,org/eclipse/jface/text/contentassist/IContentAssistantExtension2/setStatusMessage/String," Sets the caption message displayed at the bottom of the completion proposal popup.\n\n @param message the message\n"
5106,method,org/eclipse/jface/text/contentassist/IContentAssistantExtension2/setEmptyMessage/String," Sets the text to be shown if no proposals are available and\n {@link #setShowEmptyList(boolean) empty lists} are displayed.\n\n @param message the text for the empty list\n"
5117,method,org/eclipse/jface/text/contentassist/ICompletionProposal/apply/IDocument," Inserts the proposed completion into the given document.\n\n @param document the document into which to insert the proposed completion\n"
5120,method,org/eclipse/jface/text/contentassist/ICompletionProposal/getDisplayString/," Returns the string to be displayed in the list of completion proposals.\n\n @return the string to be displayed\n \n @see ICompletionProposalExtension6#getStyledDisplayString()\n"
5122,method,org/eclipse/jface/text/contentassist/ICompletionProposal/getContextInformation/," Returns optional context information associated with this proposal.\n The context information will automatically be shown if the proposal\n has been applied.\n\n @return the context information for this proposal or <code>null</code>\n"
5124,method,org/eclipse/jface/text/contentassist/IContextInformation/getContextDisplayString/," Returns the string to be displayed in the list of contexts.\n This method is used to supply a unique presentation for\n situations where the context is ambiguous. These strings are\n used to allow the user to select the specific context.\n\n @return the string to be displayed for the context\n"
5126,method,org/eclipse/jface/text/contentassist/IContextInformation/getInformationDisplayString/," Returns the string to be displayed in the tool tip like information popup.\n\n @return the string to be displayed\n"
5143,method,org/eclipse/jface/text/contentassist/IContextInformationValidator/isContextInformationValid/int," Returns whether the information this validator is installed on is still valid\n at the given document position.\n\n @param offset the current offset within the document\n @return <code>true</code> if the information also valid at the given document position\n"
5146,class,org/eclipse/jface/text/contentassist/ContextInformationValidator," A default implementation of the <code>IContextInfomationValidator</code> interface.\n This implementation determines whether the information is valid by asking the content\n assist processor for all  context information objects for the current position. If the\n currently displayed information is in the result set, the context information is\n considered valid.\n"
5147,method,org/eclipse/jface/text/contentassist/ContextInformationValidator/install/IContextInformation;ITextViewer;int,""
5148,method,org/eclipse/jface/text/contentassist/ContextInformationValidator/isContextInformationValid/int,""
5149,method,org/eclipse/jface/text/contentassist/ContextInformationValidator/ContextInformationValidator/IContentAssistProcessor," Creates a new context information validator which is ready to be installed on\n a particular context information.\n\n @param processor the processor to be used for validation\n"
5152,method,org/eclipse/jface/text/contentassist/IContextInformationPresenter/updatePresentation/int;TextPresentation," Updates the given presentation of the given context information\n at the given document position. Returns whether update changed the\n presentation.\n\n @param offset the current offset within the document\n @param presentation the presentation to be updated\n @return <code>true</code> if the given presentation has been changed\n"
5153,class,org/eclipse/jface/text/contentassist/ContextInformation," A default implementation of the <code>IContextInformation</code> interface.\n"
5154,method,org/eclipse/jface/text/contentassist/ContextInformation/equals/Object,""
5155,method,org/eclipse/jface/text/contentassist/ContextInformation/hashCode/,""
5156,method,org/eclipse/jface/text/contentassist/ContextInformation/getInformationDisplayString/,""
5157,method,org/eclipse/jface/text/contentassist/ContextInformation/getImage/,""
5158,method,org/eclipse/jface/text/contentassist/ContextInformation/getContextDisplayString/,""
5159,method,org/eclipse/jface/text/contentassist/ContextInformation/ContextInformation/String;String," Creates a new context information without an image.\n\n @param contextDisplayString the string to be used when presenting the context\n @param informationDisplayString the string to be displayed when presenting the context information\n"
5162,method,org/eclipse/jface/text/contentassist/IContentAssistant/install/ITextViewer," Installs content assist support on the given text viewer.\n\n @param textViewer the text viewer on which content assist will work\n"
5163,method,org/eclipse/jface/text/contentassist/IContentAssistant/uninstall/," Uninstalls content assist support from the text viewer it has\n previously be installed on.\n"
5166,method,org/eclipse/jface/text/contentassist/IContentAssistant/getContentAssistProcessor/String," Returns the content assist processor to be used for the given content type.\n\n @param contentType the type of the content for which this\n        content assistant is to be requested\n @return an instance content assist processor or\n         <code>null</code> if none exists for the specified content type\n"
5167,field,org/eclipse/jface/text/contentassist/IContentAssistant/PROPOSAL_OVERLAY,"The context info list will overlay the list of completion proposals. "
5169,field,org/eclipse/jface/text/contentassist/IContentAssistant/PROPOSAL_STACKED,"The context info list will be presented without hiding or overlapping the completion proposal list. "
5170,field,org/eclipse/jface/text/contentassist/IContentAssistant/CONTEXT_INFO_ABOVE,"Context info will be shown above the location it has been requested for without hiding the location. "
5171,field,org/eclipse/jface/text/contentassist/IContentAssistant/CONTEXT_INFO_BELOW,"Context info will be shown below the location it has been requested for without hiding the location. "
5173,method,org/eclipse/jface/text/contentassist/IContentAssistantExtension/getDocumentPartitioning/," Returns the document partitioning this content assistant is using.\n\n @return the document partitioning this content assistant is using\n"
5177,class,org/eclipse/jface/text/contentassist/CompletionProposal," The standard implementation of the <code>ICompletionProposal</code> interface.\n"
5178,method,org/eclipse/jface/text/contentassist/CompletionProposal/apply/IDocument,""
5179,method,org/eclipse/jface/text/contentassist/CompletionProposal/getSelection/IDocument,""
5180,method,org/eclipse/jface/text/contentassist/CompletionProposal/getContextInformation/,""
5181,method,org/eclipse/jface/text/contentassist/CompletionProposal/getImage/,""
5182,method,org/eclipse/jface/text/contentassist/CompletionProposal/getDisplayString/,""
5183,method,org/eclipse/jface/text/contentassist/CompletionProposal/getAdditionalProposalInfo/,""
5184,method,org/eclipse/jface/text/contentassist/CompletionProposal/CompletionProposal/String;int;int;int," Creates a new completion proposal based on the provided information. The replacement string is\n considered being the display string too. All remaining fields are set to <code>null</code>.\n\n @param replacementString the actual string to be inserted into the document\n @param replacementOffset the offset of the text to be replaced\n @param replacementLength the length of the text to be replaced\n @param cursorPosition the position of the cursor following the insert relative to replacementOffset\n"
5187,method,org/eclipse/jface/text/templates/TemplateProposal/setInformationControlCreator/IInformationControlCreator," Sets the information control creator for this completion proposal.\n\n @param informationControlCreator the information control creator\n @since 3.1\n"
5188,method,org/eclipse/jface/text/templates/TemplateProposal/getTemplate/," Returns the template of this proposal.\n\n @return the template of this proposal\n @since 3.1\n"
5189,method,org/eclipse/jface/text/templates/TemplateProposal/getContext/," Returns the context in which the template was requested.\n\n @return the context in which the template was requested\n @since 3.1\n"
5192,method,org/eclipse/jface/text/templates/TemplateProposal/getReplaceOffset/," Returns the offset of the range in the document that will be replaced by\n applying this template.\n\n @return the offset of the range in the document that will be replaced by\n         applying this template\n @since 3.1\n"
5193,method,org/eclipse/jface/text/templates/TemplateProposal/getReplaceEndOffset/," Returns the end offset of the range in the document that will be replaced\n by applying this template.\n\n @return the end offset of the range in the document that will be replaced\n         by applying this template\n @since 3.1\n"
5194,method,org/eclipse/jface/text/templates/TemplateProposal/getSelection/IDocument,""
5195,method,org/eclipse/jface/text/templates/TemplateProposal/getAdditionalProposalInfo/,""
5196,method,org/eclipse/jface/text/templates/TemplateProposal/getDisplayString/,""
5197,method,org/eclipse/jface/text/templates/TemplateProposal/getImage/,""
5198,method,org/eclipse/jface/text/templates/TemplateProposal/getContextInformation/,""
5199,method,org/eclipse/jface/text/templates/TemplateProposal/getRelevance/," Returns the relevance.\n\n @return the relevance\n"
5200,method,org/eclipse/jface/text/templates/TemplateProposal/getInformationControlCreator/,""
5201,method,org/eclipse/jface/text/templates/TemplateProposal/selected/ITextViewer;boolean,""
5202,method,org/eclipse/jface/text/templates/TemplateProposal/unselected/ITextViewer,""
5203,method,org/eclipse/jface/text/templates/TemplateProposal/validate/IDocument;int;DocumentEvent,""
5204,method,org/eclipse/jface/text/templates/TemplateProposal/getPrefixCompletionText/IDocument;int,""
5205,method,org/eclipse/jface/text/templates/TemplateProposal/getPrefixCompletionStart/IDocument;int,""
5207,method,org/eclipse/jface/text/templates/TemplateProposal/isValidFor/IDocument;int,""
5208,method,org/eclipse/jface/text/templates/TemplateProposal/getTriggerCharacters/,""
5209,method,org/eclipse/jface/text/templates/TemplateProposal/getContextInformationPosition/,""
5210,method,org/eclipse/jface/text/templates/TemplateProposal/TemplateProposal/Template;TemplateContext;IRegion;Image," Creates a template proposal with a template and its context.\n\n @param template  the template\n @param context   the context in which the template was requested.\n @param region	the region this proposal is applied to\n @param image     the icon of the proposal.\n"
5211,method,org/eclipse/jface/text/templates/TemplateProposal/TemplateProposal/Template;TemplateContext;IRegion;Image;int," Creates a template proposal with a template and its context.\n\n @param template  the template\n @param context   the context in which the template was requested.\n @param image     the icon of the proposal.\n @param region	the region this proposal is applied to\n @param relevance the relevance of the proposal\n"
5212,class,org/eclipse/jface/text/templates/ContextTypeRegistry," A registry for context types. Editor implementors will usually instantiate a\n registry and configure the context types available in their editor.\n <p>\n In order to pick up templates contributed using the <code>org.eclipse.ui.editors.templates</code>\n extension point, use a <code>ContributionContextTypeRegistry</code>.\n </p>\n\n @since 3.0\n"
5213,method,org/eclipse/jface/text/templates/ContextTypeRegistry/addContextType/TemplateContextType," Adds a context type to the registry. If there already is a context type\n with the same ID registered, it is replaced.\n\n @param contextType the context type to add\n"
5214,method,org/eclipse/jface/text/templates/ContextTypeRegistry/getContextType/String," Returns the context type if the id is valid, <code>null</code> otherwise.\n\n @param id the id of the context type to retrieve\n @return the context type if <code>name</code> is valid, <code>null</code> otherwise\n"
5215,method,org/eclipse/jface/text/templates/ContextTypeRegistry/contextTypes/," Returns an iterator over all registered context types.\n\n @return an iterator over all registered context types\n"
5216,method,org/eclipse/jface/text/templates/ContextTypeRegistry/ContextTypeRegistry/,""
5218,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/computeCompletionProposals/ITextViewer;int,""
5221,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getTemplates/String," Returns the templates valid for the context type specified by <code>contextTypeId</code>.\n\n @param contextTypeId the context type id\n @return the templates valid for this context type id\n"
5223,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getContextType/ITextViewer;IRegion," Returns the context type that can handle template insertion at the given region\n in the viewer's document.\n\n @param viewer the text viewer\n @param region the region into the document displayed by viewer\n @return the context type that can handle template expansion for the given location, or <code>null</code> if none exists\n"
5225,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/extractPrefix/ITextViewer;int," Heuristically extracts the prefix used for determining template relevance\n from the viewer's document. The default implementation returns the String from\n offset backwards that forms a java identifier.\n\n @param viewer the viewer\n @param offset offset into document\n @return the prefix to consider\n @see #getRelevance(Template, String)\n"
5227,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/computeContextInformation/ITextViewer;int,""
5228,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getCompletionProposalAutoActivationCharacters/,""
5229,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getContextInformationAutoActivationCharacters/,""
5230,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getErrorMessage/,""
5231,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/getContextInformationValidator/,""
5232,method,org/eclipse/jface/text/templates/TemplateCompletionProcessor/TemplateCompletionProcessor/,""
5238,method,org/eclipse/jface/text/templates/persistence/TemplateReaderWriter/save/TemplatePersistenceData[];OutputStream," Saves the templates as XML, encoded as UTF-8 onto the given byte stream.\n\n @param templates the templates to save\n @param stream the byte output to write the templates to in XML\n @throws IOException if writing the templates fails\n"
5239,method,org/eclipse/jface/text/templates/persistence/TemplateReaderWriter/save/TemplatePersistenceData[];Writer," Saves the templates as XML.\n\n @param templates the templates to save\n @param writer the writer to write the templates to in XML\n @throws IOException if writing the templates fails\n"
5240,method,org/eclipse/jface/text/templates/persistence/TemplateReaderWriter/TemplateReaderWriter/," Create a new instance.\n"
5242,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/getId/," Returns the id of this template store, or <code>null</code> if there is none.\n\n @return the id of this template store\n"
5244,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/setDeleted/boolean," Sets the deletion state of the stored template.\n\n @param isDeleted the deletion state of the stored template\n"
5245,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/getTemplate/," Returns the template encapsulated by the receiver.\n\n @return the template encapsulated by the receiver\n"
5246,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/setTemplate/Template," Sets the template encapsulated by the receiver.\n\n @param template the new template\n"
5247,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/isCustom/," Returns whether the receiver represents a custom template, i.e. is either\n a user-added template or a contributed template that has been modified.\n\n @return <code>true</code> if the contained template is a custom\n         template and cannot be reconstructed from the contributed\n         templates\n"
5248,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/isModified/," Returns whether the receiver represents a modified template, i.e. a\n contributed template that has been changed.\n\n @return <code>true</code> if the contained template is contributed but has been modified, <code>false</code> otherwise\n"
5249,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/isUserAdded/," Returns <code>true</code> if the contained template was added by a\n user, i.e. does not reference a contributed template.\n\n @return <code>true</code> if the contained template was added by a user, <code>false</code> otherwise\n"
5250,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/revert/," Reverts the template to its original setting.\n"
5251,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/isEnabled/," Returns the enablement state of the contained template.\n\n @return the enablement state of the contained template\n"
5252,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/setEnabled/boolean," Sets the enablement state of the contained template.\n\n @param isEnabled the new enablement state of the contained template\n"
5253,method,org/eclipse/jface/text/templates/persistence/TemplatePersistenceData/TemplatePersistenceData/Template;boolean," Creates a new, user-added instance that is not linked to a contributed\n template.\n\n @param template the template which is stored by the new instance\n @param enabled whether the template is enabled\n"
5256,method,org/eclipse/jface/text/templates/persistence/TemplateStore/load/," Loads the templates from contributions and preferences.\n\n @throws IOException if loading fails.\n"
5259,method,org/eclipse/jface/text/templates/persistence/TemplateStore/handleException/IOException," Handles an {@link IOException} thrown during reloading the preferences due to a preference\n store update. The default is to write to stderr.\n\n @param x the exception\n @since 3.2\n"
5262,method,org/eclipse/jface/text/templates/persistence/TemplateStore/save/," Saves the templates to the preferences.\n\n @throws IOException if the templates cannot be written\n"
5263,method,org/eclipse/jface/text/templates/persistence/TemplateStore/add/TemplatePersistenceData," Adds a template encapsulated in its persistent form.\n\n @param data the template to add\n"
5264,method,org/eclipse/jface/text/templates/persistence/TemplateStore/delete/TemplatePersistenceData," Removes a template from the store.\n\n @param data the template to remove\n"
5265,method,org/eclipse/jface/text/templates/persistence/TemplateStore/restoreDeleted/," Restores all contributed templates that have been deleted.\n"
5268,method,org/eclipse/jface/text/templates/persistence/TemplateStore/getTemplates/," Returns all enabled templates.\n\n @return all enabled templates\n"
5270,method,org/eclipse/jface/text/templates/persistence/TemplateStore/findTemplate/String," Returns the first enabled template that matches the name.\n\n @param name the name of the template searched for\n @return the first enabled template that matches both name and context type id, or <code>null</code> if none is found\n"
5271,method,org/eclipse/jface/text/templates/persistence/TemplateStore/findTemplate/String;String," Returns the first enabled template that matches both name and context type id.\n\n @param name the name of the template searched for\n @param contextTypeId the context type id to clip unwanted templates, or <code>null</code> if any context type is OK\n @return the first enabled template that matches both name and context type id, or <code>null</code> if none is found\n"
5272,method,org/eclipse/jface/text/templates/persistence/TemplateStore/findTemplateById/String," Returns the first enabled template that matches the given template id.\n\n @param id the id of the template searched for\n @return the first enabled template that matches id, or <code>null</code> if none is found\n @since 3.1\n"
5273,method,org/eclipse/jface/text/templates/persistence/TemplateStore/getTemplateData/boolean," Returns all template data.\n\n @param includeDeleted whether to include deleted data\n @return all template data, whether enabled or not\n"
5274,method,org/eclipse/jface/text/templates/persistence/TemplateStore/getTemplateData/String," Returns the template data of the template with id <code>id</code> or\n <code>null</code> if no such template can be found.\n\n @param id the id of the template data\n @return the template data of the template with id <code>id</code> or <code>null</code>\n @since 3.1\n"
5275,method,org/eclipse/jface/text/templates/persistence/TemplateStore/getRegistry/," Returns the registry.\n\n @return Returns the registry\n"
5276,method,org/eclipse/jface/text/templates/persistence/TemplateStore/TemplateStore/IPreferenceStore;String," Creates a new template store.\n\n @param store the preference store in which to store custom templates\n        under <code>key</code>\n @param key the key into <code>store</code> where to store custom\n        templates\n"
5279,method,org/eclipse/jface/text/information/IInformationPresenterExtension/getDocumentPartitioning/," Returns the document partitioning this information presenter is using.\n\n @return the document partitioning this information presenter is using\n"
5284,method,org/eclipse/jface/text/information/InformationPresenter/setDocumentPartitioning/String," Sets the document partitioning to be used by this information presenter.\n\n @param partitioning the document partitioning to be used by this information presenter\n @since 3.0\n"
5285,method,org/eclipse/jface/text/information/InformationPresenter/getDocumentPartitioning/,""
5286,method,org/eclipse/jface/text/information/InformationPresenter/setInformationProvider/IInformationProvider;String," Registers a given information provider for a particular content type.\n If there is already a provider registered for this type, the new provider\n is registered instead of the old one.\n\n @param provider the information provider to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n"
5287,method,org/eclipse/jface/text/information/InformationPresenter/getInformationProvider/String,""
5289,method,org/eclipse/jface/text/information/InformationPresenter/computeInformation/,""
5290,method,org/eclipse/jface/text/information/InformationPresenter/install/ITextViewer,""
5291,method,org/eclipse/jface/text/information/InformationPresenter/uninstall/,""
5292,method,org/eclipse/jface/text/information/InformationPresenter/showInformationControl/Rectangle,""
5293,method,org/eclipse/jface/text/information/InformationPresenter/hideInformationControl/,""
5294,method,org/eclipse/jface/text/information/InformationPresenter/handleInformationControlDisposed/,""
5295,method,org/eclipse/jface/text/information/InformationPresenter/requestWidgetToken/IWidgetTokenOwner,""
5296,method,org/eclipse/jface/text/information/InformationPresenter/requestWidgetToken/IWidgetTokenOwner;int,""
5297,method,org/eclipse/jface/text/information/InformationPresenter/setFocus/IWidgetTokenOwner,""
5298,method,org/eclipse/jface/text/information/InformationPresenter/InformationPresenter/IInformationControlCreator," Creates a new information presenter that uses the given information control creator.\n The presenter is not installed on any text viewer yet. By default, an information\n control closer is set that closes the information control in the event of key strokes,\n resizing, moves, focus changes, mouse clicks, and disposal - all of those applied to\n the information control's parent control. Also, the setup ensures that the information\n control when made visible will request the focus. By default, the default document\n partitioning {@link IDocumentExtension3#DEFAULT_PARTITIONING} is used.\n\n @param creator the information control creator to be used\n"
5299,field,org/eclipse/jface/text/information/InformationPresenter/WIDGET_PRIORITY," Priority of the info controls managed by this information presenter.\n Default value: <code>5</code>.\n\n @since 3.0\n"
5301,method,org/eclipse/jface/text/information/IInformationProviderExtension2/getInformationPresenterControlCreator/," Returns the information control creator of this information provider.\n\n @return the information control creator or <code>null</code> if none is available\n"
5306,method,org/eclipse/jface/text/information/IInformationPresenter/uninstall/," Removes the information presenter from the text viewer it has previously been\n installed on.\n"
5307,method,org/eclipse/jface/text/information/IInformationPresenter/showInformation/," Shows information related to the cursor position of the text viewer\n this information presenter is installed on.\n"
5308,method,org/eclipse/jface/text/information/IInformationPresenter/getInformationProvider/String," Returns the information provider to be used for the given content type.\n\n @param contentType the type of the content for which information will be requested\n @return an information provider or <code>null</code> if none exists for the specified content type\n"
5310,method,org/eclipse/jface/text/rules/EndOfLineRule/EndOfLineRule/String;IToken," Creates a rule for the given starting sequence\n which, if detected, will return the specified token.\n\n @param startSequence the pattern's start sequence\n @param token the token to be returned on success\n"
5311,method,org/eclipse/jface/text/rules/EndOfLineRule/EndOfLineRule/String;IToken;char," Creates a rule for the given starting sequence\n which, if detected, will return the specified token.\n Any character which follows the given escape character\n will be ignored.\n\n @param startSequence the pattern's start sequence\n @param token the token to be returned on success\n @param escapeCharacter the escape character\n"
5314,method,org/eclipse/jface/text/rules/RuleBasedScanner/setRules/IRule[]," Configures the scanner with the given sequence of rules.\n\n @param rules the sequence of rules controlling this scanner\n"
5315,method,org/eclipse/jface/text/rules/RuleBasedScanner/setDefaultReturnToken/IToken," Configures the scanner's default return token. This is the token\n which is returned when none of the rules fired and EOF has not been\n reached.\n\n @param defaultReturnToken the default return token\n @since 2.0\n"
5316,method,org/eclipse/jface/text/rules/RuleBasedScanner/setRange/IDocument;int;int,""
5317,method,org/eclipse/jface/text/rules/RuleBasedScanner/getTokenOffset/,""
5318,method,org/eclipse/jface/text/rules/RuleBasedScanner/getTokenLength/,""
5319,method,org/eclipse/jface/text/rules/RuleBasedScanner/getColumn/,""
5320,method,org/eclipse/jface/text/rules/RuleBasedScanner/getLegalLineDelimiters/,""
5321,method,org/eclipse/jface/text/rules/RuleBasedScanner/nextToken/,""
5322,method,org/eclipse/jface/text/rules/RuleBasedScanner/read/,""
5323,method,org/eclipse/jface/text/rules/RuleBasedScanner/unread/,""
5324,method,org/eclipse/jface/text/rules/RuleBasedScanner/RuleBasedScanner/," Creates a new rule based scanner which does not have any rule.\n"
5325,field,org/eclipse/jface/text/rules/RuleBasedScanner/fRules,"The list of rules of this scanner "
5326,field,org/eclipse/jface/text/rules/RuleBasedScanner/fDefaultReturnToken,"The token to be returned by default if no rule fires "
5327,field,org/eclipse/jface/text/rules/RuleBasedScanner/fDocument,"The document to be scanned "
5328,field,org/eclipse/jface/text/rules/RuleBasedScanner/fDelimiters,"The cached legal line delimiters of the document "
5329,field,org/eclipse/jface/text/rules/RuleBasedScanner/fOffset,"The offset of the next character to be read "
5330,field,org/eclipse/jface/text/rules/RuleBasedScanner/fRangeEnd,"The end offset of the range to be scanned "
5331,field,org/eclipse/jface/text/rules/RuleBasedScanner/fTokenOffset,"The offset of the last read token "
5332,field,org/eclipse/jface/text/rules/RuleBasedScanner/fColumn,"The cached column of the current scanner position "
5333,field,org/eclipse/jface/text/rules/RuleBasedScanner/UNDEFINED,"Internal setting for the un-initialized column cache. "
5334,class,org/eclipse/jface/text/rules/BufferedRuleBasedScanner," A buffered rule based scanner. The buffer always contains a section\n of a fixed size of the document to be scanned. Completely adheres to\n the contract of <code>RuleBasedScanner</code>.\n"
5335,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/setBufferSize/int," Sets the buffer to the given number of characters.\n\n @param size the buffer size\n"
5336,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/setRange/IDocument;int;int,""
5337,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/read/,""
5338,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/unread/,""
5339,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/BufferedRuleBasedScanner/," Creates a new buffered rule based scanner which does\n not have any rule and a default buffer size of 500 characters.\n"
5340,method,org/eclipse/jface/text/rules/BufferedRuleBasedScanner/BufferedRuleBasedScanner/int," Creates a new buffered rule based scanner which does\n not have any rule. The buffer size is set to the given\n number of characters.\n\n @param size the buffer size\n"
5341,class,org/eclipse/jface/text/rules/NumberRule," An implementation of <code>IRule</code> detecting a numerical value.\n"
5343,method,org/eclipse/jface/text/rules/NumberRule/evaluate/ICharacterScanner,""
5344,method,org/eclipse/jface/text/rules/NumberRule/NumberRule/IToken," Creates a rule which will return the specified\n token when a numerical sequence is detected.\n\n @param token the token to be returned\n"
5345,field,org/eclipse/jface/text/rules/NumberRule/UNDEFINED,"Internal setting for the un-initialized column constraint "
5346,field,org/eclipse/jface/text/rules/NumberRule/fToken,"The token to be returned when this rule is successful "
5347,field,org/eclipse/jface/text/rules/NumberRule/fColumn,"The column constraint "
5348,interface,org/eclipse/jface/text/rules/IToken," A token to be returned by a rule.\n"
5349,method,org/eclipse/jface/text/rules/IToken/isUndefined/," Return whether this token is undefined.\n\n @return <code>true</code>if this token is undefined\n"
5350,method,org/eclipse/jface/text/rules/IToken/isWhitespace/," Return whether this token represents a whitespace.\n\n @return <code>true</code>if this token represents a whitespace\n"
5351,method,org/eclipse/jface/text/rules/IToken/isEOF/," Return whether this token represents End Of File.\n\n @return <code>true</code>if this token represents EOF\n"
5352,method,org/eclipse/jface/text/rules/IToken/isOther/," Return whether this token is neither undefined, nor whitespace, nor EOF.\n\n @return <code>true</code>if this token is not undefined, not a whitespace, and not EOF\n"
5353,method,org/eclipse/jface/text/rules/IToken/getData/," Return a data attached to this token. The semantics of this data kept undefined by this interface.\n\n @return the data attached to this token.\n"
5354,class,org/eclipse/jface/text/rules/RuleBasedDamagerRepairer," @deprecated use <code>DefaultDamagerRepairer</code>\n"
5357,interface,org/eclipse/jface/text/rules/ITokenScanner," A token scanner scans a range of a document and reports about the token it finds.\n A scanner has state. When asked, the scanner returns the offset and the length of the\n last found token.\n\n @see org.eclipse.jface.text.rules.IToken\n @since 2.0\n"
5359,method,org/eclipse/jface/text/rules/ITokenScanner/nextToken/," Returns the next token in the document.\n\n @return the next token in the document\n"
5360,method,org/eclipse/jface/text/rules/ITokenScanner/getTokenOffset/," Returns the offset of the last token read by this scanner.\n\n @return the offset of the last token read by this scanner\n"
5361,method,org/eclipse/jface/text/rules/ITokenScanner/getTokenLength/," Returns the length of the last token read by this scanner.\n\n @return the length of the last token read by this scanner\n"
5362,class,org/eclipse/jface/text/rules/WhitespaceRule," An implementation of <code>IRule</code> capable of detecting whitespace.\n A whitespace rule uses a whitespace detector in order to find out which\n characters are whitespace characters.\n\n @see IWhitespaceDetector\n"
5364,method,org/eclipse/jface/text/rules/WhitespaceRule/WhitespaceRule/IWhitespaceDetector," Creates a rule which, with the help of an whitespace detector, will return\n {@link Token#WHITESPACE} when a whitespace is detected.\n \n @param detector the rule's whitespace detector\n"
5365,method,org/eclipse/jface/text/rules/WhitespaceRule/WhitespaceRule/IWhitespaceDetector;IToken," Creates a rule which, with the help of an whitespace detector, will return the given\n whitespace token when a whitespace is detected.\n \n @param detector the rule's whitespace detector\n @param token the token returned for whitespace\n @since 3.5\n"
5366,field,org/eclipse/jface/text/rules/WhitespaceRule/fDetector,"The whitespace detector used by this rule "
5367,field,org/eclipse/jface/text/rules/WhitespaceRule/fWhitespaceToken," The token returned for whitespace.\n @since 3.5\n"
5370,method,org/eclipse/jface/text/rules/PatternRule/doEvaluate/ICharacterScanner," Evaluates this rules without considering any column constraints.\n\n @param scanner the character scanner to be used\n @return the token resulting from this evaluation\n"
5372,method,org/eclipse/jface/text/rules/PatternRule/evaluate/ICharacterScanner,""
5373,method,org/eclipse/jface/text/rules/PatternRule/endSequenceDetected/ICharacterScanner," Returns whether the end sequence was detected. As the pattern can be considered\n ended by a line delimiter, the result of this method is <code>true</code> if the\n rule breaks on the end of the line, or if the EOF character is read.\n\n @param scanner the character scanner to be used\n @return <code>true</code> if the end sequence has been detected\n"
5374,method,org/eclipse/jface/text/rules/PatternRule/sequenceDetected/ICharacterScanner;char[];boolean," Returns whether the next characters to be read by the character scanner\n are an exact match with the given sequence. No escape characters are allowed\n within the sequence. If specified the sequence is considered to be found\n when reading the EOF character.\n\n @param scanner the character scanner to be used\n @param sequence the sequence to be detected\n @param eofAllowed indicated whether EOF terminates the pattern\n @return <code>true</code> if the given sequence has been detected\n"
5375,method,org/eclipse/jface/text/rules/PatternRule/evaluate/ICharacterScanner;boolean,""
5376,method,org/eclipse/jface/text/rules/PatternRule/getSuccessToken/,""
5380,field,org/eclipse/jface/text/rules/PatternRule/UNDEFINED,"Internal setting for the un-initialized column constraint "
5381,field,org/eclipse/jface/text/rules/PatternRule/fToken,"The token to be returned on success "
5382,field,org/eclipse/jface/text/rules/PatternRule/fStartSequence,"The pattern's start sequence "
5383,field,org/eclipse/jface/text/rules/PatternRule/fEndSequence,"The pattern's end sequence "
5384,field,org/eclipse/jface/text/rules/PatternRule/fColumn,"The pattern's column constrain "
5385,field,org/eclipse/jface/text/rules/PatternRule/fEscapeCharacter,"The pattern's escape character "
5386,field,org/eclipse/jface/text/rules/PatternRule/fEscapeContinuesLine," Indicates whether the escape character continues a line\n @since 3.0\n"
5387,field,org/eclipse/jface/text/rules/PatternRule/fBreaksOnEOL,"Indicates whether end of line terminates the pattern "
5388,field,org/eclipse/jface/text/rules/PatternRule/fBreaksOnEOF,"Indicates whether end of file terminates the pattern "
5390,method,org/eclipse/jface/text/rules/IPredicateRule/getSuccessToken/," Returns the success token of this predicate rule.\n\n @return the success token of this rule\n"
5392,interface,org/eclipse/jface/text/rules/IWordDetector," Defines the interface by which <code>WordRule</code>\n determines whether a given character is valid as part\n of a word in the current context.\n"
5393,method,org/eclipse/jface/text/rules/IWordDetector/isWordStart/char," Returns whether the specified character is\n valid as the first character in a word.\n\n @param c the character to be checked\n @return <code>true</code> is a valid first character in a word, <code>false</code> otherwise\n"
5394,method,org/eclipse/jface/text/rules/IWordDetector/isWordPart/char," Returns whether the specified character is\n valid as a subsequent character in a word.\n\n @param c the character to be checked\n @return <code>true</code> if the character is a valid word part, <code>false</code> otherwise\n"
5397,class,org/eclipse/jface/text/rules/RuleBasedPartitionScanner," Scanner that exclusively uses predicate rules.\n @since 2.0\n"
5398,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/setRules/IRule[]," Disallow setting the rules since this scanner\n exclusively uses predicate rules.\n\n @param rules the sequence of rules controlling this scanner\n"
5399,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/setPredicateRules/IPredicateRule[],""
5400,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/setRange/IDocument;int;int,""
5401,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/setPartialRange/IDocument;int;int;String;int,""
5402,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/nextToken/,""
5403,method,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/RuleBasedPartitionScanner/,""
5404,field,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/fContentType,"The content type of the partition in which to resume scanning. "
5405,field,org/eclipse/jface/text/rules/RuleBasedPartitionScanner/fPartitionOffset,"The offset of the partition inside which to resume. "
5407,method,org/eclipse/jface/text/rules/FastPartitioner/getManagingPositionCategories/,""
5408,method,org/eclipse/jface/text/rules/FastPartitioner/connect/IDocument,""
5414,method,org/eclipse/jface/text/rules/FastPartitioner/documentChanged/DocumentEvent,""
5419,method,org/eclipse/jface/text/rules/FastPartitioner/computePartitioning/int;int,""
5426,method,org/eclipse/jface/text/rules/FastPartitioner/startRewriteSession/DocumentRewriteSession,""
5429,method,org/eclipse/jface/text/rules/FastPartitioner/flushRewriteSession/," Flushes the active rewrite session.\n"
5431,method,org/eclipse/jface/text/rules/FastPartitioner/getPositions/," Returns the partitioners positions.\n\n @return the partitioners positions\n @throws BadPositionCategoryException if getting the positions from the\n         document fails\n"
5433,field,org/eclipse/jface/text/rules/FastPartitioner/fScanner,"The partitioner's scanner "
5434,field,org/eclipse/jface/text/rules/FastPartitioner/fLegalContentTypes,"The legal content types of this partitioner "
5435,field,org/eclipse/jface/text/rules/FastPartitioner/fDocument,"The partitioner's document "
5437,field,org/eclipse/jface/text/rules/FastPartitioner/fPositionUpdater,"The position updater used to for the default updating of partitions "
5438,field,org/eclipse/jface/text/rules/FastPartitioner/fStartOffset,"The offset at which the first changed partition starts "
5439,field,org/eclipse/jface/text/rules/FastPartitioner/fEndOffset,"The offset at which the last changed partition ends "
5440,field,org/eclipse/jface/text/rules/FastPartitioner/fDeleteOffset,"The offset at which a partition has been deleted "
5444,method,org/eclipse/jface/text/rules/WordRule/evaluate/ICharacterScanner,""
5445,method,org/eclipse/jface/text/rules/WordRule/unreadBuffer/ICharacterScanner," Returns the characters in the buffer to the scanner.\n\n @param scanner the scanner to be used\n"
5449,field,org/eclipse/jface/text/rules/WordRule/UNDEFINED,"Internal setting for the un-initialized column constraint. "
5450,field,org/eclipse/jface/text/rules/WordRule/fDetector,"The word detector used by this rule. "
5451,field,org/eclipse/jface/text/rules/WordRule/fDefaultToken,"The default token to be returned on success and if nothing else has been specified. "
5452,field,org/eclipse/jface/text/rules/WordRule/fColumn,"The column constraint. "
5453,field,org/eclipse/jface/text/rules/WordRule/fWords,"The table of predefined words and token for this rule. "
5454,interface,org/eclipse/jface/text/rules/IWhitespaceDetector," Defines the interface by which <code>WhitespaceRule</code>\n determines whether a given character is to be considered\n whitespace in the current context.\n"
5455,method,org/eclipse/jface/text/rules/IWhitespaceDetector/isWhitespace/char," Returns whether the specified character is whitespace.\n\n @param c the character to be checked\n @return <code>true</code> if the specified character is a whitespace char\n"
5456,class,org/eclipse/jface/text/rules/RuleBasedPartitioner," A standard implementation of a syntax driven document partitioner.\n It uses a rule based scanner to scan the document and to determine\n the document's partitioning. The tokens returned by the rules the\n scanner is configured with are supposed to return the partition type\n as their data. The partitioner remembers the document's partitions\n in the document itself rather than maintaining its own data structure.\n\n @see IRule\n @see RuleBasedScanner\n\n @deprecated use <code>FastPartitioner</code> instead\n"
5457,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getManagingPositionCategories/,""
5458,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/connect/IDocument,""
5459,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/initialize/," Performs the initial partitioning of the partitioner's document.\n"
5460,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/disconnect/,""
5461,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/documentAboutToBeChanged/DocumentEvent,""
5462,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/documentChanged/DocumentEvent,""
5463,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/documentChanged2/DocumentEvent,""
5464,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/findClosestPosition/int," Returns the position in the partitoner's position category which is\n close to the given offset. This is, the position has either an offset which\n is the same as the given offset or an offset which is smaller than the given\n offset. This method profits from the knowledge that a partitioning is\n a ordered set of disjoint position.\n\n @param offset the offset for which to search the closest position\n @return the closest position in the partitioner's category\n"
5465,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getContentType/int,""
5466,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getPartition/int,""
5467,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/computePartitioning/int;int,""
5468,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getLegalContentTypes/,""
5469,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/isSupportedContentType/String," Returns whether the given type is one of the legal content types.\n\n @param contentType the content type to check\n @return <code>true</code> if the content type is a legal content type\n"
5471,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getContentType/int;boolean,""
5472,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/getPartition/int;boolean,""
5473,method,org/eclipse/jface/text/rules/RuleBasedPartitioner/computePartitioning/int;int;boolean,""
5475,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/CONTENT_TYPES_CATEGORY," The position category this partitioner uses to store the document's partitioning information\n @deprecated As of 3.0, use <code>getManagingPositionCategories()</code>.\n"
5476,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fScanner,"The partitioner's scanner "
5477,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fLegalContentTypes,"The legal content types of this partitioner "
5478,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fDocument,"The partitioner's document "
5480,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fPositionUpdater,"The position updater used to for the default updating of partitions "
5481,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fStartOffset,"The offset at which the first changed partition starts "
5482,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fEndOffset,"The offset at which the last changed partition ends "
5483,field,org/eclipse/jface/text/rules/RuleBasedPartitioner/fDeleteOffset,"The offset at which a partition has been deleted "
5484,class,org/eclipse/jface/text/rules/WordPatternRule," A specific single line rule which stipulates that the start\n and end sequence occur within a single word, as defined by a word detector.\n\n @see IWordDetector\n"
5485,method,org/eclipse/jface/text/rules/WordPatternRule/endSequenceDetected/ICharacterScanner," Returns whether the end sequence was detected.\n The rule acquires the rest of the word, using the\n provided word detector, and tests to determine if\n it ends with the end sequence.\n\n @param scanner the scanner to be used\n @return <code>true</code> if the word ends on the given end sequence\n"
5487,method,org/eclipse/jface/text/rules/WordPatternRule/WordPatternRule/IWordDetector;String;String;IToken," Creates a rule for the given starting and ending word\n pattern which, if detected, will return the specified token.\n A word detector is used to identify words.\n\n @param detector the word detector to be used\n @param startSequence the start sequence of the word pattern\n @param endSequence the end sequence of the word pattern\n @param token the token to be returned on success\n"
5488,method,org/eclipse/jface/text/rules/WordPatternRule/WordPatternRule/IWordDetector;String;String;IToken;char,"        /**\n Creates a rule for the given starting and ending word\n pattern which, if detected, will return the specified token.\n A word detector is used to identify words.\n Any character which follows the given escapeCharacter will be ignored.\n\n @param detector the word detector to be used\n @param startSequence the start sequence of the word pattern\n @param endSequence the end sequence of the word pattern\n @param token the token to be returned on success\n @param escapeCharacter the escape character\n"
5489,field,org/eclipse/jface/text/rules/WordPatternRule/fDetector,"The word detector used by this rule "
5491,method,org/eclipse/jface/text/rules/MultiLineRule/MultiLineRule/String;String;IToken," Creates a rule for the given starting and ending sequence\n which, if detected, will return the specified token.\n\n @param startSequence the pattern's start sequence\n @param endSequence the pattern's end sequence\n @param token the token to be returned on success\n"
5492,method,org/eclipse/jface/text/rules/MultiLineRule/MultiLineRule/String;String;IToken;char," Creates a rule for the given starting and ending sequence\n which, if detected, will return the specific token.\n Any character which follows the given escape character will be ignored.\n\n @param startSequence the pattern's start sequence\n @param endSequence the pattern's end sequence\n @param token the token to be returned on success\n @param escapeCharacter the escape character\n"
5493,method,org/eclipse/jface/text/rules/MultiLineRule/MultiLineRule/String;String;IToken;char;boolean," Creates a rule for the given starting and ending sequence\n which, if detected, will return the specific token. Any character that follows the\n given escape character will be ignored. <code>breakOnEOF</code> indicates whether\n EOF is equivalent to detecting the <code>endSequence</code>.\n\n @param startSequence the pattern's start sequence\n @param endSequence the pattern's end sequence\n @param token the token to be returned on success\n @param escapeCharacter the escape character\n @param breaksOnEOF indicates whether the end of the file terminates this rule successfully\n @since 2.1\n"
5494,class,org/eclipse/jface/text/rules/DefaultPartitioner," A standard implementation of a document partitioner. It uses a partition\n token scanner to scan the document and to determine the document's\n partitioning. The tokens returned by the scanner are supposed to return the\n partition type as their data. The partitioner remembers the document's\n partitions in the document itself rather than maintaining its own data\n structure.\n\n @see IPartitionTokenScanner\n @since 2.0\n @deprecated As of 3.1, replaced by {@link org.eclipse.jface.text.rules.FastPartitioner} instead\n"
5495,method,org/eclipse/jface/text/rules/DefaultPartitioner/getManagingPositionCategories/,""
5496,method,org/eclipse/jface/text/rules/DefaultPartitioner/connect/IDocument,""
5497,method,org/eclipse/jface/text/rules/DefaultPartitioner/connect/IDocument;boolean,""
5498,method,org/eclipse/jface/text/rules/DefaultPartitioner/checkInitialization/,""
5499,method,org/eclipse/jface/text/rules/DefaultPartitioner/initialize/," Performs the initial partitioning of the partitioner's document.\n"
5500,method,org/eclipse/jface/text/rules/DefaultPartitioner/disconnect/,""
5501,method,org/eclipse/jface/text/rules/DefaultPartitioner/documentAboutToBeChanged/DocumentEvent,""
5502,method,org/eclipse/jface/text/rules/DefaultPartitioner/documentChanged/DocumentEvent,""
5503,method,org/eclipse/jface/text/rules/DefaultPartitioner/documentChanged2/DocumentEvent,""
5504,method,org/eclipse/jface/text/rules/DefaultPartitioner/findClosestPosition/int," Returns the position in the partitoner's position category which is\n close to the given offset. This is, the position has either an offset which\n is the same as the given offset or an offset which is smaller than the given\n offset. This method profits from the knowledge that a partitioning is\n a ordered set of disjoint position.\n\n @param offset the offset for which to search the closest position\n @return the closest position in the partitioner's category\n"
5505,method,org/eclipse/jface/text/rules/DefaultPartitioner/getContentType/int,""
5506,method,org/eclipse/jface/text/rules/DefaultPartitioner/getPartition/int,""
5507,method,org/eclipse/jface/text/rules/DefaultPartitioner/computePartitioning/int;int,""
5508,method,org/eclipse/jface/text/rules/DefaultPartitioner/getLegalContentTypes/,""
5509,method,org/eclipse/jface/text/rules/DefaultPartitioner/isSupportedContentType/String," Returns whether the given type is one of the legal content types.\n\n @param contentType the content type to check\n @return <code>true</code> if the content type is a legal content type\n"
5511,method,org/eclipse/jface/text/rules/DefaultPartitioner/getContentType/int;boolean,""
5512,method,org/eclipse/jface/text/rules/DefaultPartitioner/getPartition/int;boolean,""
5513,method,org/eclipse/jface/text/rules/DefaultPartitioner/computePartitioning/int;int;boolean,""
5514,method,org/eclipse/jface/text/rules/DefaultPartitioner/startRewriteSession/DocumentRewriteSession,""
5515,method,org/eclipse/jface/text/rules/DefaultPartitioner/stopRewriteSession/DocumentRewriteSession,""
5516,method,org/eclipse/jface/text/rules/DefaultPartitioner/getActiveRewriteSession/,""
5517,method,org/eclipse/jface/text/rules/DefaultPartitioner/flushRewriteSession/," Flushes the active rewrite session.\n\n @since 3.1\n"
5519,field,org/eclipse/jface/text/rules/DefaultPartitioner/CONTENT_TYPES_CATEGORY," The position category this partitioner uses to store the document's partitioning information.\n @deprecated As of 3.0, use <code>getManagingPositionCategories()</code> instead.\n"
5520,field,org/eclipse/jface/text/rules/DefaultPartitioner/fScanner,"The partitioner's scanner "
5521,field,org/eclipse/jface/text/rules/DefaultPartitioner/fLegalContentTypes,"The legal content types of this partitioner "
5522,field,org/eclipse/jface/text/rules/DefaultPartitioner/fDocument,"The partitioner's document "
5524,field,org/eclipse/jface/text/rules/DefaultPartitioner/fPositionUpdater,"The position updater used to for the default updating of partitions "
5525,field,org/eclipse/jface/text/rules/DefaultPartitioner/fStartOffset,"The offset at which the first changed partition starts "
5526,field,org/eclipse/jface/text/rules/DefaultPartitioner/fEndOffset,"The offset at which the last changed partition ends "
5527,field,org/eclipse/jface/text/rules/DefaultPartitioner/fDeleteOffset,"The offset at which a partition has been deleted "
5530,method,org/eclipse/jface/text/rules/ICharacterScanner/getColumn/," Returns the column of the character scanner.\n\n @return the column of the character scanner\n"
5531,method,org/eclipse/jface/text/rules/ICharacterScanner/read/," Returns the next character or EOF if end of file has been reached\n\n @return the next character or EOF\n"
5533,field,org/eclipse/jface/text/rules/ICharacterScanner/EOF," The value returned when this scanner has read EOF.\n"
5535,method,org/eclipse/jface/text/rules/SingleLineRule/SingleLineRule/String;String;IToken," Creates a rule for the given starting and ending sequence\n which, if detected, will return the specified token.\n\n @param startSequence the pattern's start sequence\n @param endSequence the pattern's end sequence\n @param token the token to be returned on success\n"
5536,method,org/eclipse/jface/text/rules/SingleLineRule/SingleLineRule/String;String;IToken;char," Creates a rule for the given starting and ending sequence\n which, if detected, will return the specified token.\n Any character which follows the given escape character\n will be ignored.\n\n @param startSequence the pattern's start sequence\n @param endSequence the pattern's end sequence\n @param token the token to be returned on success\n @param escapeCharacter the escape character\n"
5539,interface,org/eclipse/jface/text/rules/IRule," Defines the interface for a rule used in the scanning of text for the purpose of document\n partitioning or text styling.\n\n @see ICharacterScanner\n"
5541,class,org/eclipse/jface/text/rules/Token," Standard implementation of <code>IToken</code>.\n"
5543,method,org/eclipse/jface/text/rules/Token/getData/,""
5544,method,org/eclipse/jface/text/rules/Token/isOther/,""
5545,method,org/eclipse/jface/text/rules/Token/isEOF/,""
5546,method,org/eclipse/jface/text/rules/Token/isWhitespace/,""
5547,method,org/eclipse/jface/text/rules/Token/isUndefined/,""
5548,method,org/eclipse/jface/text/rules/Token/Token/Object," Creates a new token which represents neither undefined, whitespace, nor EOF.\n The newly created token has the given data attached to it.\n\n @param data the data attached to the newly created token\n"
5549,field,org/eclipse/jface/text/rules/Token/UNDEFINED," Standard token: Undefined.\n"
5550,field,org/eclipse/jface/text/rules/Token/EOF," Standard token: End Of File.\n"
5551,field,org/eclipse/jface/text/rules/Token/WHITESPACE," Standard token: Whitespace.\n"
5552,field,org/eclipse/jface/text/rules/Token/OTHER," Standard token: Neither {@link #UNDEFINED}, {@link #WHITESPACE}, nor {@link #EOF}.\n @deprecated will be removed\n"
5553,class,org/eclipse/jface/text/rules/DefaultDamagerRepairer," A standard implementation of a syntax driven presentation damager\n and presentation repairer. It uses a token scanner to scan\n the document and to determine its damage and new text presentation.\n The tokens returned by the scanner are supposed to return text attributes\n as their data.\n\n @see ITokenScanner\n @since 2.0\n"
5554,method,org/eclipse/jface/text/rules/DefaultDamagerRepairer/setDocument/IDocument,""
5556,method,org/eclipse/jface/text/rules/DefaultDamagerRepairer/getDamageRegion/ITypedRegion;DocumentEvent;boolean,""
5557,method,org/eclipse/jface/text/rules/DefaultDamagerRepairer/createPresentation/TextPresentation;ITypedRegion,""
5562,field,org/eclipse/jface/text/rules/DefaultDamagerRepairer/fDocument,"The document this object works on "
5563,field,org/eclipse/jface/text/rules/DefaultDamagerRepairer/fScanner,"The scanner it uses "
5564,field,org/eclipse/jface/text/rules/DefaultDamagerRepairer/fDefaultTextAttribute,"The default text attribute if non is returned as data by the current token "
5567,method,org/eclipse/jface/text/formatter/IContentFormatter/getFormattingStrategy/String," Returns the formatting strategy registered for the given content type.\n\n @param contentType the content type for which to look up the formatting strategy\n @return the formatting strategy for the given content type, or\n		<code>null</code> if there is no such strategy\n"
5569,method,org/eclipse/jface/text/formatter/IFormattingStrategy/formatterStarts/String," Informs the strategy about the start of a formatting process in which it will\n participate.\n\n @param initialIndentation the indent string of the first line at which the\n		overall formatting process starts.\n"
5571,method,org/eclipse/jface/text/formatter/IFormattingStrategy/formatterStops/," Informs the strategy that the formatting process in which it has participated\n has been finished.\n"
5574,interface,org/eclipse/jface/text/formatter/IFormattingContext," Formatting context used in formatting strategies implementing interface\n <code>IFormattingStrategyExtension</code>.\n\n @see IFormattingStrategyExtension\n @since 3.0\n"
5576,method,org/eclipse/jface/text/formatter/IFormattingContext/getPreferenceKeys/," Returns the preference keys used for the retrieval of formatting preferences.\n\n @return The preference keys for formatting\n"
5577,method,org/eclipse/jface/text/formatter/IFormattingContext/getProperty/Object," Retrieves the property <code>key</code> from the formatting context\n\n @param key the key of the property to store in the context\n @return the property <code>key</code> if available, <code>null</code> otherwise\n"
5578,method,org/eclipse/jface/text/formatter/IFormattingContext/isBooleanPreference/String," Is this preference key for a boolean preference?\n\n @param key the preference key to query its type\n @return <code>true</code> iff this key is for a boolean preference, <code>false</code>\n         otherwise.\n"
5579,method,org/eclipse/jface/text/formatter/IFormattingContext/isDoublePreference/String," Is this preference key for a double preference?\n\n @param key the preference key to query its type\n @return <code>true</code> iff this key is for a double preference, <code>false</code>\n         otherwise.\n"
5580,method,org/eclipse/jface/text/formatter/IFormattingContext/isFloatPreference/String," Is this preference key for a float preference?\n\n @param key The preference key to query its type\n @return <code>true</code> iff this key is for a float preference, <code>false</code>\n         otherwise.\n"
5581,method,org/eclipse/jface/text/formatter/IFormattingContext/isIntegerPreference/String," Is this preference key for an integer preference?\n\n @param key The preference key to query its type\n @return <code>true</code> iff this key is for an integer preference, <code>false</code>\n         otherwise.\n"
5582,method,org/eclipse/jface/text/formatter/IFormattingContext/isLongPreference/String," Is this preference key for a long preference?\n\n @param key The preference key to query its type\n @return <code>true</code> iff this key is for a long preference, <code>false</code>\n         otherwise.\n"
5583,method,org/eclipse/jface/text/formatter/IFormattingContext/isStringPreference/String," Is this preference key for a string preference?\n\n @param key The preference key to query its type\n @return <code>true</code> iff this key is for a string preference, <code>false</code>\n         otherwise.\n"
5587,class,org/eclipse/jface/text/formatter/FormattingContextProperties," Keys used by <code>IFormattingContext</code> objects to register specific\n properties needed during the formatting process of a content formatter\n implementing <code>IContentFormatterExtension</code>.\n\n @see IFormattingContext\n @see IFormattingStrategyExtension\n @see IContentFormatterExtension\n @since 3.0\n"
5594,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/format/IDocument;IFormattingContext,""
5595,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/format/IDocument;IRegion,""
5596,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/formatMaster/IFormattingContext;IDocument;int;int," Formats the document specified in the formatting context with the master\n formatting strategy.\n <p>\n The master formatting strategy covers all regions of the document. The\n offset of the region to be formatted is aligned on line start boundaries,\n whereas the end index of the region remains the same. For this formatting\n type the document partitioning is not taken into account.\n\n @param context The formatting context to use\n @param document The document to operate on\n @param offset The offset of the region to format\n @param length The length of the region to format\n"
5598,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/formatSlaves/IFormattingContext;IDocument;int;int," Formats the document specified in the formatting context with the slave\n formatting strategies.\n <p>\n For each content type of the region to be formatted in the document\n partitioning, the registered slave formatting strategy is used to format\n that particular region. The region to be formatted is aligned on\n partition boundaries of the underlying content type. If the content type\n is the document's default content type, nothing happens.\n\n @param context The formatting context to use\n @param document The document to operate on\n @param offset The offset of the region to format\n @param length The length of the region to format\n"
5599,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/getFormattingStrategy/String,""
5602,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/MultiPassContentFormatter/String;String," Creates a new content formatter.\n\n @param partitioning the document partitioning for this formatter\n @param type the default content type\n"
5603,class,org/eclipse/jface/text/formatter/MultiPassContentFormatter/NonDeletingPositionUpdater," Position updater that shifts otherwise deleted positions to the next\n non-whitespace character. The length of the positions are truncated to\n one if the position was shifted.\n"
5604,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/NonDeletingPositionUpdater/notDeleted/,""
5605,method,org/eclipse/jface/text/formatter/MultiPassContentFormatter/NonDeletingPositionUpdater/MultiPassContentFormatter/NonDeletingPositionUpdater/String," Creates a new non-deleting position updater.\n\n @param category The position category to update its positions\n"
5609,method,org/eclipse/jface/text/formatter/ContentFormatter/setDocumentPartitioning/String," Sets the document partitioning to be used by this formatter.\n\n @param partitioning the document partitioning\n @since 3.0\n"
5611,method,org/eclipse/jface/text/formatter/ContentFormatter/getFormattingStrategy/String,""
5612,method,org/eclipse/jface/text/formatter/ContentFormatter/format/IDocument;IRegion,""
5616,class,org/eclipse/jface/text/formatter/FormattingContext," Default implementation of <code>IFormattingContext</code>.\n\n @since 3.0\n"
5617,method,org/eclipse/jface/text/formatter/FormattingContext/dispose/,""
5618,method,org/eclipse/jface/text/formatter/FormattingContext/getPreferenceKeys/,""
5619,method,org/eclipse/jface/text/formatter/FormattingContext/getProperty/Object,""
5620,method,org/eclipse/jface/text/formatter/FormattingContext/isBooleanPreference/String,""
5621,method,org/eclipse/jface/text/formatter/FormattingContext/isDoublePreference/String,""
5622,method,org/eclipse/jface/text/formatter/FormattingContext/isFloatPreference/String,""
5623,method,org/eclipse/jface/text/formatter/FormattingContext/isIntegerPreference/String,""
5624,method,org/eclipse/jface/text/formatter/FormattingContext/isLongPreference/String,""
5625,method,org/eclipse/jface/text/formatter/FormattingContext/isStringPreference/String,""
5626,method,org/eclipse/jface/text/formatter/FormattingContext/mapToStore/Map;IPreferenceStore,""
5627,method,org/eclipse/jface/text/formatter/FormattingContext/setProperty/Object;Object,""
5628,method,org/eclipse/jface/text/formatter/FormattingContext/storeToMap/IPreferenceStore;Map;boolean,""
5629,method,org/eclipse/jface/text/formatter/FormattingContext/FormattingContext/,""
5631,method,org/eclipse/jface/text/formatter/IFormattingStrategyExtension/format/," Formats the region with the properties indicated in the formatting\n context previously supplied by <code>formatterStarts(IFormattingContext)</code>.\n"
5632,method,org/eclipse/jface/text/formatter/IFormattingStrategyExtension/formatterStarts/IFormattingContext," Informs the strategy about the start of a formatting process in which it will participate.\n\n @param context the formatting context used in the corresponding formatting process.\n"
5633,method,org/eclipse/jface/text/formatter/IFormattingStrategyExtension/formatterStops/," Informs the strategy that the formatting process in which it has\n participated has been finished.\n"
5635,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/format/,""
5636,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/format/String;boolean;String;int[],""
5637,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/formatterStarts/IFormattingContext,""
5638,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/formatterStarts/String,""
5639,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/formatterStops/,""
5640,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/getPreferences/," Returns the preferences used for the current formatting step.\n\n @return The preferences for the current formatting step\n"
5641,method,org/eclipse/jface/text/formatter/ContextBasedFormattingStrategy/ContextBasedFormattingStrategy/,""
5643,method,org/eclipse/jface/text/hyperlink/IHyperlink/getHyperlinkRegion/," The region covered by this type of hyperlink.\n\n @return the hyperlink region\n"
5645,method,org/eclipse/jface/text/hyperlink/IHyperlink/getHyperlinkText/," Optional text for this hyperlink.\n <p>\n This can be used in situations where there are\n several targets for the same hyperlink location.\n </p>\n\n @return the text or <code>null</code> if none\n"
5646,method,org/eclipse/jface/text/hyperlink/IHyperlink/open/," Opens the given hyperlink.\n"
5649,class,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter," A hyperlink presenter capable of showing multiple hyperlinks in a hover.\n\n @since 3.4\n"
5650,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/install/ITextViewer,""
5651,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/uninstall/,""
5652,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/canShowMultipleHyperlinks/,""
5653,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/canHideHyperlinks/,""
5654,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/hideHyperlinks/,""
5655,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/showHyperlinks/IHyperlink[],""
5656,method,org/eclipse/jface/text/hyperlink/MultipleHyperlinkPresenter/MultipleHyperlinkPresenter/IPreferenceStore," Creates a new multiple hyperlink presenter which uses\n {@link #HYPERLINK_COLOR} to read the color from the given preference store.\n\n @param store the preference store\n"
5659,method,org/eclipse/jface/text/hyperlink/IHyperlinkDetectorExtension2/getStateMask/," Returns the state mask of the modifier keys that\n need to be pressed for this hyperlink detector.\n\n @return the state mask\n"
5660,class,org/eclipse/jface/text/hyperlink/URLHyperlink," URL hyperlink.\n\n @since 3.1\n"
5661,method,org/eclipse/jface/text/hyperlink/URLHyperlink/getHyperlinkRegion/,""
5662,method,org/eclipse/jface/text/hyperlink/URLHyperlink/open/,""
5663,method,org/eclipse/jface/text/hyperlink/URLHyperlink/getTypeLabel/,""
5664,method,org/eclipse/jface/text/hyperlink/URLHyperlink/getHyperlinkText/,""
5665,method,org/eclipse/jface/text/hyperlink/URLHyperlink/getURLString/," Returns the URL string of this hyperlink.\n\n @return the URL string\n @since 3.2\n"
5666,method,org/eclipse/jface/text/hyperlink/URLHyperlink/URLHyperlink/IRegion;String," Creates a new URL hyperlink.\n\n @param region the region\n @param urlString the URL string\n"
5667,class,org/eclipse/jface/text/hyperlink/HyperlinkManager," Default implementation of a hyperlink manager.\n\n @since 3.1\n"
5671,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/uninstall/," Uninstalls this hyperlink manager.\n"
5672,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/deactivate/," Deactivates the currently shown hyperlinks.\n"
5673,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/findHyperlinks/," Finds hyperlinks at the current offset.\n\n @return the hyperlinks or <code>null</code> if none.\n"
5674,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/computeLongestHyperlinkLength/List," Computes the length of the longest detected hyperlink.\n\n @param hyperlinks the list of hyperlinks\n @return the length of the longest detected\n"
5675,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/getCurrentTextOffset/," Returns the current text offset.\n\n @return the current text offset\n"
5676,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/keyPressed/KeyEvent,""
5677,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/keyReleased/KeyEvent,""
5678,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/mouseDoubleClick/MouseEvent,""
5679,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/mouseDown/MouseEvent,""
5680,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/mouseUp/MouseEvent,""
5681,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/mouseMove/MouseEvent,""
5682,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/focusGained/FocusEvent,""
5683,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/focusLost/FocusEvent,""
5684,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/handleEvent/Event,""
5685,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/textChanged/TextEvent,""
5689,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/HyperlinkManager/DETECTION_STRATEGY," Creates a new hyperlink manager.\n\n @param detectionStrategy the detection strategy one of {{@link #ALL}, {@link #FIRST}, {@link #LONGEST_REGION_ALL}, {@link #LONGEST_REGION_FIRST}}\n"
5690,field,org/eclipse/jface/text/hyperlink/HyperlinkManager/FIRST," The first detected hyperlink is passed to the\n hyperlink presenter and no further detector\n is consulted.\n"
5694,class,org/eclipse/jface/text/hyperlink/HyperlinkManager/DETECTION_STRATEGY," Detection strategy.\n"
5695,method,org/eclipse/jface/text/hyperlink/HyperlinkManager/DETECTION_STRATEGY/toString/,""
5698,method,org/eclipse/jface/text/hyperlink/AbstractHyperlinkDetector/dispose/,""
5700,method,org/eclipse/jface/text/hyperlink/AbstractHyperlinkDetector/AbstractHyperlinkDetector/,""
5702,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenter/canShowMultipleHyperlinks/," Tells whether this presenter is able to handle\n more than one hyperlink.\n\n @return <code>true</code> if this presenter can handle more than one hyperlink\n"
5703,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenter/showHyperlinks/IHyperlink[]," Tells this hyperlink presenter to show the given\n hyperlinks on the installed text viewer.\n\n @param hyperlinks the hyperlinks to show\n @throws IllegalArgumentException if\n 			<ul>\n 				<li><code>hyperlinks</code> is empty</li>\n 				<li>{@link #canShowMultipleHyperlinks()} returns <code>false</code> and <code>hyperlinks</code> contains more than one element</li>\n 			</ul>\n"
5704,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenter/hideHyperlinks/," Tells this hyperlink presenter to hide the hyperlinks\n requested to be shown by {@link #showHyperlinks(IHyperlink[])}.\n"
5705,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenter/install/ITextViewer," Installs this hyperlink presenter on the given text viewer.\n\n @param textViewer the text viewer\n"
5706,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenter/uninstall/," Uninstalls this hyperlink presenter.\n"
5708,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/canShowMultipleHyperlinks/,""
5709,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/showHyperlinks/IHyperlink[],""
5711,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/hideHyperlinks/,""
5712,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/install/ITextViewer,""
5713,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/uninstall/,""
5715,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/applyTextPresentation/TextPresentation,""
5716,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/documentAboutToBeChanged/DocumentEvent,""
5717,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/documentChanged/DocumentEvent,""
5718,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/inputDocumentAboutToBeChanged/IDocument;IDocument,""
5719,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/inputDocumentChanged/IDocument;IDocument,""
5720,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/propertyChange/PropertyChangeEvent,""
5721,method,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/DefaultHyperlinkPresenter/IPreferenceStore," Creates a new default hyperlink presenter which uses\n {@link #HYPERLINK_COLOR} to read the color from the given preference store.\n\n @param store the preference store\n"
5724,field,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/HYPERLINK_COLOR," A named preference that holds the color used for hyperlinks.\n <p>\n Value is of type <code>String</code>. A RGB color value encoded as a string using class\n <code>PreferenceConverter</code>.\n </p>\n \n @see org.eclipse.jface.resource.StringConverter\n @see org.eclipse.jface.preference.PreferenceConverter\n"
5725,field,org/eclipse/jface/text/hyperlink/DefaultHyperlinkPresenter/HYPERLINK_COLOR_SYSTEM_DEFAULT," A named preference that holds the preference whether to use the native link color.\n <p>\n The preference value is of type <code>Boolean</code>.\n </p>\n \n @since 3.5\n"
5726,class,org/eclipse/jface/text/hyperlink/URLHyperlinkDetector," URL hyperlink detector.\n\n @since 3.1\n"
5727,method,org/eclipse/jface/text/hyperlink/URLHyperlinkDetector/detectHyperlinks/ITextViewer;IRegion;boolean,""
5728,method,org/eclipse/jface/text/hyperlink/URLHyperlinkDetector/URLHyperlinkDetector/," Creates a new URL hyperlink detector.\n\n @since 3.2\n"
5729,method,org/eclipse/jface/text/hyperlink/URLHyperlinkDetector/URLHyperlinkDetector/ITextViewer," Creates a new URL hyperlink detector.\n\n @param textViewer the text viewer in which to detect the hyperlink\n @deprecated As of 3.2, replaced by {@link URLHyperlinkDetector}\n"
5731,method,org/eclipse/jface/text/hyperlink/IHyperlinkDetectorExtension/dispose/," Disposes this hyperlink detector.\n"
5733,method,org/eclipse/jface/text/hyperlink/IHyperlinkPresenterExtension/canHideHyperlinks/," Tells whether the currently shown hyperlinks\n can be hidden.\n\n @return <code>true</code> if the hyperlink manager can hide the current hyperlinks\n"
5735,method,org/eclipse/jface/text/presentation/IPresentationDamager/setDocument/IDocument," Tells the presentation damager on which document it will work.\n\n @param document the damager's working document\n"
5739,method,org/eclipse/jface/text/presentation/IPresentationReconciler/uninstall/," Removes the reconciler from the text viewer it has previously been\n installed on.\n"
5740,method,org/eclipse/jface/text/presentation/IPresentationReconciler/getDamager/String," Returns the presentation damager registered with this presentation reconciler\n for the specified content type.\n\n @param contentType the content type for which to determine the damager\n @return the presentation damager registered for the given content type, or\n		<code>null</code> if there is no damager\n"
5741,method,org/eclipse/jface/text/presentation/IPresentationReconciler/getRepairer/String," Returns the presentation repairer registered with this presentation reconciler\n for the specified content type.\n\n @param contentType the content type for which to determine the repairer\n @return the presentation repairer registered for the given content type, or\n		<code>null</code> if there is no repairer\n"
5743,method,org/eclipse/jface/text/presentation/PresentationReconciler/setDocumentPartitioning/String," Sets the document partitioning for this presentation reconciler.\n\n @param partitioning the document partitioning for this presentation reconciler.\n @since 3.0\n"
5744,method,org/eclipse/jface/text/presentation/PresentationReconciler/getDocumentPartitioning/,""
5745,method,org/eclipse/jface/text/presentation/PresentationReconciler/setDamager/IPresentationDamager;String," Registers the given presentation damager for a particular content type.\n If there is already a damager registered for this type, the old damager\n is removed first.\n\n @param damager the presentation damager to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n"
5746,method,org/eclipse/jface/text/presentation/PresentationReconciler/setRepairer/IPresentationRepairer;String," Registers the given presentation repairer for a particular content type.\n If there is already a repairer registered for this type, the old repairer\n is removed first.\n\n @param repairer the presentation repairer to register, or <code>null</code> to remove an existing one\n @param contentType the content type under which to register\n"
5747,method,org/eclipse/jface/text/presentation/PresentationReconciler/install/ITextViewer,""
5748,method,org/eclipse/jface/text/presentation/PresentationReconciler/uninstall/,""
5749,method,org/eclipse/jface/text/presentation/PresentationReconciler/getDamager/String,""
5750,method,org/eclipse/jface/text/presentation/PresentationReconciler/getRepairer/String,""
5751,method,org/eclipse/jface/text/presentation/PresentationReconciler/setDocumentToDamagers/IDocument," Informs all registered damagers about the document on which they will work.\n\n @param document the document on which to work\n"
5752,method,org/eclipse/jface/text/presentation/PresentationReconciler/setDocumentToRepairers/IDocument," Informs all registered repairers about the document on which they will work.\n\n @param document the document on which to work\n"
5754,method,org/eclipse/jface/text/presentation/PresentationReconciler/PresentationReconciler/," Creates a new presentation reconciler. There are no damagers or repairers\n registered with this reconciler by default. The default partitioning\n <code>IDocumentExtension3.DEFAULT_PARTITIONING</code> is used.\n"
5755,field,org/eclipse/jface/text/presentation/PresentationReconciler/TRACKED_PARTITION,"Prefix of the name of the position category for tracking damage regions. "
5757,method,org/eclipse/jface/text/presentation/IPresentationReconcilerExtension/getDocumentPartitioning/," Returns the document partitioning this presentation reconciler is using.\n\n @return the document partitioning this presentation reconciler is using\n"
5759,method,org/eclipse/jface/text/presentation/IPresentationRepairer/setDocument/IDocument," Tells the presentation repairer on which document it will work.\n\n @param document the damager's working document\n"
5760,method,org/eclipse/jface/text/presentation/IPresentationRepairer/createPresentation/TextPresentation;ITypedRegion," Fills the given presentation with the style ranges which when applied to the\n presentation reconciler's text viewer repair the  presentation damage described by\n the given region.\n\n @param presentation the text presentation to be filled by this repairer\n @param damage the damage to be repaired\n"
5761,class,org/eclipse/jface/text/source/AnnotationBarHoverManager," This manager controls the layout, content, and visibility of an information\n control in reaction to mouse hover events issued by the vertical ruler of a\n source viewer.\n @since 2.0\n"
5762,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/computeInformation/,""
5763,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/showInformationControl/Rectangle,""
5764,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/hideInformationControl/,""
5765,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/getAnnotationHover/," Returns the annotation hover for this hover manager.\n\n @return the annotation hover for this hover manager or <code>null</code> if none\n @since 2.1\n"
5766,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/getSourceViewer/," Returns the source viewer for this hover manager.\n\n @return the source viewer for this hover manager\n @since 2.1\n"
5767,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/getVerticalRulerInfo/," Returns the vertical ruler info for this hover manager\n\n @return the vertical ruler info for this hover manager\n @since 2.1\n"
5768,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/computeSizeConstraints/Control;Rectangle;IInformationControl,""
5769,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/computeLocation/Rectangle;Point;Anchor,""
5770,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/getCurrentAnnotationHover/," Returns the currently shown annotation hover or <code>null</code> if none\n hover is shown.\n\n @return the currently shown annotation hover or <code>null</code>\n @since 3.2\n"
5774,field,org/eclipse/jface/text/source/AnnotationBarHoverManager/fAllowMouseExit," Indicates whether the mouse cursor is allowed to leave the subject area without closing the hover.\n @since 3.0\n"
5776,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/setSubjectControl/Control,""
5777,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/setInformationControl/IInformationControl,""
5778,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/start/Rectangle,""
5779,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/stop/,""
5781,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/mouseMove/MouseEvent,""
5782,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/mouseUp/MouseEvent,""
5783,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/mouseDown/MouseEvent,""
5784,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/mouseDoubleClick/MouseEvent,""
5785,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/handleEvent/Event,""
5786,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/mouseExit/MouseEvent,""
5787,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/controlResized/ControlEvent,""
5788,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/controlMoved/ControlEvent,""
5789,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/keyReleased/KeyEvent,""
5790,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/keyPressed/KeyEvent,""
5791,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/shellActivated/ShellEvent,""
5792,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/shellClosed/ShellEvent,""
5793,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/shellDeactivated/ShellEvent,""
5794,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/shellDeiconified/ShellEvent,""
5795,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/shellIconified/ShellEvent,""
5796,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/widgetDisposed/DisposeEvent,""
5797,method,org/eclipse/jface/text/source/AnnotationBarHoverManager/Closer/AnnotationBarHoverManager/Closer/," Creates a new information control closer.\n"
5798,class,org/eclipse/jface/text/source/VerticalRulerEvent," An event sent to {@link org.eclipse.jface.text.source.IVerticalRulerListener} instances when annotation\n related event occurs on the vertical ruler.\n\n @since 3.0\n"
5799,method,org/eclipse/jface/text/source/VerticalRulerEvent/getSelectedAnnotation/," @return the concerned annotation or <code>null</code>\n"
5800,method,org/eclipse/jface/text/source/VerticalRulerEvent/setSelectedAnnotation/Annotation," @param annotation the concerned annotation, or <code>null</code>\n"
5801,method,org/eclipse/jface/text/source/VerticalRulerEvent/VerticalRulerEvent/Annotation," Creates a new event.\n\n @param annotation the annotation concerned, or <code>null</code>\n"
5802,interface,org/eclipse/jface/text/source/ICharacterPairMatcher," A character pair matcher finds to a character at a certain document offset\n the matching peer character. It is the matchers responsibility to define the\n concepts of "matching" and "peer". The matching process starts at a given\n offset. Starting of this offset, the matcher chooses a character close to\n this offset. The anchor defines whether the chosen character is left or right\n of the initial offset. The matcher then searches for the matching peer\n character of the chosen character and if it finds one, delivers the minimal\n region of the document that contains both characters.\n\n @since 2.1\n"
5803,method,org/eclipse/jface/text/source/ICharacterPairMatcher/dispose/," Disposes this pair matcher.\n"
5805,method,org/eclipse/jface/text/source/ICharacterPairMatcher/match/IDocument;int," Starting at the given offset, the matcher chooses a character close to this offset.\n The matcher then searches for the matching peer character of the chosen character\n and if it finds one, returns the minimal region of the document that contains both characters.\n It returns <code>null</code> if there is no peer character.\n\n @param iDocument the document to work on\n @param i the start offset\n @return the minimal region containing the peer characters\n"
5806,method,org/eclipse/jface/text/source/ICharacterPairMatcher/getAnchor/," Returns the anchor for the region of the matching peer characters. The anchor\n says whether the character that has been chosen to search for its peer character\n has been left or right of the initial offset.\n\n @return <code>RIGHT</code> or <code>LEFT</code>\n"
5807,field,org/eclipse/jface/text/source/ICharacterPairMatcher/RIGHT," Indicates the anchor value "right".\n"
5808,field,org/eclipse/jface/text/source/ICharacterPairMatcher/LEFT," Indicates the anchor value "left".\n"
5809,interface,org/eclipse/jface/text/source/ILineDifferExtension2," Extension interface for {@link ILineDiffer}.\n <p>\n Allows to query the suspension state.\n </p>\n\n @since 3.3\n"
5810,method,org/eclipse/jface/text/source/ILineDifferExtension2/isSuspended/," Returns <code>true</code> if the receiver is suspended, <code>false</code> otherwise.\n\n @return <code>true</code> if the receiver is suspended, <code>false</code> otherwise\n"
5811,class,org/eclipse/jface/text/source/LineRange," Default implementation of {@link ILineRange}.\n\n @since 3.0\n"
5812,method,org/eclipse/jface/text/source/LineRange/getStartLine/,""
5813,method,org/eclipse/jface/text/source/LineRange/getNumberOfLines/,""
5814,method,org/eclipse/jface/text/source/LineRange/LineRange/int;int," Creates a new line range with the given specification.\n\n @param startLine the start line\n @param numberOfLines the number of lines\n"
5820,method,org/eclipse/jface/text/source/ILineDiffInfo/getChangeType/," Returns the type of this line, one out of <code>UNCHANGED</code>, <code>CHANGED</code> or\n <code>ADDED</code>.\n\n @return the type of this line.\n"
5823,field,org/eclipse/jface/text/source/ILineDiffInfo/UNCHANGED,"Denotes an unchanged line. "
5824,field,org/eclipse/jface/text/source/ILineDiffInfo/ADDED,"Denotes an added line. "
5825,field,org/eclipse/jface/text/source/ILineDiffInfo/CHANGED,"Denotes a changed line. "
5829,method,org/eclipse/jface/text/source/IChangeRulerColumn/setHover/IAnnotationHover," Sets the hover of this ruler column.\n\n @param hover the hover that will produce hover information text for this ruler column\n"
5836,method,org/eclipse/jface/text/source/DefaultCharacterPairMatcher/match/IDocument;int,""
5837,method,org/eclipse/jface/text/source/DefaultCharacterPairMatcher/getAnchor/,""
5838,method,org/eclipse/jface/text/source/DefaultCharacterPairMatcher/dispose/,""
5839,method,org/eclipse/jface/text/source/DefaultCharacterPairMatcher/clear/,""
5843,method,org/eclipse/jface/text/source/IOverviewRuler/hasAnnotation/int," Returns whether there is an annotation an the given vertical coordinate. This\n method takes the compression factor of the overview ruler into account.\n\n @param y the y-coordinate\n @return <code>true</code> if there is an annotation, <code>false</code> otherwise\n"
5845,method,org/eclipse/jface/text/source/IOverviewRuler/setAnnotationTypeColor/Object;Color," Sets the color for the given annotation type in this overview ruler.\n\n @param annotationType the annotation type\n @param color the color\n"
5846,method,org/eclipse/jface/text/source/IOverviewRuler/setAnnotationTypeLayer/Object;int," Sets the drawing layer for the given annotation type in this overview ruler.\n\n @param annotationType the annotation type\n @param layer the drawing layer\n"
5848,method,org/eclipse/jface/text/source/IOverviewRuler/removeAnnotationType/Object," Removes the given annotation type from this overview ruler. Annotations\n of the given type are no longer shown in the overview ruler.\n\n @param annotationType the annotation type\n"
5850,method,org/eclipse/jface/text/source/IOverviewRuler/removeHeaderAnnotationType/Object," Removes the given annotation type from the header of this ruler. The\n presence of annotations of the given type is no longer tracked and the\n header is drawn in the default color, depending on the other configured\n configured annotation types.\n\n @param annotationType the annotation type to be removed\n"
5852,class,org/eclipse/jface/text/source/LineChangeHover," A hover for line oriented diffs. It determines the text to show as hover for a certain line in the\n document.\n\n @since 3.0\n"
5853,method,org/eclipse/jface/text/source/LineChangeHover/getHoverInfo/ISourceViewer;int,""
5857,method,org/eclipse/jface/text/source/LineChangeHover/computeLineRange/ISourceViewer;int;int;int," Computes the block of lines which form a contiguous block of changes covering <code>line</code>.\n\n @param viewer the source viewer showing\n @param line the line which a hover is displayed for\n @param min the first line in <code>viewer</code>'s document to consider\n @param max the last line in <code>viewer</code>'s document to consider\n @return the selection in the document displayed in <code>viewer</code> containing <code>line</code>\n that is covered by the hover information returned by the receiver.\n"
5858,method,org/eclipse/jface/text/source/LineChangeHover/getHoverInfo/ISourceViewer;ILineRange;int,""
5859,method,org/eclipse/jface/text/source/LineChangeHover/getHoverLineRange/ISourceViewer;int,""
5860,method,org/eclipse/jface/text/source/LineChangeHover/canHandleMouseCursor/,""
5861,method,org/eclipse/jface/text/source/LineChangeHover/getHoverControlCreator/,""
5862,method,org/eclipse/jface/text/source/LineChangeHover/getInformationPresenterControlCreator/,""
5863,method,org/eclipse/jface/text/source/LineChangeHover/LineChangeHover/,""
5867,method,org/eclipse/jface/text/source/ISourceViewer/setDocument/IDocument;IAnnotationModel," Sets the given document as this viewer's text model and the\n given annotation model as the model for this viewer's visual\n annotations. The presentation is accordingly updated. An appropriate\n <code>TextEvent</code> is issued. This text event does not carry\n a related document event.\n\n @param document the viewer's new input document\n @param annotationModel the model for the viewer's visual annotations\n\n @see ITextViewer#setDocument(IDocument)\n"
5869,method,org/eclipse/jface/text/source/ISourceViewer/getAnnotationModel/," Returns this viewer's annotation model. Use\n {@link ISourceViewerExtension2#getVisualAnnotationModel()}in order to\n get access to the viewer's visual annotation model.\n\n @return this viewer's annotation model\n"
5870,method,org/eclipse/jface/text/source/ISourceViewer/setRangeIndicator/Annotation," Sets the annotation used by this viewer as range indicator. The\n range covered by this annotation is referred to as range indication.\n\n @param rangeIndicator the annotation to be used as this viewer's range indicator\n"
5872,method,org/eclipse/jface/text/source/ISourceViewer/getRangeIndication/," Returns the viewer's range indication.\n\n @return the viewer's range indication.\n"
5874,method,org/eclipse/jface/text/source/ISourceViewer/showAnnotations/boolean," Controls the visibility of annotations and in the case of separate\n presentation areas of text and annotations, the visibility of the\n annotation's presentation area.<p>\n By default, annotations and their presentation area are visible.\n\n @param show indicates the visibility of annotations\n"
5875,field,org/eclipse/jface/text/source/ISourceViewer/CONTENTASSIST_PROPOSALS," Text operation code for requesting content assist to show completion\n proposals for the current insert position.\n"
5876,field,org/eclipse/jface/text/source/ISourceViewer/CONTENTASSIST_CONTEXT_INFORMATION," Text operation code for requesting content assist to show\n the content information for the current insert position.\n"
5877,field,org/eclipse/jface/text/source/ISourceViewer/FORMAT," Text operation code for formatting the selected text or complete document\n of this viewer if the selection is empty.\n"
5878,field,org/eclipse/jface/text/source/ISourceViewer/INFORMATION," Text operation code for requesting information at the current insertion position.\n @since 2.0\n"
5881,method,org/eclipse/jface/text/source/VerticalRuler/getControl/,""
5882,method,org/eclipse/jface/text/source/VerticalRuler/createControl/Composite;ITextViewer,""
5883,method,org/eclipse/jface/text/source/VerticalRuler/doPaint/GC," Draws the vertical ruler w/o drawing the Canvas background.\n\n @param gc  the GC to draw into\n"
5884,method,org/eclipse/jface/text/source/VerticalRuler/doPaint1/GC," Draws the vertical ruler w/o drawing the Canvas background. Uses\n <code>ITextViewerExtension5</code> for its implementation. Will replace\n <code>doPaint(GC)</code>.\n\n @param gc  the GC to draw into\n"
5886,method,org/eclipse/jface/text/source/VerticalRuler/setModel/IAnnotationModel,""
5887,method,org/eclipse/jface/text/source/VerticalRuler/getModel/,""
5888,method,org/eclipse/jface/text/source/VerticalRuler/getWidth/,""
5889,method,org/eclipse/jface/text/source/VerticalRuler/getLineOfLastMouseButtonActivity/,""
5890,method,org/eclipse/jface/text/source/VerticalRuler/toDocumentLineNumber/int,""
5891,method,org/eclipse/jface/text/source/VerticalRuler/widgetLine2ModelLine/ITextViewer;int," Returns the line of the viewer's document that corresponds to the given widget line.\n\n @param viewer the viewer\n @param widgetLine the widget line\n @return the corresponding line of the viewer's document\n @since 2.1\n"
5892,method,org/eclipse/jface/text/source/VerticalRuler/setFont/Font,""
5893,method,org/eclipse/jface/text/source/VerticalRuler/setLocationOfLastMouseButtonActivity/int;int,""
5894,method,org/eclipse/jface/text/source/VerticalRuler/addMouseListener/MouseListener," Adds the given mouse listener.\n\n @param listener the listener to be added\n @deprecated will be removed\n @since 2.0\n"
5895,method,org/eclipse/jface/text/source/VerticalRuler/removeMouseListener/MouseListener," Removes the given mouse listener.\n\n @param listener the listener to be removed\n @deprecated will be removed\n @since 2.0\n"
5896,method,org/eclipse/jface/text/source/VerticalRuler/VerticalRuler/int," Constructs a vertical ruler with the given width.\n\n @param width the width of the vertical ruler\n"
5897,method,org/eclipse/jface/text/source/VerticalRuler/VerticalRuler/int;IAnnotationAccess," Constructs a vertical ruler with the given width and the given annotation\n access.\n\n @param width the width of the vertical ruler\n @param annotationAcccess the annotation access\n @since 3.0\n"
5898,interface,org/eclipse/jface/text/source/IAnnotationHoverExtension2," Extension interface for {@link org.eclipse.jface.text.source.IAnnotationHover} for\n <ul>\n <li>providing whether the information control can interact with the mouse wheel</li>\n </ul>\n\n @see org.eclipse.jface.text.source.IAnnotationHover\n @since 3.2\n"
5899,method,org/eclipse/jface/text/source/IAnnotationHoverExtension2/canHandleMouseWheel/," Returns whether the provided information control can interact with the mouse wheel. I.e. the\n hover will not be closed when the mouse wheel is moved.\n\n @return <code>true</code> if the mouse wheel is handled by the hover\n"
5901,method,org/eclipse/jface/text/source/ILineRange/getStartLine/," Returns the start line of this line range or <code>-1</code>.\n\n @return the start line of this line range or <code>-1</code> if this line range is invalid.\n"
5902,method,org/eclipse/jface/text/source/ILineRange/getNumberOfLines/," Returns the number of lines of this line range or <code>-1</code>.\n\n @return the number of lines in this line range or <code>-1</code> if this line range is invalid.\n"
5903,interface,org/eclipse/jface/text/source/IAnnotationPresentation," Interface for annotations that can take care of their own visible representation.\n\n @since 3.0\n"
5904,method,org/eclipse/jface/text/source/IAnnotationPresentation/getLayer/," Returns the annotations drawing layer.\n\n @return the annotations drawing layer\n"
5906,field,org/eclipse/jface/text/source/IAnnotationPresentation/DEFAULT_LAYER," The default annotation layer.\n"
5908,method,org/eclipse/jface/text/source/IVerticalRulerInfo/getControl/," Returns the ruler's SWT control.\n\n @return the ruler's SWT control\n"
5909,method,org/eclipse/jface/text/source/IVerticalRulerInfo/getLineOfLastMouseButtonActivity/," Returns the line number of the last mouse button activity.\n Based on the input document of the connected text viewer.\n\n @return the line number of the last mouse button activity or <code>-1</code> if\n 			the last mouse activity does not correspond to a valid document line\n"
5910,method,org/eclipse/jface/text/source/IVerticalRulerInfo/toDocumentLineNumber/int," Translates a y-coordinate of the ruler's SWT control into\n the according line number of the document of the connected text viewer.\n\n @param y_coordinate a y-coordinate of the ruler's SWT control\n @return the line number of that coordinate or <code>-1</code> if that\n 			coordinate does not correspond to a valid document line\n"
5911,method,org/eclipse/jface/text/source/IVerticalRulerInfo/getWidth/," Returns the width of this ruler's control.\n\n @return the width of this ruler's control\n"
5912,class,org/eclipse/jface/text/source/AnnotationPainter," Paints decorations for annotations provided by an annotation model and/or\n highlights them in the associated source viewer.\n <p>\n The annotation painter can be configured with drawing strategies. A drawing\n strategy defines the visual presentation of a particular type of annotation\n decoration.</p>\n <p>\n Clients usually instantiate and configure objects of this class.</p>\n\n @since 2.1\n"
5913,method,org/eclipse/jface/text/source/AnnotationPainter/applyTextPresentation/TextPresentation,""
5914,method,org/eclipse/jface/text/source/AnnotationPainter/modelChanged/IAnnotationModel,""
5915,method,org/eclipse/jface/text/source/AnnotationPainter/modelChanged/AnnotationModelEvent,""
5919,method,org/eclipse/jface/text/source/AnnotationPainter/addDrawingStrategy/Object;IDrawingStrategy," Registers a new drawing strategy under the given ID. If there is already a\n strategy registered under <code>id</code>, the old strategy gets replaced.\n <p>The given id can be referenced when adding annotation types, see\n {@link #addAnnotationType(Object, Object)}.</p>\n\n @param id the identifier under which the strategy can be referenced, not <code>null</code>\n @param strategy the new strategy\n @since 3.0\n"
5920,method,org/eclipse/jface/text/source/AnnotationPainter/addTextStyleStrategy/Object;ITextStyleStrategy," Registers a new drawing strategy under the given ID. If there is already\n a strategy registered under <code>id</code>, the old strategy gets\n replaced.\n <p>\n The given id can be referenced when adding annotation types, see\n {@link #addAnnotationType(Object, Object)}.\n </p>\n\n @param id the identifier under which the strategy can be referenced, not <code>null</code>\n @param strategy the new strategy\n @since 3.4\n"
5922,method,org/eclipse/jface/text/source/AnnotationPainter/removeAnnotationType/Object," Removes the given annotation type from the list of annotation types whose\n annotations are painted by this painter. If the annotation type is not\n in this list, this method is without effect.\n\n @param annotationType the annotation type\n"
5923,method,org/eclipse/jface/text/source/AnnotationPainter/removeHighlightAnnotationType/Object," Removes the given annotation type from the list of annotation types whose\n annotations are highlighted by this painter. If the annotation type is not\n in this list, this method is without effect.\n\n @param annotationType the annotation type\n @since 3.0\n"
5924,method,org/eclipse/jface/text/source/AnnotationPainter/removeAllAnnotationTypes/," Clears the list of annotation types whose annotations are\n painted by this painter.\n"
5925,method,org/eclipse/jface/text/source/AnnotationPainter/isPaintingAnnotations/," Returns whether the list of annotation types whose annotations are painted\n by this painter contains at least on element.\n\n @return <code>true</code> if there is an annotation type whose annotations are painted\n"
5926,method,org/eclipse/jface/text/source/AnnotationPainter/dispose/,""
5927,method,org/eclipse/jface/text/source/AnnotationPainter/paintControl/PaintEvent,""
5929,method,org/eclipse/jface/text/source/AnnotationPainter/deactivate/boolean,""
5930,method,org/eclipse/jface/text/source/AnnotationPainter/isRepaintReason/int," Returns whether the given reason causes a repaint.\n\n @param reason the reason\n @return <code>true</code> if repaint reason, <code>false</code> otherwise\n @since 3.0\n"
5931,method,org/eclipse/jface/text/source/AnnotationPainter/findAnnotationModel/ISourceViewer," Retrieves the annotation model from the given source viewer.\n\n @param sourceViewer the source viewer\n @return the source viewer's annotation model or <code>null</code> if none can be found\n @since 3.0\n"
5932,method,org/eclipse/jface/text/source/AnnotationPainter/paint/int,""
5933,method,org/eclipse/jface/text/source/AnnotationPainter/setPositionManager/IPaintPositionManager,""
5934,method,org/eclipse/jface/text/source/AnnotationPainter/AnnotationPainter/ISourceViewer;IAnnotationAccess," Creates a new annotation painter for the given source viewer and with the\n given annotation access. The painter is not initialized, i.e. no\n annotation types are configured to be painted.\n\n @param sourceViewer the source viewer for this painter\n @param access the annotation access for this painter\n"
5935,interface,org/eclipse/jface/text/source/AnnotationPainter/IDrawingStrategy," A drawing strategy draws the decoration for an annotation onto the text widget.\n\n @since 3.0\n"
5937,class,org/eclipse/jface/text/source/AnnotationPainter/SquigglesStrategy," Squiggles drawing strategy.\n\n @since 3.0\n @deprecated As of 3.4, replaced by {@link AnnotationPainter.UnderlineStrategy}\n"
5938,method,org/eclipse/jface/text/source/AnnotationPainter/SquigglesStrategy/draw/Annotation;GC;StyledText;int;int;Color,""
5939,method,org/eclipse/jface/text/source/AnnotationPainter/SquigglesStrategy/AnnotationPainter/SquigglesStrategy/,""
5940,class,org/eclipse/jface/text/source/AnnotationPainter/NullStrategy," Drawing strategy that does nothing.\n\n @since 3.0\n"
5941,method,org/eclipse/jface/text/source/AnnotationPainter/NullStrategy/draw/Annotation;GC;StyledText;int;int;Color,""
5942,method,org/eclipse/jface/text/source/AnnotationPainter/NullStrategy/AnnotationPainter/NullStrategy/,""
5943,interface,org/eclipse/jface/text/source/AnnotationPainter/ITextStyleStrategy," A text style painting strategy draws the decoration for an annotation\n onto the text widget by applying a {@link TextStyle} on a given\n {@link StyleRange}.\n\n @since 3.4\n"
5944,method,org/eclipse/jface/text/source/AnnotationPainter/ITextStyleStrategy/applyTextStyle/StyleRange;Color," Applies a text style on the given <code>StyleRange</code>.\n\n @param styleRange the style range on which to apply the text style\n @param annotationColor the color of the annotation\n"
5945,class,org/eclipse/jface/text/source/AnnotationPainter/HighlightingStrategy," @since 3.4\n"
5946,method,org/eclipse/jface/text/source/AnnotationPainter/HighlightingStrategy/applyTextStyle/StyleRange;Color,""
5947,method,org/eclipse/jface/text/source/AnnotationPainter/HighlightingStrategy/AnnotationPainter/HighlightingStrategy/,""
5948,class,org/eclipse/jface/text/source/AnnotationPainter/UnderlineStrategy," Underline text style strategy.\n\n @since 3.4\n"
5949,method,org/eclipse/jface/text/source/AnnotationPainter/UnderlineStrategy/applyTextStyle/StyleRange;Color,""
5950,method,org/eclipse/jface/text/source/AnnotationPainter/UnderlineStrategy/AnnotationPainter/UnderlineStrategy/int,""
5951,class,org/eclipse/jface/text/source/AnnotationPainter/BoxStrategy," Box text style strategy.\n\n @since 3.4\n"
5952,method,org/eclipse/jface/text/source/AnnotationPainter/BoxStrategy/applyTextStyle/StyleRange;Color,""
5953,method,org/eclipse/jface/text/source/AnnotationPainter/BoxStrategy/AnnotationPainter/BoxStrategy/int,""
5955,method,org/eclipse/jface/text/source/AbstractRulerColumn/createControl/CompositeRuler;Composite,""
5957,method,org/eclipse/jface/text/source/AbstractRulerColumn/getControl/,""
5958,method,org/eclipse/jface/text/source/AbstractRulerColumn/setWidth/int," The new width in pixels. The <code>DEFAULT_WIDTH</code> constant\n specifies the default width.\n\n @param width the new width\n"
5959,method,org/eclipse/jface/text/source/AbstractRulerColumn/getWidth/,""
5962,method,org/eclipse/jface/text/source/AbstractRulerColumn/getFont/," Returns the current font. If a font has not been explicitly set, the widget's font is\n returned.\n\n @return the font used to render text on the ruler.\n"
5963,method,org/eclipse/jface/text/source/AbstractRulerColumn/setTextInset/int," Sets the text inset (padding) used to draw text in {@link #paintLine(GC, int, int, int, int)}.\n\n @param textInset the new text inset\n"
5964,method,org/eclipse/jface/text/source/AbstractRulerColumn/getTextInset/," Returns the text inset for text drawn by {@link #paintLine(GC, int, int, int, int)}. The\n <code>DEFAULT_TEXT_INSET</code> constant specifies the default inset in pixels.\n\n @return the text inset for text\n"
5965,method,org/eclipse/jface/text/source/AbstractRulerColumn/setModel/IAnnotationModel,""
5966,method,org/eclipse/jface/text/source/AbstractRulerColumn/getModel/,""
5967,method,org/eclipse/jface/text/source/AbstractRulerColumn/setDefaultBackground/Color," Sets the default background color for this column. The default background is used as default\n implementation of {@link #computeBackground(int)} and also to paint the area of the ruler\n that does not correspond to any lines (when the viewport is not entirely filled with lines).\n\n @param background the default background color, <code>null</code> to use the text widget's\n        background\n"
5969,method,org/eclipse/jface/text/source/AbstractRulerColumn/setHover/IAnnotationHover," Sets the annotation hover.\n\n @param hover the annotation hover, <code>null</code> for no hover\n"
5970,method,org/eclipse/jface/text/source/AbstractRulerColumn/getHover/,""
5972,method,org/eclipse/jface/text/source/AbstractRulerColumn/redraw/,""
5973,method,org/eclipse/jface/text/source/AbstractRulerColumn/redraw/ILineRange," Marks the region covered by <code>lines</code> as needing to be redrawn.\n\n @param lines the lines to be redrawn in document coordinates\n"
5979,method,org/eclipse/jface/text/source/AbstractRulerColumn/getLineOfLastMouseButtonActivity/,""
5980,method,org/eclipse/jface/text/source/AbstractRulerColumn/toDocumentLineNumber/int,""
5981,method,org/eclipse/jface/text/source/AbstractRulerColumn/addVerticalRulerListener/IVerticalRulerListener,""
5982,method,org/eclipse/jface/text/source/AbstractRulerColumn/removeVerticalRulerListener/IVerticalRulerListener,""
5983,method,org/eclipse/jface/text/source/AbstractRulerColumn/AbstractRulerColumn/," Creates a new ruler.\n"
5984,class,org/eclipse/jface/text/source/AnnotationColumn," @deprecated use\n             {@link org.eclipse.jface.text.source.AnnotationRulerColumn#AnnotationRulerColumn(int)}\n             instead.\n @since 2.0\n"
5985,method,org/eclipse/jface/text/source/AnnotationColumn/AnnotationColumn/int," Creates a new <code>AnnotationColumn</code> of the given width.\n\n @param width the width of this column\n @deprecated Use\n             {@link org.eclipse.jface.text.source.AnnotationRulerColumn#AnnotationRulerColumn(int)}\n             instead\n"
5986,interface,org/eclipse/jface/text/source/ISourceViewerExtension4," Extension interface for {@link org.eclipse.jface.text.source.ISourceViewer}.\n <p>\n It introduces API to access a minimal set of content assistant APIs.</li>\n </p>\n\n @see IContentAssistant\n @since 3.4\n"
5987,method,org/eclipse/jface/text/source/ISourceViewerExtension4/getContentAssistantFacade/," Returns a facade for this viewer's content assistant.\n\n @return a content assistant facade or <code>null</code> if none is\n         configured\n"
5988,class,org/eclipse/jface/text/source/DefaultAnnotationHover," Standard implementation of {@link org.eclipse.jface.text.source.IAnnotationHover}.\n\n @since 3.2\n"
5989,method,org/eclipse/jface/text/source/DefaultAnnotationHover/getHoverInfo/ISourceViewer;int,""
5993,method,org/eclipse/jface/text/source/DefaultAnnotationHover/DefaultAnnotationHover/," Creates a new default annotation hover.\n\n @since 3.4\n"
5995,interface,org/eclipse/jface/text/source/ISourceViewerExtension2," Extension interface for {@link org.eclipse.jface.text.source.ISourceViewer}.<p>\n Allows the source viewer to roll back a previous configuration process and allows\n clients access to the viewer's visual annotation model.\n\n @since 3.0\n"
5997,method,org/eclipse/jface/text/source/ISourceViewerExtension2/getVisualAnnotationModel/," Returns the visual annotation model of this viewer.\n\n @return the visual annotation model of this viewer\n"
5999,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/createControl/CompositeRuler;Composite,""
6000,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/getLineOfLastMouseButtonActivity/,""
6001,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/toDocumentLineNumber/int,""
6002,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setModel/IAnnotationModel,""
6003,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setDisplayMode/boolean," Sets the display mode of the ruler. If character mode is set to <code>true</code>, diff\n information will be displayed textually on the line number ruler.\n\n @param characterMode <code>true</code> if diff information is to be displayed textually.\n"
6004,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/getModel/,""
6005,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/createDisplayString/int,""
6006,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/computeNumberOfDigits/,""
6007,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/addVerticalRulerListener/IVerticalRulerListener,""
6008,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/removeVerticalRulerListener/IVerticalRulerListener,""
6009,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/getHover/,""
6010,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setHover/IAnnotationHover,""
6011,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setBackground/Color,""
6012,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setAddedColor/Color,""
6013,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setChangedColor/Color,""
6014,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setDeletedColor/Color,""
6015,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setRevisionInformation/RevisionInformation,""
6016,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/getRevisionSelectionProvider/,""
6017,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/setRevisionRenderingMode/RenderingMode,""
6019,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/getWidth/,""
6020,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/isShowingLineNumbers/," Returns <code>true</code> if the ruler is showing line numbers, <code>false</code>\n otherwise\n\n @return <code>true</code> if line numbers are shown, <code>false</code> otherwise\n @since 3.3\n"
6021,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/isShowingRevisionInformation/," Returns <code>true</code> if the ruler is showing revision information, <code>false</code>\n otherwise\n\n @return <code>true</code> if revision information is shown, <code>false</code> otherwise\n @since 3.3\n"
6022,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/isShowingChangeInformation/," Returns <code>true</code> if the ruler is showing change information, <code>false</code>\n otherwise\n\n @return <code>true</code> if change information is shown, <code>false</code> otherwise\n @since 3.3\n"
6023,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/showRevisionAuthor/boolean,""
6024,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/showRevisionId/boolean,""
6025,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/addRevisionListener/IRevisionListener,""
6026,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/removeRevisionListener/IRevisionListener,""
6027,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/handleDispose/,""
6028,method,org/eclipse/jface/text/source/LineNumberChangeRulerColumn/LineNumberChangeRulerColumn/ISharedTextColors," Creates a new instance.\n\n @param sharedColors the shared colors provider to use\n"
6032,method,org/eclipse/jface/text/source/ISourceViewerExtension3/getCurrentAnnotationHover/," Returns the currently displayed annotation hover if any, <code>null</code> otherwise.\n\n @return the currently displayed annotation hover or <code>null</code>\n"
6034,method,org/eclipse/jface/text/source/ChangeRulerColumn/createControl/CompositeRuler;Composite,""
6035,method,org/eclipse/jface/text/source/ChangeRulerColumn/handleDispose/," Disposes the column's resources.\n"
6036,method,org/eclipse/jface/text/source/ChangeRulerColumn/getVisibleLinesInViewport/," Returns the view port height in lines.\n\n @return the view port height in lines\n @deprecated as of 3.2 the number of lines in the viewport cannot be computed because\n             StyledText supports variable line heights\n"
6037,method,org/eclipse/jface/text/source/ChangeRulerColumn/isViewerCompletelyShown/," Returns <code>true</code> if the viewport displays the entire viewer contents, i.e. the\n viewer is not vertically scrollable.\n\n @return <code>true</code> if the viewport displays the entire contents, <code>false</code> otherwise\n @since 3.2\n"
6038,method,org/eclipse/jface/text/source/ChangeRulerColumn/redraw/,""
6039,method,org/eclipse/jface/text/source/ChangeRulerColumn/setFont/Font,""
6040,method,org/eclipse/jface/text/source/ChangeRulerColumn/getLineOfLastMouseButtonActivity/,""
6041,method,org/eclipse/jface/text/source/ChangeRulerColumn/toDocumentLineNumber/int,""
6042,method,org/eclipse/jface/text/source/ChangeRulerColumn/getHover/,""
6043,method,org/eclipse/jface/text/source/ChangeRulerColumn/setHover/IAnnotationHover,""
6044,method,org/eclipse/jface/text/source/ChangeRulerColumn/setModel/IAnnotationModel,""
6045,method,org/eclipse/jface/text/source/ChangeRulerColumn/setBackground/Color,""
6046,method,org/eclipse/jface/text/source/ChangeRulerColumn/setAddedColor/Color,""
6047,method,org/eclipse/jface/text/source/ChangeRulerColumn/setChangedColor/Color,""
6048,method,org/eclipse/jface/text/source/ChangeRulerColumn/setDeletedColor/Color,""
6049,method,org/eclipse/jface/text/source/ChangeRulerColumn/getModel/,""
6050,method,org/eclipse/jface/text/source/ChangeRulerColumn/getControl/,""
6051,method,org/eclipse/jface/text/source/ChangeRulerColumn/getWidth/,""
6053,method,org/eclipse/jface/text/source/ChangeRulerColumn/addVerticalRulerListener/IVerticalRulerListener,""
6054,method,org/eclipse/jface/text/source/ChangeRulerColumn/removeVerticalRulerListener/IVerticalRulerListener,""
6055,method,org/eclipse/jface/text/source/ChangeRulerColumn/setRevisionInformation/RevisionInformation,""
6056,method,org/eclipse/jface/text/source/ChangeRulerColumn/getRevisionSelectionProvider/," Returns the revision selection provider.\n\n @return the revision selection provider\n @since 3.2\n"
6057,method,org/eclipse/jface/text/source/ChangeRulerColumn/ChangeRulerColumn/," Creates a new ruler column.\n\n @deprecated since 3.2 use {@link #ChangeRulerColumn(ISharedTextColors)} instead\n"
6058,method,org/eclipse/jface/text/source/ChangeRulerColumn/ChangeRulerColumn/ISharedTextColors," Creates a new revision ruler column.\n\n @param sharedColors the colors to look up RGBs\n @since 3.2\n"
6059,interface,org/eclipse/jface/text/source/IVerticalRulerExtension," Extension interface for {@link IVerticalRuler}.\n <p>\n Allows to set the font of the vertical ruler and to set the location of the\n last mouse button activity.\n\n @since 2.0\n"
6060,method,org/eclipse/jface/text/source/IVerticalRulerExtension/setFont/Font," Sets the font of this vertical ruler.\n\n @param font the new font of the vertical ruler\n"
6061,method,org/eclipse/jface/text/source/IVerticalRulerExtension/setLocationOfLastMouseButtonActivity/int;int," Sets the location of the last mouse button activity. This method is used for\n example by external mouse listeners.\n\n @param x the x-coordinate\n @param y the y-coordinate\n"
6062,class,org/eclipse/jface/text/source/MatchingCharacterPainter," Highlights the peer character matching the character near the caret position.\n This painter can be configured with an\n {@link org.eclipse.jface.text.source.ICharacterPairMatcher}.\n <p>\n Clients instantiate and configure object of this class.</p>\n\n @since 2.1\n"
6063,method,org/eclipse/jface/text/source/MatchingCharacterPainter/setColor/Color," Sets the color in which to highlight the match character.\n\n @param color the color\n"
6064,method,org/eclipse/jface/text/source/MatchingCharacterPainter/dispose/,""
6065,method,org/eclipse/jface/text/source/MatchingCharacterPainter/deactivate/boolean,""
6066,method,org/eclipse/jface/text/source/MatchingCharacterPainter/paintControl/PaintEvent,""
6067,method,org/eclipse/jface/text/source/MatchingCharacterPainter/paint/int,""
6068,method,org/eclipse/jface/text/source/MatchingCharacterPainter/setPositionManager/IPaintPositionManager,""
6071,method,org/eclipse/jface/text/source/TextInvocationContext/getOffset/,""
6072,method,org/eclipse/jface/text/source/TextInvocationContext/getLength/,""
6073,method,org/eclipse/jface/text/source/TextInvocationContext/getSourceViewer/,""
6074,method,org/eclipse/jface/text/source/TextInvocationContext/TextInvocationContext/ISourceViewer;int;int,""
6076,method,org/eclipse/jface/text/source/ImageUtilities/drawImage/Image;GC;Canvas;Rectangle;int;int," Draws an image aligned inside the given rectangle on the given canvas.\n\n @param image the image to be drawn\n @param gc the drawing GC\n @param canvas the canvas on which to draw\n @param r the clipping rectangle\n @param halign the horizontal alignment of the image to be drawn\n @param valign the vertical alignment of the image to be drawn\n"
6077,method,org/eclipse/jface/text/source/ImageUtilities/drawImage/Image;GC;Canvas;Rectangle;int," Draws an image aligned inside the given rectangle on the given canvas.\n\n @param image the image to be drawn\n @param gc the drawing GC\n @param canvas the canvas on which to draw\n @param r the clipping rectangle\n @param align the alignment of the image to be drawn\n"
6078,method,org/eclipse/jface/text/source/ImageUtilities/ImageUtilities/,""
6080,method,org/eclipse/jface/text/source/ISharedTextColors/getColor/RGB," Returns the color object for the value represented by the given\n <code>RGB</code> object.\n\n @param rgb the RBG color specification\n @return the color object for the given RGB value\n"
6081,method,org/eclipse/jface/text/source/ISharedTextColors/dispose/," Tells this object to dispose all its managed colors.\n"
6083,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getControl/,""
6084,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getWidth/,""
6085,method,org/eclipse/jface/text/source/AnnotationRulerColumn/createControl/CompositeRuler;Composite,""
6086,method,org/eclipse/jface/text/source/AnnotationRulerColumn/isPropagatingMouseListener/," Tells whether this ruler column propagates mouse listener\n events to its parent.\n\n @return <code>true</code> if propagating to parent\n @since 3.0\n"
6087,method,org/eclipse/jface/text/source/AnnotationRulerColumn/mouseDown/int," Hook method for a mouse down event on the given ruler line.\n \n @param rulerLine the ruler line\n @since 3.5\n"
6088,method,org/eclipse/jface/text/source/AnnotationRulerColumn/mouseDoubleClicked/int," Hook method for a mouse double click event on the given ruler line.\n\n @param rulerLine the ruler line\n"
6090,method,org/eclipse/jface/text/source/AnnotationRulerColumn/hasAnnotation/int," Tells whether the given line contains an annotation.\n\n @param lineNumber the line number\n @return <code>true</code> if the given line contains an annotation\n"
6091,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getInclusiveTopIndexStartOffset/," Returns the document offset of the upper left corner of the source viewer's\n view port, possibly including partially visible lines.\n\n @return document offset of the upper left corner including partially visible lines\n"
6092,method,org/eclipse/jface/text/source/AnnotationRulerColumn/doPaint/GC," Draws the vertical ruler w/o drawing the Canvas background.\n\n @param gc the GC to draw into\n"
6093,method,org/eclipse/jface/text/source/AnnotationRulerColumn/doPaint1/GC," Draws the vertical ruler w/o drawing the Canvas background. Implementation based\n on <code>ITextViewerExtension5</code>. Will replace <code>doPaint(GC)</code>.\n\n @param gc the GC to draw into\n"
6094,method,org/eclipse/jface/text/source/AnnotationRulerColumn/redraw/,""
6095,method,org/eclipse/jface/text/source/AnnotationRulerColumn/setModel/IAnnotationModel,""
6096,method,org/eclipse/jface/text/source/AnnotationRulerColumn/setFont/Font,""
6097,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getCachedTextViewer/," Returns the cached text viewer.\n\n @return the cached text viewer\n"
6098,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getModel/,""
6100,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getLineOfLastMouseButtonActivity/,""
6101,method,org/eclipse/jface/text/source/AnnotationRulerColumn/toDocumentLineNumber/int,""
6102,method,org/eclipse/jface/text/source/AnnotationRulerColumn/removeAnnotationType/Object," Removes the given annotation type from this annotation ruler column.\n Annotations of the given type are no longer shown in this annotation\n ruler column.\n\n @param annotationType the annotation type\n @since 3.0\n"
6103,method,org/eclipse/jface/text/source/AnnotationRulerColumn/getHover/,""
6104,method,org/eclipse/jface/text/source/AnnotationRulerColumn/setHover/IAnnotationHover," @param hover The hover to set.\n @since 3.0\n"
6105,method,org/eclipse/jface/text/source/AnnotationRulerColumn/addVerticalRulerListener/IVerticalRulerListener,""
6106,method,org/eclipse/jface/text/source/AnnotationRulerColumn/removeVerticalRulerListener/IVerticalRulerListener,""
6107,method,org/eclipse/jface/text/source/AnnotationRulerColumn/AnnotationRulerColumn/IAnnotationModel;int;IAnnotationAccess," Constructs this column with the given arguments.\n\n @param model the annotation model to get the annotations from\n @param width the width of the vertical ruler\n @param annotationAccess the annotation access\n @since 3.0\n"
6108,method,org/eclipse/jface/text/source/AnnotationRulerColumn/AnnotationRulerColumn/int;IAnnotationAccess," Constructs this column with the given arguments.\n\n @param width the width of the vertical ruler\n @param annotationAccess the annotation access\n @since 3.0\n"
6109,method,org/eclipse/jface/text/source/AnnotationRulerColumn/AnnotationRulerColumn/IAnnotationModel;int," Constructs this column with the given arguments.\n\n @param model the annotation model to get the annotations from\n @param width the width of the vertical ruler\n"
6110,method,org/eclipse/jface/text/source/AnnotationRulerColumn/AnnotationRulerColumn/int," Constructs this column with the given width.\n\n @param width the width of the vertical ruler\n"
6112,method,org/eclipse/jface/text/source/IAnnotationAccess/getType/Annotation," Returns the type of the given annotation.\n\n @param annotation the annotation\n @return the type of the given annotation or <code>null</code> if it has none.\n @deprecated use <code>Annotation.getType()</code>\n"
6114,method,org/eclipse/jface/text/source/IAnnotationAccess/isTemporary/Annotation," Returns whether the given annotation is temporary rather than persistent.\n\n @param annotation the annotation\n @return <code>true</code> if the annotation is temporary,\n 	<code>false</code> otherwise\n @deprecated use <code>Annotation.isPersistent()</code>\n"
6116,method,org/eclipse/jface/text/source/ILineDifferExtension/suspend/," Suspends the receiver. All differences are cleared.\n"
6119,method,org/eclipse/jface/text/source/SourceViewer/createControl/Composite;int,""
6121,method,org/eclipse/jface/text/source/SourceViewer/getControl/,""
6122,method,org/eclipse/jface/text/source/SourceViewer/setAnnotationHover/IAnnotationHover,""
6124,method,org/eclipse/jface/text/source/SourceViewer/configure/SourceViewerConfiguration,""
6127,method,org/eclipse/jface/text/source/SourceViewer/setHoverEnrichMode/EnrichMode,""
6128,method,org/eclipse/jface/text/source/SourceViewer/activatePlugins/,""
6129,method,org/eclipse/jface/text/source/SourceViewer/setDocument/IDocument,""
6130,method,org/eclipse/jface/text/source/SourceViewer/setDocument/IDocument;int;int,""
6131,method,org/eclipse/jface/text/source/SourceViewer/setDocument/IDocument;IAnnotationModel,""
6132,method,org/eclipse/jface/text/source/SourceViewer/createVisualAnnotationModel/IAnnotationModel," Creates the visual annotation model on top of the given annotation model.\n\n @param annotationModel the wrapped annotation model\n @return the visual annotation model on top of the given annotation model\n @since 3.0\n"
6133,method,org/eclipse/jface/text/source/SourceViewer/disposeVisualAnnotationModel/," Disposes the visual annotation model.\n\n @since 3.1\n"
6134,method,org/eclipse/jface/text/source/SourceViewer/setDocument/IDocument;IAnnotationModel;int;int,""
6135,method,org/eclipse/jface/text/source/SourceViewer/getAnnotationModel/,""
6136,method,org/eclipse/jface/text/source/SourceViewer/getQuickAssistAssistant/,""
6138,method,org/eclipse/jface/text/source/SourceViewer/getQuickAssistInvocationContext/,""
6139,method,org/eclipse/jface/text/source/SourceViewer/getVisualAnnotationModel/,""
6140,method,org/eclipse/jface/text/source/SourceViewer/unconfigure/,""
6141,method,org/eclipse/jface/text/source/SourceViewer/handleDispose/,""
6142,method,org/eclipse/jface/text/source/SourceViewer/canDoOperation/int,""
6145,method,org/eclipse/jface/text/source/SourceViewer/restoreSelection/," Restores a previously saved selection in the document.\n <p>\n If no selection was previously saved, nothing happens.\n\n @since 3.0\n"
6146,method,org/eclipse/jface/text/source/SourceViewer/clearRememberedSelection/,""
6147,method,org/eclipse/jface/text/source/SourceViewer/doOperation/int,""
6149,method,org/eclipse/jface/text/source/SourceViewer/enableOperation/int;boolean,""
6150,method,org/eclipse/jface/text/source/SourceViewer/setRangeIndicator/Annotation,""
6151,method,org/eclipse/jface/text/source/SourceViewer/setRangeIndication/int;int;boolean,""
6152,method,org/eclipse/jface/text/source/SourceViewer/getRangeIndication/,""
6153,method,org/eclipse/jface/text/source/SourceViewer/removeRangeIndication/,""
6154,method,org/eclipse/jface/text/source/SourceViewer/showAnnotations/boolean,""
6155,method,org/eclipse/jface/text/source/SourceViewer/getVerticalRuler/," Returns the vertical ruler of this viewer.\n\n @return the vertical ruler of this viewer\n @since 3.0\n"
6156,method,org/eclipse/jface/text/source/SourceViewer/showAnnotationsOverview/boolean,""
6157,method,org/eclipse/jface/text/source/SourceViewer/getCurrentAnnotationHover/,""
6158,method,org/eclipse/jface/text/source/SourceViewer/SourceViewer/Composite;IVerticalRuler;int," Constructs a new source viewer. The vertical ruler is initially visible.\n The viewer has not yet been initialized with a source viewer configuration.\n\n @param parent the parent of the viewer's control\n @param ruler the vertical ruler used by this source viewer\n @param styles the SWT style bits for the viewer's control,\n 			<em>if <code>SWT.WRAP</code> is set then a custom document adapter needs to be provided, see {@link #createDocumentAdapter()}\n"
6162,field,org/eclipse/jface/text/source/SourceViewer/_SELECTION_POSITION_CATEGORY," Partial name of the position category to manage remembered selections.\n @since 3.0\n"
6163,field,org/eclipse/jface/text/source/SourceViewer/MODEL_ANNOTATION_MODEL," Key of the model annotation model inside the visual annotation model.\n @since 3.0\n"
6164,field,org/eclipse/jface/text/source/SourceViewer/fContentAssistant,"The viewer's content assistant "
6165,field,org/eclipse/jface/text/source/SourceViewer/fContentAssistantInstalled," Flag indicating whether the viewer's content assistant is installed.\n @since 2.0\n"
6168,field,org/eclipse/jface/text/source/SourceViewer/fContentFormatter,"The viewer's content formatter "
6169,field,org/eclipse/jface/text/source/SourceViewer/fReconciler,"The viewer's model reconciler "
6170,field,org/eclipse/jface/text/source/SourceViewer/fPresentationReconciler,"The viewer's presentation reconciler "
6171,field,org/eclipse/jface/text/source/SourceViewer/fAnnotationHover,"The viewer's annotation hover "
6172,field,org/eclipse/jface/text/source/SourceViewer/fSelections," Stack of saved selections in the underlying document\n @since 3.0\n"
6173,field,org/eclipse/jface/text/source/SourceViewer/fSelectionUpdater," Position updater for saved selections\n @since 3.0\n"
6174,field,org/eclipse/jface/text/source/SourceViewer/fSelectionCategory," Position category used by the selection updater\n @since 3.0\n"
6175,field,org/eclipse/jface/text/source/SourceViewer/fOverviewRulerAnnotationHover," The viewer's overview ruler annotation hover\n @since 3.0\n"
6176,field,org/eclipse/jface/text/source/SourceViewer/fInformationPresenter," The viewer's information presenter\n @since 2.0\n"
6177,class,org/eclipse/jface/text/source/SourceViewer/RulerLayout," Layout of a source viewer. Vertical ruler, text widget, and overview ruler are shown side by side.\n"
6178,method,org/eclipse/jface/text/source/SourceViewer/RulerLayout/computeSize/Composite;int;int;boolean,""
6179,method,org/eclipse/jface/text/source/SourceViewer/RulerLayout/layout/Composite;boolean,""
6182,class,org/eclipse/jface/text/source/LineNumberRulerColumn," A vertical ruler column displaying line numbers.\n Clients usually instantiate and configure object of this class.\n\n @since 2.0\n"
6183,method,org/eclipse/jface/text/source/LineNumberRulerColumn/setForeground/Color," Sets the foreground color of this column.\n\n @param foreground the foreground color\n"
6184,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getForeground/," Returns the foreground color being used to print the line numbers.\n\n @return the configured foreground color\n @since 3.0\n"
6185,method,org/eclipse/jface/text/source/LineNumberRulerColumn/setBackground/Color," Sets the background color of this column.\n\n @param background the background color\n"
6186,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getBackground/Display," Returns the System background color for list widgets.\n\n @param display the display\n @return the System background color for list widgets\n"
6187,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getControl/,""
6188,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getWidth/,""
6191,method,org/eclipse/jface/text/source/LineNumberRulerColumn/layout/boolean," Layouts the enclosing viewer to adapt the layout to changes of the\n size of the individual components.\n\n @param redraw <code>true</code> if this column can be redrawn\n"
6192,method,org/eclipse/jface/text/source/LineNumberRulerColumn/computeIndentations/," Computes the indentations for the given font and stores them in\n <code>fIndentation</code>.\n"
6193,method,org/eclipse/jface/text/source/LineNumberRulerColumn/createControl/CompositeRuler;Composite,""
6194,method,org/eclipse/jface/text/source/LineNumberRulerColumn/handleDispose/," Disposes the column's resources.\n"
6195,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getVisibleLinesInViewport/," Returns the view port height in lines.\n\n @return the view port height in lines\n @deprecated as of 3.2 the number of lines in the viewport cannot be computed because\n             StyledText supports variable line heights\n"
6196,method,org/eclipse/jface/text/source/LineNumberRulerColumn/isViewerCompletelyShown/," Returns <code>true</code> if the viewport displays the entire viewer contents, i.e. the\n viewer is not vertically scrollable.\n\n @return <code>true</code> if the viewport displays the entire contents, <code>false</code> otherwise\n @since 3.2\n"
6197,method,org/eclipse/jface/text/source/LineNumberRulerColumn/createDisplayString/int," Computes the string to be printed for <code>line</code>. The default implementation returns\n <code>Integer.toString(line + 1)</code>.\n\n @param line the line number for which the line number string is generated\n @return the string to be printed on the line number bar for <code>line</code>\n @since 3.0\n"
6200,method,org/eclipse/jface/text/source/LineNumberRulerColumn/redraw/,""
6201,method,org/eclipse/jface/text/source/LineNumberRulerColumn/setModel/IAnnotationModel,""
6202,method,org/eclipse/jface/text/source/LineNumberRulerColumn/setFont/Font,""
6203,method,org/eclipse/jface/text/source/LineNumberRulerColumn/getParentRuler/," Returns the parent (composite) ruler of this ruler column.\n\n @return the parent ruler\n @since 3.0\n"
6204,method,org/eclipse/jface/text/source/LineNumberRulerColumn/LineNumberRulerColumn/," Constructs a new vertical ruler column.\n"
6205,class,org/eclipse/jface/text/source/OverviewRuler," Ruler presented next to a source viewer showing all annotations of the\n viewer's annotation model in a compact format. The ruler has the same height\n as the source viewer.\n <p>\n Clients usually instantiate and configure objects of this class.</p>\n\n @since 2.1\n"
6206,method,org/eclipse/jface/text/source/OverviewRuler/getControl/,""
6207,method,org/eclipse/jface/text/source/OverviewRuler/getWidth/,""
6208,method,org/eclipse/jface/text/source/OverviewRuler/setModel/IAnnotationModel,""
6209,method,org/eclipse/jface/text/source/OverviewRuler/createControl/Composite;ITextViewer,""
6210,method,org/eclipse/jface/text/source/OverviewRuler/update/,""
6211,method,org/eclipse/jface/text/source/OverviewRuler/addAnnotationType/Object,""
6212,method,org/eclipse/jface/text/source/OverviewRuler/removeAnnotationType/Object,""
6213,method,org/eclipse/jface/text/source/OverviewRuler/setAnnotationTypeLayer/Object;int,""
6214,method,org/eclipse/jface/text/source/OverviewRuler/setAnnotationTypeColor/Object;Color,""
6215,method,org/eclipse/jface/text/source/OverviewRuler/getLineOfLastMouseButtonActivity/,""
6216,method,org/eclipse/jface/text/source/OverviewRuler/toDocumentLineNumber/int,""
6217,method,org/eclipse/jface/text/source/OverviewRuler/getModel/,""
6218,method,org/eclipse/jface/text/source/OverviewRuler/getAnnotationHeight/,""
6219,method,org/eclipse/jface/text/source/OverviewRuler/hasAnnotation/int,""
6220,method,org/eclipse/jface/text/source/OverviewRuler/getHeaderControl/,""
6221,method,org/eclipse/jface/text/source/OverviewRuler/addHeaderAnnotationType/Object,""
6222,method,org/eclipse/jface/text/source/OverviewRuler/removeHeaderAnnotationType/Object,""
6225,interface,org/eclipse/jface/text/source/IAnnotationHoverExtension," Extension interface for {@link org.eclipse.jface.text.source.IAnnotationHover} for\n <ul>\n <li>providing its own information control creator</li>\n <li>providing the range of lines for which the hover for a given line is valid</li>\n <li>providing whether the information control can interact with the mouse cursor</li>\n </ul>\n\n @see org.eclipse.jface.text.IInformationControlCreator\n @see org.eclipse.jface.text.source.IAnnotationHover\n @since 3.0\n"
6226,method,org/eclipse/jface/text/source/IAnnotationHoverExtension/getHoverControlCreator/," Returns the hover control creator of this annotation hover.\n\n @return the hover control creator\n"
6229,method,org/eclipse/jface/text/source/IAnnotationHoverExtension/getHoverLineRange/ISourceViewer;int," Returns the range of lines that include the given line number for which\n the same hover information is valid.\n\n @param viewer the viewer which the hover is queried for\n @param lineNumber the line number of the line for which a hover is displayed for\n @return the computed line range or <code>null</code> for no range\n"
6231,method,org/eclipse/jface/text/source/ILineDiffer/getLineInfo/int," Determines the line state for line <code>line</code> in the targeted document.\n\n @param line the line to get diff information for\n @return the line information object for <code>line</code> or <code>null</code> if none\n"
6232,method,org/eclipse/jface/text/source/ILineDiffer/revertLine/int," Reverts a single changed line to its original state, not touching any lines that\n are deleted at its borders.\n\n @param line the line number of the line to be restored.\n @throws BadLocationException if <code>line</code> is out of bounds.\n"
6233,method,org/eclipse/jface/text/source/ILineDiffer/revertBlock/int," Reverts a block of modified / added lines to their original state, including any deleted\n lines inside the block or at its borders. A block is considered to be a range of modified\n (e.g. changed, or added) lines.\n\n @param line any line in the block to be reverted.\n @throws BadLocationException if <code>line</code> is out of bounds.\n"
6241,method,org/eclipse/jface/text/source/CompositeRuler/addDecorator/int;IVerticalRulerColumn," Inserts the given column at the specified slot to this composite ruler.\n Columns are counted from left to right.\n\n @param index the index\n @param rulerColumn the decorator to be inserted\n"
6242,method,org/eclipse/jface/text/source/CompositeRuler/removeDecorator/int," Removes the decorator in the specified slot from this composite ruler.\n\n @param index the index\n"
6243,method,org/eclipse/jface/text/source/CompositeRuler/removeDecorator/IVerticalRulerColumn," Removes the given decorator from the composite ruler.\n\n @param rulerColumn the ruler column to be removed\n @since 3.0\n"
6244,method,org/eclipse/jface/text/source/CompositeRuler/getControl/,""
6245,method,org/eclipse/jface/text/source/CompositeRuler/createControl/Composite;ITextViewer,""
6246,method,org/eclipse/jface/text/source/CompositeRuler/setModel/IAnnotationModel,""
6247,method,org/eclipse/jface/text/source/CompositeRuler/getModel/,""
6248,method,org/eclipse/jface/text/source/CompositeRuler/update/,""
6249,method,org/eclipse/jface/text/source/CompositeRuler/immediateUpdate/," Immediately redraws the entire ruler (without asynchronous posting).\n\n @since 3.2\n"
6250,method,org/eclipse/jface/text/source/CompositeRuler/setFont/Font,""
6251,method,org/eclipse/jface/text/source/CompositeRuler/getWidth/,""
6252,method,org/eclipse/jface/text/source/CompositeRuler/getLineOfLastMouseButtonActivity/,""
6253,method,org/eclipse/jface/text/source/CompositeRuler/toDocumentLineNumber/int,""
6254,method,org/eclipse/jface/text/source/CompositeRuler/widgetLine2ModelLine/ITextViewer;int," Returns the line in the given viewer's document that correspond to the given\n line of the viewer's widget.\n\n @param viewer the viewer\n @param widgetLine the widget line\n @return the corresponding line the viewer's document\n @since 2.1\n"
6255,method,org/eclipse/jface/text/source/CompositeRuler/getTextViewer/," Returns this ruler's text viewer.\n\n @return this ruler's text viewer\n"
6256,method,org/eclipse/jface/text/source/CompositeRuler/setLocationOfLastMouseButtonActivity/int;int,""
6257,method,org/eclipse/jface/text/source/CompositeRuler/getDecoratorIterator/," Returns an iterator over the <code>IVerticalRulerColumns</code> that make up this\n composite column.\n\n @return an iterator over the contained columns.\n @since 3.0\n"
6258,method,org/eclipse/jface/text/source/CompositeRuler/getHover/,""
6259,method,org/eclipse/jface/text/source/CompositeRuler/addVerticalRulerListener/IVerticalRulerListener,""
6260,method,org/eclipse/jface/text/source/CompositeRuler/removeVerticalRulerListener/IVerticalRulerListener,""
6261,method,org/eclipse/jface/text/source/CompositeRuler/fireAnnotationSelected/VerticalRulerEvent," Fires the annotation selected event to all registered vertical ruler\n listeners.\n TODO use robust iterators\n\n @param event the event to fire\n @since 3.0\n"
6262,method,org/eclipse/jface/text/source/CompositeRuler/fireAnnotationDefaultSelected/VerticalRulerEvent," Fires the annotation default selected event to all registered vertical\n ruler listeners.\n TODO use robust iterators\n\n @param event the event to fire\n @since 3.0\n"
6263,method,org/eclipse/jface/text/source/CompositeRuler/fireAnnotationContextMenuAboutToShow/VerticalRulerEvent;Menu," Informs all registered vertical ruler listeners that the content menu on a selected annotation\\n is about to be shown.\n TODO use robust iterators\n\n @param event the event to fire\n @param menu the menu that is about to be shown\n @since 3.0\n"
6264,method,org/eclipse/jface/text/source/CompositeRuler/relayout/," Relayouts the receiver.\n\n @since 3.3\n"
6265,method,org/eclipse/jface/text/source/CompositeRuler/CompositeRuler/," Constructs a new composite vertical ruler.\n"
6267,interface,org/eclipse/jface/text/source/IVerticalRulerInfoExtension," Extension interface for\n {@link org.eclipse.jface.text.source.IVerticalRulerInfo}.\n <p>\n Introduces the ability to define a custom hover to be used when hovering over\n the vertical ruler described by this info instance, and to specify the\n annotation model used by it.\n <p>\n It also allows client to register as listeners on the represented vertical\n ruler and sends out notifications similar to selection events such as that a\n particular annotation presented in the vertical ruler has been selected.\n\n @see org.eclipse.jface.text.source.IVerticalRuler\n @see org.eclipse.jface.text.source.IAnnotationModel\n @since 3.0\n"
6268,method,org/eclipse/jface/text/source/IVerticalRulerInfoExtension/getHover/," Returns the hover for this vertical ruler (column).\n\n @return the hover for this column\n"
6269,method,org/eclipse/jface/text/source/IVerticalRulerInfoExtension/getModel/," Returns the model currently used by the receiver.\n\n @return the model of the receiver, or <code>null</code> if no model is\n         installed.\n"
6270,method,org/eclipse/jface/text/source/IVerticalRulerInfoExtension/addVerticalRulerListener/IVerticalRulerListener," Registers a vertical ruler listener to be informed if an annotation gets\n selected on the vertical ruler.\n\n @param listener the listener to be informed\n"
6274,method,org/eclipse/jface/text/source/IVerticalRuler/getModel/," Returns the current annotation model of this ruler or <code>null</code>\n if the ruler has no model.\n\n @return this ruler's annotation model or <code>null</code> if there is no model\n"
6276,method,org/eclipse/jface/text/source/IVerticalRuler/createControl/Composite;ITextViewer," Creates the ruler's SWT control.\n\n @param parent the parent control of the ruler's control\n @param textViewer the text viewer to which this ruler belongs\n @return the ruler's SWT control\n"
6277,interface,org/eclipse/jface/text/source/IVerticalRulerColumn," A vertical ruler column is an element that can be added to a composite\n vertical ruler ({@link org.eclipse.jface.text.source.CompositeRuler}). A\n composite vertical ruler is a vertical ruler with  dynamically changing\n appearance and behavior depending on its actual arrangement of ruler columns.\n A vertical ruler column supports a subset of the contract of a vertical\n ruler.\n\n @see org.eclipse.jface.text.source.CompositeRuler\n @since 2.0\n"
6279,method,org/eclipse/jface/text/source/IVerticalRulerColumn/redraw/," Redraws this column.\n"
6280,method,org/eclipse/jface/text/source/IVerticalRulerColumn/createControl/CompositeRuler;Composite," Creates the column's SWT control.\n\n @param parentRuler the parent ruler of this column\n @param parentControl the control of the parent ruler\n @return the column's SWT control\n"
6281,method,org/eclipse/jface/text/source/IVerticalRulerColumn/getControl/," Returns the column's SWT control.\n\n @return the column's SWT control\n"
6282,method,org/eclipse/jface/text/source/IVerticalRulerColumn/getWidth/," Returns the width of this column's control.\n\n @return the width of this column's control\n"
6283,method,org/eclipse/jface/text/source/IVerticalRulerColumn/setFont/Font," Sets the font of this ruler column.\n\n @param font the new font of the ruler column\n"
6285,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getTabWidth/ISourceViewer," Returns the visual width of the tab character. This implementation always\n returns 4.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @return the tab width\n"
6292,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getAutoIndentStrategy/ISourceViewer;String," Returns the auto indentation strategy ready to be used with the given source viewer\n when manipulating text of the given content type. This implementation always\n returns an new instance of <code>DefaultAutoIndentStrategy</code>.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @param contentType the content type for which the strategy is applicable\n @return the auto indent strategy or <code>null</code> if automatic indentation is not to be enabled\n @deprecated since 3.1 use {@link #getAutoEditStrategies(ISourceViewer, String)} instead\n"
6293,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getAutoEditStrategies/ISourceViewer;String," Returns the auto edit strategies ready to be used with the given source viewer\n when manipulating text of the given content type. For backward compatibility, this implementation always\n returns an array containing the result of {@link #getAutoIndentStrategy(ISourceViewer, String)}.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @param contentType the content type for which the strategies are applicable\n @return the auto edit strategies or <code>null</code> if automatic editing is not to be enabled\n @since 3.1\n"
6297,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getIndentPrefixesForTab/int," Computes and returns the indent prefixes for tab indentation\n which is represented as <code>tabSizeInSpaces</code>.\n\n @param tabWidth the display tab width\n @return the indent prefixes\n @see #getIndentPrefixes(ISourceViewer, String)\n @since 3.3\n"
6300,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getConfiguredTextHoverStateMasks/ISourceViewer;String," Returns the SWT event state masks for which text hover are configured for\n the given content type.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @param contentType the content type\n @return an <code>int</code> array with the configured SWT event state masks\n 			or <code>null</code> if text hovers are not supported for the given content type\n @since 2.1\n"
6306,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getConfiguredDocumentPartitioning/ISourceViewer," Returns the configured partitioning for the given source viewer. The partitioning is\n used when the querying content types from the source viewer's input document.  This\n implementation always returns <code>IDocumentExtension3.DEFAULT_PARTITIONING</code>.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @return the configured partitioning\n @see #getConfiguredContentTypes(ISourceViewer)\n @since 3.0\n"
6309,method,org/eclipse/jface/text/source/SourceViewerConfiguration/getHyperlinkStateMask/ISourceViewer," Returns the SWT event state mask which in combination\n with the left mouse button activates hyperlinking.\n This implementation always returns the {@link SWT#MOD1}.\n\n @param sourceViewer the source viewer to be configured by this configuration\n @return the SWT event state mask to activate hyperlink mode\n @since 3.1\n"
6310,method,org/eclipse/jface/text/source/SourceViewerConfiguration/SourceViewerConfiguration/," Creates a new source viewer configuration that behaves according to\n specification of this class' methods.\n"
6311,interface,org/eclipse/jface/text/source/IAnnotationAccessExtension," Extension interface for {@link org.eclipse.jface.text.source.IAnnotationAccess}.<p>\n This interface replaces the methods of <code>IAnnotationAccess</code>.<p>\n This interface provides\n <ul>\n <li> a label for the annotation type of a given annotation</li>\n <li> the paint layer of a given annotation</li>\n <li> means to paint a given annotation</li>\n <li> information about the type hierarchy of the annotation type of a given annotation</li>\n <ul>.\n\n @see org.eclipse.jface.text.source.IAnnotationAccess\n @since 3.0\n"
6312,method,org/eclipse/jface/text/source/IAnnotationAccessExtension/getTypeLabel/Annotation," Returns the label for the given annotation's type.\n\n @param annotation the annotation\n @return the label the given annotation's type or <code>null</code> if no such label exists\n"
6313,method,org/eclipse/jface/text/source/IAnnotationAccessExtension/getLayer/Annotation," Returns the layer for given annotation. Annotations are considered\n being located at layers and are considered being painted starting with\n layer 0 upwards. Thus an annotation at layer 5 will be drawn on top of\n all co-located annotations at the layers 4 - 0.\n\n @param annotation the annotation\n @return the layer of the given annotation\n"
6318,field,org/eclipse/jface/text/source/IAnnotationAccessExtension/DEFAULT_LAYER," The default annotation layer.\n"
6319,class,org/eclipse/jface/text/source/ContentAssistantFacade," Facade to allow minimal access to the given content assistant.\n <p>\n The offered API access can grow over time.\n </p>\n\n @since 3.4\n"
6338,method,org/eclipse/jface/text/quickassist/IQuickAssistAssistant/removeCompletionListener/ICompletionListener," Removes a completion listener.\n\n @param listener the listener to remove\n"
6340,method,org/eclipse/jface/text/quickassist/IQuickAssistAssistant/setStatusMessage/String," Sets the caption message displayed at the bottom of the completion proposal popup.\n\n @param message the message\n"
6352,method,org/eclipse/jface/text/quickassist/IQuickAssistAssistantExtension/enableColoredLabels/boolean," Enables the support for colored labels in the proposal popup.\n <p>Completion proposals can implement {@link ICompletionProposalExtension6}\n to provide colored proposal labels.</p>\n\n @param isEnabled if <code>true</code> the support for colored labels is enabled in the proposal popup\n @since 3.4\n"
6353,class,org/eclipse/jface/text/quickassist/QuickAssistAssistant," Default implementation of <code>IQuickAssistAssistant</code>.\n\n @since 3.2\n"
6354,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/showPossibleQuickAssists/,""
6355,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/getQuickAssistProcessor/,""
6356,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setQuickAssistProcessor/IQuickAssistProcessor,""
6357,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/canFix/Annotation,""
6358,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/canAssist/IQuickAssistInvocationContext,""
6359,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/install/ISourceViewer,""
6360,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setInformationControlCreator/IInformationControlCreator,""
6361,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/uninstall/,""
6362,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setProposalSelectorBackground/Color,""
6363,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setProposalSelectorForeground/Color,""
6365,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/addCompletionListener/ICompletionListener,""
6366,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/removeCompletionListener/ICompletionListener,""
6367,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setStatusLineVisible/boolean,""
6368,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/setStatusMessage/String,""
6370,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/hide/," Hides any open pop-ups.\n\n @since 3.4\n"
6372,method,org/eclipse/jface/text/quickassist/QuickAssistAssistant/QuickAssistAssistant/,""
6376,method,org/eclipse/jface/text/quickassist/IQuickAssistInvocationContext/getSourceViewer/," Returns the viewer for this context.\n\n @return the viewer or <code>null</code> if not available\n"
6382,method,org/eclipse/jface/commands/PersistentState/PersistentState/,""
6384,method,org/eclipse/jface/commands/ToggleState/load/IPreferenceStore;String,""
6385,method,org/eclipse/jface/commands/ToggleState/save/IPreferenceStore;String,""
6386,method,org/eclipse/jface/commands/ToggleState/setValue/Object,""
6387,method,org/eclipse/jface/commands/ToggleState/ToggleState/," Constructs a new <code>ToggleState</code>. By default, the toggle is\n off (e.g., <code>false</code>).\n"
6388,class,org/eclipse/jface/commands/ActionHandler," <p>\n This class adapts instances of <code>IAction</code> to\n <code>IHandler</code>.\n </p>\n \n @since 3.1\n"
6389,method,org/eclipse/jface/commands/ActionHandler/addHandlerListener/IHandlerListener,""
6390,method,org/eclipse/jface/commands/ActionHandler/dispose/," Removes the property change listener from the action.\n \n @see org.eclipse.core.commands.IHandler#dispose()\n"
6391,method,org/eclipse/jface/commands/ActionHandler/execute/ExecutionEvent,""
6392,method,org/eclipse/jface/commands/ActionHandler/getAction/," Returns the action associated with this handler\n \n @return the action associated with this handler (not null)\n @since 3.1\n"
6393,method,org/eclipse/jface/commands/ActionHandler/isEnabled/,""
6394,method,org/eclipse/jface/commands/ActionHandler/isHandled/,""
6395,method,org/eclipse/jface/commands/ActionHandler/removeHandlerListener/IHandlerListener,""
6396,method,org/eclipse/jface/commands/ActionHandler/toString/,""
6399,method,org/eclipse/jface/commands/RadioState/dispose/," Unregisters this state from the manager, which detaches the listeners.\n"
6402,method,org/eclipse/jface/commands/RadioState/RadioState/,""
6404,method,org/eclipse/jface/action/SubStatusLineManager/getParentStatusLineManager/," @return the parent status line manager that this sub-manager contributes\n to \n"
6405,method,org/eclipse/jface/action/SubStatusLineManager/getProgressMonitor/,""
6406,method,org/eclipse/jface/action/SubStatusLineManager/isCancelEnabled/,""
6407,method,org/eclipse/jface/action/SubStatusLineManager/setCancelEnabled/boolean,""
6408,method,org/eclipse/jface/action/SubStatusLineManager/setErrorMessage/String,""
6409,method,org/eclipse/jface/action/SubStatusLineManager/setErrorMessage/Image;String,""
6410,method,org/eclipse/jface/action/SubStatusLineManager/setMessage/String,""
6411,method,org/eclipse/jface/action/SubStatusLineManager/setMessage/Image;String,""
6412,method,org/eclipse/jface/action/SubStatusLineManager/setVisible/boolean,""
6413,method,org/eclipse/jface/action/SubStatusLineManager/update/boolean,""
6414,method,org/eclipse/jface/action/SubStatusLineManager/SubStatusLineManager/IStatusLineManager," Constructs a new manager.\n\n @param mgr the parent manager.  All contributions made to the \n      <code>SubStatusLineManager</code> are forwarded and appear in the\n      parent manager.\n"
6417,method,org/eclipse/jface/action/IContributionItem/fill/Composite," Fills the given composite control with controls representing this \n contribution item.  Used by <code>StatusLineManager</code>.\n\n @param parent the parent control\n"
6418,method,org/eclipse/jface/action/IContributionItem/fill/Menu;int," Fills the given menu with controls representing this contribution item.\n Used by <code>MenuManager</code>.\n\n @param parent the parent menu\n @param index the index where the controls are inserted,\n   or <code>-1</code> to insert at the end\n"
6419,method,org/eclipse/jface/action/IContributionItem/fill/ToolBar;int," Fills the given tool bar with controls representing this contribution item.\n Used by <code>ToolBarManager</code>.\n\n @param parent the parent tool bar\n @param index the index where the controls are inserted,\n   or <code>-1</code> to insert at the end\n"
6420,method,org/eclipse/jface/action/IContributionItem/fill/CoolBar;int," Fills the given cool bar with controls representing this contribution item.\n Used by <code>CoolBarManager</code>.\n\n @param parent the parent cool bar\n @param index the index where the controls are inserted,\n   or <code>-1</code> to insert at the end\n @since 3.0\n"
6421,method,org/eclipse/jface/action/IContributionItem/getId/," Returns the identifier of this contribution item.\n The id is used for retrieving an item from its manager.\n\n @return the contribution item identifier, or <code>null</code>\n   if none\n"
6422,method,org/eclipse/jface/action/IContributionItem/isEnabled/," Returns whether this contribution item is enabled.\n \n @return <code>true</code> if this item is enabled\n"
6423,method,org/eclipse/jface/action/IContributionItem/isDirty/," Returns whether this contribution item is dirty. A dirty item will be\n recreated when the action bar is updated.\n \n @return <code>true</code> if this item is dirty\n"
6425,method,org/eclipse/jface/action/IContributionItem/isGroupMarker/," Returns whether this contribution item is a group marker.\n This information is used when adding items to a group.\n\n @return <code>true</code> if this item is a group marker, and\n  <code>false</code> for normal items\n\n @see GroupMarker\n @see IContributionManager#appendToGroup(String, IContributionItem)\n @see IContributionManager#prependToGroup(String, IContributionItem)\n"
6426,method,org/eclipse/jface/action/IContributionItem/isSeparator/," Returns whether this contribution item is a separator.\n This information is used to enable hiding of unnecessary separators.\n\n @return <code>true</code> if this item is a separator, and\n  <code>false</code> for normal items\n @see Separator\n"
6427,method,org/eclipse/jface/action/IContributionItem/isVisible/," Returns whether this contribution item is visibile within its manager.\n\n @return <code>true</code> if this item is visible, and\n  <code>false</code> otherwise\n"
6429,method,org/eclipse/jface/action/IContributionItem/setParent/IContributionManager," Sets the parent manager of this item\n \n @param parent the parent contribution manager\n @since 2.0\n"
6432,method,org/eclipse/jface/action/IContributionItem/update/String," Updates any SWT controls cached by this contribution item with changes\n for the the given property. \n \n @param id the id of the changed property\n @since 2.0\n"
6434,method,org/eclipse/jface/action/ICoolBarManager/add/IToolBarManager," A convenience method to add a tool bar as a contribution item to this\n cool bar manager. Equivalent to <code>add(new ToolBarContributionManager(toolBarManager))</code>.\n \n @param toolBarManager\n            the tool bar manager to be added\n @see ToolBarContributionItem\n"
6435,method,org/eclipse/jface/action/ICoolBarManager/getContextMenuManager/," Returns the context menu manager used by this cool bar manager. This\n context menu manager is used by the cool bar manager except for cool\n items that provide their own.\n \n @return the context menu manager, or <code>null</code> if none\n @see #setContextMenuManager\n"
6437,method,org/eclipse/jface/action/ICoolBarManager/getStyle/," Returns the style of the underlying cool bar widget.\n \n @return the style of the cool bar\n"
6438,method,org/eclipse/jface/action/ICoolBarManager/setContextMenuManager/IMenuManager," Sets the context menu of this cool bar manager to the given menu\n manager.\n \n @param menuManager\n            the context menu manager, or <code>null</code> if none\n @see #getContextMenuManager\n"
6440,field,org/eclipse/jface/action/ICoolBarManager/SIZE," Property name of a cool item's size (value <code>"size"</code>).\n <p>\n The cool bar manager uses this property to tell its cool items to update\n their size.\n </p>\n \n @see IContributionItem#update(String) @issue consider declaring this\n      constant elsewhere\n"
6442,method,org/eclipse/jface/action/StatusLineLayoutData/StatusLineLayoutData/," Creates an initial status line layout data object.\n"
6443,field,org/eclipse/jface/action/StatusLineLayoutData/widthHint," The <code>widthHint</code> specifies a minimum width for\n the <code>Control</code>. A value of <code>SWT.DEFAULT</code>\n indicates that no minimum width is specified.\n\n The default value is <code>SWT.DEFAULT</code>.\n"
6444,field,org/eclipse/jface/action/StatusLineLayoutData/heightHint," The <code>heightHint</code> specifies a minimum height for\n the <code>Control</code>. A value of <code>SWT.DEFAULT</code>\n indicates that no minimum height is specified.\n\n The default value is <code>SWT.DEFAULT</code>.\n"
6446,method,org/eclipse/jface/action/MenuManager/addMenuListener/IMenuListener,""
6448,method,org/eclipse/jface/action/MenuManager/createMenuBar/Decorations," Creates and returns an SWT menu bar control for this menu,\n for use in the given <code>Decorations</code>, and installs all registered\n contributions. Does not create a new control if one already exists.\n\n @param parent the parent decorations\n @return the menu control\n @since 2.1\n"
6451,method,org/eclipse/jface/action/MenuManager/fill/Composite,""
6452,method,org/eclipse/jface/action/MenuManager/fill/CoolBar;int,""
6453,method,org/eclipse/jface/action/MenuManager/fill/Menu;int,""
6454,method,org/eclipse/jface/action/MenuManager/fill/ToolBar;int,""
6455,method,org/eclipse/jface/action/MenuManager/findMenuUsingPath/String,""
6456,method,org/eclipse/jface/action/MenuManager/findUsingPath/String,""
6457,method,org/eclipse/jface/action/MenuManager/getId/," Returns the menu id. The menu id is used when creating a contribution\n item for adding this menu as a sub menu of another.\n \n @return the menu id\n"
6458,method,org/eclipse/jface/action/MenuManager/getMenu/," Returns the SWT menu control for this menu manager.\n\n @return the menu control\n"
6459,method,org/eclipse/jface/action/MenuManager/getMenuText/," Returns the text shown in the menu, potentially with a shortcut\n appended.\n\n @return the menu text\n"
6460,method,org/eclipse/jface/action/MenuManager/getImageDescriptor/," Returns the image for this menu as an image descriptor.\n \n @return the image, or <code>null</code> if this menu has no image\n @since 3.4\n"
6461,method,org/eclipse/jface/action/MenuManager/getOverrides/,""
6462,method,org/eclipse/jface/action/MenuManager/getParent/," Returns the parent contribution manager of this manger.\n \n @return the parent contribution manager\n @since 2.0\n"
6463,method,org/eclipse/jface/action/MenuManager/getRemoveAllWhenShown/,""
6464,method,org/eclipse/jface/action/MenuManager/isDynamic/,""
6466,method,org/eclipse/jface/action/MenuManager/isGroupMarker/,""
6467,method,org/eclipse/jface/action/MenuManager/isSeparator/,""
6468,method,org/eclipse/jface/action/MenuManager/isSubstituteFor/IContributionItem," Check if the contribution is item is a subsitute for ourselves\n \n @param item the contribution item\n @return <code>true</code> if give item is a substitution for ourselves \n @deprecated this method is no longer a part of the \n   {@link org.eclipse.jface.action.IContributionItem} API.\n"
6469,method,org/eclipse/jface/action/MenuManager/isVisible/,""
6470,method,org/eclipse/jface/action/MenuManager/markDirty/," The <code>MenuManager</code> implementation of this <code>ContributionManager</code> method\n also propagates the dirty flag up the parent chain.\n \n @since 3.1\n"
6471,method,org/eclipse/jface/action/MenuManager/menuExist/," Returns whether the menu control is created\n and not disposed.\n \n @return <code>true</code> if the control is created\n	and not disposed, <code>false</code> otherwise\n @since 3.4 protected, was added in 3.1 as private method\n"
6472,method,org/eclipse/jface/action/MenuManager/removeMenuListener/IMenuListener,""
6473,method,org/eclipse/jface/action/MenuManager/saveWidgetState/,""
6475,method,org/eclipse/jface/action/MenuManager/setParent/IContributionManager,""
6476,method,org/eclipse/jface/action/MenuManager/setRemoveAllWhenShown/boolean,""
6477,method,org/eclipse/jface/action/MenuManager/setVisible/boolean,""
6479,method,org/eclipse/jface/action/MenuManager/update/,""
6480,method,org/eclipse/jface/action/MenuManager/update/boolean," The <code>MenuManager</code> implementation of this <code>IContributionManager</code>\n updates this menu, but not any of its submenus.\n\n @see #updateAll\n"
6481,method,org/eclipse/jface/action/MenuManager/getMenuItems/," Get all the items from the implementation's widget.\n \n @return the menu items\n @since 3.4\n"
6482,method,org/eclipse/jface/action/MenuManager/getMenuItem/int," Get an item from the implementation's widget.\n \n @param index\n            of the item\n @return the menu item\n @since 3.4\n"
6483,method,org/eclipse/jface/action/MenuManager/getMenuItemCount/," Get the menu item count for the implementation's widget.\n \n @return the number of items\n @since 3.4\n"
6485,method,org/eclipse/jface/action/MenuManager/update/boolean;boolean," Incrementally builds the menu from the contribution items.\n This method leaves out double separators and separators in the first \n or last position.\n\n @param force <code>true</code> means update even if not dirty,\n   and <code>false</code> for normal incremental updating\n @param recursive <code>true</code> means recursively update \n   all submenus, and <code>false</code> means just this menu\n"
6486,method,org/eclipse/jface/action/MenuManager/update/String,""
6487,method,org/eclipse/jface/action/MenuManager/updateAll/boolean,""
6488,method,org/eclipse/jface/action/MenuManager/MenuManager/," Creates a menu manager.  The text and id are <code>null</code>.\n Typically used for creating a context menu, where it doesn't need to be referred to by id.\n"
6489,method,org/eclipse/jface/action/MenuManager/MenuManager/String," Creates a menu manager with the given text. The id of the menu\n is <code>null</code>.\n Typically used for creating a sub-menu, where it doesn't need to be referred to by id.\n\n @param text the text for the menu, or <code>null</code> if none\n"
6490,method,org/eclipse/jface/action/MenuManager/MenuManager/String;String," Creates a menu manager with the given text and id.\n Typically used for creating a sub-menu, where it needs to be referred to by id.\n\n @param text the text for the menu, or <code>null</code> if none\n @param id the menu id, or <code>null</code> if it is to have no id\n"
6491,method,org/eclipse/jface/action/MenuManager/MenuManager/String;ImageDescriptor;String," Creates a menu manager with the given text, image, and id.\n Typically used for creating a sub-menu, where it needs to be referred to by id.\n \n @param text the text for the menu, or <code>null</code> if none\n @param image the image for the menu, or <code>null</code> if none\n @param id the menu id, or <code>null</code> if it is to have no id\n @since 3.4\n"
6492,field,org/eclipse/jface/action/MenuManager/visible," Indicates this item is visible in its manager; <code>true</code> \n by default.\n @since 3.3\n"
6495,method,org/eclipse/jface/action/SubContributionItem/fill/Composite,""
6496,method,org/eclipse/jface/action/SubContributionItem/fill/Menu;int,""
6497,method,org/eclipse/jface/action/SubContributionItem/fill/ToolBar;int,""
6498,method,org/eclipse/jface/action/SubContributionItem/getId/,""
6499,method,org/eclipse/jface/action/SubContributionItem/getInnerItem/," Returns the inner contribution item.\n\n @return the inner contribution item\n"
6500,method,org/eclipse/jface/action/SubContributionItem/isEnabled/,""
6501,method,org/eclipse/jface/action/SubContributionItem/isDirty/,""
6502,method,org/eclipse/jface/action/SubContributionItem/isDynamic/,""
6503,method,org/eclipse/jface/action/SubContributionItem/isGroupMarker/,""
6504,method,org/eclipse/jface/action/SubContributionItem/isSeparator/,""
6505,method,org/eclipse/jface/action/SubContributionItem/isVisible/,""
6506,method,org/eclipse/jface/action/SubContributionItem/setParent/IContributionManager,""
6507,method,org/eclipse/jface/action/SubContributionItem/setVisible/boolean,""
6508,method,org/eclipse/jface/action/SubContributionItem/update/,""
6509,method,org/eclipse/jface/action/SubContributionItem/update/String,""
6510,method,org/eclipse/jface/action/SubContributionItem/fill/CoolBar;int,""
6511,method,org/eclipse/jface/action/SubContributionItem/saveWidgetState/,""
6512,method,org/eclipse/jface/action/SubContributionItem/SubContributionItem/IContributionItem," Creates a new <code>SubContributionItem</code>.\n @param item the contribution item to be wrapped\n"
6514,method,org/eclipse/jface/action/CoolBarManager/add/IToolBarManager,""
6515,method,org/eclipse/jface/action/CoolBarManager/allowItem/IContributionItem,""
6516,method,org/eclipse/jface/action/CoolBarManager/createControl/Composite," Creates and returns this manager's cool bar control. Does not create a\n new control if one already exists.\n \n @param parent\n            the parent control\n @return the cool bar control\n"
6518,method,org/eclipse/jface/action/CoolBarManager/getContextMenuManager/,""
6519,method,org/eclipse/jface/action/CoolBarManager/getControl/," Returns the cool bar control for this manager.\n \n @return the cool bar control, or <code>null</code> if none\n"
6520,method,org/eclipse/jface/action/CoolBarManager/getLockLayout/,""
6521,method,org/eclipse/jface/action/CoolBarManager/getStyle/,""
6525,method,org/eclipse/jface/action/CoolBarManager/resetItemOrder/," Restores the canonical order of this cool bar manager. The canonical\n order is the order in which the contribution items where added.\n"
6526,method,org/eclipse/jface/action/CoolBarManager/setContextMenuManager/IMenuManager,""
6527,method,org/eclipse/jface/action/CoolBarManager/setItems/IContributionItem[]," Replaces the current items with the given items.\n Forces an update.\n \n @param newItems the items with which to replace the current items\n"
6528,method,org/eclipse/jface/action/CoolBarManager/setLockLayout/boolean,""
6530,method,org/eclipse/jface/action/CoolBarManager/CoolBarManager/," Creates a new cool bar manager with the default style. Equivalent to\n <code>CoolBarManager(SWT.NONE)</code>.\n"
6531,method,org/eclipse/jface/action/CoolBarManager/CoolBarManager/CoolBar," Creates a cool bar manager for an existing cool bar control. This\n manager becomes responsible for the control, and will dispose of it when\n the manager is disposed.\n \n @param coolBar\n            the cool bar control\n"
6532,field,org/eclipse/jface/action/CoolBarManager/USER_SEPARATOR," A separator created by the end user.\n"
6535,method,org/eclipse/jface/action/LegacyActionTools/convertAccelerator/int," Converts an accelerator key code to a string representation.\n \n @param keyCode\n            the key code to be translated\n @return a string representation of the key code\n"
6536,method,org/eclipse/jface/action/LegacyActionTools/convertAccelerator/String," Parses the given accelerator text, and converts it to an accelerator key\n code.\n \n @param acceleratorText\n            the accelerator text\n @return the SWT key code, or 0 if there is no accelerator\n"
6540,method,org/eclipse/jface/action/LegacyActionTools/findKeyString/int," Maps an SWT key code to a standard keyboard key name. The key code is\n stripped of modifiers (SWT.CTRL, SWT.ALT, SWT.SHIFT, and SWT.COMMAND). If\n the key code is not an SWT code (for example if it a key code for the key\n 'S'), a string containing a character representation of the key code is\n returned.\n \n @param keyCode\n            the key code to be translated\n @return the string representation of the key code\n @see SWT\n @since 2.0\n"
6542,method,org/eclipse/jface/action/LegacyActionTools/findModifierString/int," Returns a string representation of an SWT modifier bit (SWT.CTRL,\n SWT.ALT, SWT.SHIFT, and SWT.COMMAND). Returns <code>null</code> if the\n key code is not an SWT modifier bit.\n \n @param keyCode\n            the SWT modifier bit to be translated\n @return the string representation of the SWT modifier bit, or\n         <code>null</code> if the key code was not an SWT modifier bit\n @see SWT\n"
6543,method,org/eclipse/jface/action/LegacyActionTools/removeAcceleratorText/String," Convenience method for removing any optional accelerator text from the\n given string. The accelerator text appears at the end of the text, and is\n separated from the main part by a single tab character <code>'\t'</code>.\n \n @param text\n            the text\n @return the text sans accelerator\n"
6544,method,org/eclipse/jface/action/LegacyActionTools/removeMnemonics/String," Convenience method for removing any mnemonics from the given string. For\n example, <code>removeMnemonics("&Open")</code> will return\n <code>"Open"</code>.\n \n @param text\n            the text\n @return the text sans mnemonics\n"
6545,field,org/eclipse/jface/action/LegacyActionTools/MNEMONIC_NONE," The constant to use if there is no mnemonic for this location.\n"
6547,method,org/eclipse/jface/action/ToolBarManager/createControl/Composite," Creates and returns this manager's tool bar control. Does not create a\n new control if one already exists. Also create an {@link AccessibleListener}\n for the {@link ToolBar}.\n \n @param parent\n            the parent control\n @return the tool bar control\n"
6550,method,org/eclipse/jface/action/ToolBarManager/relayout/ToolBar;int;int," Re-lays out the tool bar.\n <p>\n The default implementation of this framework method re-lays out the\n parent when the number of items are different and the new count != 0\n \n @param layoutBar\n            the tool bar control\n @param oldCount\n            the old number of items\n @param newCount\n            the new number of items\n"
6551,method,org/eclipse/jface/action/ToolBarManager/update/boolean,""
6552,method,org/eclipse/jface/action/ToolBarManager/getContextMenuManager/," Returns the context menu manager for this tool bar manager.\n \n @return the context menu manager, or <code>null</code> if none\n @since 3.0\n"
6553,method,org/eclipse/jface/action/ToolBarManager/setContextMenuManager/MenuManager," Sets the context menu manager for this tool bar manager to the given menu\n manager. If the tool bar control exists, it also adds the menu control to\n the tool bar.\n \n @param contextMenuManager\n            the context menu manager, or <code>null</code> if none\n @since 3.0\n"
6554,method,org/eclipse/jface/action/ToolBarManager/ToolBarManager/," Creates a new tool bar manager with the default SWT button style. Use the\n {@link #createControl(Composite)} method to create the tool bar control.\n \n"
6555,method,org/eclipse/jface/action/ToolBarManager/ToolBarManager/int," Creates a tool bar manager with the given SWT button style. Use the\n <code>createControl</code> method to create the tool bar control.\n \n @param style\n            the tool bar item style\n @see org.eclipse.swt.widgets.ToolBar for valid style bits\n"
6562,method,org/eclipse/jface/action/SubToolBarManager/getParentToolBarManager/," @return the parent toolbar manager that this sub-manager contributes to\n"
6563,method,org/eclipse/jface/action/SubToolBarManager/update/boolean,""
6564,method,org/eclipse/jface/action/SubToolBarManager/SubToolBarManager/IToolBarManager," Constructs a new manager.\n\n @param mgr the parent manager.  All contributions made to the \n      <code>SubToolBarManager</code> are forwarded and appear in the\n      parent manager.\n"
6566,method,org/eclipse/jface/action/IContributionManager/add/IAction," Adds an action as a contribution item to this manager.\n Equivalent to <code>add(new ActionContributionItem(action))</code>.\n\n @param action the action, this cannot be <code>null</code>\n"
6567,method,org/eclipse/jface/action/IContributionManager/add/IContributionItem," Adds a contribution item to this manager.\n\n @param item the contribution item, this cannot be <code>null</code>\n"
6568,method,org/eclipse/jface/action/IContributionManager/appendToGroup/String;IAction," Adds a contribution item for the given action at the end of the group\n with the given name.\n Equivalent to\n <code>appendToGroup(groupName,new ActionContributionItem(action))</code>.\n\n @param groupName the name of the group\n @param action the action\n @exception IllegalArgumentException if there is no group with\n   the given name\n"
6569,method,org/eclipse/jface/action/IContributionManager/appendToGroup/String;IContributionItem," Adds a contribution item to this manager at the end of the group\n with the given name.\n\n @param groupName the name of the group\n @param item the contribution item\n @exception IllegalArgumentException if there is no group with\n   the given name\n"
6570,method,org/eclipse/jface/action/IContributionManager/find/String," Finds the contribution item with the given id.\n\n @param id the contribution item id\n @return the contribution item, or <code>null</code> if\n   no item with the given id can be found\n"
6571,method,org/eclipse/jface/action/IContributionManager/getItems/," Returns all contribution items known to this manager.\n\n @return a list of contribution items\n"
6577,method,org/eclipse/jface/action/IContributionManager/isDirty/," Returns whether the list of contributions has recently changed and\n has yet to be reflected in the corresponding widgets.\n\n @return <code>true</code> if this manager is dirty, and <code>false</code>\n   if it is up-to-date\n"
6578,method,org/eclipse/jface/action/IContributionManager/isEmpty/," Returns whether this manager has any contribution items.\n\n @return <code>true</code> if there are no items, and\n   <code>false</code> otherwise\n"
6579,method,org/eclipse/jface/action/IContributionManager/markDirty/," Marks this contribution manager as dirty.\n"
6580,method,org/eclipse/jface/action/IContributionManager/prependToGroup/String;IAction," Adds a contribution item for the given action at the beginning of the \n group with the given name.\n Equivalent to\n <code>prependToGroup(groupName,new ActionContributionItem(action))</code>.\n\n @param groupName the name of the group\n @param action the action\n @exception IllegalArgumentException if there is no group with\n   the given name\n"
6581,method,org/eclipse/jface/action/IContributionManager/prependToGroup/String;IContributionItem," Adds a contribution item to this manager at the beginning of the \n group with the given name.\n\n @param groupName the name of the group\n @param item the contribution item\n @exception IllegalArgumentException if there is no group with\n   the given name\n"
6582,method,org/eclipse/jface/action/IContributionManager/remove/String," Removes and returns the contribution item with the given id from this manager.  \n Returns <code>null</code> if this manager has no contribution items\n with the given id.\n\n @param id the contribution item id\n @return the item that was found and removed, or <code>null</code> if none\n"
6583,method,org/eclipse/jface/action/IContributionManager/remove/IContributionItem," Removes the given contribution item from the contribution items\n known to this manager.\n\n @param item the contribution item\n @return the <code>item</code> parameter if the item was removed,\n   and <code>null</code> if it was not found\n"
6584,method,org/eclipse/jface/action/IContributionManager/removeAll/," Removes all contribution items from this manager.\n"
6585,method,org/eclipse/jface/action/IContributionManager/update/boolean," Updates this manager's underlying widget(s) with any changes which\n have been made to it or its items.  Normally changes to a contribution\n manager merely mark it as dirty, without updating the underlying widgets.\n This brings the underlying widgets up to date with any changes.\n\n @param force <code>true</code> means update even if not dirty,\n   and <code>false</code> for normal incremental updating\n"
6587,method,org/eclipse/jface/action/Separator/fill/Menu;int,""
6588,method,org/eclipse/jface/action/Separator/fill/ToolBar;int,""
6589,method,org/eclipse/jface/action/Separator/isSeparator/,"\n The <code>Separator</code> implementation of this <code>IContributionItem</code> \n method returns <code>true</code>\n"
6590,method,org/eclipse/jface/action/Separator/Separator/," Creates a separator which does not start a new group.\n"
6593,method,org/eclipse/jface/action/ContributionManager/add/IAction,""
6594,method,org/eclipse/jface/action/ContributionManager/add/IContributionItem,""
6595,method,org/eclipse/jface/action/ContributionManager/appendToGroup/String;IAction,""
6596,method,org/eclipse/jface/action/ContributionManager/appendToGroup/String;IContributionItem,""
6599,method,org/eclipse/jface/action/ContributionManager/find/String,""
6600,method,org/eclipse/jface/action/ContributionManager/getItems/,""
6601,method,org/eclipse/jface/action/ContributionManager/getSize/," Return the number of contributions in this manager.\n \n @return the number of contributions in this manager\n @since 3.3\n"
6604,method,org/eclipse/jface/action/ContributionManager/indexOf/String," Returns the index of the item with the given id.\n \n @param id\n            The id of the item whose index is requested.\n \n @return <code>int</code> the index or -1 if the item is not found\n"
6606,method,org/eclipse/jface/action/ContributionManager/insert/int;IContributionItem," Insert the item at the given index.\n \n @param index\n            The index to be used for insertion\n @param item\n            The item to be inserted\n"
6607,method,org/eclipse/jface/action/ContributionManager/insertAfter/String;IAction,""
6608,method,org/eclipse/jface/action/ContributionManager/insertAfter/String;IContributionItem,""
6609,method,org/eclipse/jface/action/ContributionManager/insertBefore/String;IAction,""
6610,method,org/eclipse/jface/action/ContributionManager/insertBefore/String;IContributionItem,""
6611,method,org/eclipse/jface/action/ContributionManager/isDirty/,""
6612,method,org/eclipse/jface/action/ContributionManager/isEmpty/,""
6613,method,org/eclipse/jface/action/ContributionManager/itemAdded/IContributionItem," The given item was added to the list of contributions. Marks the manager\n as dirty and updates the number of dynamic items, and the memento.\n \n @param item\n            the item to be added\n \n"
6614,method,org/eclipse/jface/action/ContributionManager/itemRemoved/IContributionItem," The given item was removed from the list of contributions. Marks the\n manager as dirty and updates the number of dynamic items.\n \n @param item\n            remove given parent from list of contributions\n"
6615,method,org/eclipse/jface/action/ContributionManager/markDirty/,""
6616,method,org/eclipse/jface/action/ContributionManager/prependToGroup/String;IAction,""
6617,method,org/eclipse/jface/action/ContributionManager/prependToGroup/String;IContributionItem,""
6618,method,org/eclipse/jface/action/ContributionManager/remove/String,""
6619,method,org/eclipse/jface/action/ContributionManager/remove/IContributionItem,""
6620,method,org/eclipse/jface/action/ContributionManager/removeAll/,""
6622,method,org/eclipse/jface/action/ContributionManager/setDirty/boolean," Sets whether this manager is dirty. When dirty, the list of contributions\n is not accurately reflected in the corresponding widgets.\n \n @param dirty\n            <code>true</code> if this manager is dirty, and\n            <code>false</code> if it is up-to-date\n"
6624,method,org/eclipse/jface/action/ContributionManager/internalSetItems/IContributionItem[]," An internal method for setting the order of the contribution items.\n \n @param items\n            the contribution items in the specified order\n @since 3.0\n"
6625,method,org/eclipse/jface/action/ContributionManager/ContributionManager/," Creates a new contribution manager.\n"
6627,method,org/eclipse/jface/action/IMenuManager/addMenuListener/IMenuListener," Adds a menu listener to this menu.\n Has no effect if an identical listener is already registered.\n\n @param listener a menu listener\n"
6628,method,org/eclipse/jface/action/IMenuManager/findMenuUsingPath/String," Finds the manager for the menu at the given path. A path\n consists of contribution item ids separated by the separator \n character.  The path separator character is <code>'/'</code>.\n <p>\n Convenience for <code>findUsingPath(path)</code> which\n extracts an <code>IMenuManager</code> if possible.\n </p>\n\n @param path the path string\n @return the menu contribution item, or <code>null</code>\n   if there is no such contribution item or if the item does\n   not have an associated menu manager\n"
6629,method,org/eclipse/jface/action/IMenuManager/findUsingPath/String," Finds the contribution item at the given path. A path\n consists of contribution item ids separated by the separator \n character. The path separator character is <code>'/'</code>.\n\n @param path the path string\n @return the contribution item, or <code>null</code> if there is no\n   such contribution item\n"
6632,method,org/eclipse/jface/action/IMenuManager/removeMenuListener/IMenuListener," Removes the given menu listener from this menu.\n Has no effect if an identical listener is not registered.\n\n @param listener the menu listener\n"
6634,method,org/eclipse/jface/action/IMenuManager/updateAll/boolean," Incrementally builds the menu from the contribution items, and\n does so recursively for all submenus.\n\n @param force <code>true</code> means update even if not dirty,\n   and <code>false</code> for normal incremental updating\n"
6639,method,org/eclipse/jface/action/ControlContribution/fill/Menu;int," The control item implementation of this <code>IContributionItem</code>\n method throws an exception since controls cannot be added to menus.\n"
6641,method,org/eclipse/jface/action/ControlContribution/ControlContribution/String," Creates a control contribution item with the given id.\n\n @param id the contribution item id\n"
6642,interface,org/eclipse/jface/action/IMenuListener," A menu listener that gets informed when a menu is about to show.\n\n @see MenuManager#addMenuListener\n"
6643,method,org/eclipse/jface/action/IMenuListener/menuAboutToShow/IMenuManager," Notifies this listener that the menu is about to be shown by\n the given menu manager.\n\n @param manager the menu manager\n"
6645,method,org/eclipse/jface/action/IAction/addPropertyChangeListener/IPropertyChangeListener," Adds a property change listener to this action.\n Has no effect if an identical listener is already registered.\n\n @param listener a property change listener\n"
6646,method,org/eclipse/jface/action/IAction/getAccelerator/," Returns the accelerator keycode for this action.\n The result is the bit-wise OR of zero or more modifier masks\n and a key, as explained in <code>MenuItem.getAccelerator</code>.\n\n @return the accelerator keycode\n @see org.eclipse.swt.widgets.MenuItem#getAccelerator()\n"
6647,method,org/eclipse/jface/action/IAction/getActionDefinitionId/," Returns the action definition id of this action.\n \n @return the action definition id of this action, or\n <code>null</code> if none\n @since 2.0\n"
6649,method,org/eclipse/jface/action/IAction/getDisabledImageDescriptor/," Returns the disabled image for this action as an image descriptor.\n <p>\n This method is associated with the <code>IMAGE</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return the image, or <code>null</code> if this action has no image\n @see #IMAGE\n"
6650,method,org/eclipse/jface/action/IAction/getHelpListener/," Returns a help listener for this action. \n\n @return a help listener for this action\n"
6651,method,org/eclipse/jface/action/IAction/getHoverImageDescriptor/," Returns the hover image for this action as an image descriptor.\n <p>\n Hover images will be used on platforms that support changing the image\n when the user hovers over the item. This method is associated with \n the <code>IMAGE</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return the image, or <code>null</code> if this action has no image\n @see #IMAGE\n"
6652,method,org/eclipse/jface/action/IAction/getId/," Returns a unique identifier for this action, or <code>null</code> if it has\n none.\n\n @return the action id, or <code>null</code> if none\n"
6653,method,org/eclipse/jface/action/IAction/getImageDescriptor/," Returns the image for this action as an image descriptor.\n <p>\n This method is associated with the <code>IMAGE</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return the image, or <code>null</code> if this action has no image\n @see #IMAGE\n"
6654,method,org/eclipse/jface/action/IAction/getMenuCreator/," Returns the menu creator for this action.\n\n @return the menu creator, or <code>null</code> if none\n"
6655,method,org/eclipse/jface/action/IAction/getStyle/," Return this action's style.\n\n @return one of <code>AS_PUSH_BUTTON</code>, <code>AS_CHECK_BOX</code>,\n <code>AS_RADIO_BUTTON</code> and <code>AS_DROP_DOWN_MENU</code>.\n"
6656,method,org/eclipse/jface/action/IAction/getText/," Returns the text for this action.\n <p>\n This method is associated with the <code>TEXT</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return the text, or <code>null</code> if none\n @see #TEXT\n"
6657,method,org/eclipse/jface/action/IAction/getToolTipText/," Returns the tool tip text for this action.\n <p>\n This method is associated with the <code>TOOL_TIP_TEXT</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return the tool tip text, or <code>null</code> if none\n @see #TOOL_TIP_TEXT\n"
6659,method,org/eclipse/jface/action/IAction/isEnabled/," Returns whether this action is enabled.\n <p>\n This method is associated with the <code>ENABLED</code> property;\n property change events are reported when its value changes.\n </p>\n\n @return <code>true</code> if enabled, and\n   <code>false</code> if disabled\n @see #ENABLED\n"
6661,method,org/eclipse/jface/action/IAction/removePropertyChangeListener/IPropertyChangeListener," Removes the given listener from this action.\n Has no effect if an identical listener is not registered.\n\n @param listener a property change listener\n"
6664,method,org/eclipse/jface/action/IAction/setActionDefinitionId/String," Sets the action definition id of this action.\n \n @param id the action definition id\n @since 2.0\n"
6665,method,org/eclipse/jface/action/IAction/setChecked/boolean," Sets the checked status of this action. Applicable for the styles\n <code>AS_CHECK_BOX</code> or <code>AS_RADIO_BUTTON</code>.\n <p>\n Fires a property change event for the <code>CHECKED</code> property\n if the checked status actually changes as a consequence.\n </p>\n\n @param checked the new checked status\n @see #CHECKED\n"
6666,method,org/eclipse/jface/action/IAction/setDescription/String," Sets this action's description.\n Typically the description is shown as a (longer) help text in the status line.\n <p>\n Fires a property change event for the <code>DESCRIPTION</code> property\n if the description actually changes as a consequence.\n </p>\n\n @param text the description, or <code>null</code> to clear the description\n @see #DESCRIPTION\n"
6668,method,org/eclipse/jface/action/IAction/setEnabled/boolean," Sets the enabled state of this action.\n <p>\n When an action is in the enabled state, the control associated with \n it is active; triggering it will end up inkoking this action's \n <code>run</code> method.\n </p>\n <p>\n Fires a property change event for the <code>ENABLED</code> property\n if the enabled state actually changes as a consequence.\n </p>\n\n @param enabled <code>true</code> to enable, and\n   <code>false</code> to disable\n @see #ENABLED\n"
6669,method,org/eclipse/jface/action/IAction/setHelpListener/HelpListener," Sets a help listener for this action. \n\n @param listener a help listener for this action\n"
6673,method,org/eclipse/jface/action/IAction/setMenuCreator/IMenuCreator," Sets the menu creator for this action. Applicable for style\n <code>AS_DROP_DOWN_MENU</code>.\n\n @param creator the menu creator, or <code>null</code> if none\n"
6675,method,org/eclipse/jface/action/IAction/setToolTipText/String," Sets the tool tip text for this action.\n <p>\n Fires a property change event for the <code>TOOL_TIP_TEXT</code> property\n if the tool tip text actually changes as a consequence.\n </p>\n\n @param text the tool tip text, or <code>null</code> if none\n @see #TOOL_TIP_TEXT\n"
6678,field,org/eclipse/jface/action/IAction/AS_PUSH_BUTTON," Action style constant (value <code>1</code>) indicating action is \n a simple push button.\n"
6679,field,org/eclipse/jface/action/IAction/AS_CHECK_BOX," Action style constant (value <code>2</code>) indicating action is \n a check box (or a toggle button).\n"
6680,field,org/eclipse/jface/action/IAction/AS_DROP_DOWN_MENU," Action style constant (value <code>4</code>) indicating action is \n a drop down menu.\n"
6681,field,org/eclipse/jface/action/IAction/AS_RADIO_BUTTON," Action style constant (value <code>8</code>) indicating action is \n a radio button.\n \n @since 2.1\n"
6682,field,org/eclipse/jface/action/IAction/TEXT," Property name of an action's text (value <code>"text"</code>).\n"
6683,field,org/eclipse/jface/action/IAction/ENABLED," Property name of an action's enabled state\n (value <code>"enabled"</code>).\n"
6684,field,org/eclipse/jface/action/IAction/IMAGE," Property name of an action's image (value <code>"image"</code>).\n"
6685,field,org/eclipse/jface/action/IAction/TOOL_TIP_TEXT," Property name of an action's tooltip text (value <code>"toolTipText"</code>).\n"
6686,field,org/eclipse/jface/action/IAction/DESCRIPTION," Property name of an action's description (value <code>"description"</code>).\n Typically the description is shown as a (longer) help text in the status line.\n"
6687,field,org/eclipse/jface/action/IAction/CHECKED," Property name of an action's checked status (value\n <code>"checked"</code>). Applicable when the style is\n <code>AS_CHECK_BOX</code> or <code>AS_RADIO_BUTTON</code>.\n"
6691,method,org/eclipse/jface/action/SubCoolBarManager/add/IToolBarManager,""
6692,method,org/eclipse/jface/action/SubCoolBarManager/getStyle/,""
6693,method,org/eclipse/jface/action/SubCoolBarManager/getParentCoolBarManager/," Returns the parent cool bar manager that this sub-manager contributes to.\n \n @return the parent cool bar manager \n"
6694,method,org/eclipse/jface/action/SubCoolBarManager/getLockLayout/,""
6695,method,org/eclipse/jface/action/SubCoolBarManager/setLockLayout/boolean,""
6696,method,org/eclipse/jface/action/SubCoolBarManager/getContextMenuManager/,""
6697,method,org/eclipse/jface/action/SubCoolBarManager/setContextMenuManager/IMenuManager,""
6698,method,org/eclipse/jface/action/SubCoolBarManager/update/boolean,""
6699,method,org/eclipse/jface/action/SubCoolBarManager/SubCoolBarManager/ICoolBarManager," Constructs a new manager.\n\n @param mgr the parent manager.  All contributions made to the \n      <code>SubCoolBarManager</code> are forwarded and appear in the\n      parent manager.\n"
6701,method,org/eclipse/jface/action/Action/convertAccelerator/int," Converts an accelerator key code to a string representation.\n \n @param keyCode\n            the key code to be translated\n @return a string representation of the key code\n"
6702,method,org/eclipse/jface/action/Action/convertAccelerator/String," Parses the given accelerator text, and converts it to an accelerator key\n code.\n \n @param acceleratorText\n            the accelerator text\n @return the SWT key code, or 0 if there is no accelerator\n"
6704,method,org/eclipse/jface/action/Action/findKeyString/int," Maps an SWT key code to a standard keyboard key name. The key code is\n stripped of modifiers (SWT.CTRL, SWT.ALT, SWT.SHIFT, and SWT.COMMAND). If\n the key code is not an SWT code (for example if it a key code for the key\n 'S'), a string containing a character representation of the key code is\n returned.\n \n @param keyCode\n            the key code to be translated\n @return the string representation of the key code\n @see org.eclipse.swt.SWT\n @since 2.0\n"
6706,method,org/eclipse/jface/action/Action/findModifierString/int," Returns a string representation of an SWT modifier bit (SWT.CTRL,\n SWT.ALT, SWT.SHIFT, and SWT.COMMAND). Returns <code>null</code> if the\n key code is not an SWT modifier bit.\n \n @param keyCode\n            the SWT modifier bit to be translated\n @return the string representation of the SWT modifier bit, or\n         <code>null</code> if the key code was not an SWT modifier bit\n @see org.eclipse.swt.SWT\n @since 2.0\n"
6707,method,org/eclipse/jface/action/Action/removeAcceleratorText/String," Convenience method for removing any optional accelerator text from the\n given string. The accelerator text appears at the end of the text, and is\n separated from the main part by a single tab character <code>'\t'</code>.\n \n @param text\n            the text\n @return the text sans accelerator\n"
6708,method,org/eclipse/jface/action/Action/removeMnemonics/String," Convenience method for removing any mnemonics from the given string. For\n example, <code>removeMnemonics("&Open")</code> will return\n <code>"Open"</code>.\n \n @param text\n            the text\n @return the text sans mnemonics\n \n @since 3.0\n"
6709,method,org/eclipse/jface/action/Action/getAccelerator/,""
6710,method,org/eclipse/jface/action/Action/getActionDefinitionId/,""
6711,method,org/eclipse/jface/action/Action/getDescription/,""
6712,method,org/eclipse/jface/action/Action/getDisabledImageDescriptor/,""
6713,method,org/eclipse/jface/action/Action/getHelpListener/,""
6714,method,org/eclipse/jface/action/Action/getHoverImageDescriptor/,""
6715,method,org/eclipse/jface/action/Action/getId/,""
6716,method,org/eclipse/jface/action/Action/getImageDescriptor/,""
6717,method,org/eclipse/jface/action/Action/getMenuCreator/,""
6718,method,org/eclipse/jface/action/Action/getStyle/,""
6719,method,org/eclipse/jface/action/Action/getText/,""
6720,method,org/eclipse/jface/action/Action/getToolTipText/,""
6721,method,org/eclipse/jface/action/Action/isChecked/,""
6722,method,org/eclipse/jface/action/Action/isEnabled/,""
6723,method,org/eclipse/jface/action/Action/isHandled/,""
6724,method,org/eclipse/jface/action/Action/notifyResult/boolean," Reports the outcome of the running of this action via the\n {@link IAction#RESULT} property.\n \n @param success\n            <code>true</code> if the action succeeded and\n            <code>false</code> if the action failed or was not completed\n @see IAction#RESULT\n @since 3.0\n"
6727,method,org/eclipse/jface/action/Action/setAccelerator/int,""
6728,method,org/eclipse/jface/action/Action/setActionDefinitionId/String,""
6729,method,org/eclipse/jface/action/Action/setChecked/boolean,""
6730,method,org/eclipse/jface/action/Action/setDescription/String,""
6731,method,org/eclipse/jface/action/Action/setDisabledImageDescriptor/ImageDescriptor,""
6732,method,org/eclipse/jface/action/Action/setEnabled/boolean,""
6733,method,org/eclipse/jface/action/Action/setHelpListener/HelpListener,""
6734,method,org/eclipse/jface/action/Action/setHoverImageDescriptor/ImageDescriptor,""
6735,method,org/eclipse/jface/action/Action/setId/String,""
6736,method,org/eclipse/jface/action/Action/setImageDescriptor/ImageDescriptor,""
6739,method,org/eclipse/jface/action/Action/setToolTipText/String," Sets the tool tip text for this action.\n <p>\n Fires a property change event for the <code>TOOL_TIP_TEXT</code>\n property if the tool tip text actually changes as a consequence.\n </p>\n \n @param toolTipText\n            the tool tip text, or <code>null</code> if none\n"
6740,method,org/eclipse/jface/action/Action/Action/," Creates a new action with no text and no image.\n <p>\n Configure the action later using the set methods.\n </p>\n"
6743,method,org/eclipse/jface/action/Action/Action/String;int," Creates a new action with the given text and style.\n \n @param text\n            the action's text, or <code>null</code> if there is no text\n @param style\n            one of <code>AS_PUSH_BUTTON</code>,\n            <code>AS_CHECK_BOX</code>, <code>AS_DROP_DOWN_MENU</code>,\n            <code>AS_RADIO_BUTTON</code>, and\n            <code>AS_UNSPECIFIED</code>.\n"
6749,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/addPropertyChangeListener/String;IPropertyChangeListener," @see org.eclipse.jface.action.ExternalActionManager.ICallback#addPropertyChangeListener(String,\n      IPropertyChangeListener)\n"
6750,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/bindingManagerChanged/BindingManagerEvent,""
6751,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/getAccelerator/String," @see org.eclipse.jface.action.ExternalActionManager.ICallback#getAccelerator(String)\n"
6752,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/getAcceleratorText/String," @see org.eclipse.jface.action.ExternalActionManager.ICallback#getAcceleratorText(String)\n"
6754,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/isAcceleratorInUse/int," @see org.eclipse.jface.action.ExternalActionManager.ICallback#isAcceleratorInUse(int)\n"
6756,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/removePropertyChangeListener/String;IPropertyChangeListener," @see org.eclipse.jface.action.ExternalActionManager.ICallback#removePropertyChangeListener(String,\n      IPropertyChangeListener)\n"
6757,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/preExecute/IAction;Event," @since 3.4\n"
6758,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/postExecuteSuccess/IAction;Object," @since 3.4\n"
6759,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/postExecuteFailure/IAction;ExecutionException," @since 3.4\n"
6760,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/notDefined/IAction;NotDefinedException," @since 3.4\n"
6761,method,org/eclipse/jface/action/ExternalActionManager/CommandCallback/notEnabled/IAction;NotEnabledException," @since 3.4\n"
6781,method,org/eclipse/jface/action/ExternalActionManager/ICallback/isAcceleratorInUse/int," Checks to see whether the given accelerator is being used by some\n other mechanism (outside of the menus controlled by JFace). This is\n used to keep JFace from trying to grab accelerators away from someone\n else.\n \n @param accelerator\n            The accelerator to check -- in SWT's internal accelerator\n            format.\n @return <code>true</code> if the accelerator is already being used\n         and shouldn't be used again; <code>false</code> otherwise.\n"
6784,class,org/eclipse/jface/action/ContributionItem," An abstract base implementation for contribution items.\n"
6791,method,org/eclipse/jface/action/ContributionItem/getId/,""
6792,method,org/eclipse/jface/action/ContributionItem/getParent/," Returns the parent contribution manager, or <code>null</code> if this \n contribution item is not currently added to a contribution manager.\n \n @return the parent contribution manager, or <code>null</code>\n @since 2.0\n"
6799,method,org/eclipse/jface/action/ContributionItem/setVisible/boolean," The default implementation of this <code>IContributionItem</code>\n method stores the value in an internal state variable,\n which is <code>true</code> by default.\n"
6802,method,org/eclipse/jface/action/ContributionItem/setParent/IContributionManager,""
6806,method,org/eclipse/jface/action/ContributionItem/ContributionItem/String," Creates a contribution item with the given (optional) id.\n The given id is used to find items in a contribution manager,\n and for positioning items relative to other items.\n\n @param id the contribution item identifier, or <code>null</code>\n"
6807,interface,org/eclipse/jface/action/IMenuListener2," A menu listener that gets informed when a menu is about to hide.\n\n @see MenuManager#addMenuListener\n @since 3.2\n"
6808,method,org/eclipse/jface/action/IMenuListener2/menuAboutToHide/IMenuManager," Notifies this listener that the menu is about to be hidden by\n the given menu manager.\n\n @param manager the menu manager\n"
6810,method,org/eclipse/jface/action/GroupMarker/isVisible/," The <code>GroupMarker</code> implementation of this method\n returns <code>false</code> since group markers are always invisible.\n"
6813,method,org/eclipse/jface/action/AbstractGroupMarker/getGroupName/," Returns the group name.\n\n @return the group name\n"
6823,field,org/eclipse/jface/action/IContributionManagerOverrides/P_ENABLED," Id for the enabled property. Value is <code>"enabled"</code>.\n \n @since 2.0\n"
6825,method,org/eclipse/jface/action/AbstractAction/addPropertyChangeListener/IPropertyChangeListener,""
6828,method,org/eclipse/jface/action/AbstractAction/removePropertyChangeListener/IPropertyChangeListener,""
6829,method,org/eclipse/jface/action/AbstractAction/AbstractAction/,""
6831,method,org/eclipse/jface/action/SubMenuManager/addMenuListener/IMenuListener,""
6833,method,org/eclipse/jface/action/SubMenuManager/disposeManager/,""
6834,method,org/eclipse/jface/action/SubMenuManager/fill/Composite,""
6835,method,org/eclipse/jface/action/SubMenuManager/fill/CoolBar;int,""
6836,method,org/eclipse/jface/action/SubMenuManager/fill/Menu;int,""
6837,method,org/eclipse/jface/action/SubMenuManager/fill/ToolBar;int,""
6838,method,org/eclipse/jface/action/SubMenuManager/find/String,""
6840,method,org/eclipse/jface/action/SubMenuManager/findUsingPath/String,""
6841,method,org/eclipse/jface/action/SubMenuManager/getId/,""
6842,method,org/eclipse/jface/action/SubMenuManager/getParentMenuManager/," @return the parent menu manager that this sub-manager contributes to. \n"
6843,method,org/eclipse/jface/action/SubMenuManager/getRemoveAllWhenShown/,""
6845,method,org/eclipse/jface/action/SubMenuManager/isDynamic/,""
6846,method,org/eclipse/jface/action/SubMenuManager/isEnabled/,""
6847,method,org/eclipse/jface/action/SubMenuManager/isGroupMarker/,""
6848,method,org/eclipse/jface/action/SubMenuManager/isSeparator/,""
6849,method,org/eclipse/jface/action/SubMenuManager/removeAll/," Remove all contribution items.\n"
6850,method,org/eclipse/jface/action/SubMenuManager/removeMenuListener/IMenuListener,""
6851,method,org/eclipse/jface/action/SubMenuManager/saveWidgetState/,""
6852,method,org/eclipse/jface/action/SubMenuManager/setParent/IContributionManager,""
6853,method,org/eclipse/jface/action/SubMenuManager/setRemoveAllWhenShown/boolean,""
6854,method,org/eclipse/jface/action/SubMenuManager/setVisible/boolean,""
6855,method,org/eclipse/jface/action/SubMenuManager/update/,""
6856,method,org/eclipse/jface/action/SubMenuManager/update/boolean,""
6857,method,org/eclipse/jface/action/SubMenuManager/update/String,""
6858,method,org/eclipse/jface/action/SubMenuManager/updateAll/boolean,""
6859,method,org/eclipse/jface/action/SubMenuManager/wrapMenu/IMenuManager," Wraps a menu manager in a sub menu manager, and returns the new wrapper.\n @param menu the menu manager to wrap\n @return the new wrapped menu manager\n"
6860,method,org/eclipse/jface/action/SubMenuManager/SubMenuManager/IMenuManager," Constructs a new manager.\n\n @param mgr the parent manager.  All contributions made to the \n      <code>SubMenuManager</code> are forwarded and appear in the\n      parent manager.\n"
6863,method,org/eclipse/jface/action/IStatusLineManager/isCancelEnabled/," Returns whether the cancel button on the status line's progress monitor\n is enabled.\n\n @return <code>true</code> if the cancel button is enabled, or <code>false</code> if not\n"
6864,method,org/eclipse/jface/action/IStatusLineManager/setCancelEnabled/boolean," Sets whether the cancel button on the status line's progress monitor\n is enabled.\n\n @param enabled <code>true</code> if the cancel button is enabled, or <code>false</code> if not\n"
6871,method,org/eclipse/jface/action/StatusLineManager/createControl/Composite;int," Creates and returns this manager's status line control. \n Does not create a new control if one already exists.\n\n @param parent the parent control\n @param style the style for the control\n @return the status line control\n @since 3.0\n"
6873,method,org/eclipse/jface/action/StatusLineManager/getControl/," Returns the control used by this StatusLineManager.\n \n @return the control used by this manager\n"
6875,method,org/eclipse/jface/action/StatusLineManager/getProgressMonitor/,""
6876,method,org/eclipse/jface/action/StatusLineManager/isCancelEnabled/,""
6877,method,org/eclipse/jface/action/StatusLineManager/setCancelEnabled/boolean,""
6878,method,org/eclipse/jface/action/StatusLineManager/setErrorMessage/String,""
6879,method,org/eclipse/jface/action/StatusLineManager/setErrorMessage/Image;String,""
6880,method,org/eclipse/jface/action/StatusLineManager/setMessage/String,""
6881,method,org/eclipse/jface/action/StatusLineManager/setMessage/Image;String,""
6882,method,org/eclipse/jface/action/StatusLineManager/update/boolean,""
6883,method,org/eclipse/jface/action/StatusLineManager/StatusLineManager/," Creates a new status line manager.\n Use the <code>createControl</code> method to create the \n status line control.\n"
6884,field,org/eclipse/jface/action/StatusLineManager/BEGIN_GROUP," Identifier of group marker used to position contributions at the beginning\n of the status line.\n \n @since 3.0\n"
6885,field,org/eclipse/jface/action/StatusLineManager/MIDDLE_GROUP," Identifier of group marker used to position contributions in the middle\n of the status line.\n \n @since 3.0\n"
6886,field,org/eclipse/jface/action/StatusLineManager/END_GROUP," Identifier of group marker used to position contributions at the end\n of the status line.\n \n @since 3.0\n"
6888,method,org/eclipse/jface/action/ToolBarContributionItem/dispose/,""
6889,method,org/eclipse/jface/action/ToolBarContributionItem/fill/CoolBar;int,""
6890,method,org/eclipse/jface/action/ToolBarContributionItem/getCurrentHeight/," Returns the current height of the corresponding cool item.\n \n @return the current height\n"
6891,method,org/eclipse/jface/action/ToolBarContributionItem/getCurrentWidth/," Returns the current width of the corresponding cool item.\n \n @return the current size\n"
6892,method,org/eclipse/jface/action/ToolBarContributionItem/getMinimumItemsToShow/," Returns the minimum number of tool items to show in the cool item.\n \n @return the minimum number of tool items to show, or <code>SHOW_ALL_ITEMS</code>\n         if a value was not set\n @see #setMinimumItemsToShow(int)\n"
6893,method,org/eclipse/jface/action/ToolBarContributionItem/getToolBarManager/," Returns the internal tool bar manager of the contribution item.\n \n @return the tool bar manager, or <code>null</code> if one is not\n         defined.\n @see IToolBarManager\n"
6894,method,org/eclipse/jface/action/ToolBarContributionItem/getUseChevron/," Returns whether chevron support is enabled.\n \n @return <code>true</code> if chevron support is enabled, <code>false</code>\n         otherwise\n"
6895,method,org/eclipse/jface/action/ToolBarContributionItem/isVisible/," A contribution item is visible iff its internal state is visible <em>or</em>\n the tool bar manager contains something other than group markers and\n separators.\n \n @return <code>true</code> if the tool bar manager contains something\n         other than group marks and separators, and the internal state is\n         set to be visible.\n"
6896,method,org/eclipse/jface/action/ToolBarContributionItem/saveWidgetState/,""
6899,method,org/eclipse/jface/action/ToolBarContributionItem/setMinimumItemsToShow/int," Sets the minimum number of tool items to show in the cool item. If this\n number is less than the total tool items, a chevron will appear and the\n hidden tool items appear in a drop down menu. By default, all the tool\n items are shown in the cool item.\n \n @param minimumItemsToShow\n            the minimum number of tool items to show.\n @see #getMinimumItemsToShow()\n @see #setUseChevron(boolean)\n"
6900,method,org/eclipse/jface/action/ToolBarContributionItem/setUseChevron/boolean," Enables or disables chevron support for the cool item. By default,\n chevron support is enabled.\n \n @param value\n            <code>true</code> to enable chevron support, <code>false</code>\n            otherwise.\n"
6901,method,org/eclipse/jface/action/ToolBarContributionItem/update/String,""
6902,method,org/eclipse/jface/action/ToolBarContributionItem/ToolBarContributionItem/," Convenience method equivalent to <code>ToolBarContributionItem(new ToolBarManager(), null)</code>.\n"
6903,method,org/eclipse/jface/action/ToolBarContributionItem/ToolBarContributionItem/IToolBarManager," Convenience method equivalent to <code>ToolBarContributionItem(toolBarManager, null)</code>.\n \n @param toolBarManager\n            the tool bar manager\n"
6904,method,org/eclipse/jface/action/ToolBarContributionItem/ToolBarContributionItem/IToolBarManager;String," Creates a tool bar contribution item.\n \n @param toolBarManager\n            the tool bar manager to wrap\n @param id\n            the contribution item id, or <code>null</code> if none\n"
6909,method,org/eclipse/jface/action/ActionContributionItem/equals/Object," Compares this action contribution item with another object. Two action\n contribution items are equal if they refer to the identical Action.\n"
6910,method,org/eclipse/jface/action/ActionContributionItem/fill/Composite," The <code>ActionContributionItem</code> implementation of this\n <code>IContributionItem</code> method creates an SWT\n <code>Button</code> for the action using the action's style. If the\n action's checked property has been set, the button is created and primed\n to the value of the checked property.\n"
6911,method,org/eclipse/jface/action/ActionContributionItem/fill/Menu;int," The <code>ActionContributionItem</code> implementation of this\n <code>IContributionItem</code> method creates an SWT\n <code>MenuItem</code> for the action using the action's style. If the\n action's checked property has been set, a button is created and primed to\n the value of the checked property. If the action's menu creator property\n has been set, a cascading submenu is created.\n"
6912,method,org/eclipse/jface/action/ActionContributionItem/fill/ToolBar;int," The <code>ActionContributionItem</code> implementation of this ,\n <code>IContributionItem</code> method creates an SWT\n <code>ToolItem</code> for the action using the action's style. If the\n action's checked property has been set, a button is created and primed to\n the value of the checked property. If the action's menu creator property\n has been set, a drop-down tool item is created.\n"
6913,method,org/eclipse/jface/action/ActionContributionItem/getAction/," Returns the action associated with this contribution item.\n \n @return the action\n"
6915,method,org/eclipse/jface/action/ActionContributionItem/hashCode/,""
6916,method,org/eclipse/jface/action/ActionContributionItem/isDynamic/," The action item implementation of this <code>IContributionItem</code>\n method returns <code>true</code> for menu items and <code>false</code>\n for everything else.\n"
6917,method,org/eclipse/jface/action/ActionContributionItem/isEnabled/,""
6918,method,org/eclipse/jface/action/ActionContributionItem/isEnabledAllowed/," Returns <code>true</code> if this item is allowed to enable,\n <code>false</code> otherwise.\n \n @return if this item is allowed to be enabled\n @since 2.0\n"
6920,method,org/eclipse/jface/action/ActionContributionItem/setMode/int," Sets the presentation mode, which is the bitwise-or of the\n <code>MODE_*</code> constants.\n \n @param mode\n            the presentation mode settings\n \n @since 3.0\n"
6924,method,org/eclipse/jface/action/ActionContributionItem/dispose/,""
6926,method,org/eclipse/jface/action/ActionContributionItem/ActionContributionItem/IAction," Creates a new contribution item from the given action. The id of the\n action is used as the id of the item.\n \n @param action\n            the action\n"
6929,method,org/eclipse/jface/action/SubContributionManager/add/IAction,""
6930,method,org/eclipse/jface/action/SubContributionManager/add/IContributionItem,""
6931,method,org/eclipse/jface/action/SubContributionManager/appendToGroup/String;IAction,""
6932,method,org/eclipse/jface/action/SubContributionManager/appendToGroup/String;IContributionItem,""
6934,method,org/eclipse/jface/action/SubContributionManager/find/String,""
6935,method,org/eclipse/jface/action/SubContributionManager/getItems/,""
6936,method,org/eclipse/jface/action/SubContributionManager/getParent/," Returns the parent manager.\n\n @return the parent manager\n"
6937,method,org/eclipse/jface/action/SubContributionManager/getOverrides/,""
6938,method,org/eclipse/jface/action/SubContributionManager/insertAfter/String;IAction,""
6939,method,org/eclipse/jface/action/SubContributionManager/insertAfter/String;IContributionItem,""
6940,method,org/eclipse/jface/action/SubContributionManager/insertBefore/String;IAction,""
6941,method,org/eclipse/jface/action/SubContributionManager/insertBefore/String;IContributionItem,""
6942,method,org/eclipse/jface/action/SubContributionManager/isDirty/,""
6943,method,org/eclipse/jface/action/SubContributionManager/isEmpty/,""
6944,method,org/eclipse/jface/action/SubContributionManager/isVisible/," Returns whether the contribution list is visible.\n If the visibility is <code>true</code> then each item within the manager \n appears within the parent manager.  Otherwise, the items are not visible.\n\n @return <code>true</code> if the manager is visible\n"
6947,method,org/eclipse/jface/action/SubContributionManager/items/," @return fetch all enumeration of wrappers for the item\n @deprecated Use getItems(String value) instead.\n"
6948,method,org/eclipse/jface/action/SubContributionManager/markDirty/,""
6949,method,org/eclipse/jface/action/SubContributionManager/prependToGroup/String;IAction,""
6950,method,org/eclipse/jface/action/SubContributionManager/prependToGroup/String;IContributionItem,""
6951,method,org/eclipse/jface/action/SubContributionManager/remove/String,""
6952,method,org/eclipse/jface/action/SubContributionManager/remove/IContributionItem,""
6953,method,org/eclipse/jface/action/SubContributionManager/removeAll/,""
6954,method,org/eclipse/jface/action/SubContributionManager/setVisible/boolean," Sets the visibility of the manager.  If the visibility is <code>true</code>\n then each item within the manager appears within the parent manager.\n Otherwise, the items are not visible.\n\n @param visible the new visibility\n"
6955,method,org/eclipse/jface/action/SubContributionManager/wrap/IContributionItem," Wraps a contribution item in a sub contribution item, and returns the new wrapper.\n @param item the contribution item to be wrapped\n @return the wrapped item\n"
6957,method,org/eclipse/jface/action/SubContributionManager/SubContributionManager/IContributionManager," Constructs a new <code>SubContributionManager</code>\n\n @param mgr the parent contribution manager.  All contributions made to the\n      <code>SubContributionManager</code> are forwarded and appear in the\n      parent manager.\n"
6959,method,org/eclipse/jface/action/StatusLineContributionItem/fill/Composite,""
6960,method,org/eclipse/jface/action/StatusLineContributionItem/getDisplayLocation/," An accessor for the current location of this status line contribution\n item -- relative to the display.\n \n @return The current location of this status line; <code>null</code> if\n         not yet initialized.\n"
6961,method,org/eclipse/jface/action/StatusLineContributionItem/getText/," Retrieves the text that is being displayed in the status line.\n \n @return the text that is currently being displayed\n"
6963,method,org/eclipse/jface/action/StatusLineContributionItem/StatusLineContributionItem/String," Creates a status line contribution item with the given id.\n \n @param id\n            the contribution item's id, or <code>null</code> if it is to\n            have no id\n"
6964,method,org/eclipse/jface/action/StatusLineContributionItem/StatusLineContributionItem/String;int," Creates a status line contribution item with the given id that displays\n the given number of characters.\n \n @param id\n            the contribution item's id, or <code>null</code> if it is to\n            have no id\n @param charWidth\n            the number of characters to display\n"
6966,field,org/eclipse/jface/contexts/IContextIds/CONTEXT_ID_DIALOG," The identifier for the context that is active when a shell registered as\n a dialog.\n"
6967,field,org/eclipse/jface/contexts/IContextIds/CONTEXT_ID_DIALOG_AND_WINDOW," The identifier for the context that is active when a shell is registered\n as either a window or a dialog.\n"
6968,field,org/eclipse/jface/contexts/IContextIds/CONTEXT_ID_WINDOW," The identifier for the context that is active when a shell is registered\n as a window.\n"
6970,method,org/eclipse/jface/util/DelegatingDragAdapter/addDragSourceListener/TransferDragSourceListener," Adds the given <code>TransferDragSourceListener</code>.\n \n @param listener the new listener\n"
6971,method,org/eclipse/jface/util/DelegatingDragAdapter/dragFinished/DragSourceEvent," The drop has successfully completed. This event is forwarded to the current \n drag listener.\n Doesn't update the current listener, since the current listener  is already the one\n that completed the drag operation.\n \n @param event the drag source event\n @see DragSourceListener#dragFinished(DragSourceEvent)\n"
6972,method,org/eclipse/jface/util/DelegatingDragAdapter/dragSetData/DragSourceEvent," The drop data is requested.\n Updates the current listener and then forwards the event to it.\n \n @param event the drag source event\n @see DragSourceListener#dragSetData(DragSourceEvent)\n"
6974,method,org/eclipse/jface/util/DelegatingDragAdapter/getTransfers/," Returns the <code>Transfer<code>s from every <code>TransferDragSourceListener</code>.\n \n @return the combined <code>Transfer</code>s\n"
6975,method,org/eclipse/jface/util/DelegatingDragAdapter/isEmpty/," Returns <code>true</code> if there are no listeners to delegate drag events to.\n \n @return <code>true</code> if there are no <code>TransferDragSourceListeners</code>\n 	<code>false</code> otherwise.\n"
6977,method,org/eclipse/jface/util/DelegatingDragAdapter/DelegatingDragAdapter/,""
6979,method,org/eclipse/jface/util/TransferDragSourceListener/getTransfer/," Returns the <code>Transfer</code> type that this listener can provide data for.\n \n @return the <code>Transfer</code> associated with this listener\n"
6981,method,org/eclipse/jface/util/LocalSelectionTransfer/getTransfer/," Returns the singleton.\n \n @return the singleton\n"
6982,method,org/eclipse/jface/util/LocalSelectionTransfer/getSelection/," Returns the local transfer data.\n \n @return the local transfer data\n"
6983,method,org/eclipse/jface/util/LocalSelectionTransfer/getTypeIds/," Returns the type id used to identify this transfer.\n \n @return the type id used to identify this transfer.\n"
6984,method,org/eclipse/jface/util/LocalSelectionTransfer/getTypeNames/," Returns the type name used to identify this transfer.\n \n @return the type name used to identify this transfer.\n"
6987,method,org/eclipse/jface/util/LocalSelectionTransfer/setSelection/ISelection," Sets the transfer data for local use.\n \n @param s the transfer data\n"
6988,method,org/eclipse/jface/util/LocalSelectionTransfer/getSelectionSetTime/," Returns the time when the selection operation\n this transfer is associated with was started.\n \n @return the time when the selection operation has started\n \n @see org.eclipse.swt.events.TypedEvent#time\n"
6989,method,org/eclipse/jface/util/LocalSelectionTransfer/setSelectionSetTime/long," Sets the time when the selection operation this\n transfer is associated with was started.\n If assigning this from an SWT event, be sure to use\n <code>setSelectionTime(event.time & 0xFFFF)</code>\n \n @param time the time when the selection operation was started\n \n @see org.eclipse.swt.events.TypedEvent#time\n"
6992,method,org/eclipse/jface/util/Assert/isLegal/boolean," Asserts that an argument is legal. If the given boolean is\n not <code>true</code>, an <code>IllegalArgumentException</code>\n is thrown.\n\n @param expression the outcome of the check\n @return <code>true</code> if the check passes (does not return\n    if the check fails)\n @exception IllegalArgumentException if the legality test failed\n"
6996,method,org/eclipse/jface/util/Assert/isTrue/boolean," Asserts that the given boolean is <code>true</code>. If this\n is not the case, some kind of unchecked exception is thrown.\n\n @param expression the outcome of the check\n @return <code>true</code> if the check passes (does not return\n    if the check fails)\n"
6998,class,org/eclipse/jface/util/Geometry," Contains static methods for performing simple geometric operations\n on the SWT geometry classes.\n\n @since 3.0\n"
7000,method,org/eclipse/jface/util/Geometry/magnitude/Point," Returns the magnitude of the given 2d vector (represented as a Point)\n  \n @param p point representing the 2d vector whose magnitude is being computed\n @return the magnitude of the given 2d vector\n @since 3.0\n"
7001,method,org/eclipse/jface/util/Geometry/magnitudeSquared/Point," Returns the square of the magnitude of the given 2-space vector (represented\n using a point)\n \n @param p the point whose magnitude is being computed\n @return the square of the magnitude of the given vector\n @since 3.0\n"
7002,method,org/eclipse/jface/util/Geometry/dotProduct/Point;Point," Returns the dot product of the given vectors (expressed as Points)\n \n @param p1 the first vector\n @param p2 the second vector\n @return the dot product of the two vectors\n @since 3.0\n"
7003,method,org/eclipse/jface/util/Geometry/min/Point;Point," Returns a new point whose coordinates are the minimum of the coordinates of the\n given points\n \n @param p1 a Point\n @param p2 a Point\n @return a new point whose coordinates are the minimum of the coordinates of the\n given points\n @since 3.0\n"
7004,method,org/eclipse/jface/util/Geometry/max/Point;Point," Returns a new point whose coordinates are the maximum of the coordinates\n of the given points\n @param p1 a Point\n @param p2 a Point\n @return point a new point whose coordinates are the maximum of the coordinates\n @since 3.0\n"
7005,method,org/eclipse/jface/util/Geometry/getDirectionVector/int;int," Returns a vector in the given direction with the given\n magnitude. Directions are given using SWT direction constants, and\n the resulting vector is in the screen's coordinate system. That is,\n the vector (0, 1) is down and the vector (1, 0) is right. \n \n @param distance magnitude of the vector\n @param direction one of SWT.TOP, SWT.BOTTOM, SWT.LEFT, or SWT.RIGHT\n @return a point representing a vector in the given direction with the given magnitude\n @since 3.0\n"
7006,method,org/eclipse/jface/util/Geometry/centerPoint/Rectangle," Returns the point in the center of the given rectangle.\n \n @param rect rectangle being computed\n @return a Point at the center of the given rectangle.\n @since 3.0\n"
7007,method,org/eclipse/jface/util/Geometry/copy/Point," Returns a copy of the given point\n \n @param toCopy point to copy\n @return a copy of the given point\n"
7008,method,org/eclipse/jface/util/Geometry/set/Point;Point," Sets result equal to toCopy\n \n @param result object that will be modified\n @param toCopy object that will be copied\n @since 3.1\n"
7009,method,org/eclipse/jface/util/Geometry/set/Rectangle;Rectangle," Sets result equal to toCopy\n \n @param result object that will be modified\n @param toCopy object that will be copied\n @since 3.1\n"
7011,method,org/eclipse/jface/util/Geometry/add/Rectangle;Rectangle," <p>Returns a new Rectangle whose x, y, width, and height is the sum of the x, y, width, and height values of \n both rectangles respectively.</p>\n \n @param rect1 first rectangle to add\n @param rect2 second rectangle to add\n @return a new rectangle whose x, y, height, and width attributes are the sum of the corresponding attributes from\n         the arguments.\n @since 3.3\n"
7012,method,org/eclipse/jface/util/Geometry/add/Point;Point," Adds two points as 2d vectors. Returns a new point whose coordinates are\n the sum of the original two points.\n \n @param point1 the first point (not null)\n @param point2 the second point (not null)\n @return a new point whose coordinates are the sum of the given points\n @since 3.0\n"
7013,method,org/eclipse/jface/util/Geometry/divide/Point;int," Divides both coordinates of the given point by the given scalar. \n \n @since 3.1 \n\n @param toDivide point to divide\n @param scalar denominator\n @return a new Point whose coordinates are equal to the original point divided by the scalar\n"
7014,method,org/eclipse/jface/util/Geometry/subtract/Point;Point," Performs vector subtraction on two points. Returns a new point equal to\n (point1 - point2).\n \n @param point1 initial point\n @param point2 vector to subtract\n @return the difference (point1 - point2)\n @since 3.0\n"
7015,method,org/eclipse/jface/util/Geometry/flipXY/Point," Swaps the X and Y coordinates of the given point.\n \n @param toFlip modifies this point\n @since 3.1\n"
7016,method,org/eclipse/jface/util/Geometry/flipXY/Rectangle," Swaps the X and Y coordinates of the given rectangle, along with the height and width.\n \n @param toFlip modifies this rectangle\n @since 3.1\n"
7017,method,org/eclipse/jface/util/Geometry/getDimension/Rectangle;boolean," Returns the height or width of the given rectangle.\n \n @param toMeasure rectangle to measure\n @param width returns the width if true, and the height if false\n @return the width or height of the given rectangle\n @since 3.0\n"
7018,method,org/eclipse/jface/util/Geometry/getCoordinate/Point;boolean," Returns the x or y coordinates of the given point.\n \n @param toMeasure point being measured\n @param width if true, returns x. Otherwise, returns y.\n @return the x or y coordinate\n @since 3.1\n"
7019,method,org/eclipse/jface/util/Geometry/getCoordinate/Rectangle;boolean," Returns the x or y coordinates of the given rectangle.\n \n @param toMeasure rectangle being measured\n @param width if true, returns x. Otherwise, returns y.\n @return the x or y coordinate\n @since 3.1\n"
7020,method,org/eclipse/jface/util/Geometry/setDimension/Rectangle;boolean;int," Sets one dimension of the given rectangle. Modifies the given rectangle.\n \n @param toSet rectangle to modify\n @param width if true, the width is modified. If false, the height is modified.\n @param newCoordinate new value of the width or height\n @since 3.1\n"
7021,method,org/eclipse/jface/util/Geometry/setCoordinate/Rectangle;boolean;int," Sets one coordinate of the given rectangle. Modifies the given rectangle.\n \n @param toSet rectangle to modify\n @param width if true, the x coordinate is modified. If false, the y coordinate is modified.\n @param newCoordinate new value of the x or y coordinates\n @since 3.1\n"
7022,method,org/eclipse/jface/util/Geometry/setCoordinate/Point;boolean;int," Sets one coordinate of the given point. Modifies the given point.\n \n @param toSet point to modify\n @param width if true, the x coordinate is modified. If false, the y coordinate is modified.\n @param newCoordinate new value of the x or y coordinates\n @since 3.1\n"
7023,method,org/eclipse/jface/util/Geometry/getDistanceFromEdge/Rectangle;Point;int," Returns the distance of the given point from a particular side of the given rectangle.\n Returns negative values for points outside the rectangle.\n \n @param rectangle a bounding rectangle\n @param testPoint a point to test\n @param edgeOfInterest side of the rectangle to test against\n @return the distance of the given point from the given edge of the rectangle\n @since 3.0\n"
7025,method,org/eclipse/jface/util/Geometry/getOppositeSide/int," Returns the opposite of the given direction. That is, returns SWT.LEFT if\n given SWT.RIGHT and visa-versa.\n \n @param swtDirectionConstant one of SWT.LEFT, SWT.RIGHT, SWT.TOP, or SWT.BOTTOM\n @return one of SWT.LEFT, SWT.RIGHT, SWT.TOP, or SWT.BOTTOM\n @since 3.0\n"
7026,method,org/eclipse/jface/util/Geometry/getSwtHorizontalOrVerticalConstant/boolean," Converts the given boolean into an SWT orientation constant.\n \n @param horizontal if true, returns SWT.HORIZONTAL. If false, returns SWT.VERTICAL \n @return SWT.HORIZONTAL or SWT.VERTICAL.\n @since 3.0\n"
7027,method,org/eclipse/jface/util/Geometry/isHorizontal/int," Returns true iff the given SWT side constant corresponds to a horizontal side\n of a rectangle. That is, returns true for the top and bottom but false for the\n left and right.\n \n @param swtSideConstant one of SWT.TOP, SWT.BOTTOM, SWT.LEFT, or SWT.RIGHT\n @return true iff the given side is horizontal.\n @since 3.0\n"
7028,method,org/eclipse/jface/util/Geometry/moveRectangle/Rectangle;Point," Moves the given rectangle by the given delta.\n \n @param rect rectangle to move (will be modified)\n @param delta direction vector to move the rectangle by\n @since 3.0\n"
7029,method,org/eclipse/jface/util/Geometry/expand/Rectangle;Rectangle," Moves each edge of the given rectangle outward by the given amount. Negative values\n cause the rectangle to contract. Does not allow the rectangle's width or height to be\n reduced below zero.\n  \n @param rect normalized rectangle to modify\n @param differenceRect difference rectangle to be added to rect\n @since 3.3\n"
7030,method,org/eclipse/jface/util/Geometry/createDiffRectangle/int;int;int;int," <p>Returns a rectangle which, when added to another rectangle, will expand each side\n by the given number of units.</p>\n \n <p>This is commonly used to store margin sizes. For example:</p>\n \n <code><pre>\n     // Expands the left, right, top, and bottom \n     // of the given control by 10, 5, 1, and 15 units respectively\n      \n     Rectangle margins = Geometry.createDifferenceRect(10,5,1,15);\n     Rectangle bounds = someControl.getBounds();\n     someControl.setBounds(Geometry.add(bounds, margins));\n </pre></code>\n \n @param left distance to expand the left side (negative values move the edge inward)\n @param right distance to expand the right side (negative values move the edge inward)\n @param top distance to expand the top (negative values move the edge inward)\n @param bottom distance to expand the bottom (negative values move the edge inward)\n \n @return a difference rectangle that, when added to another rectangle, will cause each\n side to expand by the given number of units\n @since 3.3\n"
7031,method,org/eclipse/jface/util/Geometry/expand/Rectangle;int;int;int;int," Moves each edge of the given rectangle outward by the given amount. Negative values\n cause the rectangle to contract. Does not allow the rectangle's width or height to be\n reduced below zero.\n  \n @param rect normalized rectangle to modify\n @param left distance to move the left edge outward (negative values move the edge inward)\n @param right distance to move the right edge outward (negative values move the edge inward) \n @param top distance to move the top edge outward (negative values move the edge inward)\n @param bottom distance to move the bottom edge outward (negative values move the edge inward)\n @since 3.1\n"
7033,method,org/eclipse/jface/util/Geometry/toControl/Control;Rectangle," Converts the given rectangle from display coordinates to the local coordinate system \n of the given object into display coordinates.\n \n @param coordinateSystem local coordinate system being converted to\n @param toConvert rectangle to convert\n @return a rectangle in control coordinates\n @since 3.0\n"
7034,method,org/eclipse/jface/util/Geometry/toDisplay/Control;Rectangle," Converts the given rectangle from the local coordinate system of the given object\n into display coordinates.\n \n @param coordinateSystem local coordinate system being converted from\n @param toConvert rectangle to convert\n @return a rectangle in display coordinates\n @since 3.0\n"
7035,method,org/eclipse/jface/util/Geometry/getRelativePosition/Rectangle;Point," Determines where the given point lies with respect to the given rectangle.\n Returns a combination of SWT.LEFT, SWT.RIGHT, SWT.TOP, and SWT.BOTTOM, combined\n with bitwise or (for example, returns SWT.TOP | SWT.LEFT if the point is to the\n upper-left of the rectangle). Returns 0 if the point lies within the rectangle.\n Positions are in screen coordinates (ie: a point is to the upper-left of the\n rectangle if its x and y coordinates are smaller than any point in the rectangle)\n  \n @param boundary normalized boundary rectangle \n @param toTest point whose relative position to the rectangle is being computed\n @return one of SWT.LEFT | SWT.TOP, SWT.TOP, SWT.RIGHT | SWT.TOP, SWT.LEFT, 0,\n SWT.RIGHT, SWT.LEFT | SWT.BOTTOM, SWT.BOTTOM, SWT.RIGHT | SWT.BOTTOM\n @since 3.0\n"
7037,method,org/eclipse/jface/util/Geometry/getClosestSide/Rectangle;Point," Returns the edge of the given rectangle is closest to the given\n point.\n \n @param boundary rectangle to test\n @param toTest point to compare\n @return one of SWT.LEFT, SWT.RIGHT, SWT.TOP, or SWT.BOTTOM\n \n @since 3.0\n"
7038,method,org/eclipse/jface/util/Geometry/copy/Rectangle," Returns a copy of the given rectangle\n \n @param toCopy rectangle to copy\n @return a copy of the given rectangle\n @since 3.0\n"
7039,method,org/eclipse/jface/util/Geometry/getSize/Rectangle," Returns the size of the rectangle, as a Point\n \n @param rectangle rectangle whose size is being computed\n @return the size of the given rectangle\n @since 3.0\n"
7040,method,org/eclipse/jface/util/Geometry/setSize/Rectangle;Point," Sets the size of the given rectangle to the given size\n \n @param rectangle rectangle to modify\n @param newSize new size of the rectangle\n @since 3.0\n"
7041,method,org/eclipse/jface/util/Geometry/setLocation/Rectangle;Point," Sets the x,y position of the given rectangle. For a normalized\n rectangle (a rectangle with positive width and height), this will\n be the upper-left corner of the rectangle. \n \n @param rectangle rectangle to modify\n @param newLocation new location of the rectangle\n \n @since 3.0\n"
7042,method,org/eclipse/jface/util/Geometry/getLocation/Rectangle," Returns the x,y position of the given rectangle. For normalized rectangles\n (rectangles with positive width and height), this is the upper-left\n corner of the rectangle.\n \n @param toQuery rectangle to query\n @return a Point containing the x,y position of the rectangle\n \n @since 3.0\n"
7043,method,org/eclipse/jface/util/Geometry/createRectangle/Point;Point," Returns a new rectangle with the given position and dimensions, expressed\n as points.\n \n @param position the (x,y) position of the rectangle\n @param size the size of the new rectangle, where (x,y) -> (width, height)\n @return a new Rectangle with the given position and size\n \n @since 3.0\n"
7045,interface,org/eclipse/jface/util/IPropertyChangeListener," Listener for property changes.\n <p>\n Usage:\n <pre>\n IPropertyChangeListener listener =\n   new IPropertyChangeListener() {\n      public void propertyChange(PropertyChangeEvent event) {\n         ... // code to deal with occurrence of property change\n      }\n   };\n emitter.addPropertyChangeListener(listener);\n ...\n emitter.removePropertyChangeListener(listener);\n </pre>\n </p>\n"
7047,interface,org/eclipse/jface/util/IOpenEventListener," Listener for open events which are generated on selection\n of default selection depending on the user preferences.\n \n <p>\n Usage:\n <pre>\n	OpenStrategy handler = new OpenStrategy(control);\n	handler.addOpenListener(new IOpenEventListener() {\n		public void handleOpen(SelectionEvent e) {\n			... // code to handle the open event.\n		}\n	});\n </pre>\n </p>\n\n @see OpenStrategy\n"
7050,method,org/eclipse/jface/util/PropertyChangeEvent/getNewValue/," Returns the new value of the property.\n\n @return the new value, or <code>null</code> if not known\n  or not relevant (for instance if the property was removed).\n"
7051,method,org/eclipse/jface/util/PropertyChangeEvent/getOldValue/," Returns the old value of the property.\n\n @return the old value, or <code>null</code> if not known\n  or not relevant (for instance if the property was just\n  added and there was no old value).\n"
7054,class,org/eclipse/jface/util/OpenStrategy," Implementation of single-click and double-click strategies.\n <p>\n Usage:\n <pre>\n	OpenStrategy handler = new OpenStrategy(control);\n	handler.addOpenListener(new IOpenEventListener() {\n		public void handleOpen(SelectionEvent e) {\n			... // code to handle the open event.\n		}\n	});\n </pre>\n </p>\n"
7055,method,org/eclipse/jface/util/OpenStrategy/addOpenListener/IOpenEventListener," Adds an IOpenEventListener to the collection of openEventListeners\n @param listener the listener to add\n"
7056,method,org/eclipse/jface/util/OpenStrategy/removeOpenListener/IOpenEventListener," Removes an IOpenEventListener to the collection of openEventListeners\n @param listener the listener to remove\n"
7057,method,org/eclipse/jface/util/OpenStrategy/addSelectionListener/SelectionListener," Adds an SelectionListener to the collection of selectionEventListeners\n @param listener the listener to add\n"
7058,method,org/eclipse/jface/util/OpenStrategy/removeSelectionListener/SelectionListener," Removes an SelectionListener to the collection of selectionEventListeners\n @param listener the listener to remove\n"
7059,method,org/eclipse/jface/util/OpenStrategy/addPostSelectionListener/SelectionListener," Adds an SelectionListener to the collection of selectionEventListeners\n @param listener the listener to add\n"
7060,method,org/eclipse/jface/util/OpenStrategy/removePostSelectionListener/SelectionListener," Removes an SelectionListener to the collection of selectionEventListeners\n @param listener the listener to remove\n"
7064,method,org/eclipse/jface/util/OpenStrategy/OpenStrategy/Control," @param control the control the strategy is applied to\n"
7065,field,org/eclipse/jface/util/OpenStrategy/DOUBLE_CLICK,"\n Default behavior. Double click to open the item.\n"
7066,field,org/eclipse/jface/util/OpenStrategy/SINGLE_CLICK,"\n Single click will open the item.\n"
7067,field,org/eclipse/jface/util/OpenStrategy/SELECT_ON_HOVER,"\n Hover will select the item.\n"
7068,field,org/eclipse/jface/util/OpenStrategy/ARROW_KEYS_OPEN," Open item when using arrow keys\n"
7069,field,org/eclipse/jface/util/OpenStrategy/NO_TIMER,"A single click will generate\n an open event but key arrows will not do anything.\n \n @deprecated\n"
7071,field,org/eclipse/jface/util/OpenStrategy/ACTIVE_DESKTOP,"Pointing to an item will change the selection\n and a single click will gererate an open event\n \n @deprecated\n"
7075,method,org/eclipse/jface/util/Policy/setStatusHandler/StatusHandler," Sets the status handler used by JFace to handle statuses.\n \n @param status\n            the handler to use, or <code>null</code> to use the default\n            one\n @since 3.4\n"
7076,method,org/eclipse/jface/util/Policy/getStatusHandler/," Returns the status handler used by JFace to handle statuses.\n \n @return the status handler\n @since 3.4\n"
7077,method,org/eclipse/jface/util/Policy/getComparator/," Return the comparator used by JFace to sort strings.\n \n @return the comparator used by JFace to sort strings\n @since 3.2\n"
7078,method,org/eclipse/jface/util/Policy/setComparator/Comparator," Sets the comparator used by JFace to sort strings.\n \n @param comparator\n            comparator used by JFace to sort strings\n @since 3.2\n"
7079,method,org/eclipse/jface/util/Policy/setAnimatorFactory/AnimatorFactory," Sets the animator factory used by JFace to create control animator\n instances.\n \n @param factory\n            the AnimatorFactory to use.\n @since 3.2\n @deprecated this is no longer in use as of 3.3\n"
7080,method,org/eclipse/jface/util/Policy/getAnimatorFactory/," Returns the animator factory used by JFace to create control animator\n instances.\n \n @return the animator factory used to create control animator instances.\n @since 3.2\n @deprecated this is no longer in use as of 3.3\n"
7083,method,org/eclipse/jface/util/Policy/logException/Exception," Log the Exception to the logger.\n \n @param exception\n @since 3.4\n"
7084,method,org/eclipse/jface/util/Policy/Policy/,""
7086,field,org/eclipse/jface/util/Policy/JFACE," The unique identifier of the JFace plug-in.\n"
7088,field,org/eclipse/jface/util/Policy/TRACE_ACTIONS," A flag to indicate whether actions are being traced.\n"
7089,field,org/eclipse/jface/util/Policy/TRACE_TOOLBAR," A flag to indicate whether toolbars are being traced.\n"
7091,method,org/eclipse/jface/util/TransferDropTargetListener/getTransfer/," Returns the <code>Transfer</code> type that this listener can \n accept a drop operation for.\n \n @return the <code>Transfer</code> for this listener\n"
7093,class,org/eclipse/jface/util/ConfigureColumns," Utilities for configuring columns of trees and tables in a\n keyboard-accessible way.\n \n @since 3.5\n \n"
7094,method,org/eclipse/jface/util/ConfigureColumns/forTree/Tree;IShellProvider," Configure the columns of the given tree in a keyboard-accessible way,\n using the given shell provider to parent dialogs.\n \n @param tree the tree\n @param shellProvider a shell provider\n @return <code>false</code> if the user canceled, <code>true</code>\n         otherwise\n"
7095,method,org/eclipse/jface/util/ConfigureColumns/forTable/Table;IShellProvider," Configure the columns of the given tree in a keyboard-accessible way,\n using the given shell provider to parent dialogs.\n \n @param table the table\n @param shellProvider a shell provider\n @return <code>false</code> if the user canceled, <code>true</code>\n         otherwise\n"
7096,method,org/eclipse/jface/util/ConfigureColumns/ConfigureColumns/,""
7098,method,org/eclipse/jface/util/SafeRunnable/handleException/Throwable,""
7102,method,org/eclipse/jface/util/SafeRunnable/getRunner/," Returns the safe runnable runner.\n \n @return the safe runnable runner\n \n @since 3.1\n"
7103,method,org/eclipse/jface/util/SafeRunnable/setRunner/ISafeRunnableRunner," Sets the safe runnable runner.\n \n @param runner\n            the runner to set, or <code>null</code> to reset to the\n            default runner\n @since 3.1\n"
7104,method,org/eclipse/jface/util/SafeRunnable/run/ISafeRunnable," Runs the given safe runnable using the safe runnable runner. This is a\n convenience method, equivalent to:\n <code>SafeRunnable.getRunner().run(runnable)</code>.\n \n @param runnable\n            the runnable to run\n @since 3.1\n"
7108,method,org/eclipse/jface/util/StatusHandler/show/IStatus;String," Show the given status.\n \n @param status\n            status to handle\n @param title\n            title for the status\n"
7109,method,org/eclipse/jface/util/StatusHandler/StatusHandler/,""
7111,method,org/eclipse/jface/util/ILogger/log/IStatus," Logs the given status.\n \n @param status the status to log\n"
7115,method,org/eclipse/jface/util/ListenerList/ListenerList/," Creates a listener list with an initial capacity of 1.\n"
7117,class,org/eclipse/jface/util/Util," <p>\n A static class providing utility methods to all of JFace.\n </p>\n \n @since 3.1\n"
7119,method,org/eclipse/jface/util/Util/compare/boolean;boolean," Compares two boolean values. <code>false</code> is considered to be\n "less than" <code>true</code>.\n \n @param left\n            The left value to compare\n @param right\n            The right value to compare\n @return <code>-1</code> if the left is <code>false</code> and the\n         right is <code>true</code>. <code>1</code> if the opposite\n         is true. If they are equal, then it returns <code>0</code>.\n"
7120,method,org/eclipse/jface/util/Util/compare/int;int," Compares two integer values.\n \n @param left\n            The left value to compare\n @param right\n            The right value to compare\n @return <code>left - right</code>\n"
7127,method,org/eclipse/jface/util/Util/hashCode/int," Provides a hash code based on the given integer value.\n \n @param i\n            The integer value\n @return <code>i</code>\n"
7133,method,org/eclipse/jface/util/Util/replaceAll/String;String;String," Foundation replacement for String.replaceAll(*).\n \n @param src the starting string.\n @param find the string to find.\n @param replacement the string to replace.\n @return The new string.\n @since 3.4\n"
7134,method,org/eclipse/jface/util/Util/isWindows/," Common WS query helper method. \n @return <code>true</code> for windows platforms\n @since 3.5\n"
7135,method,org/eclipse/jface/util/Util/isMac/," Common WS query helper method. \n @return <code>true</code> for mac platforms\n @since 3.5\n"
7136,method,org/eclipse/jface/util/Util/isLinux/," Common WS query helper method. \n @return <code>true</code> for linux platform\n @since 3.5\n"
7137,method,org/eclipse/jface/util/Util/isGtk/," Common WS query helper method. \n @return <code>true</code> for gtk platforms\n @since 3.5\n"
7138,method,org/eclipse/jface/util/Util/isMotif/," Common WS query helper method. \n @return <code>true</code> for motif platforms\n @since 3.5\n"
7139,method,org/eclipse/jface/util/Util/isPhoton/," Common WS query helper method. \n @return <code>true</code> for photon platforms\n @since 3.5\n"
7140,method,org/eclipse/jface/util/Util/isCarbon/," Common WS query helper method. \n @return <code>true</code> for carbon platforms\n @since 3.5\n"
7141,method,org/eclipse/jface/util/Util/isCocoa/," Common WS query helper method. \n @return <code>true</code> for the cocoa platform.\n @since 3.5\n"
7142,method,org/eclipse/jface/util/Util/isWpf/," Common WS query helper method. \n @return <code>true</code> for WPF\n @since 3.5\n"
7143,method,org/eclipse/jface/util/Util/isWin32/," Common WS query helper method. \n @return <code>true</code> for win32\n @since 3.5\n"
7144,method,org/eclipse/jface/util/Util/getWS/," Common WS query helper method. \n @return the SWT windowing platform string.\n @see SWT#getPlatform()\n @since 3.5\n"
7146,field,org/eclipse/jface/util/Util/ZERO_LENGTH_STRING," A common zero-length string. It avoids needing write <code>NON-NLS</code>\n next to code fragments. It's also a bit clearer to read.\n"
7147,field,org/eclipse/jface/util/Util/WS_WIN32," Windowing system constant.\n @since 3.5\n"
7148,field,org/eclipse/jface/util/Util/WS_MOTIF," Windowing system constant.\n @since 3.5\n"
7149,field,org/eclipse/jface/util/Util/WS_GTK," Windowing system constant.\n @since 3.5\n"
7150,field,org/eclipse/jface/util/Util/WS_PHOTON," Windowing system constant.\n @since 3.5\n"
7151,field,org/eclipse/jface/util/Util/WS_CARBON," Windowing system constant.\n @since 3.5\n"
7152,field,org/eclipse/jface/util/Util/WS_COCOA," Windowing system constant.\n @since 3.5\n"
7153,field,org/eclipse/jface/util/Util/WS_WPF," Windowing system constant.\n @since 3.5\n"
7154,field,org/eclipse/jface/util/Util/WS_UNKNOWN," Windowing system constant.\n @since 3.5\n"
7156,method,org/eclipse/jface/util/DelegatingDropAdapter/addDropTargetListener/TransferDropTargetListener," Adds the given <code>TransferDropTargetListener</code>.\n \n @param listener the new listener\n"
7157,method,org/eclipse/jface/util/DelegatingDropAdapter/dragEnter/DropTargetEvent," The cursor has entered the drop target boundaries. The current listener is \n updated, and <code>#dragEnter()</code> is forwarded to the current listener.\n \n @param event the drop target event \n @see DropTargetListener#dragEnter(DropTargetEvent)\n"
7158,method,org/eclipse/jface/util/DelegatingDropAdapter/dragLeave/DropTargetEvent," The cursor has left the drop target boundaries. The event is forwarded to the \n current listener.\n \n @param event the drop target event\n @see DropTargetListener#dragLeave(DropTargetEvent)\n"
7159,method,org/eclipse/jface/util/DelegatingDropAdapter/dragOperationChanged/DropTargetEvent," The operation being performed has changed (usually due to the user changing \n a drag modifier key while dragging). Updates the current listener and forwards \n this event to that listener.\n \n @param event the drop target event\n @see DropTargetListener#dragOperationChanged(DropTargetEvent)\n"
7160,method,org/eclipse/jface/util/DelegatingDropAdapter/dragOver/DropTargetEvent," The cursor is moving over the drop target. Updates the current listener and \n forwards this event to that listener. If no listener can handle the drag \n operation the <code>event.detail</code> field is set to <code>DND.DROP_NONE</code> \n to indicate an invalid drop.\n   \n @param event the drop target event\n @see DropTargetListener#dragOver(DropTargetEvent)\n"
7161,method,org/eclipse/jface/util/DelegatingDropAdapter/drop/DropTargetEvent," Forwards this event to the current listener, if there is one. Sets the\n current listener to <code>null</code> afterwards.\n \n @param event the drop target event\n @see DropTargetListener#drop(DropTargetEvent)\n"
7162,method,org/eclipse/jface/util/DelegatingDropAdapter/dropAccept/DropTargetEvent," Forwards this event to the current listener if there is one.\n \n @param event the drop target event\n @see DropTargetListener#dropAccept(DropTargetEvent)\n"
7163,method,org/eclipse/jface/util/DelegatingDropAdapter/getTransfers/," Returns the combined set of <code>Transfer</code> types of all \n <code>TransferDropTargetListeners</code>.\n \n @return the combined set of <code>Transfer</code> types\n"
7164,method,org/eclipse/jface/util/DelegatingDropAdapter/isEmpty/," Returns <code>true</code> if there are no listeners to delegate events to.\n \n @return <code>true</code> if there are no <code>TransferDropTargetListeners</code>\n	<code>false</code> otherwise\n"
7166,method,org/eclipse/jface/util/DelegatingDropAdapter/DelegatingDropAdapter/,""
7167,class,org/eclipse/jface/fieldassist/SimpleContentProposalProvider," SimpleContentProposalProvider is a class designed to map a static list of\n Strings to content proposals.\n \n @see IContentProposalProvider\n @since 3.2\n \n"
7169,method,org/eclipse/jface/fieldassist/SimpleContentProposalProvider/setProposals/String[]," Set the Strings to be used as content proposals.\n \n @param items\n            the array of Strings to be used as proposals.\n"
7171,method,org/eclipse/jface/fieldassist/SimpleContentProposalProvider/SimpleContentProposalProvider/String[]," Construct a SimpleContentProposalProvider whose content proposals are\n always the specified array of Objects.\n \n @param proposals\n            the array of Strings to be returned whenever proposals are\n            requested.\n"
7173,method,org/eclipse/jface/fieldassist/FieldDecoration/getImage/," Return the image shown in the decoration, or <code>null</code> if no\n image is specified.\n \n @return the image shown in the decoration. A return value of\n         <code>null</code> signifies a blank decoration.\n"
7175,method,org/eclipse/jface/fieldassist/FieldDecoration/getDescription/," Return the description for the decoration shown when the user hovers over\n the decoration.\n \n @return the String description of the decoration. A return value of\n         <code>null</code> indicates that no description will be shown.\n"
7183,method,org/eclipse/jface/fieldassist/ControlDecoration/dispose/," Dispose this ControlDecoration. Unhook any listeners that have been\n installed on the target control. This method has no effect if the\n receiver is already disposed.\n"
7186,method,org/eclipse/jface/fieldassist/ControlDecoration/hideHover/," Hide any hover popups that are currently showing on the control. When\n {@link #setShowHover(boolean)} has been set to <code>true</code>, a\n decoration's description text will be shown in an info hover over the\n field's control as long as the mouse hovers over the decoration, and will\n be hidden when the mouse exits the decoration. This method can be used to\n hide a hover, whether it was shown explicitly using\n {@link #showHoverText(String)}, or was showing because the user was\n hovering in the decoration.\n <p>\n This message has no effect if there is no current hover.\n \n"
7188,method,org/eclipse/jface/fieldassist/ControlDecoration/hide/," Hide the control decoration and any associated hovers. This message has\n no effect if the decoration is already hidden.\n"
7190,method,org/eclipse/jface/fieldassist/ControlDecoration/setDescriptionText/String," Set the image shown in this control decoration. Update the rendered\n decoration.\n \n @param text\n            the text to be shown as a description for the decoration, or\n            <code>null</code> if none has been set.\n"
7191,method,org/eclipse/jface/fieldassist/ControlDecoration/getImage/," Get the image shown in this control decoration.\n \n @return the image to be shown adjacent to the control, or\n         <code>null</code> if one has not been set.\n"
7199,method,org/eclipse/jface/fieldassist/ControlDecoration/update/," Something has changed, requiring redraw. Redraw the decoration and update\n the hover text if appropriate.\n"
7203,interface,org/eclipse/jface/fieldassist/IContentProposalListener," This interface is used to listen to notifications from a\n {@link ContentProposalAdapter}.\n \n @since 3.2\n"
7204,method,org/eclipse/jface/fieldassist/IContentProposalListener/proposalAccepted/IContentProposal," A content proposal has been accepted.\n \n @param proposal\n            the accepted content proposal\n"
7206,method,org/eclipse/jface/fieldassist/IContentProposalListener2/proposalPopupOpened/ContentProposalAdapter," A content proposal popup has been opened for content proposal assistance.\n \n @param adapter\n            the ContentProposalAdapter which is providing content proposal\n            behavior to a control\n"
7207,method,org/eclipse/jface/fieldassist/IContentProposalListener2/proposalPopupClosed/ContentProposalAdapter," A content proposal popup has been closed.\n \n @param adapter\n            the ContentProposalAdapter which is providing content proposal\n            behavior to a control\n"
7208,class,org/eclipse/jface/fieldassist/TextContentAdapter," An {@link IControlContentAdapter} for SWT Text controls. This is a\n convenience class for easily creating a {@link ContentProposalAdapter} for\n text fields.\n \n @since 3.2\n"
7209,method,org/eclipse/jface/fieldassist/TextContentAdapter/getControlContents/Control,""
7210,method,org/eclipse/jface/fieldassist/TextContentAdapter/setControlContents/Control;String;int,""
7211,method,org/eclipse/jface/fieldassist/TextContentAdapter/insertControlContents/Control;String;int,""
7212,method,org/eclipse/jface/fieldassist/TextContentAdapter/getCursorPosition/Control,""
7213,method,org/eclipse/jface/fieldassist/TextContentAdapter/getInsertionBounds/Control,""
7214,method,org/eclipse/jface/fieldassist/TextContentAdapter/setCursorPosition/Control;int,""
7215,method,org/eclipse/jface/fieldassist/TextContentAdapter/getSelection/Control," @see org.eclipse.jface.fieldassist.IControlContentAdapter2#getSelection(org.eclipse.swt.widgets.Control)\n \n @since 3.4\n"
7216,method,org/eclipse/jface/fieldassist/TextContentAdapter/setSelection/Control;Point," @see org.eclipse.jface.fieldassist.IControlContentAdapter2#setSelection(org.eclipse.swt.widgets.Control,\n      org.eclipse.swt.graphics.Point)\n \n @since 3.4\n"
7217,method,org/eclipse/jface/fieldassist/TextContentAdapter/TextContentAdapter/,""
7220,method,org/eclipse/jface/fieldassist/DecoratedField/getControl/," Get the control that is decorated by the receiver.\n \n @return the Control decorated by the receiver, or <code>null</code> if\n         none has been created yet.\n"
7223,method,org/eclipse/jface/fieldassist/DecoratedField/hideHover/," Hide any hover popups that are currently showing on the control.\n Normally, a decoration's description text will be shown in an info hover\n over the field's control as long as the mouse hovers over the decoration,\n and will be hidden when the mouse exits the control. This method can be\n used to hide a hover that was shown using <code>showHoverText</code>,\n or to programatically hide the current decoration hover.\n \n <p>\n This message has no effect if there is no current hover.\n \n"
7224,method,org/eclipse/jface/fieldassist/DecoratedField/showDecoration/FieldDecoration," Show the specified decoration. This message has no effect if the\n decoration is already showing, or was not already added to the field\n using <code>addFieldDecoration</code>.\n \n @param decoration\n            the decoration to be shown.\n"
7225,method,org/eclipse/jface/fieldassist/DecoratedField/hideDecoration/FieldDecoration," Hide the specified decoration. This message has no effect if the\n decoration is already hidden, or was not already added to the field using\n <code>addFieldDecoration</code>.\n \n @param decoration\n            the decoration to be hidden.\n"
7230,method,org/eclipse/jface/fieldassist/IControlCreator/createControl/Composite;int," Create a control with the specified parent and style bits.\n \n @param parent\n            the parent of the control\n @param style\n            the style of the control\n \n @return the Control that was created.\n"
7231,class,org/eclipse/jface/fieldassist/AutoCompleteField," AutoCompleteField is a class which attempts to auto-complete a user's\n keystrokes by activating a popup that filters a list of proposals according\n to the content typed by the user.\n \n @see ContentProposalAdapter\n @see SimpleContentProposalProvider\n \n @since 3.3\n"
7232,method,org/eclipse/jface/fieldassist/AutoCompleteField/setProposals/String[]," Set the Strings to be used as content proposals.\n \n @param proposals\n            the array of Strings to be used as proposals.\n"
7237,method,org/eclipse/jface/fieldassist/IControlContentAdapter/getControlContents/Control," Get the text contents of the control.\n \n @param control\n            the control whose contents are to be retrieved.\n @return the String contents of the control.\n"
7238,method,org/eclipse/jface/fieldassist/IControlContentAdapter/getCursorPosition/Control," Get the current cursor position in the control. The position is specified\n as a zero-based index into the string. Valid ranges are from 0 to N,\n where N is the size of the contents string. A value of N indicates that\n the cursor is at the end of the contents.\n \n @param control\n            the control whose position is to be retrieved.\n @return the zero-based index representing the cursor position in the\n         control's contents.\n"
7240,method,org/eclipse/jface/fieldassist/IControlContentAdapter/setCursorPosition/Control;int," Set the current cursor position in the control. The position is specified\n as a zero-based index into the string. Valid ranges are from 0 to N,\n where N is the size of the contents string. A value of N indicates that\n the cursor is at the end of the contents.\n \n @param control\n            the control whose cursor position is to be set.\n @param index\n            the zero-based index representing the cursor position in the\n            control's contents.\n"
7241,interface,org/eclipse/jface/fieldassist/IControlContentAdapter2," This interface is used by a {@link ContentProposalAdapter} in order to\n retrieve and set the selection range in a control.\n \n @since 3.4\n"
7242,method,org/eclipse/jface/fieldassist/IControlContentAdapter2/getSelection/Control," Get the current selection range in the control. The x coordinate of the\n returned point is the position of the first selected character and the y\n coordinate of the returned point is the position of the last selected\n character. The positions are specified as a zero-based index into the\n string. Valid ranges are from 0 to N, where N is the size of the contents\n string. A value of N indicates that the last character is in the\n selection.\n \n @param control\n            the control whose position is to be retrieved.\n @return a point representing the selection start and end\n"
7243,method,org/eclipse/jface/fieldassist/IControlContentAdapter2/setSelection/Control;Point," Set the current selection range in the control. The x coordinate of the\n provided point is the position of the first selected character and the y\n coordinate of the point is the position of the last selected character.\n The positions are specified as a zero-based index into the string. Valid\n ranges are from 0 to N, where N is the size of the contents string. A\n value of N indicates that the last character is in the selection. If the\n x and y coordinates are the same, then there is no selection.\n \n @param control\n            the control whose position is to be retrieved.\n @param range\n            a point representing the selection start and end\n"
7247,method,org/eclipse/jface/fieldassist/FieldAssistColors/FieldAssistColors/,""
7248,interface,org/eclipse/jface/fieldassist/IContentProposal," IContentProposal describes a content proposal to be shown. It consists of the\n content that will be provided if the proposal is accepted, an optional label\n used to describe the content to the user, and an optional description that\n further elaborates the meaning of the proposal.\n \n @since 3.2\n"
7249,method,org/eclipse/jface/fieldassist/IContentProposal/getContent/," Return the content represented by this proposal.\n \n @return the String content represented by this proposal.\n"
7251,method,org/eclipse/jface/fieldassist/IContentProposal/getLabel/," Return the label used to describe this proposal.\n \n @return the String label used to display the proposal. If\n         <code>null</code>, then the content will be displayed as the\n         label.\n"
7252,method,org/eclipse/jface/fieldassist/IContentProposal/getDescription/," Return a description that describes this proposal.\n \n @return the String label used to further the proposal. If\n         <code>null</code>, then no description will be displayed.\n"
7254,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/getDefault/," Get the default FieldDecorationRegistry.\n \n @return the singleton FieldDecorationRegistry that is used to manage\n         shared field decorations.\n"
7255,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/setDefault/FieldDecorationRegistry," Set the default FieldDecorationRegistry.\n \n @param defaultRegistry\n            the singleton FieldDecorationRegistry that is used to manage\n            shared field decorations.\n"
7256,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/getMaximumDecorationWidth/," Get the maximum width (in pixels) of any decoration retrieved so far in\n the registry. This value changes as decorations are added and retrieved.\n This value can be used by clients to reserve space or otherwise compute\n margins when aligning non-decorated fields with decorated fields.\n \n @return the maximum width in pixels of any accessed decoration\n"
7257,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/getMaximumDecorationHeight/," Get the maximum height (in pixels) of any decoration retrieved so far in\n the registry. This value changes as decorations are added and retrieved.\n This value can be used by clients to reserve space or otherwise compute\n margins when aligning non-decorated fields with decorated fields.\n \n \n @return the maximum height in pixels of any accessed decoration\n"
7259,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/registerFieldDecoration/String;String;String;ImageRegistry," Registers a field decoration using the specified id. An image id and an\n image registry are supplied. The image will not be created until the\n decoration is requested.\n \n @param id\n            the String id used to identify and access the decoration.\n @param description\n            the String description to be used in the decoration, or\n            <code>null</code> if the decoration has no description. *\n @param imageId\n            the id of the image in the supplied image registry that is\n            used for this decorator\n @param imageRegistry\n            the registry used to obtain the image\n"
7261,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/getFieldDecoration/String," Returns the field decoration registered by the specified id .\n \n @param id\n            the String id used to access the decoration.\n @return the FieldDecoration with the specified id, or <code>null</code>\n         if there is no decoration with the specified id.\n"
7262,method,org/eclipse/jface/fieldassist/FieldDecorationRegistry/FieldDecorationRegistry/," Construct a FieldDecorationRegistry.\n"
7270,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/getControl/," Get the control on which the content proposal adapter is installed.\n \n @return the control on which the proposal adapter is installed.\n"
7271,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/getLabelProvider/," Get the label provider that is used to show proposals.\n \n @return the {@link ILabelProvider} used to show proposals, or\n         <code>null</code> if one has not been installed.\n"
7272,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/isEnabled/," Return a boolean indicating whether the receiver is enabled.\n \n @return <code>true</code> if the adapter is enabled, and\n         <code>false</code> if it is not.\n"
7275,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/setContentProposalProvider/IContentProposalProvider," Set the content proposal provider that is used to show proposals.\n \n @param proposalProvider\n            the {@link IContentProposalProvider} used to show proposals\n"
7284,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/getPopupSize/," Return the size, in pixels, of the content proposal popup.\n \n @return a Point specifying the last width and height, in pixels, of the\n         content proposal popup.\n"
7288,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/getControlContentAdapter/," Return the content adapter that can get or retrieve the text contents\n from the adapter's control. This method is used when a client, such as a\n content proposal listener, needs to update the control's contents\n manually.\n \n @return the {@link IControlContentAdapter} which can update the control\n         text.\n"
7289,method,org/eclipse/jface/fieldassist/ContentProposalAdapter/setEnabled/boolean," Set the boolean flag that determines whether the adapter is enabled.\n \n @param enabled\n            <code>true</code> if the adapter is enabled and responding\n            to user input, <code>false</code> if it is ignoring user\n            input.\n \n"
7303,field,org/eclipse/jface/fieldassist/ContentProposalAdapter/FILTER_CHARACTER," Indicates that a single character filter applies as keys are typed in the\n popup.\n"
7305,class,org/eclipse/jface/fieldassist/ComboContentAdapter," An {@link IControlContentAdapter} for SWT Combo controls. This is a\n convenience class for easily creating a {@link ContentProposalAdapter} for\n combo fields.\n \n @since 3.2\n"
7306,method,org/eclipse/jface/fieldassist/ComboContentAdapter/getControlContents/Control,""
7307,method,org/eclipse/jface/fieldassist/ComboContentAdapter/setControlContents/Control;String;int,""
7308,method,org/eclipse/jface/fieldassist/ComboContentAdapter/insertControlContents/Control;String;int,""
7309,method,org/eclipse/jface/fieldassist/ComboContentAdapter/getCursorPosition/Control,""
7310,method,org/eclipse/jface/fieldassist/ComboContentAdapter/getInsertionBounds/Control,""
7311,method,org/eclipse/jface/fieldassist/ComboContentAdapter/setCursorPosition/Control;int,""
7312,method,org/eclipse/jface/fieldassist/ComboContentAdapter/getSelection/Control," @see org.eclipse.jface.fieldassist.IControlContentAdapter2#getSelection(org.eclipse.swt.widgets.Control)\n \n @since 3.4\n"
7313,method,org/eclipse/jface/fieldassist/ComboContentAdapter/setSelection/Control;Point," @see org.eclipse.jface.fieldassist.IControlContentAdapter2#setSelection(org.eclipse.swt.widgets.Control,\n      org.eclipse.swt.graphics.Point)\n \n @since 3.4\n"
7314,method,org/eclipse/jface/fieldassist/ComboContentAdapter/ComboContentAdapter/,""
7315,interface,org/eclipse/jface/fieldassist/IContentProposalProvider," IContentProposalProvider provides an array of IContentProposals that are\n appropriate for a textual dialog field, given the field's current content and\n the current cursor position. \n \n @since 3.2\n"
7316,method,org/eclipse/jface/fieldassist/IContentProposalProvider/getProposals/String;int," Return an array of Objects representing the valid content proposals for a\n field.\n \n @param contents\n            the current contents of the text field\n @param position\n            the current position of the cursor in the contents\n \n @return the array of {@link IContentProposal} that represent valid\n         proposals for the field.\n"
7318,method,org/eclipse/jface/fieldassist/TextControlCreator/createControl/Composite;int,""
7319,method,org/eclipse/jface/fieldassist/TextControlCreator/TextControlCreator/,""
7327,method,org/apache/commons/collections/ClosureUtils/exceptionClosure/," Gets a Closure that always throws an exception.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.ExceptionClosure\n \n @return the closure\n"
7328,method,org/apache/commons/collections/ClosureUtils/nopClosure/," Gets a Closure that will do nothing.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.NOPClosure\n \n @return the closure\n"
7344,method,org/apache/commons/collections/ClosureUtils/ClosureUtils/," This class is not normally instantiated.\n"
7348,class,org/apache/commons/collections/EnumerationUtils," Provides utility methods for {@link Enumeration} instances.\n\n @since Commons Collections 3.0\n @version $Id: EnumerationUtils.java 814997 2009-09-15 05:29:56Z bayard $\n\n @author <a href="mailto:ggregory@seagullsw.com">Gary Gregory</a>\n"
7351,method,org/apache/commons/collections/EnumerationUtils/EnumerationUtils/," EnumerationUtils is not normally instantiated.\n"
7352,class,org/apache/commons/collections/MapUtils," Provides utility methods and decorators for\n {@link Map} and {@link SortedMap} instances.\n <p>\n It contains various type safe methods\n as well as other useful features like deep copying.\n <p>\n It also provides the following decorators:\n\n  <ul>\n  <li>{@link #fixedSizeMap(Map)}\n  <li>{@link #fixedSizeSortedMap(SortedMap)}\n  <li>{@link #lazyMap(Map,Factory)}\n  <li>{@link #lazyMap(Map,Transformer)}\n  <li>{@link #lazySortedMap(SortedMap,Factory)}\n  <li>{@link #lazySortedMap(SortedMap,Transformer)}\n  <li>{@link #predicatedMap(Map,Predicate,Predicate)}\n  <li>{@link #predicatedSortedMap(SortedMap,Predicate,Predicate)}\n  <li>{@link #transformedMap(Map, Transformer, Transformer)}\n  <li>{@link #transformedSortedMap(SortedMap, Transformer, Transformer)}\n  <li>{@link #multiValueMap( Map )}\n  <li>{@link #multiValueMap( Map, Class )}\n  <li>{@link #multiValueMap( Map, Factory )}\n  </ul>\n\n @since Commons Collections 1.0\n @version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n @author <a href="mailto:jstrachan@apache.org">James Strachan</a>\n @author <a href="mailto:nissim@nksystems.com">Nissim Karpenstein</a>\n @author <a href="mailto:knielsen@apache.org">Kasper Nielsen</a>\n @author Paul Jack\n @author Stephen Colebourne\n @author Matthew Hawthorne\n @author Arun Mammen Thomas\n @author Janek Bogucki\n @author Max Rydahl Andersen\n @author <a href="mailto:equinus100@hotmail.com">Ashwin S</a>\n @author <a href="mailto:jcarman@apache.org">James Carman</a>\n @author Neil O'Toole\n"
7353,method,org/apache/commons/collections/MapUtils/getObject/Map;Object," Gets from a Map in a null-safe manner.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map, <code>null</code> if null map input\n"
7354,method,org/apache/commons/collections/MapUtils/getString/Map;Object," Gets a String from a Map in a null-safe manner.\n <p>\n The String is obtained via <code>toString</code>.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a String, <code>null</code> if null map input\n"
7355,method,org/apache/commons/collections/MapUtils/getBoolean/Map;Object," Gets a Boolean from a Map in a null-safe manner.\n <p>\n If the value is a <code>Boolean</code> it is returned directly.\n If the value is a <code>String</code> and it equals 'true' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Boolean, <code>null</code> if null map input\n"
7356,method,org/apache/commons/collections/MapUtils/getNumber/Map;Object," Gets a Number from a Map in a null-safe manner.\n <p>\n If the value is a <code>Number</code> it is returned directly.\n If the value is a <code>String</code> it is converted using\n {@link NumberFormat#parse(String)} on the system default formatter\n returning <code>null</code> if the conversion fails.\n Otherwise, <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Number, <code>null</code> if null map input\n"
7357,method,org/apache/commons/collections/MapUtils/getByte/Map;Object," Gets a Byte from a Map in a null-safe manner.\n <p>\n The Byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Byte, <code>null</code> if null map input\n"
7358,method,org/apache/commons/collections/MapUtils/getShort/Map;Object," Gets a Short from a Map in a null-safe manner.\n <p>\n The Short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Short, <code>null</code> if null map input\n"
7359,method,org/apache/commons/collections/MapUtils/getInteger/Map;Object," Gets a Integer from a Map in a null-safe manner.\n <p>\n The Integer is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Integer, <code>null</code> if null map input\n"
7360,method,org/apache/commons/collections/MapUtils/getLong/Map;Object," Gets a Long from a Map in a null-safe manner.\n <p>\n The Long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Long, <code>null</code> if null map input\n"
7361,method,org/apache/commons/collections/MapUtils/getFloat/Map;Object," Gets a Float from a Map in a null-safe manner.\n <p>\n The Float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Float, <code>null</code> if null map input\n"
7362,method,org/apache/commons/collections/MapUtils/getDouble/Map;Object," Gets a Double from a Map in a null-safe manner.\n <p>\n The Double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Double, <code>null</code> if null map input\n"
7363,method,org/apache/commons/collections/MapUtils/getMap/Map;Object," Gets a Map from a Map in a null-safe manner.\n <p>\n If the value returned from the specified map is not a Map then\n <code>null</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Map, <code>null</code> if null map input\n"
7364,method,org/apache/commons/collections/MapUtils/getObject/Map;Object;Object,"  Looks up the given key in the given map, converting null into the\n  given default value.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null\n  @return  the value in the map, or defaultValue if the original value\n    is null or the map is null\n"
7365,method,org/apache/commons/collections/MapUtils/getString/Map;Object;String,"  Looks up the given key in the given map, converting the result into\n  a string, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a string, or defaultValue if the\n    original value is null, the map is null or the string conversion\n    fails\n"
7366,method,org/apache/commons/collections/MapUtils/getBoolean/Map;Object;Boolean,"  Looks up the given key in the given map, converting the result into\n  a boolean, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a boolean, or defaultValue if the\n    original value is null, the map is null or the boolean conversion\n    fails\n"
7367,method,org/apache/commons/collections/MapUtils/getNumber/Map;Object;Number,"  Looks up the given key in the given map, converting the result into\n  a number, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7368,method,org/apache/commons/collections/MapUtils/getByte/Map;Object;Byte,"  Looks up the given key in the given map, converting the result into\n  a byte, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7369,method,org/apache/commons/collections/MapUtils/getShort/Map;Object;Short,"  Looks up the given key in the given map, converting the result into\n  a short, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7370,method,org/apache/commons/collections/MapUtils/getInteger/Map;Object;Integer,"  Looks up the given key in the given map, converting the result into\n  an integer, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7371,method,org/apache/commons/collections/MapUtils/getLong/Map;Object;Long,"  Looks up the given key in the given map, converting the result into\n  a long, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7372,method,org/apache/commons/collections/MapUtils/getFloat/Map;Object;Float,"  Looks up the given key in the given map, converting the result into\n  a float, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7373,method,org/apache/commons/collections/MapUtils/getDouble/Map;Object;Double,"  Looks up the given key in the given map, converting the result into\n  a double, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the number conversion\n    fails\n"
7374,method,org/apache/commons/collections/MapUtils/getMap/Map;Object;Map,"  Looks up the given key in the given map, converting the result into\n  a map, using the default value if the the conversion fails.\n\n  @param map  the map whose value to look up\n  @param key  the key of the value to look up in that map\n  @param defaultValue  what to return if the value is null or if the\n     conversion fails\n  @return  the value in the map as a number, or defaultValue if the\n    original value is null, the map is null or the map conversion\n    fails\n"
7375,method,org/apache/commons/collections/MapUtils/getBooleanValue/Map;Object," Gets a boolean from a Map in a null-safe manner.\n <p>\n If the value is a <code>Boolean</code> its value is returned.\n If the value is a <code>String</code> and it equals 'true' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>false</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a Boolean, <code>false</code> if null map input\n"
7376,method,org/apache/commons/collections/MapUtils/getByteValue/Map;Object," Gets a byte from a Map in a null-safe manner.\n <p>\n The byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a byte, <code>0</code> if null map input\n"
7377,method,org/apache/commons/collections/MapUtils/getShortValue/Map;Object," Gets a short from a Map in a null-safe manner.\n <p>\n The short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a short, <code>0</code> if null map input\n"
7378,method,org/apache/commons/collections/MapUtils/getIntValue/Map;Object," Gets an int from a Map in a null-safe manner.\n <p>\n The int is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as an int, <code>0</code> if null map input\n"
7379,method,org/apache/commons/collections/MapUtils/getLongValue/Map;Object," Gets a long from a Map in a null-safe manner.\n <p>\n The long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a long, <code>0L</code> if null map input\n"
7380,method,org/apache/commons/collections/MapUtils/getFloatValue/Map;Object," Gets a float from a Map in a null-safe manner.\n <p>\n The float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a float, <code>0.0F</code> if null map input\n"
7381,method,org/apache/commons/collections/MapUtils/getDoubleValue/Map;Object," Gets a double from a Map in a null-safe manner.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @return the value in the Map as a double, <code>0.0</code> if null map input\n"
7382,method,org/apache/commons/collections/MapUtils/getBooleanValue/Map;Object;boolean," Gets a boolean from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n If the value is a <code>Boolean</code> its value is returned.\n If the value is a <code>String</code> and it equals 'true' ignoring case\n then <code>true</code> is returned, otherwise <code>false</code>.\n If the value is a <code>Number</code> an integer zero value returns\n <code>false</code> and non-zero returns <code>true</code>.\n Otherwise, <code>defaultValue</code> is returned.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a Boolean, <code>defaultValue</code> if null map input\n"
7383,method,org/apache/commons/collections/MapUtils/getByteValue/Map;Object;byte," Gets a byte from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The byte is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a byte, <code>defaultValue</code> if null map input\n"
7384,method,org/apache/commons/collections/MapUtils/getShortValue/Map;Object;short," Gets a short from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The short is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a short, <code>defaultValue</code> if null map input\n"
7385,method,org/apache/commons/collections/MapUtils/getIntValue/Map;Object;int," Gets an int from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The int is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as an int, <code>defaultValue</code> if null map input\n"
7386,method,org/apache/commons/collections/MapUtils/getLongValue/Map;Object;long," Gets a long from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The long is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a long, <code>defaultValue</code> if null map input\n"
7387,method,org/apache/commons/collections/MapUtils/getFloatValue/Map;Object;float," Gets a float from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The float is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a float, <code>defaultValue</code> if null map input\n"
7388,method,org/apache/commons/collections/MapUtils/getDoubleValue/Map;Object;double," Gets a double from a Map in a null-safe manner,\n using the default value if the the conversion fails.\n <p>\n The double is obtained from the results of {@link #getNumber(Map,Object)}.\n\n @param map  the map to use\n @param key  the key to look up\n @param defaultValue  return if the value is null or if the\n     conversion fails\n @return the value in the Map as a double, <code>defaultValue</code> if null map input\n"
7406,method,org/apache/commons/collections/MapUtils/multiValueMap/Map," Creates a mult-value map backed by the given map which returns\n collections of type ArrayList.\n\n @param map  the map to decorate\n @return a multi-value map backed by the given map which returns ArrayLists of values.\n @see MultiValueMap\n @since Commons Collections 3.2\n"
7408,method,org/apache/commons/collections/MapUtils/multiValueMap/Map;Factory," Creates a multi-value map backed by the given map which returns\n collections created by the specified collection factory.\n\n @param map  the map to decorate\n @param collectionFactory  a factor which creates collection objects\n @return a multi-value map backed by the given map which returns collections\n created by the specified collection factory\n @see MultiValueMap\n @since Commons Collections 3.2\n"
7416,method,org/apache/commons/collections/MapUtils/populateMap/Map;Collection;Transformer," <p>\n Populates a Map using the supplied <code>Transformer</code> to transform the collection\n values into keys, using the unaltered collection value as the value in the <code>Map</code>.\n </p>\n @param map the <code>Map</code> to populate.\n @param collection the <code>Collection</code> to use as input values for the map.\n @param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n @throws NullPointerException if the map, collection or transformer are null\n"
7417,method,org/apache/commons/collections/MapUtils/populateMap/Map;Collection;Transformer;Transformer," <p>\n Populates a Map using the supplied <code>Transformer</code>s to transform the collection\n values into keys and values.\n </p>\n @param map the <code>Map</code> to populate.\n @param collection the <code>Collection</code> to use as input values for the map.\n @param keyTransformer the <code>Transformer</code> used to transform the collection value into a key value\n @param valueTransformer the <code>Transformer</code> used to transform the collection value into a value\n @throws NullPointerException if the map, collection or transformers are null\n"
7421,field,org/apache/commons/collections/MapUtils/EMPTY_MAP," An empty unmodifiable map.\n This was not provided in JDK1.2.\n"
7422,field,org/apache/commons/collections/MapUtils/EMPTY_SORTED_MAP," An empty unmodifiable sorted map.\n This is not provided in the JDK.\n"
7423,interface,org/apache/commons/collections/OrderedMapIterator," Defines an iterator that operates over an ordered <code>Map</code>.\n <p>\n This iterator allows both forward and reverse iteration through the map.\n\n @param <K> the type of the keys in the map\n @param <V> the type of the values in the map\n @since Commons Collections 3.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7424,method,org/apache/commons/collections/OrderedMapIterator/hasPrevious/," Checks to see if there is a previous entry that can be iterated to.\n\n @return <code>true</code> if the iterator has a previous element\n"
7425,method,org/apache/commons/collections/OrderedMapIterator/previous/," Gets the previous <em>key</em> from the <code>Map</code>.\n\n @return the previous key in the iteration\n @throws NoSuchElementException if the iteration is finished\n"
7427,method,org/apache/commons/collections/Factory/create/," Create a new object.\n\n @return a new object\n @throws FunctorException (runtime) if the factory cannot create an object\n"
7431,method,org/apache/commons/collections/IteratorUtils/emptyOrderedIterator/," Gets an empty ordered iterator.\n <p>\n This iterator is a valid iterator object that will iterate\n over nothing.\n\n @return  an ordered iterator over nothing\n"
7432,method,org/apache/commons/collections/IteratorUtils/emptyMapIterator/," Gets an empty map iterator.\n <p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n @return  a map iterator over nothing\n"
7433,method,org/apache/commons/collections/IteratorUtils/emptyOrderedMapIterator/," Gets an empty ordered map iterator.\n <p>\n This iterator is a valid map iterator object that will iterate\n over nothing.\n\n @return  a map iterator over nothing\n"
7435,method,org/apache/commons/collections/IteratorUtils/singletonListIterator/Object," Gets a singleton list iterator.\n <p>\n This iterator is a valid list iterator object that will iterate over\n the specified object.\n\n @param object  the single object over which to iterate\n @return  a singleton list iterator over the object\n"
7437,method,org/apache/commons/collections/IteratorUtils/arrayIterator/Object," Gets an iterator over an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @return  an iterator over the array\n @throws IllegalArgumentException if the array is not an array\n @throws NullPointerException if array is null\n"
7439,method,org/apache/commons/collections/IteratorUtils/arrayIterator/Object;int," Gets an iterator over the end part of an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return an iterator over part of the array\n @throws IllegalArgumentException if the array is not an array\n @throws IndexOutOfBoundsException if start is less than zero or greater\n  than the length of the array\n @throws NullPointerException if array is null\n"
7442,method,org/apache/commons/collections/IteratorUtils/arrayListIterator/Object[]," Gets a list iterator over an object array.\n\n @param array  the array over which to iterate\n @return  a list iterator over the array\n @throws NullPointerException if array is null\n"
7443,method,org/apache/commons/collections/IteratorUtils/arrayListIterator/Object," Gets a list iterator over an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @return  a list iterator over the array\n @throws IllegalArgumentException if the array is not an array\n @throws NullPointerException if array is null\n"
7444,method,org/apache/commons/collections/IteratorUtils/arrayListIterator/Object[];int," Gets a list iterator over the end part of an object array.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return a list iterator over part of the array\n @throws IndexOutOfBoundsException if start is less than zero\n @throws NullPointerException if array is null\n"
7445,method,org/apache/commons/collections/IteratorUtils/arrayListIterator/Object;int," Gets a list iterator over the end part of an object or primitive array.\n <p>\n This method will handle primitive arrays as well as object arrays.\n The primitives will be wrapped in the appropriate wrapper class.\n\n @param array  the array over which to iterate\n @param start  the index to start iterating at\n @return a list iterator over part of the array\n @throws IllegalArgumentException if the array is not an array\n @throws IndexOutOfBoundsException if start is less than zero\n @throws NullPointerException if array is null\n"
7448,method,org/apache/commons/collections/IteratorUtils/unmodifiableIterator/Iterator," Gets an immutable version of an {@link Iterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove} method.\n\n @param iterator  the iterator to make immutable\n @return an immutable version of the iterator\n"
7449,method,org/apache/commons/collections/IteratorUtils/unmodifiableListIterator/ListIterator," Gets an immutable version of a {@link ListIterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove}, {@link ListIterator#add} and\n {@link ListIterator#set} methods.\n\n @param listIterator  the iterator to make immutable\n @return an immutable version of the iterator\n"
7450,method,org/apache/commons/collections/IteratorUtils/unmodifiableMapIterator/MapIterator," Gets an immutable version of a {@link MapIterator}. The returned object\n will always throw an {@link UnsupportedOperationException} for\n the {@link Iterator#remove}, {@link MapIterator#setValue(Object)} methods.\n\n @param mapIterator  the iterator to make immutable\n @return an immutable version of the iterator\n"
7458,method,org/apache/commons/collections/IteratorUtils/transformedIterator/Iterator;Transformer," Gets an iterator that transforms the elements of another iterator.\n <p>\n The transformation occurs during the next() method and the underlying\n iterator is unaffected by the transformation.\n\n @param iterator  the iterator to use, not null\n @param transform  the transform to use, not null\n @return a new transforming iterator\n @throws NullPointerException if either parameter is null\n"
7463,method,org/apache/commons/collections/IteratorUtils/asIterator/Enumeration," Gets an iterator that provides an iterator view of the given enumeration.\n\n @param enumeration  the enumeration to use\n @return a new iterator\n"
7464,method,org/apache/commons/collections/IteratorUtils/asIterator/Enumeration;Collection," Gets an iterator that provides an iterator view of the given enumeration\n that will remove elements from the specified collection.\n\n @param enumeration  the enumeration to use\n @param removeCollection  the collection to remove elements from\n @return a new iterator\n"
7465,method,org/apache/commons/collections/IteratorUtils/asEnumeration/Iterator," Gets an enumeration that wraps an iterator.\n\n @param iterator  the iterator to use, not null\n @return a new enumeration\n @throws NullPointerException if iterator is null\n"
7467,method,org/apache/commons/collections/IteratorUtils/toArray/Iterator," Gets an array based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, this is converted to an array.\n\n @param iterator  the iterator to use, not null\n @return an array of the iterator contents\n @throws NullPointerException if iterator parameter is null\n"
7468,method,org/apache/commons/collections/IteratorUtils/toArray/Iterator;Class," Gets an array based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, this is converted to an array.\n\n @param iterator  the iterator to use, not null\n @param arrayClass  the class of array to create\n @return an array of the iterator contents\n @throws NullPointerException if iterator parameter is null\n @throws NullPointerException if arrayClass is null\n @throws ClassCastException if the arrayClass is invalid\n"
7469,method,org/apache/commons/collections/IteratorUtils/toList/Iterator," Gets a list based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, the list is returned.\n\n @param iterator  the iterator to use, not null\n @return a list of the iterator contents\n @throws NullPointerException if iterator parameter is null\n"
7470,method,org/apache/commons/collections/IteratorUtils/toList/Iterator;int," Gets a list based on an iterator.\n <p>\n As the wrapped Iterator is traversed, an ArrayList of its values is\n created. At the end, the list is returned.\n\n @param iterator  the iterator to use, not null\n @param estimatedSize  the initial size of the ArrayList\n @return a list of the iterator contents\n @throws NullPointerException if iterator parameter is null\n @throws IllegalArgumentException if the size is less than 1\n"
7472,method,org/apache/commons/collections/IteratorUtils/IteratorUtils/," IteratorUtils is not normally instantiated.\n"
7475,field,org/apache/commons/collections/IteratorUtils/EMPTY_ORDERED_ITERATOR," An ordered iterator over no elements.\n"
7476,field,org/apache/commons/collections/IteratorUtils/EMPTY_MAP_ITERATOR," A map iterator over no elements.\n"
7477,field,org/apache/commons/collections/IteratorUtils/EMPTY_ORDERED_MAP_ITERATOR," An ordered map iterator over no elements.\n"
7479,method,org/apache/commons/collections/MapIterator/hasNext/," Checks to see if there are more entries still to be iterated.\n\n @return <code>true</code> if the iterator has more elements\n"
7480,method,org/apache/commons/collections/MapIterator/next/," Gets the next <em>key</em> from the <code>Map</code>.\n\n @return the next key in the iteration\n @throws NoSuchElementException if the iteration is finished\n"
7485,class,org/apache/commons/collections/BufferOverflowException," The BufferOverflowException is used when the buffer's capacity has been\n exceeded.\n\n @since Commons Collections 2.1\n @version $Revision: 956279 $ $Date: 2010-06-19 21:47:48 +0200 (Sat, 19 Jun 2010) $\n\n @author Avalon\n @author <a href="mailto:bloritsch@apache.org">Berin Loritsch</a>\n @author <a href="mailto:jefft@apache.org">Jeff Turner</a>\n @author Paul Jack\n @author Stephen Colebourne\n"
7486,method,org/apache/commons/collections/BufferOverflowException/BufferOverflowException/," Constructs a new <code>BufferOverflowException</code>.\n"
7487,method,org/apache/commons/collections/BufferOverflowException/BufferOverflowException/String,"\n Construct a new <code>BufferOverflowException</code>.\n \n @param message  the detail message for this exception\n"
7488,method,org/apache/commons/collections/BufferOverflowException/BufferOverflowException/String;Throwable,"\n Construct a new <code>BufferOverflowException</code>.\n \n @param message  the detail message for this exception\n @param exception  the root cause of the exception\n"
7490,method,org/apache/commons/collections/BoundedMap/isFull/," Returns true if this map is full and no new elements can be added.\n\n @return <code>true</code> if the map is full\n"
7491,method,org/apache/commons/collections/BoundedMap/maxSize/," Gets the maximum size of the map (the bound).\n\n @return the maximum number of elements the map can hold\n"
7493,method,org/apache/commons/collections/KeyValue/getKey/," Gets the key from the pair.\n\n @return the key \n"
7494,method,org/apache/commons/collections/KeyValue/getValue/," Gets the value from the pair.\n\n @return the value\n"
7496,method,org/apache/commons/collections/BufferUnderflowException/BufferUnderflowException/," Constructs a new <code>BufferUnderflowException</code>.\n"
7497,method,org/apache/commons/collections/BufferUnderflowException/BufferUnderflowException/String,"\n Construct a new <code>BufferUnderflowException</code>.\n \n @param message  the detail message for this exception\n"
7498,method,org/apache/commons/collections/BufferUnderflowException/BufferUnderflowException/String;Throwable,"\n Construct a new <code>BufferUnderflowException</code>.\n \n @param message  the detail message for this exception\n @param exception  the root cause of the exception\n"
7500,method,org/apache/commons/collections/Bag/getCount/Object," Returns the number of occurrences (cardinality) of the given\n object currently in the bag. If the object does not exist in the\n bag, return 0.\n \n @param object  the object to search for\n @return the number of occurrences of the object, zero if not found\n"
7502,method,org/apache/commons/collections/Bag/add/Object;int," Adds <code>nCopies</code> copies of the specified object to the Bag.\n <p>\n If the object is already in the {@link #uniqueSet()} then increment its\n count as reported by {@link #getCount(Object)}. Otherwise add it to the\n {@link #uniqueSet()} and report its count as <code>nCopies</code>.\n \n @param object  the object to add\n @param nCopies  the number of copies to add\n @return <code>true</code> if the object was not already in the <code>uniqueSet</code>\n"
7505,method,org/apache/commons/collections/Bag/uniqueSet/," Returns a {@link Set} of unique elements in the Bag.\n <p>\n Uniqueness constraints are the same as those in {@link java.util.Set}.\n \n @return the Set of unique Bag elements\n"
7506,method,org/apache/commons/collections/Bag/size/," Returns the total number of items in the bag across all types.\n \n @return the total size of the Bag\n"
7511,interface,org/apache/commons/collections/IterableGet," The "read" subset of the {@link Map} interface.\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 815056 $ $Date: 2009-09-15 07:55:23 +0200 (Tue, 15 Sep 2009) $\n @see Put\n @author Matt Benson\n"
7514,method,org/apache/commons/collections/TransformerUtils/exceptionTransformer/," Gets a transformer that always throws an exception.\n This could be useful during testing as a placeholder.\n \n @see org.apache.commons.collections.functors.ExceptionTransformer\n \n @return the transformer\n"
7515,method,org/apache/commons/collections/TransformerUtils/nullTransformer/," Gets a transformer that always returns null.\n \n @see org.apache.commons.collections.functors.ConstantTransformer\n \n @return the transformer\n"
7517,method,org/apache/commons/collections/TransformerUtils/cloneTransformer/," Gets a transformer that returns a clone of the input\n object. The input object will be cloned using one of these\n techniques (in order):\n <ul>\n <li>public clone method\n <li>public copy constructor\n <li>serialization clone\n <ul>\n \n @see org.apache.commons.collections.functors.CloneTransformer\n \n @return the transformer\n"
7518,method,org/apache/commons/collections/TransformerUtils/constantTransformer/Object," Creates a Transformer that will return the same object each time the \n transformer is used.\n\n @see org.apache.commons.collections.functors.ConstantTransformer\n \n @param constantToReturn  the constant object to return each time in the transformer\n @return the transformer.\n"
7530,method,org/apache/commons/collections/TransformerUtils/instantiateTransformer/," Gets a Transformer that expects an input Class object that it will instantiate.\n \n @see org.apache.commons.collections.functors.InstantiateTransformer\n \n @return the transformer\n"
7531,method,org/apache/commons/collections/TransformerUtils/instantiateTransformer/Class[];Object[],"\n Creates a Transformer that expects an input Class object that it will \n instantiate. The constructor used is determined by the arguments specified\n to this method.\n\n @see org.apache.commons.collections.functors.InstantiateTransformer\n \n @param paramTypes  parameter types for the constructor, can be null\n @param args  the arguments to pass to the constructor, can be null\n @return the transformer\n @throws IllegalArgumentException if the paramTypes and args don't match\n"
7532,method,org/apache/commons/collections/TransformerUtils/mapTransformer/Map,"\n Creates a Transformer that uses the passed in Map to transform the input \n object (as a simple lookup).\n\n @see org.apache.commons.collections.functors.MapTransformer\n \n @param map  the map to use to transform the objects\n @return the transformer\n @throws IllegalArgumentException if the map is null\n"
7535,method,org/apache/commons/collections/TransformerUtils/stringValueTransformer/," Gets a transformer that returns a <code>java.lang.String</code>\n representation of the input object. This is achieved via the\n <code>toString</code> method, <code>null</code> returns 'null'.\n \n @see org.apache.commons.collections.functors.StringValueTransformer\n \n @return the transformer\n"
7536,method,org/apache/commons/collections/TransformerUtils/TransformerUtils/," This class is not normally instantiated.\n"
7537,class,org/apache/commons/collections/SetUtils," Provides utility methods and decorators for\n {@link Set} and {@link SortedSet} instances.\n\n @since Commons Collections 2.1\n @version $Revision: 815104 $ $Date: 2009-09-15 07:56:47 +0200 (Tue, 15 Sep 2009) $\n\n @author Paul Jack\n @author Stephen Colebourne\n @author Neil O'Toole\n @author Matthew Hawthorne\n"
7538,method,org/apache/commons/collections/SetUtils/emptySet/," Get a typed empty unmodifiable Set.\n @param <E>\n @return Set<E>\n"
7539,method,org/apache/commons/collections/SetUtils/emptySortedSet/," Get a typed empty unmodifiable sorted set.\n @param <E>\n @return SortedSet<E>\n"
7552,field,org/apache/commons/collections/SetUtils/EMPTY_SET," An empty unmodifiable set.\n This uses the {@link Collections} implementation \n and is provided for completeness.\n"
7553,field,org/apache/commons/collections/SetUtils/EMPTY_SORTED_SET," An empty unmodifiable sorted set.\n This is not provided in the JDK.\n"
7554,class,org/apache/commons/collections/CollectionUtils," Provides utility methods and decorators for {@link Collection} instances.\n Method parameters will take {@link Iterable} objects when possible.\n\n @since Commons Collections 1.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Rodney Waldhoff\n @author Paul Jack\n @author Stephen Colebourne\n @author Steve Downey\n @author Herve Quiroz\n @author Peter KoBek\n @author Matthew Hawthorne\n @author Janek Bogucki\n @author Phil Steitz\n @author Steven Melzer\n @author Jon Schewe\n @author Neil O'Toole\n @author Stephen Smith\n @author Stephen Kestle\n"
7555,method,org/apache/commons/collections/CollectionUtils/emptyCollection/," Returns the immutable EMPTY_COLLECTION with generic type safety.\n\n @see #EMPTY_COLLECTION\n @since 4.0\n @return immutable empty collection\n"
7585,method,org/apache/commons/collections/CollectionUtils/get/Iterator;int," Returns the <code>index</code>-th value in {@link Iterator}, throwing\n <code>IndexOutOfBoundsException</code> if there is no such element.\n The Iterator is advanced to\n      <code>index</code> (or to the end, if <code>index</code> exceeds the\n      number of entries) as a side effect of this method.</li>\n\n @param iterator  the iterator to get a value from\n @param index  the index to get\n @param <T> the type of object in the {@link Iterator}\n @return the object at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n @throws IllegalArgumentException if the object type is invalid\n"
7586,method,org/apache/commons/collections/CollectionUtils/get/Iterable;int," Returns the <code>index</code>-th value in the <code>iterable</code>'s {@link Iterator}, throwing\n <code>IndexOutOfBoundsException</code> if there is no such element.\n <p>\n If the {@link Iterable} is a {@link List}, then it will use {@link List#get(int)}.\n\n @param iterable  the {@link Iterable} to get a value from\n @param index  the index to get\n @param <T> the type of object in the {@link Iterable}.\n @return the object at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
7587,method,org/apache/commons/collections/CollectionUtils/get/Object;int," Returns the <code>index</code>-th value in <code>object</code>, throwing\n <code>IndexOutOfBoundsException</code> if there is no such element or\n <code>IllegalArgumentException</code> if <code>object</code> is not an\n instance of one of the supported types.\n <p>\n The supported types, and associated semantics are:\n <ul>\n <li> Map -- the value returned is the <code>Map.Entry</code> in position\n      <code>index</code> in the map's <code>entrySet</code> iterator,\n      if there is such an entry.</li>\n <li> List -- this method is equivalent to the list's get method.</li>\n <li> Array -- the <code>index</code>-th array entry is returned,\n      if there is such an entry; otherwise an <code>IndexOutOfBoundsException</code>\n      is thrown.</li>\n <li> Collection -- the value returned is the <code>index</code>-th object\n      returned by the collection's default iterator, if there is such an element.</li>\n <li> Iterator or Enumeration -- the value returned is the\n      <code>index</code>-th object in the Iterator/Enumeration, if there\n      is such an element.  The Iterator/Enumeration is advanced to\n      <code>index</code> (or to the end, if <code>index</code> exceeds the\n      number of entries) as a side effect of this method.</li>\n </ul>\n\n @param object  the object to get a value from\n @param index  the index to get\n @return the object at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n @throws IllegalArgumentException if the object type is invalid\n"
7588,method,org/apache/commons/collections/CollectionUtils/get/Map;int," Returns the <code>index</code>-th <code>Map.Entry</code> in the <code>map</code>'s <code>entrySet</code>, throwing\n <code>IndexOutOfBoundsException</code> if there is no such element.\n\n @param map  the object to get a value from\n @param index  the index to get\n @return the object at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
7593,method,org/apache/commons/collections/CollectionUtils/reverseArray/Object[]," Reverses the order of the given array.\n\n @param array  the array to reverse\n"
7594,method,org/apache/commons/collections/CollectionUtils/isFull/Collection," Returns true if no more elements can be added to the Collection.\n <p>\n This method uses the {@link BoundedCollection} interface to determine the\n full status. If the collection does not implement this interface then\n false is returned.\n <p>\n The collection does not have to implement this interface directly.\n If the collection has been decorated using the decorators subpackage\n then these will be removed to access the BoundedCollection.\n\n @param coll  the collection to check\n @return true if the BoundedCollection is full\n @throws NullPointerException if the collection is null\n"
7595,method,org/apache/commons/collections/CollectionUtils/maxSize/Collection," Get the maximum number of elements that the Collection can contain.\n <p>\n This method uses the {@link BoundedCollection} interface to determine the\n maximum size. If the collection does not implement this interface then\n -1 is returned.\n <p>\n The collection does not have to implement this interface directly.\n If the collection has been decorated using the decorators subpackage\n then these will be removed to access the BoundedCollection.\n\n @param coll  the collection to check\n @return the maximum size of the BoundedCollection, -1 if no maximum size\n @throws NullPointerException if the collection is null\n"
7602,method,org/apache/commons/collections/CollectionUtils/extractSingleton/Collection," Extract the lone element of the specified Collection.\n @param <E> collection type\n @param collection to read\n @return sole member of collection\n @throws IllegalArgumentException if collection is null/empty or contains more than one element\n"
7605,interface,org/apache/commons/collections/IterableSortedMap," {@link SortedMap} + {@link OrderedMap}.\n\n @param <K> the type of the keys in the map\n @param <V> the type of the values in the map\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 815058 $ $Date: 2009-09-15 07:55:27 +0200 (Tue, 15 Sep 2009) $\n\n @author Matt Benson\n"
7611,interface,org/apache/commons/collections/ResettableIterator,"\n Defines an iterator that can be reset back to an initial state.\n <p>\n This interface allows an iterator to be repeatedly reused.\n\n @param <E> the type to iterate over\n @since Commons Collections 3.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7612,method,org/apache/commons/collections/ResettableIterator/reset/," Resets the iterator back to the position at which the iterator\n was created.\n"
7613,class,org/apache/commons/collections/BufferUtils," Provides utility methods and decorators for {@link Buffer} instances.\n\n @since Commons Collections 2.1\n @version $Revision: 815033 $ $Date: 2009-09-15 07:54:37 +0200 (Tue, 15 Sep 2009) $\n\n @author Paul Jack\n @author Stephen Colebourne\n"
7622,method,org/apache/commons/collections/BufferUtils/emptyBuffer/," Get an empty <code>Buffer</code>.\n @param <E>\n @return Buffer<E>\n"
7624,field,org/apache/commons/collections/BufferUtils/EMPTY_BUFFER," An empty unmodifiable buffer.\n"
7626,method,org/apache/commons/collections/Buffer/remove/," Gets and removes the next object from the buffer.\n\n @return the next object in the buffer, which is also removed\n @throws BufferUnderflowException if the buffer is already empty\n"
7627,method,org/apache/commons/collections/Buffer/get/," Gets the next object from the buffer without removing it.\n\n @return the next object in the buffer, which is not removed\n @throws BufferUnderflowException if the buffer is empty\n"
7629,method,org/apache/commons/collections/FunctorException/FunctorException/," Constructs a new <code>FunctorException</code> without specified\n detail message.\n"
7633,class,org/apache/commons/collections/BagUtils," Provides utility methods and decorators for {@link Bag} and {@link SortedBag}\n instances.\n\n @since Commons Collections 2.1\n @version $Revision: 815020 $ $Date: 2007-07-13 05:39:24 -0500 (Fri, 13 Jul\n 2007) $\n\n @author Paul Jack\n @author Stephen Colebourne\n @author Andrew Freeman\n @author Matthew Hawthorne\n"
7642,method,org/apache/commons/collections/BagUtils/emptyBag/," Get an empty <code>Bag</code>.\n @param <E>\n @return Bag<E>\n"
7643,method,org/apache/commons/collections/BagUtils/emptySortedBag/," Get an empty <code>SortedBag</code>.\n @param <E>\n @return SortedBag<E>\n"
7645,field,org/apache/commons/collections/BagUtils/EMPTY_BAG," An empty unmodifiable bag.\n"
7646,field,org/apache/commons/collections/BagUtils/EMPTY_SORTED_BAG," An empty unmodifiable sorted bag.\n"
7647,interface,org/apache/commons/collections/SortedBag," Defines a type of <code>Bag</code> that maintains a sorted order among\n its unique representative members.\n\n @param <E> the type to iterate over\n @since Commons Collections 2.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Chuck Burdick\n"
7648,method,org/apache/commons/collections/SortedBag/comparator/," Returns the comparator associated with this sorted set, or null\n if it uses its elements' natural ordering.\n \n @return the comparator in use, or null if natural ordering\n"
7649,method,org/apache/commons/collections/SortedBag/first/," Returns the first (lowest) member.\n \n @return the first element in the sorted bag\n"
7650,method,org/apache/commons/collections/SortedBag/last/," Returns the last (highest) member.\n \n @return the last element in the sorted bag\n"
7653,method,org/apache/commons/collections/ArrayStack/peek/," Returns the top item off of this stack without removing it.\n\n @return the top item on the stack\n @throws EmptyStackException  if the stack is empty\n"
7654,method,org/apache/commons/collections/ArrayStack/peek/int," Returns the n'th item down (zero-relative) from the top of this\n stack without removing it.\n\n @param n  the number of items down to go\n @return the n'th item on the stack, zero relative\n @throws EmptyStackException  if there are not enough items on the\n  stack to satisfy this request\n"
7655,method,org/apache/commons/collections/ArrayStack/pop/," Pops the top item off of this stack and return it.\n\n @return the top item on the stack\n @throws EmptyStackException  if the stack is empty\n"
7657,method,org/apache/commons/collections/ArrayStack/search/Object," Returns the one-based position of the distance from the top that the\n specified object exists on this stack, where the top-most element is\n considered to be at distance <code>1</code>.  If the object is not\n present on the stack, return <code>-1</code> instead.  The\n <code>equals()</code> method is used to compare to the items\n in this stack.\n\n @param object  the object to be searched for\n @return the 1-based depth into the stack of the object, or -1 if not found\n"
7658,method,org/apache/commons/collections/ArrayStack/get/," Returns the element on the top of the stack.\n\n @return the element on the top of the stack\n @throws BufferUnderflowException  if the stack is empty\n"
7659,method,org/apache/commons/collections/ArrayStack/remove/," Removes the element on the top of the stack.\n\n @return the removed element \n @throws BufferUnderflowException  if the stack is empty\n"
7660,method,org/apache/commons/collections/ArrayStack/ArrayStack/," Constructs a new empty <code>ArrayStack</code>. The initial size\n is controlled by <code>ArrayList</code> and is currently 10.\n"
7661,method,org/apache/commons/collections/ArrayStack/ArrayStack/int," Constructs a new empty <code>ArrayStack</code> with an initial size.\n \n @param initialSize  the initial size to use\n @throws IllegalArgumentException  if the specified initial size\n  is negative\n"
7662,interface,org/apache/commons/collections/OrderedMap," Defines a map that maintains order and allows both forward and backward\n iteration through that order.\n\n @param <K> the type of the keys in the map\n @param <V> the type of the values in the map\n\n @since Commons Collections 3.0\n @version $Revision: 815006 $ $Date: 2009-09-15 07:44:36 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7664,method,org/apache/commons/collections/OrderedMap/firstKey/," Gets the first key currently in this map.\n\n @return the first key currently in this map\n @throws java.util.NoSuchElementException if this map is empty\n"
7665,method,org/apache/commons/collections/OrderedMap/lastKey/," Gets the last key currently in this map.\n\n @return the last key currently in this map\n @throws java.util.NoSuchElementException if this map is empty\n"
7668,interface,org/apache/commons/collections/OrderedIterator," Defines an iterator that operates over an ordered container. Subset of {@link ListIterator}.\n <p>\n This iterator allows both forward and reverse iteration through the container.\n\n @param <E> the type to iterate over\n @since Commons Collections 3.0\n @version $Revision: 815091 $ $Date: 2009-09-15 07:56:29 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7669,method,org/apache/commons/collections/OrderedIterator/hasPrevious/," Checks to see if there is a previous element that can be iterated to.\n\n @return <code>true</code> if the iterator has a previous element\n"
7670,method,org/apache/commons/collections/OrderedIterator/previous/," Gets the previous element from the container.\n\n @return the previous element in the iteration\n @throws NoSuchElementException if the iteration is finished\n"
7681,class,org/apache/commons/collections/FactoryUtils," <code>FactoryUtils</code> provides reference implementations and utilities\n for the Factory functor interface. The supplied factories are:\n <ul>\n <li>Prototype - clones a specified object\n <li>Reflection - creates objects using reflection\n <li>Constant - always returns the same object\n <li>Null - always returns null\n <li>Exception - always throws an exception\n </ul>\n All the supplied factories are Serializable.\n\n @since Commons Collections 3.0\n @version $Revision: 815044 $ $Date: 2009-09-15 07:54:58 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7682,method,org/apache/commons/collections/FactoryUtils/exceptionFactory/," Gets a Factory that always throws an exception.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.ExceptionFactory\n \n @return the factory\n"
7688,method,org/apache/commons/collections/FactoryUtils/FactoryUtils/," This class is not normally instantiated.\n"
7689,class,org/apache/commons/collections/ComparatorUtils," Provides convenient static utility methods for <Code>Comparator</Code>\n objects.\n <p>\n Most of the functionality in this class can also be found in the \n <code>comparators</code> package. This class merely provides a \n convenient central place if you have use for more than one class\n in the <code>comparators</code> subpackage.\n\n @since Commons Collections 2.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Paul Jack\n @author Stephen Colebourne\n"
7690,method,org/apache/commons/collections/ComparatorUtils/naturalComparator/," Gets a comparator that uses the natural order of the objects.\n\n @return  a comparator which uses natural order\n"
7691,method,org/apache/commons/collections/ComparatorUtils/chainedComparator/Comparator;Comparator," Gets a comparator that compares using two {@link Comparator}s.\n <p>\n The second comparator is used if the first comparator returns equal.\n\n @param comparator1  the first comparator to use, not null\n @param comparator2  the first comparator to use, not null\n @return a {@link ComparatorChain} formed from the two comparators\n @throws NullPointerException if either comparator is null\n @see ComparatorChain\n"
7692,method,org/apache/commons/collections/ComparatorUtils/chainedComparator/Comparator[]," Gets a comparator that compares using an array of {@link Comparator}s, applied\n in sequence until one returns not equal or the array is exhausted.\n\n @param comparators  the comparators to use, not null or empty or containing nulls\n @return a {@link ComparatorChain} formed from the input comparators\n @throws NullPointerException if comparators array is null or contains a null\n @see ComparatorChain\n"
7693,method,org/apache/commons/collections/ComparatorUtils/chainedComparator/Collection," Gets a comparator that compares using a collection of {@link Comparator}s,\n applied in (default iterator) sequence until one returns not equal or the \n collection is exhausted.\n\n @param comparators  the comparators to use, not null or empty or containing nulls\n @return a {@link ComparatorChain} formed from the input comparators\n @throws NullPointerException if comparators collection is null or contains a null\n @throws ClassCastException if the comparators collection contains the wrong object type\n @see ComparatorChain\n"
7694,method,org/apache/commons/collections/ComparatorUtils/reversedComparator/Comparator," Gets a comparator that reverses the order of the given comparator.\n\n @param comparator  the comparator to reverse\n @return  a comparator that reverses the order of the input comparator\n @see ReverseComparator\n"
7696,method,org/apache/commons/collections/ComparatorUtils/nullLowComparator/Comparator," Gets a Comparator that controls the comparison of <code>null</code> values.\n <p>\n The returned comparator will consider a null value to be less than\n any nonnull value, and equal to any other null value.  Two nonnull\n values will be evaluated with the given comparator.\n\n @param comparator the comparator that wants to allow nulls\n @return  a version of that comparator that allows nulls\n @see NullComparator\n"
7697,method,org/apache/commons/collections/ComparatorUtils/nullHighComparator/Comparator," Gets a Comparator that controls the comparison of <code>null</code> values.\n <p>\n The returned comparator will consider a null value to be greater than\n any nonnull value, and equal to any other null value.  Two nonnull\n values will be evaluated with the given comparator.\n\n @param comparator the comparator that wants to allow nulls\n @return  a version of that comparator that allows nulls\n @see NullComparator\n"
7699,method,org/apache/commons/collections/ComparatorUtils/min/Object;Object;Comparator,"  Returns the smaller of the given objects according to the given \n  comparator, returning the second object if the comparator\n  returns equal.\n \n  @param o1  the first object to compare\n  @param o2  the second object to compare\n  @param comparator  the sort order to use\n  @return  the smaller of the two objects\n"
7700,method,org/apache/commons/collections/ComparatorUtils/max/Object;Object;Comparator,"  Returns the larger of the given objects according to the given \n  comparator, returning the second object if the comparator \n  returns equal.\n \n  @param o1  the first object to compare\n  @param o2  the second object to compare\n  @param comparator  the sort order to use\n  @return  the larger of the two objects\n"
7702,field,org/apache/commons/collections/ComparatorUtils/NATURAL_COMPARATOR," Comparator for natural sort order.\n\n @see ComparableComparator#getInstance\n"
7704,method,org/apache/commons/collections/PredicateUtils/exceptionPredicate/," Gets a Predicate that always throws an exception.\n This could be useful during testing as a placeholder.\n\n @see org.apache.commons.collections.functors.ExceptionPredicate\n\n @return the predicate\n"
7705,method,org/apache/commons/collections/PredicateUtils/truePredicate/," Gets a Predicate that always returns true.\n\n @see org.apache.commons.collections.functors.TruePredicate\n\n @return the predicate\n @deprecated use {@link TruePredicate#truePredicate()} instead.\n"
7706,method,org/apache/commons/collections/PredicateUtils/falsePredicate/," Gets a Predicate that always returns false.\n\n @see org.apache.commons.collections.functors.FalsePredicate\n\n @return the predicate\n @deprecated use {@link FalsePredicate#falsePredicate()} instead.\n"
7707,method,org/apache/commons/collections/PredicateUtils/nullPredicate/," Gets a Predicate that checks if the input object passed in is null.\n\n @see org.apache.commons.collections.functors.NullPredicate\n\n @return the predicate\n @deprecated use {@link NullPredicate#nullPredicate()} instead\n"
7708,method,org/apache/commons/collections/PredicateUtils/notNullPredicate/," Gets a Predicate that checks if the input object passed in is not null.\n\n @see org.apache.commons.collections.functors.NotNullPredicate\n\n @return the predicate\n"
7709,method,org/apache/commons/collections/PredicateUtils/equalPredicate/Object," Creates a Predicate that checks if the input object is equal to the\n specified object using equals().\n\n @see org.apache.commons.collections.functors.EqualPredicate\n\n @param value  the value to compare against\n @return the predicate\n @deprecated use {@link EqualPredicate#equalPredicate(Object)} instead.\n"
7710,method,org/apache/commons/collections/PredicateUtils/identityPredicate/Object," Creates a Predicate that checks if the input object is equal to the\n specified object by identity.\n\n @see org.apache.commons.collections.functors.IdentityPredicate\n\n @param value  the value to compare against\n @return the predicate\n"
7727,method,org/apache/commons/collections/PredicateUtils/notPredicate/Predicate," Create a new Predicate that returns true if the specified predicate\n returns false and vice versa.\n\n @see org.apache.commons.collections.functors.NotPredicate\n\n @param predicate  the predicate to not\n @return the <code>not</code> predicate\n @throws IllegalArgumentException if the predicate is null\n"
7733,method,org/apache/commons/collections/PredicateUtils/PredicateUtils/," This class is not normally instantiated.\n"
7735,method,org/apache/commons/collections/BoundedCollection/isFull/," Returns true if this collection is full and no new elements can be added.\n\n @return <code>true</code> if the collection is full\n"
7736,method,org/apache/commons/collections/BoundedCollection/maxSize/," Gets the maximum size of the collection (the bound).\n\n @return the maximum number of elements the collection can hold\n"
7738,method,org/apache/commons/collections/IndexedCollection/uniqueIndexedCollection/Collection;Transformer," Create an {@link IndexedCollection} for a unique index.\n\n @param <K> the index object type.\n @param <C> the collection type.\n @param coll the decorated {@link Collection}.\n @param keyTransformer the {@link Transformer} for generating index keys.\n @return the created {@link IndexedCollection}.\n"
7739,method,org/apache/commons/collections/IndexedCollection/reindex/," Clears the index and re-indexes the entire decorated {@link Collection}.\n"
7740,method,org/apache/commons/collections/IndexedCollection/add/Object," Adds an object to the collection and index.\n"
7741,method,org/apache/commons/collections/IndexedCollection/addAll/Collection," Adds an entire collection to the collection and index.\n"
7742,method,org/apache/commons/collections/IndexedCollection/get/Object," Get the element associated with the given key.\n @param key to look up\n @return element found\n"
7743,method,org/apache/commons/collections/IndexedCollection/IndexedCollection/Collection;Transformer;HashMap," Create a {@link IndexedCollection} for a unique index.\n\n @param coll the decorated {@link Collection}.\n @param keyTransformer the {@link Transformer} for generating index keys.\n"
7744,interface,org/apache/commons/collections/ResettableListIterator,"\n Defines a list iterator that can be reset back to an initial state.\n <p>\n This interface allows an iterator to be repeatedly reused.\n\n @param <E> the type to iterate over\n @since Commons Collections 3.0\n @version $Revision: 815094 $ $Date: 2009-09-15 07:56:34 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
7746,interface,org/apache/commons/collections/Get," The "read" subset of the {@link Map} interface.\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 815054 $ $Date: 2009-09-15 07:55:18 +0200 (Tue, 15 Sep 2009) $\n @see Put\n @author Matt Benson\n"
7747,method,org/apache/commons/collections/Get/containsKey/Object," @see Map#containsKey(Object)\n"
7748,method,org/apache/commons/collections/Get/containsValue/Object," @see Map#containsValue(Object)\n"
7749,method,org/apache/commons/collections/Get/entrySet/," @see Map#entrySet()\n"
7750,method,org/apache/commons/collections/Get/get/Object," @see Map#get(Object)\n"
7751,method,org/apache/commons/collections/Get/remove/Object," @see Map#remove(Object)\n"
7752,method,org/apache/commons/collections/Get/isEmpty/," @see Map#isEmpty()\n"
7753,method,org/apache/commons/collections/Get/keySet/," @see Map#keySet()\n"
7754,method,org/apache/commons/collections/Get/size/," @see Map#size()\n"
7755,method,org/apache/commons/collections/Get/values/," @see Map#values()\n"
7756,interface,org/apache/commons/collections/Put," The "write" subset of the {@link Map} interface.\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 815093 $ $Date: 2009-09-15 07:56:32 +0200 (Tue, 15 Sep 2009) $\n @see Get\n @author Matt Benson\n"
7757,method,org/apache/commons/collections/Put/clear/," @see Map#clear()\n"
7758,method,org/apache/commons/collections/Put/put/Object;Object," @see Map#put(Object, Object)\n"
7759,method,org/apache/commons/collections/Put/putAll/Map," @see Map#putAll(Map)\n"
7760,class,org/apache/commons/collections/ListUtils," Provides utility methods and decorators for {@link List} instances.\n\n @since Commons Collections 1.0\n @version $Revision: 965176 $ $Date: 2010-07-18 10:07:36 +0200 (Sun, 18 Jul 2010) $\n\n @author Federico Barbieri\n @author Peter Donald\n @author Paul Jack\n @author Stephen Colebourne\n @author Neil O'Toole\n @author Matthew Hawthorne\n @author Dave Meikle\n"
7761,method,org/apache/commons/collections/ListUtils/intersection/List;List," Returns a new list containing all elements that are contained in\n both given lists.\n\n @param list1  the first list\n @param list2  the second list\n @return  the intersection of those two lists\n @throws NullPointerException if either list is null\n"
7763,method,org/apache/commons/collections/ListUtils/sum/List;List," Returns the sum of the given lists.  This is their intersection\n subtracted from their union.\n\n @param list1  the first list \n @param list2  the second list\n @return  a new list containing the sum of those lists\n @throws NullPointerException if either list is null\n"
7764,method,org/apache/commons/collections/ListUtils/union/List;List," Returns a new list containing the second list appended to the\n first list.  The {@link List#addAll(Collection)} operation is\n used to append the two given lists into a new list.\n\n @param list1  the first list \n @param list2  the second list\n @return  a new list containing the union of those lists\n @throws NullPointerException if either list is null\n"
7777,field,org/apache/commons/collections/ListUtils/EMPTY_LIST," An empty unmodifiable list.\n This uses the {@link Collections Collections} implementation \n and is provided for completeness.\n"
7779,method,org/apache/commons/collections/ExtendedProperties/interpolate/String," Interpolate key names to handle ${key} stuff\n\n @param base string to interpolate\n @return returns the key name with the ${key} substituted\n"
7781,method,org/apache/commons/collections/ExtendedProperties/isInitialized/," Indicate to client code whether property\n resources have been initialized or not.\n"
7782,method,org/apache/commons/collections/ExtendedProperties/getInclude/," Gets the property value for including other properties files.\n By default it is "include".\n\n @return the property name which includes another property\n"
7783,method,org/apache/commons/collections/ExtendedProperties/setInclude/String," Sets the property value for including other properties files.\n By default it is "include".\n\n @param inc  the property name which includes another property, empty converted to null\n"
7786,method,org/apache/commons/collections/ExtendedProperties/getProperty/String," Gets a property from the configuration.\n\n @param key property to retrieve\n @return value as object. Will return user value if exists,\n        if not then default value if exists, otherwise null\n"
7787,method,org/apache/commons/collections/ExtendedProperties/addProperty/String;Object," Add a property to the configuration. If it already\n exists then the value stated here will be added\n to the configuration entry. For example, if\n\n <code>resource.loader = file</code>\n\n is already present in the configuration and you\n\n <code>addProperty("resource.loader", "classpath")</code>\n\n Then you will end up with a Vector like the\n following:\n\n <code>["file", "classpath"]</code>\n\n @param key  the key to add\n @param value  the value to add\n"
7791,method,org/apache/commons/collections/ExtendedProperties/clearProperty/String," Clear a property in the configuration.\n\n @param key  the property key to remove along with corresponding value\n"
7792,method,org/apache/commons/collections/ExtendedProperties/getKeys/," Get the list of the keys contained in the configuration\n repository.\n\n @return an Iterator over the keys\n"
7793,method,org/apache/commons/collections/ExtendedProperties/getKeys/String," Get the list of the keys contained in the configuration\n repository that match the specified prefix.\n\n @param prefix  the prefix to match\n @return an Iterator of keys that match the prefix\n"
7796,method,org/apache/commons/collections/ExtendedProperties/getString/String," Get a string associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated string.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a String.\n"
7797,method,org/apache/commons/collections/ExtendedProperties/getString/String;String," Get a string associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated string if key is found,\n default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a String.\n"
7798,method,org/apache/commons/collections/ExtendedProperties/getProperties/String," Get a list of properties associated with the given\n configuration key.\n\n @param key The configuration key.\n @return The associated properties if key is found.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a String/List.\n @throws IllegalArgumentException if one of the tokens is\n malformed (does not contain an equals sign).\n"
7799,method,org/apache/commons/collections/ExtendedProperties/getProperties/String;Properties," Get a list of properties associated with the given\n configuration key.\n\n @param key The configuration key.\n @return The associated properties if key is found.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a String/List.\n @throws IllegalArgumentException if one of the tokens is\n malformed (does not contain an equals sign).\n"
7800,method,org/apache/commons/collections/ExtendedProperties/getStringArray/String," Get an array of strings associated with the given configuration\n key.\n\n @param key The configuration key.\n @return The associated string array if key is found.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a String/List.\n"
7801,method,org/apache/commons/collections/ExtendedProperties/getVector/String," Get a Vector of strings associated with the given configuration\n key.\n\n @param key The configuration key.\n @return The associated Vector.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Vector.\n"
7805,method,org/apache/commons/collections/ExtendedProperties/getBoolean/String," Get a boolean associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated boolean.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Boolean.\n"
7806,method,org/apache/commons/collections/ExtendedProperties/getBoolean/String;boolean," Get a boolean associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated boolean.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Boolean.\n"
7807,method,org/apache/commons/collections/ExtendedProperties/getBoolean/String;Boolean," Get a boolean associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated boolean if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Boolean.\n"
7808,method,org/apache/commons/collections/ExtendedProperties/testBoolean/String," Test whether the string represent by value maps to a boolean\n value or not. We will allow <code>true</code>, <code>on</code>,\n and <code>yes</code> for a <code>true</code> boolean value, and\n <code>false</code>, <code>off</code>, and <code>no</code> for\n <code>false</code> boolean values.  Case of value to test for\n boolean status is ignored.\n\n @param value  the value to test for boolean state\n @return <code>true</code> or <code>false</code> if the supplied\n text maps to a boolean value, or <code>null</code> otherwise.\n"
7809,method,org/apache/commons/collections/ExtendedProperties/getByte/String," Get a byte associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated byte.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Byte.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7810,method,org/apache/commons/collections/ExtendedProperties/getByte/String;byte," Get a byte associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated byte.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Byte.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7811,method,org/apache/commons/collections/ExtendedProperties/getByte/String;Byte," Get a byte associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated byte if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Byte.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7812,method,org/apache/commons/collections/ExtendedProperties/getShort/String," Get a short associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated short.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Short.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7813,method,org/apache/commons/collections/ExtendedProperties/getShort/String;short," Get a short associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated short.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Short.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7814,method,org/apache/commons/collections/ExtendedProperties/getShort/String;Short," Get a short associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated short if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Short.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7815,method,org/apache/commons/collections/ExtendedProperties/getInt/String," The purpose of this method is to get the configuration resource\n with the given name as an integer.\n\n @param name The resource name.\n @return The value of the resource as an integer.\n"
7816,method,org/apache/commons/collections/ExtendedProperties/getInt/String;int," The purpose of this method is to get the configuration resource\n with the given name as an integer, or a default value.\n\n @param name The resource name\n @param def The default value of the resource.\n @return The value of the resource as an integer.\n"
7817,method,org/apache/commons/collections/ExtendedProperties/getInteger/String," Get a int associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated int.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Integer.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7818,method,org/apache/commons/collections/ExtendedProperties/getInteger/String;int," Get a int associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated int.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Integer.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7819,method,org/apache/commons/collections/ExtendedProperties/getInteger/String;Integer," Get a int associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated int if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Integer.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7820,method,org/apache/commons/collections/ExtendedProperties/getLong/String," Get a long associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated long.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Long.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7821,method,org/apache/commons/collections/ExtendedProperties/getLong/String;long," Get a long associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated long.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Long.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7822,method,org/apache/commons/collections/ExtendedProperties/getLong/String;Long," Get a long associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated long if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Long.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7823,method,org/apache/commons/collections/ExtendedProperties/getFloat/String," Get a float associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated float.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Float.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7824,method,org/apache/commons/collections/ExtendedProperties/getFloat/String;float," Get a float associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated float.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Float.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7825,method,org/apache/commons/collections/ExtendedProperties/getFloat/String;Float," Get a float associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated float if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Float.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7826,method,org/apache/commons/collections/ExtendedProperties/getDouble/String," Get a double associated with the given configuration key.\n\n @param key The configuration key.\n @return The associated double.\n @throws NoSuchElementException is thrown if the key doesn't\n map to an existing object.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Double.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7827,method,org/apache/commons/collections/ExtendedProperties/getDouble/String;double," Get a double associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated double.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Double.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7828,method,org/apache/commons/collections/ExtendedProperties/getDouble/String;Double," Get a double associated with the given configuration key.\n\n @param key The configuration key.\n @param defaultValue The default value.\n @return The associated double if key is found and has valid\n format, default value otherwise.\n @throws ClassCastException is thrown if the key maps to an\n object that is not a Double.\n @throws NumberFormatException is thrown if the value mapped\n by the key has not a valid number format.\n"
7836,field,org/apache/commons/collections/ExtendedProperties/file," The file connected to this repository (holding comments and\n such).\n\n @serial\n"
7838,field,org/apache/commons/collections/ExtendedProperties/fileSeparator," File separator.\n"
7839,field,org/apache/commons/collections/ExtendedProperties/isInitialized," Has this configuration been intialized.\n"
7840,field,org/apache/commons/collections/ExtendedProperties/keysAsListed," These are the keys in the order they listed\n in the configuration file. This is useful when\n you wish to perform operations with configuration\n information in a particular order.\n"
7841,field,org/apache/commons/collections/ExtendedProperties/START_TOKEN,""
7842,field,org/apache/commons/collections/ExtendedProperties/END_TOKEN,""
7844,class,org/apache/commons/collections/comparators/BooleanComparator," A {@link Comparator} for {@link Boolean} objects that can sort either\n true or false first.\n <p>\n @see #getTrueFirstComparator()\n @see #getFalseFirstComparator()\n @see #getBooleanComparator(boolean)\n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Rodney Waldhoff\n"
7848,method,org/apache/commons/collections/comparators/BooleanComparator/compare/Boolean;Boolean," Compares two non-<code>null</code> <code>Boolean</code> objects\n according to the value of {@link #sortsTrueFirst()}.\n \n @param b1  the first boolean to compare\n @param b2  the second boolean to compare\n @return negative if obj1 is less, positive if greater, zero if equal\n @throws NullPointerException when either argument <code>null</code>\n"
7849,method,org/apache/commons/collections/comparators/BooleanComparator/hashCode/," Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n\n @return a hash code for this comparator.\n"
7850,method,org/apache/commons/collections/comparators/BooleanComparator/equals/Object," Returns <code>true</code> iff <i>that</i> Object is \n is a {@link Comparator} whose ordering is known to be \n equivalent to mine.\n <p>\n This implementation returns <code>true</code>\n iff <code><i>that</i></code> is a {@link BooleanComparator} \n whose value of {@link #sortsTrueFirst()} is equal to mine.\n \n @param object  the object to compare to\n @return true if equal\n"
7854,class,org/apache/commons/collections/comparators/TransformingComparator," Decorates another Comparator with transformation behavior. That is, the\n return value from the transform operation will be passed to the decorated\n {@link Comparator#compare(Object,Object) compare} method.\n\n @since Commons Collections 2.0 (?)\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @see org.apache.commons.collections.Transformer\n @see org.apache.commons.collections.comparators.ComparableComparator\n"
7855,method,org/apache/commons/collections/comparators/TransformingComparator/compare/Object;Object," Returns the result of comparing the values from the transform operation.\n \n @param obj1  the first object to transform then compare\n @param obj2  the second object to transform then compare\n @return negative if obj1 is less, positive if greater, zero if equal\n"
7856,method,org/apache/commons/collections/comparators/TransformingComparator/TransformingComparator/Transformer," Constructs an instance with the given Transformer and a \n {@link ComparableComparator ComparableComparator}.\n \n @param transformer what will transform the arguments to <code>compare</code>\n"
7857,method,org/apache/commons/collections/comparators/TransformingComparator/TransformingComparator/Transformer;Comparator," Constructs an instance with the given Transformer and Comparator.\n \n @param transformer  what will transform the arguments to <code>compare</code>\n @param decorated  the decorated Comparator\n"
7858,field,org/apache/commons/collections/comparators/TransformingComparator/decorated,"The decorated comparator. "
7859,field,org/apache/commons/collections/comparators/TransformingComparator/transformer,"The transformer being used. "
7860,class,org/apache/commons/collections/comparators/ReverseComparator," Reverses the order of another comparator by reversing the arguments\n to its {@link #compare(Object, Object) compare} method.\n\n @since Commons Collections 2.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Michael A. Smith\n\n @see java.util.Collections#reverseOrder()\n"
7861,method,org/apache/commons/collections/comparators/ReverseComparator/compare/Object;Object," Compares two objects in reverse order.\n \n @param obj1  the first object to compare\n @param obj2  the second object to compare\n @return negative if obj1 is less, positive if greater, zero if equal\n"
7862,method,org/apache/commons/collections/comparators/ReverseComparator/hashCode/," Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n \n @return a suitable hash code\n @since Commons Collections 3.0\n"
7864,method,org/apache/commons/collections/comparators/ReverseComparator/ReverseComparator/," Creates a comparator that compares objects based on the inverse of their\n natural ordering.  Using this Constructor will create a ReverseComparator\n that is functionally identical to the Comparator returned by\n java.util.Collections.<b>reverseOrder()</b>.\n \n @see java.util.Collections#reverseOrder()\n"
7865,method,org/apache/commons/collections/comparators/ReverseComparator/ReverseComparator/Comparator," Creates a comparator that inverts the comparison\n of the given comparator.  If you pass in <code>null</code>,\n the ReverseComparator defaults to reversing the\n natural order, as per \n {@link java.util.Collections#reverseOrder()}</b>.\n \n @param comparator Comparator to reverse\n"
7866,class,org/apache/commons/collections/comparators/NullComparator," A Comparator that will compare nulls to be either lower or higher than\n other objects.\n\n @since Commons Collections 2.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $ \n\n @author Michael A. Smith\n"
7868,method,org/apache/commons/collections/comparators/NullComparator/hashCode/,"  Implement a hash code for this comparator that is consistent with\n  {@link #equals(Object)}.\n\n  @return a hash code for this comparator.\n"
7869,method,org/apache/commons/collections/comparators/NullComparator/equals/Object,"  Determines whether the specified object represents a comparator that is\n  equal to this comparator.\n\n  @param obj  the object to compare this comparator with.\n\n  @return <code>true</code> if the specified object is a NullComparator\n  with equivalent <code>null</code> comparison behavior\n  (i.e. <code>null</code> high or low) and with equivalent underlying\n  non-<code>null</code> object comparators.\n"
7870,method,org/apache/commons/collections/comparators/NullComparator/NullComparator/,"  Construct an instance that sorts <code>null</code> higher than any\n  non-<code>null</code> object it is compared with. When comparing two\n  non-<code>null</code> objects, the {@link ComparableComparator} is\n  used.\n"
7871,method,org/apache/commons/collections/comparators/NullComparator/NullComparator/Comparator,"  Construct an instance that sorts <code>null</code> higher than any\n  non-<code>null</code> object it is compared with.  When comparing two\n  non-<code>null</code> objects, the specified {@link Comparator} is\n  used.\n\n  @param nonNullComparator the comparator to use when comparing two\n  non-<code>null</code> objects.  This argument cannot be\n  <code>null</code>\n\n  @exception NullPointerException if <code>nonNullComparator</code> is\n  <code>null</code>\n"
7876,method,org/apache/commons/collections/comparators/ComparableComparator/compare/Comparable;Comparable," Compare the two {@link Comparable Comparable} arguments.\n This method is equivalent to:\n <pre>((Comparable)obj1).compareTo(obj2)</pre>\n \n @param obj1  the first object to compare\n @param obj2  the second object to compare\n @return negative if obj1 is less, positive if greater, zero if equal\n @throws NullPointerException when <i>obj1</i> is <code>null</code>, \n         or when <code>((Comparable)obj1).compareTo(obj2)</code> does\n @throws ClassCastException when <i>obj1</i> is not a <code>Comparable</code>,\n         or when <code>((Comparable)obj1).compareTo(obj2)</code> does\n"
7877,method,org/apache/commons/collections/comparators/ComparableComparator/hashCode/," Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n\n @return a hash code for this comparator.\n @since Commons Collections 3.0\n"
7880,field,org/apache/commons/collections/comparators/ComparableComparator/INSTANCE,"The singleton instance. "
7884,method,org/apache/commons/collections/comparators/FixedOrderComparator/getUnknownObjectBehavior/," Gets the behavior for comparing unknown objects.\n\n @return {@link UnknownObjectBehavior}\n"
7885,method,org/apache/commons/collections/comparators/FixedOrderComparator/setUnknownObjectBehavior/UnknownObjectBehavior," Sets the behavior for comparing unknown objects.\n\n @param unknownObjectBehavior  the flag for unknown behaviour -\n UNKNOWN_AFTER, UNKNOWN_BEFORE or UNKNOWN_THROW_EXCEPTION\n @throws UnsupportedOperationException if a comparison has been performed\n @throws IllegalArgumentException if the unknown flag is not valid\n"
7887,method,org/apache/commons/collections/comparators/FixedOrderComparator/addAsEqual/Object;Object," Adds a new item, which compares as equal to the given existing item.\n\n @param existingObj  an item already in the Comparator's set of\n  known objects\n @param newObj  an item to be added to the Comparator's set of\n  known objects\n @return true if newObj has been added for the first time, false if\n  it was already known to the Comparator.\n @throws IllegalArgumentException if existingObject is not in the\n  Comparator's set of known objects.\n @throws UnsupportedOperationException if a comparison has already been made\n"
7889,method,org/apache/commons/collections/comparators/FixedOrderComparator/FixedOrderComparator/," Constructs an empty FixedOrderComparator.\n"
7890,method,org/apache/commons/collections/comparators/FixedOrderComparator/FixedOrderComparator/Object[]," Constructs a FixedOrderComparator which uses the order of the given array\n to compare the objects.\n <p>\n The array is copied, so later changes will not affect the comparator.\n\n @param items  the items that the comparator can compare in order\n @throws IllegalArgumentException if the array is null\n"
7891,method,org/apache/commons/collections/comparators/FixedOrderComparator/FixedOrderComparator/List," Constructs a FixedOrderComparator which uses the order of the given list\n to compare the objects.\n <p>\n The list is copied, so later changes will not affect the comparator.\n\n @param items  the items that the comparator can compare in order\n @throws IllegalArgumentException if the list is null\n"
7892,class,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior," Unknown object behavior enum.\n @since Commons Collections 5\n"
7893,method,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior/values/,""
7894,method,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior/valueOf/String,""
7895,field,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior/BEFORE,""
7896,field,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior/AFTER,""
7897,field,org/apache/commons/collections/comparators/FixedOrderComparator/UnknownObjectBehavior/EXCEPTION,""
7899,method,org/apache/commons/collections/comparators/ComparatorChain/addComparator/Comparator," Add a Comparator to the end of the chain using the\n forward sort order\n\n @param comparator Comparator with the forward sort order\n"
7900,method,org/apache/commons/collections/comparators/ComparatorChain/addComparator/Comparator;boolean," Add a Comparator to the end of the chain using the\n given sort order\n\n @param comparator Comparator to add to the end of the chain\n @param reverse    false = forward sort order; true = reverse sort order\n"
7901,method,org/apache/commons/collections/comparators/ComparatorChain/setComparator/int;Comparator," Replace the Comparator at the given index, maintaining\n the existing sort order.\n\n @param index      index of the Comparator to replace\n @param comparator Comparator to place at the given index\n @exception IndexOutOfBoundsException\n                   if index &lt; 0 or index &gt;= size()\n"
7902,method,org/apache/commons/collections/comparators/ComparatorChain/setComparator/int;Comparator;boolean," Replace the Comparator at the given index in the\n ComparatorChain, using the given sort order\n\n @param index      index of the Comparator to replace\n @param comparator Comparator to set\n @param reverse    false = forward sort order; true = reverse sort order\n"
7903,method,org/apache/commons/collections/comparators/ComparatorChain/setForwardSort/int," Change the sort order at the given index in the\n ComparatorChain to a forward sort.\n\n @param index  Index of the ComparatorChain\n"
7904,method,org/apache/commons/collections/comparators/ComparatorChain/setReverseSort/int," Change the sort order at the given index in the\n ComparatorChain to a reverse sort.\n\n @param index  Index of the ComparatorChain\n"
7905,method,org/apache/commons/collections/comparators/ComparatorChain/size/," Number of Comparators in the current ComparatorChain.\n\n @return Comparator count\n"
7907,method,org/apache/commons/collections/comparators/ComparatorChain/compare/Object;Object," Perform comparisons on the Objects as per\n Comparator.compare(o1,o2).\n\n @param o1  the first object to compare\n @param o2  the second object to compare\n @return -1, 0, or 1\n @exception UnsupportedOperationException\n                   if the ComparatorChain does not contain at least one\n                   Comparator\n"
7908,method,org/apache/commons/collections/comparators/ComparatorChain/hashCode/," Implement a hash code for this comparator that is consistent with\n {@link #equals(Object) equals}.\n\n @return a suitable hash code\n @since Commons Collections 3.0\n"
7911,method,org/apache/commons/collections/comparators/ComparatorChain/ComparatorChain/Comparator," Construct a ComparatorChain with a single Comparator,\n sorting in the forward order\n\n @param comparator First comparator in the Comparator chain\n"
7912,method,org/apache/commons/collections/comparators/ComparatorChain/ComparatorChain/Comparator;boolean," Construct a Comparator chain with a single Comparator,\n sorting in the given order\n\n @param comparator First Comparator in the ComparatorChain\n @param reverse    false = forward sort; true = reverse sort\n"
7913,method,org/apache/commons/collections/comparators/ComparatorChain/ComparatorChain/List," Construct a ComparatorChain from the Comparators in the\n List.  All Comparators will default to the forward\n sort order.\n\n @param list   List of Comparators\n @see #ComparatorChain(List,BitSet)\n"
7915,field,org/apache/commons/collections/comparators/ComparatorChain/comparatorChain,"The list of comparators in the chain. "
7916,field,org/apache/commons/collections/comparators/ComparatorChain/orderingBits,"Order - false (clear) = ascend; true (set) = descend. "
7920,method,org/apache/commons/collections/list/AbstractLinkedList/size/,""
7921,method,org/apache/commons/collections/list/AbstractLinkedList/isEmpty/,""
7922,method,org/apache/commons/collections/list/AbstractLinkedList/get/int,""
7923,method,org/apache/commons/collections/list/AbstractLinkedList/iterator/,""
7924,method,org/apache/commons/collections/list/AbstractLinkedList/listIterator/,""
7925,method,org/apache/commons/collections/list/AbstractLinkedList/listIterator/int,""
7926,method,org/apache/commons/collections/list/AbstractLinkedList/indexOf/Object,""
7927,method,org/apache/commons/collections/list/AbstractLinkedList/lastIndexOf/Object,""
7928,method,org/apache/commons/collections/list/AbstractLinkedList/contains/Object,""
7929,method,org/apache/commons/collections/list/AbstractLinkedList/containsAll/Collection,""
7930,method,org/apache/commons/collections/list/AbstractLinkedList/toArray/,""
7931,method,org/apache/commons/collections/list/AbstractLinkedList/toArray/Object[],""
7932,method,org/apache/commons/collections/list/AbstractLinkedList/subList/int;int," Gets a sublist of the main list.\n\n @param fromIndexInclusive  the index to start from\n @param toIndexExclusive  the index to end at\n @return the new sublist\n"
7933,method,org/apache/commons/collections/list/AbstractLinkedList/add/Object,""
7934,method,org/apache/commons/collections/list/AbstractLinkedList/add/int;Object,""
7935,method,org/apache/commons/collections/list/AbstractLinkedList/addAll/Collection,""
7936,method,org/apache/commons/collections/list/AbstractLinkedList/addAll/int;Collection,""
7937,method,org/apache/commons/collections/list/AbstractLinkedList/remove/int,""
7938,method,org/apache/commons/collections/list/AbstractLinkedList/remove/Object,""
7939,method,org/apache/commons/collections/list/AbstractLinkedList/removeAll/Collection,""
7940,method,org/apache/commons/collections/list/AbstractLinkedList/retainAll/Collection,""
7941,method,org/apache/commons/collections/list/AbstractLinkedList/set/int;Object,""
7942,method,org/apache/commons/collections/list/AbstractLinkedList/clear/,""
7943,method,org/apache/commons/collections/list/AbstractLinkedList/getFirst/,""
7944,method,org/apache/commons/collections/list/AbstractLinkedList/getLast/,""
7945,method,org/apache/commons/collections/list/AbstractLinkedList/addFirst/Object,""
7946,method,org/apache/commons/collections/list/AbstractLinkedList/addLast/Object,""
7947,method,org/apache/commons/collections/list/AbstractLinkedList/removeFirst/,""
7948,method,org/apache/commons/collections/list/AbstractLinkedList/removeLast/,""
7949,method,org/apache/commons/collections/list/AbstractLinkedList/equals/Object,""
7950,method,org/apache/commons/collections/list/AbstractLinkedList/hashCode/,""
7951,method,org/apache/commons/collections/list/AbstractLinkedList/toString/,""
7959,method,org/apache/commons/collections/list/AbstractLinkedList/removeNode/Node," Removes the specified node from the list.\n\n @param node  the node to remove\n @throws NullPointerException if <code>node</code> is null\n"
7960,method,org/apache/commons/collections/list/AbstractLinkedList/removeAllNodes/," Removes all nodes by resetting the circular list marker.\n"
7961,method,org/apache/commons/collections/list/AbstractLinkedList/getNode/int;boolean," Gets the node at a particular index.\n\n @param index  the index, starting from 0\n @param endMarkerAllowed  whether or not the end marker can be returned if\n startIndex is set to the list's size\n @throws IndexOutOfBoundsException if the index is less than 0; equal to\n the size of the list and endMakerAllowed is false; or greater than the\n size of the list\n"
7962,method,org/apache/commons/collections/list/AbstractLinkedList/createSubListIterator/LinkedSubList," Creates an iterator for the sublist.\n\n @param subList  the sublist to get an iterator for\n"
7963,method,org/apache/commons/collections/list/AbstractLinkedList/createSubListListIterator/LinkedSubList;int," Creates a list iterator for the sublist.\n\n @param subList  the sublist to get an iterator for\n @param fromIndex  the index to start from, relative to the sublist\n"
7967,method,org/apache/commons/collections/list/AbstractLinkedList/AbstractLinkedList/Collection," Constructs a list copying data from the specified collection.\n\n @param coll  the collection to copy\n"
7968,field,org/apache/commons/collections/list/AbstractLinkedList/header," A {@link Node} which indicates the start and end of the list and does not\n hold a value. The value of <code>next</code> is the first item in the\n list. The value of of <code>previous</code> is the last item in the list.\n"
7969,field,org/apache/commons/collections/list/AbstractLinkedList/size,"The size of the list "
7970,field,org/apache/commons/collections/list/AbstractLinkedList/modCount,"Modification count for iterators "
7971,class,org/apache/commons/collections/list/AbstractLinkedList/Node," A node within the linked list.\n <p>\n From Commons Collections 3.1, all access to the <code>value</code> property\n is via the methods on this class.\n"
7972,method,org/apache/commons/collections/list/AbstractLinkedList/Node/getValue/," Gets the value of the node.\n\n @return the value\n @since Commons Collections 3.1\n"
7973,method,org/apache/commons/collections/list/AbstractLinkedList/Node/setValue/Object," Sets the value of the node.\n\n @param value  the value\n @since Commons Collections 3.1\n"
7974,method,org/apache/commons/collections/list/AbstractLinkedList/Node/getPreviousNode/," Gets the previous node.\n\n @return the previous node\n @since Commons Collections 3.1\n"
7975,method,org/apache/commons/collections/list/AbstractLinkedList/Node/setPreviousNode/Node," Sets the previous node.\n\n @param previous  the previous node\n @since Commons Collections 3.1\n"
7976,method,org/apache/commons/collections/list/AbstractLinkedList/Node/getNextNode/," Gets the next node.\n\n @return the next node\n @since Commons Collections 3.1\n"
7977,method,org/apache/commons/collections/list/AbstractLinkedList/Node/setNextNode/Node," Sets the next node.\n\n @param next  the next node\n @since Commons Collections 3.1\n"
7978,method,org/apache/commons/collections/list/AbstractLinkedList/Node/AbstractLinkedList/Node/," Constructs a new header node.\n"
7979,method,org/apache/commons/collections/list/AbstractLinkedList/Node/AbstractLinkedList/Node/Object," Constructs a new node.\n\n @param value  the value to store\n"
7980,method,org/apache/commons/collections/list/AbstractLinkedList/Node/AbstractLinkedList/Node/Node;Node;Object," Constructs a new node.\n\n @param previous  the previous node in the list\n @param next  the next node in the list\n @param value  the value to store\n"
7983,field,org/apache/commons/collections/list/AbstractLinkedList/Node/value,"The object contained within this node "
7984,class,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator," A list iterator over the linked list.\n"
7987,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/hasNext/,""
7988,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/next/,""
7989,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/hasPrevious/,""
7990,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/previous/,""
7991,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/nextIndex/,""
7992,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/previousIndex/,""
7993,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/remove/,""
7994,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/set/Object,""
7995,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/add/Object,""
7996,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/AbstractLinkedList/LinkedListIterator/AbstractLinkedList;int," Create a ListIterator for a list.\n\n @param parent  the parent list\n @param fromIndex  the index to start at\n"
7997,field,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/parent,"The parent list "
7998,field,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/next," The node that will be returned by {@link #next()}. If this is equal\n to {@link AbstractLinkedList#header} then there are no more values to return.\n"
7999,field,org/apache/commons/collections/list/AbstractLinkedList/LinkedListIterator/nextIndex," The index of {@link #next}.\n"
8002,class,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator," A list iterator over the linked sub list.\n"
8003,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/hasNext/,""
8004,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/hasPrevious/,""
8005,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/nextIndex/,""
8006,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/add/Object,""
8007,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/remove/,""
8008,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/AbstractLinkedList/LinkedSubListIterator/LinkedSubList;int,""
8009,field,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubListIterator/sub,"The parent list "
8010,class,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList," The sublist implementation for AbstractLinkedList.\n"
8011,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/size/,""
8012,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/get/int,""
8013,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/add/int;Object,""
8014,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/remove/int,""
8015,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/addAll/Collection,""
8016,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/addAll/int;Collection,""
8017,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/set/int;Object,""
8018,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/clear/,""
8019,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/iterator/,""
8020,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/listIterator/int,""
8021,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/subList/int;int,""
8022,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/rangeCheck/int;int,""
8023,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/checkModCount/,""
8024,method,org/apache/commons/collections/list/AbstractLinkedList/LinkedSubList/AbstractLinkedList/LinkedSubList/AbstractLinkedList;int;int,""
8027,method,org/apache/commons/collections/list/SetUniqueList/asSet/," Gets an unmodifiable view as a Set.\n\n @return an unmodifiable set view\n"
8032,method,org/apache/commons/collections/list/SetUniqueList/set/int;Object," Sets the value at the specified index avoiding duplicates.\n <p>\n The object is set into the specified index.\n Afterwards, any previous duplicate is removed\n If the object is not already in the list then a normal set occurs.\n If it is present, then the old version is removed.\n\n @param index  the index to insert at\n @param object  the object to set\n @return the previous object\n"
8033,method,org/apache/commons/collections/list/SetUniqueList/remove/Object,""
8034,method,org/apache/commons/collections/list/SetUniqueList/remove/int,""
8035,method,org/apache/commons/collections/list/SetUniqueList/removeAll/Collection,""
8036,method,org/apache/commons/collections/list/SetUniqueList/retainAll/Collection,""
8037,method,org/apache/commons/collections/list/SetUniqueList/clear/,""
8038,method,org/apache/commons/collections/list/SetUniqueList/contains/Object,""
8039,method,org/apache/commons/collections/list/SetUniqueList/containsAll/Collection,""
8040,method,org/apache/commons/collections/list/SetUniqueList/iterator/,""
8041,method,org/apache/commons/collections/list/SetUniqueList/listIterator/,""
8042,method,org/apache/commons/collections/list/SetUniqueList/listIterator/int,""
8043,method,org/apache/commons/collections/list/SetUniqueList/subList/int;int,""
8044,method,org/apache/commons/collections/list/SetUniqueList/createSetBasedOnList/Set;List,""
8046,field,org/apache/commons/collections/list/SetUniqueList/set," Internal Set to maintain uniqueness.\n"
8048,method,org/apache/commons/collections/list/AbstractSerializableListDecorator/AbstractSerializableListDecorator/List," Constructor.\n"
8050,method,org/apache/commons/collections/list/TreeList/get/int," Gets the element at the specified index.\n\n @param index  the index to retrieve\n @return the element at the specified index\n"
8051,method,org/apache/commons/collections/list/TreeList/size/," Gets the current size of the list.\n\n @return the current size\n"
8052,method,org/apache/commons/collections/list/TreeList/iterator/," Gets an iterator over the list.\n\n @return an iterator over the list\n"
8053,method,org/apache/commons/collections/list/TreeList/listIterator/," Gets a ListIterator over the list.\n\n @return the new iterator\n"
8054,method,org/apache/commons/collections/list/TreeList/listIterator/int," Gets a ListIterator over the list.\n\n @param fromIndex  the index to start from\n @return the new iterator\n"
8055,method,org/apache/commons/collections/list/TreeList/indexOf/Object," Searches for the index of an object in the list.\n\n @return the index of the object, -1 if not found\n"
8056,method,org/apache/commons/collections/list/TreeList/contains/Object," Searches for the presence of an object in the list.\n\n @return true if the object is found\n"
8057,method,org/apache/commons/collections/list/TreeList/toArray/," Converts the list into an array.\n\n @return the list as an array\n"
8059,method,org/apache/commons/collections/list/TreeList/set/int;Object," Sets the element at the specified index.\n\n @param index  the index to set\n @param obj  the object to store at the specified index\n @return the previous object at that index\n @throws IndexOutOfBoundsException if the index is invalid\n"
8060,method,org/apache/commons/collections/list/TreeList/remove/int," Removes the element at the specified index.\n\n @param index  the index to remove\n @return the previous object at that index\n"
8061,method,org/apache/commons/collections/list/TreeList/clear/," Clears the list, removing all entries.\n"
8062,method,org/apache/commons/collections/list/TreeList/TreeList/," Constructs a new empty list.\n"
8063,method,org/apache/commons/collections/list/TreeList/TreeList/Collection," Constructs a new empty list that copies the specified list.\n\n @param coll  the collection to copy\n @throws NullPointerException if the collection is null\n"
8064,class,org/apache/commons/collections/list/UnmodifiableList," Decorates another <code>List</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8066,method,org/apache/commons/collections/list/UnmodifiableList/iterator/,""
8067,method,org/apache/commons/collections/list/UnmodifiableList/add/Object,""
8068,method,org/apache/commons/collections/list/UnmodifiableList/addAll/Collection,""
8069,method,org/apache/commons/collections/list/UnmodifiableList/clear/,""
8070,method,org/apache/commons/collections/list/UnmodifiableList/remove/Object,""
8071,method,org/apache/commons/collections/list/UnmodifiableList/removeAll/Collection,""
8072,method,org/apache/commons/collections/list/UnmodifiableList/retainAll/Collection,""
8073,method,org/apache/commons/collections/list/UnmodifiableList/listIterator/,""
8074,method,org/apache/commons/collections/list/UnmodifiableList/listIterator/int,""
8075,method,org/apache/commons/collections/list/UnmodifiableList/add/int;Object,""
8076,method,org/apache/commons/collections/list/UnmodifiableList/addAll/int;Collection,""
8077,method,org/apache/commons/collections/list/UnmodifiableList/remove/int,""
8078,method,org/apache/commons/collections/list/UnmodifiableList/set/int;Object,""
8079,method,org/apache/commons/collections/list/UnmodifiableList/subList/int;int,""
8086,method,org/apache/commons/collections/list/GrowthList/GrowthList/," Constructor that uses an ArrayList internally.\n"
8087,method,org/apache/commons/collections/list/GrowthList/GrowthList/int," Constructor that uses an ArrayList internally.\n\n @param initialSize  the initial size of the ArrayList\n @throws IllegalArgumentException if initial size is invalid\n"
8090,method,org/apache/commons/collections/list/AbstractListDecorator/decorated/," Gets the list being decorated.\n \n @return the decorated list\n"
8091,method,org/apache/commons/collections/list/AbstractListDecorator/add/int;Object,""
8092,method,org/apache/commons/collections/list/AbstractListDecorator/addAll/int;Collection,""
8093,method,org/apache/commons/collections/list/AbstractListDecorator/get/int,""
8094,method,org/apache/commons/collections/list/AbstractListDecorator/indexOf/Object,""
8095,method,org/apache/commons/collections/list/AbstractListDecorator/lastIndexOf/Object,""
8096,method,org/apache/commons/collections/list/AbstractListDecorator/listIterator/,""
8097,method,org/apache/commons/collections/list/AbstractListDecorator/listIterator/int,""
8098,method,org/apache/commons/collections/list/AbstractListDecorator/remove/int,""
8099,method,org/apache/commons/collections/list/AbstractListDecorator/set/int;Object,""
8100,method,org/apache/commons/collections/list/AbstractListDecorator/subList/int;int,""
8112,method,org/apache/commons/collections/list/CursorableLinkedList/removeNode/Node," Removes the specified node from the list.\n\n @param node  the node to remove\n @throws NullPointerException if <code>node</code> is null\n"
8113,method,org/apache/commons/collections/list/CursorableLinkedList/removeAllNodes/," Removes all nodes by iteration.\n"
8114,method,org/apache/commons/collections/list/CursorableLinkedList/registerCursor/Cursor," Registers a cursor to be notified of changes to this list.\n \n @param cursor  the cursor to register\n"
8115,method,org/apache/commons/collections/list/CursorableLinkedList/unregisterCursor/Cursor," Deregisters a cursor from the list to be notified of changes.\n \n @param cursor  the cursor to deregister\n"
8116,method,org/apache/commons/collections/list/CursorableLinkedList/broadcastNodeChanged/Node," Informs all of my registered cursors that the specified\n element was changed.\n \n @param node  the node that was changed\n"
8117,method,org/apache/commons/collections/list/CursorableLinkedList/broadcastNodeRemoved/Node," Informs all of my registered cursors that the specified\n element was just removed from my list.\n \n @param node  the node that was changed\n"
8118,method,org/apache/commons/collections/list/CursorableLinkedList/broadcastNodeInserted/Node," Informs all of my registered cursors that the specified\n element was just added to my list.\n \n @param node  the node that was changed\n"
8119,method,org/apache/commons/collections/list/CursorableLinkedList/createSubListListIterator/LinkedSubList;int," Creates a list iterator for the sublist.\n \n @param subList  the sublist to get an iterator for\n @param fromIndex  the index to start from, relative to the sublist\n"
8120,method,org/apache/commons/collections/list/CursorableLinkedList/CursorableLinkedList/," Constructor that creates.\n"
8121,method,org/apache/commons/collections/list/CursorableLinkedList/CursorableLinkedList/Collection," Constructor that copies the specified collection\n \n @param coll  the collection to copy\n"
8122,field,org/apache/commons/collections/list/CursorableLinkedList/cursors,"A list of the cursor currently open on this list "
8125,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/add/Object," Adds an object to the list.\n The object added here will be the new 'previous' in the iterator.\n \n @param obj  the object to add\n"
8126,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/nextIndex/," Gets the index of the next element to be returned.\n \n @return the next index\n"
8127,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/nodeChanged/Node," Handle event from the list when a node has changed.\n \n @param node  the node that changed\n"
8128,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/nodeRemoved/Node," Handle event from the list when a node has been removed.\n \n @param node  the node that was removed\n"
8129,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/nodeInserted/Node," Handle event from the list when a node has been added.\n \n @param node  the node that was added\n"
8132,method,org/apache/commons/collections/list/CursorableLinkedList/Cursor/CursorableLinkedList/Cursor/CursorableLinkedList;int," Constructs a new cursor.\n \n @param index  the index to start from\n"
8133,class,org/apache/commons/collections/list/CursorableLinkedList/SubCursor," A cursor for the sublist based on LinkedSubListIterator.\n\n @since Commons Collections 3.2\n"
8134,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/hasNext/,""
8135,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/hasPrevious/,""
8136,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/nextIndex/,""
8137,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/add/Object,""
8138,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/remove/,""
8139,method,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/CursorableLinkedList/SubCursor/LinkedSubList;int," Constructs a new cursor.\n \n @param index  the index to start from\n"
8140,field,org/apache/commons/collections/list/CursorableLinkedList/SubCursor/sub,"The parent list "
8142,method,org/apache/commons/collections/list/NodeCachingLinkedList/getMaximumCacheSize/," Gets the maximum size of the cache.\n \n @return the maximum cache size\n"
8143,method,org/apache/commons/collections/list/NodeCachingLinkedList/setMaximumCacheSize/int," Sets the maximum size of the cache.\n \n @param maximumCacheSize  the new maximum cache size\n"
8145,method,org/apache/commons/collections/list/NodeCachingLinkedList/getNodeFromCache/," Gets a node from the cache. If a node is returned, then the value of\n {@link #cacheSize} is decreased accordingly. The node that is returned\n will have <code>null</code> values for next, previous and element.\n\n @return a node, or <code>null</code> if there are no nodes in the cache.\n"
8146,method,org/apache/commons/collections/list/NodeCachingLinkedList/isCacheFull/," Checks whether the cache is full.\n \n @return true if the cache is full\n"
8147,method,org/apache/commons/collections/list/NodeCachingLinkedList/addNodeToCache/Node," Adds a node to the cache, if the cache isn't full.\n The node's contents are cleared to so they can be garbage collected.\n \n @param node  the node to add to the cache\n"
8148,method,org/apache/commons/collections/list/NodeCachingLinkedList/createNode/Object," Creates a new node, either by reusing one from the cache or creating\n a new one.\n \n @param value  value of the new node\n @return the newly created node\n"
8149,method,org/apache/commons/collections/list/NodeCachingLinkedList/removeNode/Node," Removes the node from the list, storing it in the cache for reuse\n if the cache is not yet full.\n \n @param node  the node to remove\n"
8151,method,org/apache/commons/collections/list/NodeCachingLinkedList/NodeCachingLinkedList/," Constructor that creates.\n"
8152,method,org/apache/commons/collections/list/NodeCachingLinkedList/NodeCachingLinkedList/Collection," Constructor that copies the specified collection\n \n @param coll  the collection to copy\n"
8153,method,org/apache/commons/collections/list/NodeCachingLinkedList/NodeCachingLinkedList/int," Constructor that species the maximum cache size.\n\n @param maximumCacheSize  the maximum cache size\n"
8154,field,org/apache/commons/collections/list/NodeCachingLinkedList/DEFAULT_MAXIMUM_CACHE_SIZE," The default value for {@link #maximumCacheSize}.\n"
8155,field,org/apache/commons/collections/list/NodeCachingLinkedList/firstCachedNode," The first cached node, or <code>null</code> if no nodes are cached.\n Cached nodes are stored in a singly-linked list with\n <code>next</code> pointing to the next element.\n"
8156,field,org/apache/commons/collections/list/NodeCachingLinkedList/cacheSize," The size of the cache.\n"
8157,field,org/apache/commons/collections/list/NodeCachingLinkedList/maximumCacheSize," The maximum size of the cache.\n"
8161,method,org/apache/commons/collections/list/TransformedList/getList/," Gets the decorated list.\n \n @return the decorated list\n"
8162,method,org/apache/commons/collections/list/TransformedList/get/int,""
8163,method,org/apache/commons/collections/list/TransformedList/indexOf/Object,""
8164,method,org/apache/commons/collections/list/TransformedList/lastIndexOf/Object,""
8165,method,org/apache/commons/collections/list/TransformedList/remove/int,""
8166,method,org/apache/commons/collections/list/TransformedList/add/int;Object,""
8167,method,org/apache/commons/collections/list/TransformedList/addAll/int;Collection,""
8168,method,org/apache/commons/collections/list/TransformedList/listIterator/,""
8169,method,org/apache/commons/collections/list/TransformedList/listIterator/int,""
8170,method,org/apache/commons/collections/list/TransformedList/set/int;Object,""
8171,method,org/apache/commons/collections/list/TransformedList/subList/int;int,""
8173,class,org/apache/commons/collections/list/TransformedList/TransformedListIterator," Inner class Iterator for the TransformedList\n"
8174,method,org/apache/commons/collections/list/TransformedList/TransformedListIterator/add/Object,""
8175,method,org/apache/commons/collections/list/TransformedList/TransformedListIterator/set/Object,""
8176,method,org/apache/commons/collections/list/TransformedList/TransformedListIterator/TransformedList/TransformedListIterator/ListIterator,""
8179,method,org/apache/commons/collections/list/SynchronizedList/getList/," Gets the decorated list.\n \n @return the decorated list\n"
8180,method,org/apache/commons/collections/list/SynchronizedList/add/int;Object,""
8181,method,org/apache/commons/collections/list/SynchronizedList/addAll/int;Collection,""
8182,method,org/apache/commons/collections/list/SynchronizedList/get/int,""
8183,method,org/apache/commons/collections/list/SynchronizedList/indexOf/Object,""
8184,method,org/apache/commons/collections/list/SynchronizedList/lastIndexOf/Object,""
8187,method,org/apache/commons/collections/list/SynchronizedList/remove/int,""
8188,method,org/apache/commons/collections/list/SynchronizedList/set/int;Object,""
8189,method,org/apache/commons/collections/list/SynchronizedList/subList/int;int,""
8192,class,org/apache/commons/collections/list/FixedSizeList," Decorates another <code>List</code> to fix the size preventing add/remove.\n <p>\n The add, remove, clear and retain operations are unsupported.\n The set method is allowed (as it doesn't change the list size).\n <p>\n This class is Serializable from Commons Collections 3.1.\n\n @since Commons Collections 3.0\n @version $Revision: 966315 $ $Date: 2010-07-21 19:03:58 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n @author Paul Jack\n"
8194,method,org/apache/commons/collections/list/FixedSizeList/add/Object,""
8195,method,org/apache/commons/collections/list/FixedSizeList/add/int;Object,""
8196,method,org/apache/commons/collections/list/FixedSizeList/addAll/Collection,""
8197,method,org/apache/commons/collections/list/FixedSizeList/addAll/int;Collection,""
8198,method,org/apache/commons/collections/list/FixedSizeList/clear/,""
8199,method,org/apache/commons/collections/list/FixedSizeList/get/int,""
8200,method,org/apache/commons/collections/list/FixedSizeList/indexOf/Object,""
8201,method,org/apache/commons/collections/list/FixedSizeList/iterator/,""
8202,method,org/apache/commons/collections/list/FixedSizeList/lastIndexOf/Object,""
8203,method,org/apache/commons/collections/list/FixedSizeList/listIterator/,""
8204,method,org/apache/commons/collections/list/FixedSizeList/listIterator/int,""
8205,method,org/apache/commons/collections/list/FixedSizeList/remove/int,""
8206,method,org/apache/commons/collections/list/FixedSizeList/remove/Object,""
8207,method,org/apache/commons/collections/list/FixedSizeList/removeAll/Collection,""
8208,method,org/apache/commons/collections/list/FixedSizeList/retainAll/Collection,""
8209,method,org/apache/commons/collections/list/FixedSizeList/set/int;Object,""
8210,method,org/apache/commons/collections/list/FixedSizeList/subList/int;int,""
8211,method,org/apache/commons/collections/list/FixedSizeList/isFull/,""
8212,method,org/apache/commons/collections/list/FixedSizeList/maxSize/,""
8216,method,org/apache/commons/collections/list/PredicatedList/decorated/," Gets the list being decorated.\n \n @return the decorated list\n"
8217,method,org/apache/commons/collections/list/PredicatedList/get/int,""
8218,method,org/apache/commons/collections/list/PredicatedList/indexOf/Object,""
8219,method,org/apache/commons/collections/list/PredicatedList/lastIndexOf/Object,""
8220,method,org/apache/commons/collections/list/PredicatedList/remove/int,""
8221,method,org/apache/commons/collections/list/PredicatedList/add/int;Object,""
8222,method,org/apache/commons/collections/list/PredicatedList/addAll/int;Collection,""
8223,method,org/apache/commons/collections/list/PredicatedList/listIterator/,""
8224,method,org/apache/commons/collections/list/PredicatedList/listIterator/int,""
8225,method,org/apache/commons/collections/list/PredicatedList/set/int;Object,""
8226,method,org/apache/commons/collections/list/PredicatedList/subList/int;int,""
8228,class,org/apache/commons/collections/list/PredicatedList/PredicatedListIterator," Inner class Iterator for the PredicatedList\n"
8229,method,org/apache/commons/collections/list/PredicatedList/PredicatedListIterator/add/Object,""
8230,method,org/apache/commons/collections/list/PredicatedList/PredicatedListIterator/set/Object,""
8231,method,org/apache/commons/collections/list/PredicatedList/PredicatedListIterator/PredicatedList/PredicatedListIterator/ListIterator,""
8235,method,org/apache/commons/collections/list/LazyList/subList/int;int,""
8237,field,org/apache/commons/collections/list/LazyList/factory,"The factory to use to lazily instantiate the objects "
8238,class,org/apache/commons/collections/functors/MapTransformer," Transformer implementation that returns the value held in a specified map\n using the input parameter as a key.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8239,method,org/apache/commons/collections/functors/MapTransformer/getInstance/Map," Factory to create the transformer.\n <p>\n If the map is null, a transformer that always returns null is returned.\n\n @param map the map, not cloned\n @return the transformer\n"
8240,method,org/apache/commons/collections/functors/MapTransformer/transform/Object," Transforms the input to result by looking it up in a <code>Map</code>.\n\n @param input  the input object to transform\n @return the transformed result\n"
8241,method,org/apache/commons/collections/functors/MapTransformer/getMap/," Gets the map to lookup in.\n\n @return the map\n @since Commons Collections 3.1\n"
8245,method,org/apache/commons/collections/functors/FactoryTransformer/getFactory/," Gets the factory.\n \n @return the factory\n @since Commons Collections 3.1\n"
8247,class,org/apache/commons/collections/functors/InstantiateFactory," Factory implementation that creates a new object instance by reflection.\n\n @since Commons Collections 3.0\n @version $Revision: 815049 $ $Date: 2009-09-15 07:55:08 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8248,method,org/apache/commons/collections/functors/InstantiateFactory/getInstance/Class;Class[];Object[]," Factory method that performs validation.\n \n @param classToInstantiate  the class to instantiate, not null\n @param paramTypes  the constructor parameter types\n @param args  the constructor arguments\n @return a new instantiate factory\n"
8249,method,org/apache/commons/collections/functors/InstantiateFactory/create/," Creates an object using the stored constructor.\n \n @return the new object\n"
8250,method,org/apache/commons/collections/functors/InstantiateFactory/InstantiateFactory/Class," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param classToInstantiate  the class to instantiate\n"
8251,method,org/apache/commons/collections/functors/InstantiateFactory/InstantiateFactory/Class;Class[];Object[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param classToInstantiate  the class to instantiate\n @param paramTypes  the constructor parameter types, not cloned\n @param args  the constructor arguments, not cloned\n"
8253,method,org/apache/commons/collections/functors/StringValueTransformer/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8255,field,org/apache/commons/collections/functors/StringValueTransformer/INSTANCE,"Singleton predicate instance "
8256,interface,org/apache/commons/collections/functors/PredicateDecorator," Defines a predicate that decorates one or more other predicates.\n <p>\n This interface enables tools to access the decorated predicates.\n\n @since Commons Collections 3.1\n @version $Revision: 815052 $ $Date: 2009-09-15 07:55:14 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n @author Stephen Kestle\n"
8258,class,org/apache/commons/collections/functors/PrototypeFactory," Factory implementation that creates a new instance each time based on a prototype.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8260,class,org/apache/commons/collections/functors/UniquePredicate," Predicate implementation that returns true the first time an object is\n passed into the predicate.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8261,method,org/apache/commons/collections/functors/UniquePredicate/getInstance/," Factory to create the predicate.\n\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8262,method,org/apache/commons/collections/functors/UniquePredicate/evaluate/Object," Evaluates the predicate returning true if the input object hasn't been\n received yet.\n\n @param object  the input object\n @return true if this is the first time the object is seen\n"
8263,method,org/apache/commons/collections/functors/UniquePredicate/UniquePredicate/," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n"
8264,class,org/apache/commons/collections/functors/TruePredicate," Predicate implementation that always returns true.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n @author Stephen Kestle\n"
8265,method,org/apache/commons/collections/functors/TruePredicate/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n @deprecated\n"
8266,method,org/apache/commons/collections/functors/TruePredicate/truePredicate/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8267,method,org/apache/commons/collections/functors/TruePredicate/evaluate/Object," Evaluates the predicate returning true always.\n\n @param object  the input object\n @return true always\n"
8268,field,org/apache/commons/collections/functors/TruePredicate/INSTANCE,"Singleton predicate instance "
8270,method,org/apache/commons/collections/functors/NonePredicate/getInstance/Predicate[]," Factory to create the predicate.\n <p>\n If the array is size zero, the predicate always returns true.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>any</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8271,method,org/apache/commons/collections/functors/NonePredicate/getInstance/Collection," Factory to create the predicate.\n <p>\n If the collection is size zero, the predicate always returns true.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>one</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8272,method,org/apache/commons/collections/functors/NonePredicate/evaluate/Object," Evaluates the predicate returning false if any stored predicate returns false.\n\n @param object  the input object\n @return true if none of decorated predicates return true\n"
8273,method,org/apache/commons/collections/functors/NonePredicate/getPredicates/," Gets the predicates, do not modify the array.\n\n @return the predicates\n @since Commons Collections 3.1\n"
8274,method,org/apache/commons/collections/functors/NonePredicate/NonePredicate/Predicate[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param predicates  the predicates to check, not cloned, not null\n"
8278,method,org/apache/commons/collections/functors/TransformerClosure/getTransformer/," Gets the transformer.\n \n @return the transformer\n @since Commons Collections 3.1\n"
8283,method,org/apache/commons/collections/functors/SwitchClosure/execute/Object," Executes the closure whose matching predicate returns true\n\n @param input  the input object\n"
8284,method,org/apache/commons/collections/functors/SwitchClosure/getPredicates/," Gets the predicates, do not modify the array.\n\n @return the predicates\n @since Commons Collections 3.1\n"
8285,method,org/apache/commons/collections/functors/SwitchClosure/getClosures/," Gets the closures, do not modify the array.\n\n @return the closures\n @since Commons Collections 3.1\n"
8286,method,org/apache/commons/collections/functors/SwitchClosure/getDefaultClosure/," Gets the default closure.\n\n @return the default closure\n @since Commons Collections 3.1\n"
8288,class,org/apache/commons/collections/functors/ChainedClosure," Closure implementation that chains the specified closures together.\n\n @since Commons Collections 3.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8291,method,org/apache/commons/collections/functors/ChainedClosure/getInstance/Closure;Closure," Factory method that performs validation.\n \n @param closure1  the first closure, not null\n @param closure2  the second closure, not null\n @return the <code>chained</code> closure\n @throws IllegalArgumentException if either closure is null\n"
8292,method,org/apache/commons/collections/functors/ChainedClosure/execute/Object," Execute a list of closures.\n \n @param input  the input object passed to each closure\n"
8293,method,org/apache/commons/collections/functors/ChainedClosure/getClosures/," Gets the closures, do not modify the array.\n @return the closures\n @since Commons Collections 3.1\n"
8295,class,org/apache/commons/collections/functors/AndPredicate," Predicate implementation that returns true if both the predicates return true.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8296,method,org/apache/commons/collections/functors/AndPredicate/getInstance/Predicate;Predicate," Factory to create the predicate.\n\n @param predicate1  the first predicate to check, not null\n @param predicate2  the second predicate to check, not null\n @return the <code>and</code> predicate\n @throws IllegalArgumentException if either predicate is null\n"
8297,method,org/apache/commons/collections/functors/AndPredicate/evaluate/Object," Evaluates the predicate returning true if both predicates return true.\n\n @param object  the input object\n @return true if both decorated predicates return true\n"
8298,method,org/apache/commons/collections/functors/AndPredicate/getPredicates/," Gets the two predicates being decorated as an array.\n\n @return the predicates\n @since Commons Collections 3.1\n"
8299,method,org/apache/commons/collections/functors/AndPredicate/AndPredicate/Predicate;Predicate," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param predicate1  the first predicate to check, not null\n @param predicate2  the second predicate to check, not null\n"
8302,method,org/apache/commons/collections/functors/ClosureTransformer/transform/Object," Transforms the input to result by executing a closure.\n \n @param input  the input object to transform\n @return the transformed result\n"
8303,method,org/apache/commons/collections/functors/ClosureTransformer/getClosure/," Gets the closure.\n \n @return the closure\n @since Commons Collections 3.1\n"
8305,class,org/apache/commons/collections/functors/EqualPredicate," Predicate implementation that returns true if the input is the same object\n as the one stored in this predicate by equals.\n\n @since Commons Collections 3.0\n @version $Revision: 815046 $ $Date: 2009-09-15 07:55:02 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8306,method,org/apache/commons/collections/functors/EqualPredicate/getInstance/Object," Factory to create the identity predicate.\n \n @param object  the object to compare to\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n @deprecated use {@link #equalPredicate(Object)} instead.\n"
8307,method,org/apache/commons/collections/functors/EqualPredicate/equalPredicate/Object," Factory to create the identity predicate.\n \n @param object  the object to compare to\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8308,method,org/apache/commons/collections/functors/EqualPredicate/evaluate/Object," Evaluates the predicate returning true if the input equals the stored value.\n \n @param object  the input object\n @return true if input object equals stored value\n"
8309,method,org/apache/commons/collections/functors/EqualPredicate/getValue/," Gets the value.\n \n @return the value\n @since Commons Collections 3.1\n"
8310,method,org/apache/commons/collections/functors/EqualPredicate/EqualPredicate/Object," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param object  the object to compare to\n"
8311,class,org/apache/commons/collections/functors/NullIsFalsePredicate," Predicate implementation that returns false if the input is null.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8312,method,org/apache/commons/collections/functors/NullIsFalsePredicate/getInstance/Predicate," Factory to create the null false predicate.\n\n @param predicate  the predicate to decorate, not null\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8316,class,org/apache/commons/collections/functors/TransformerPredicate," Predicate implementation that returns the result of a transformer.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8317,method,org/apache/commons/collections/functors/TransformerPredicate/getInstance/Transformer," Factory to create the predicate.\n\n @param transformer  the transformer to decorate\n @return the predicate\n @throws IllegalArgumentException if the transformer is null\n"
8318,method,org/apache/commons/collections/functors/TransformerPredicate/evaluate/Object," Evaluates the predicate returning the result of the decorated transformer.\n\n @param object  the input object\n @return true if decorated transformer returns Boolean.TRUE\n @throws FunctorException if the transformer returns an invalid type\n"
8319,method,org/apache/commons/collections/functors/TransformerPredicate/getTransformer/," Gets the transformer.\n\n @return the transformer\n @since Commons Collections 3.1\n"
8320,method,org/apache/commons/collections/functors/TransformerPredicate/TransformerPredicate/Transformer," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param transformer  the transformer to decorate\n"
8321,class,org/apache/commons/collections/functors/ExceptionFactory," Factory implementation that always throws an exception.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8322,method,org/apache/commons/collections/functors/ExceptionFactory/getInstance/," Factory returning the singleton instance.\n \n @return the singleton instance\n @since Commons Collections 3.1\n"
8324,field,org/apache/commons/collections/functors/ExceptionFactory/INSTANCE,"Singleton predicate instance "
8325,class,org/apache/commons/collections/functors/InvokerTransformer," Transformer implementation that creates a new object instance by reflection.\n\n @since Commons Collections 3.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8330,class,org/apache/commons/collections/functors/ExceptionPredicate," Predicate implementation that always throws an exception.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8331,method,org/apache/commons/collections/functors/ExceptionPredicate/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8333,field,org/apache/commons/collections/functors/ExceptionPredicate/INSTANCE,"Singleton predicate instance "
8334,class,org/apache/commons/collections/functors/InstanceofPredicate," Predicate implementation that returns true if the input is an instanceof\n the type stored in this predicate.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8336,method,org/apache/commons/collections/functors/InstanceofPredicate/evaluate/Object," Evaluates the predicate returning true if the input object is of the correct type.\n\n @param object  the input object\n @return true if input is of stored type\n"
8337,method,org/apache/commons/collections/functors/InstanceofPredicate/getType/," Gets the type to compare to.\n\n @return the type\n @since Commons Collections 3.1\n"
8338,method,org/apache/commons/collections/functors/InstanceofPredicate/InstanceofPredicate/Class," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param type  the type to check for\n"
8343,method,org/apache/commons/collections/functors/TransformedPredicate/getTransformer/," Gets the transformer in use.\n\n @return the transformer\n"
8344,method,org/apache/commons/collections/functors/TransformedPredicate/TransformedPredicate/Transformer;Predicate," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param transformer  the transformer to use\n @param predicate  the predicate to decorate\n"
8346,method,org/apache/commons/collections/functors/AnyPredicate/getInstance/Predicate[]," Factory to create the predicate.\n <p>\n If the array is size zero, the predicate always returns false.\n If the array is size one, then that predicate is returned.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>any</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8347,method,org/apache/commons/collections/functors/AnyPredicate/getInstance/Collection," Factory to create the predicate.\n <p>\n If the collection is size zero, the predicate always returns false.\n If the collection is size one, then that predicate is returned.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>all</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8348,method,org/apache/commons/collections/functors/AnyPredicate/evaluate/Object," Evaluates the predicate returning true if any predicate returns true.\n\n @param object  the input object\n @return true if any decorated predicate return true\n"
8349,method,org/apache/commons/collections/functors/AnyPredicate/getPredicates/," Gets the predicates, do not modify the array.\n\n @return the predicates\n @since Commons Collections 3.1\n"
8350,method,org/apache/commons/collections/functors/AnyPredicate/AnyPredicate/Predicate[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param predicates  the predicates to check, not cloned, not null\n"
8352,method,org/apache/commons/collections/functors/IfClosure/getInstance/Predicate;Closure," Factory method that performs validation.\n <p>\n This factory creates a closure that performs no action when\n the predicate is false.\n \n @param predicate  predicate to switch on\n @param trueClosure  closure used if true\n @return the <code>if</code> closure\n @throws IllegalArgumentException if either argument is null\n @since Commons Collections 3.2\n"
8353,method,org/apache/commons/collections/functors/IfClosure/getInstance/Predicate;Closure;Closure," Factory method that performs validation.\n \n @param predicate  predicate to switch on\n @param trueClosure  closure used if true\n @param falseClosure  closure used if false\n @return the <code>if</code> closure\n @throws IllegalArgumentException if any argument is null\n"
8354,method,org/apache/commons/collections/functors/IfClosure/execute/Object," Executes the true or false closure accoring to the result of the predicate.\n \n @param input  the input object\n"
8355,method,org/apache/commons/collections/functors/IfClosure/getPredicate/," Gets the predicate.\n \n @return the predicate\n @since Commons Collections 3.1\n"
8358,method,org/apache/commons/collections/functors/IfClosure/IfClosure/Predicate;Closure," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n <p>\n This constructor creates a closure that performs no action when\n the predicate is false.\n \n @param predicate  predicate to switch on, not null\n @param trueClosure  closure used if true, not null\n @since Commons Collections 3.2\n"
8359,method,org/apache/commons/collections/functors/IfClosure/IfClosure/Predicate;Closure;Closure," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param predicate  predicate to switch on, not null\n @param trueClosure  closure used if true, not null\n @param falseClosure  closure used if false, not null\n"
8360,class,org/apache/commons/collections/functors/IdentityPredicate," Predicate implementation that returns true if the input is the same object\n as the one stored in this predicate.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8361,method,org/apache/commons/collections/functors/IdentityPredicate/getInstance/Object," Factory to create the identity predicate.\n\n @param object  the object to compare to\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8362,method,org/apache/commons/collections/functors/IdentityPredicate/evaluate/Object," Evaluates the predicate returning true if the input object is identical to\n the stored object.\n\n @param object  the input object\n @return true if input is the same object as the stored value\n"
8363,method,org/apache/commons/collections/functors/IdentityPredicate/getValue/," Gets the value.\n\n @return the value\n @since Commons Collections 3.1\n"
8364,method,org/apache/commons/collections/functors/IdentityPredicate/IdentityPredicate/Object," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param object  the object to compare to\n"
8365,class,org/apache/commons/collections/functors/NOPTransformer," Transformer implementation that does nothing.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8366,method,org/apache/commons/collections/functors/NOPTransformer/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8367,method,org/apache/commons/collections/functors/NOPTransformer/transform/Object," Transforms the input to result by doing nothing.\n\n @param input  the input object to transform\n @return the transformed result which is the input\n"
8368,field,org/apache/commons/collections/functors/NOPTransformer/INSTANCE,"Singleton predicate instance "
8370,method,org/apache/commons/collections/functors/ForClosure/getInstance/int;Closure," Factory method that performs validation.\n <p>\n A null closure or zero count returns the <code>NOPClosure</code>.\n A count of one returns the specified closure.\n \n @param count  the number of times to execute the closure\n @param closure  the closure to execute, not null\n @return the <code>for</code> closure\n"
8371,method,org/apache/commons/collections/functors/ForClosure/execute/Object," Executes the closure <code>count</code> times.\n \n @param input  the input object\n"
8372,method,org/apache/commons/collections/functors/ForClosure/getClosure/," Gets the closure.\n \n @return the closure\n @since Commons Collections 3.1\n"
8373,method,org/apache/commons/collections/functors/ForClosure/getCount/," Gets the count.\n \n @return the count\n @since Commons Collections 3.1\n"
8374,method,org/apache/commons/collections/functors/ForClosure/ForClosure/int;Closure," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param count  the number of times to execute the closure\n @param closure  the closure to execute, not null\n"
8375,class,org/apache/commons/collections/functors/NOPClosure," Closure implementation that does nothing.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8376,method,org/apache/commons/collections/functors/NOPClosure/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8377,method,org/apache/commons/collections/functors/NOPClosure/execute/Object," Do nothing.\n\n @param input  the input object\n"
8378,field,org/apache/commons/collections/functors/NOPClosure/INSTANCE,"Singleton predicate instance "
8381,method,org/apache/commons/collections/functors/AllPredicate/allPredicate/Predicate[]," Factory to create the predicate.\n <p>\n If the array is size zero, the predicate always returns true.\n If the array is size one, then that predicate is returned.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>all</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8383,method,org/apache/commons/collections/functors/AllPredicate/allPredicate/Collection," Factory to create the predicate.\n <p>\n If the collection is size zero, the predicate always returns true.\n If the collection is size one, then that predicate is returned.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>all</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8384,method,org/apache/commons/collections/functors/AllPredicate/evaluate/Object," Evaluates the predicate returning true if all predicates return true.\n \n @param object  the input object\n @return true if all decorated predicates return true\n"
8385,method,org/apache/commons/collections/functors/AllPredicate/getPredicates/," Gets the predicates, do not modify the array.\n \n @return the predicates\n @since Commons Collections 3.1\n"
8386,method,org/apache/commons/collections/functors/AllPredicate/AllPredicate/Predicate[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param predicates  the predicates to check, not cloned, not null\n"
8390,method,org/apache/commons/collections/functors/PredicateTransformer/getPredicate/," Gets the predicate.\n \n @return the predicate\n @since Commons Collections 3.1\n"
8392,class,org/apache/commons/collections/functors/CloneTransformer," Transformer implementation that returns a clone of the input object.\n <p>\n Clone is performed using <code>PrototypeFactory.getInstance(input).create()</code>.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8393,method,org/apache/commons/collections/functors/CloneTransformer/getInstance/," Factory returning the singleton instance.\n \n @return the singleton instance\n @since Commons Collections 3.1\n"
8394,method,org/apache/commons/collections/functors/CloneTransformer/transform/Object," Transforms the input to result by cloning it.\n \n @param input  the input object to transform\n @return the transformed result\n"
8395,field,org/apache/commons/collections/functors/CloneTransformer/INSTANCE,"Singleton predicate instance "
8397,method,org/apache/commons/collections/functors/ConstantTransformer/getNullInstance/," Get a typed null instance.\n @param <I>\n @param <O>\n @return Transformer<I, O> that always returns null.\n"
8398,method,org/apache/commons/collections/functors/ConstantTransformer/getInstance/Object," Transformer method that performs validation.\n\n @param constantToReturn  the constant object to return each time in the factory\n @return the <code>constant</code> factory.\n"
8399,method,org/apache/commons/collections/functors/ConstantTransformer/transform/Object," Transforms the input by ignoring it and returning the stored constant instead.\n \n @param input  the input object which is ignored\n @return the stored constant\n"
8400,method,org/apache/commons/collections/functors/ConstantTransformer/getConstant/," Gets the constant.\n \n @return the constant\n @since Commons Collections 3.1\n"
8403,method,org/apache/commons/collections/functors/ConstantTransformer/ConstantTransformer/Object," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param constantToReturn  the constant to return each time\n"
8404,field,org/apache/commons/collections/functors/ConstantTransformer/NULL_INSTANCE,"Returns null each time "
8409,method,org/apache/commons/collections/functors/SwitchTransformer/getPredicates/," Gets the predicates, do not modify the array.\n \n @return the predicates\n @since Commons Collections 3.1\n"
8410,method,org/apache/commons/collections/functors/SwitchTransformer/getTransformers/," Gets the transformers, do not modify the array.\n \n @return the transformers\n @since Commons Collections 3.1\n"
8411,method,org/apache/commons/collections/functors/SwitchTransformer/getDefaultTransformer/," Gets the default transformer.\n \n @return the default transformer\n @since Commons Collections 3.1\n"
8413,class,org/apache/commons/collections/functors/FalsePredicate," Predicate implementation that always returns false.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8414,method,org/apache/commons/collections/functors/FalsePredicate/getInstance/," Get a typed instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n @deprecated use {@link #falsePredicate()} instead.\n"
8415,method,org/apache/commons/collections/functors/FalsePredicate/falsePredicate/," Get a typed instance.\n\n @return the singleton instance\n @since Commons Collections 5\n"
8416,method,org/apache/commons/collections/functors/FalsePredicate/evaluate/Object," Evaluates the predicate returning false always.\n\n @param object  the input object\n @return false always\n"
8417,field,org/apache/commons/collections/functors/FalsePredicate/INSTANCE,"Singleton predicate instance "
8418,class,org/apache/commons/collections/functors/InstantiateTransformer," Transformer implementation that creates a new object instance by reflection.\n\n @since Commons Collections 3.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8420,method,org/apache/commons/collections/functors/InstantiateTransformer/getInstance/Class[];Object[]," Transformer method that performs validation.\n\n @param paramTypes  the constructor parameter types\n @param args  the constructor arguments\n @return an instantiate transformer\n"
8421,method,org/apache/commons/collections/functors/InstantiateTransformer/transform/Class," Transforms the input Class object to a result by instantiation.\n\n @param input  the input object to transform\n @return the transformed result\n"
8422,method,org/apache/commons/collections/functors/InstantiateTransformer/InstantiateTransformer/Class[];Object[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param paramTypes  the constructor parameter types, not cloned\n @param args  the constructor arguments, not cloned\n"
8423,field,org/apache/commons/collections/functors/InstantiateTransformer/NO_ARG_INSTANCE,"Singleton instance that uses the no arg constructor "
8424,class,org/apache/commons/collections/functors/NotNullPredicate," Predicate implementation that returns true if the input is not null.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8425,method,org/apache/commons/collections/functors/NotNullPredicate/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8426,method,org/apache/commons/collections/functors/NotNullPredicate/evaluate/Object," Evaluates the predicate returning true if the object does not equal null.\n\n @param object  the object to evaluate\n @return true if not null\n"
8427,field,org/apache/commons/collections/functors/NotNullPredicate/INSTANCE,"Singleton predicate instance "
8428,class,org/apache/commons/collections/functors/NotPredicate," Predicate implementation that returns the opposite of the decorated predicate.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8429,method,org/apache/commons/collections/functors/NotPredicate/getInstance/Predicate," Factory to create the not predicate.\n \n @param predicate  the predicate to decorate, not null\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8430,method,org/apache/commons/collections/functors/NotPredicate/evaluate/Object," Evaluates the predicate returning the opposite to the stored predicate.\n \n @param object  the input object\n @return true if predicate returns false\n"
8435,method,org/apache/commons/collections/functors/WhileClosure/execute/Object," Executes the closure until the predicate is false.\n \n @param input  the input object\n"
8436,method,org/apache/commons/collections/functors/WhileClosure/getPredicate/," Gets the predicate in use.\n \n @return the predicate\n @since Commons Collections 3.1\n"
8437,method,org/apache/commons/collections/functors/WhileClosure/getClosure/," Gets the closure.\n \n @return the closure\n @since Commons Collections 3.1\n"
8438,method,org/apache/commons/collections/functors/WhileClosure/isDoLoop/," Is the loop a do-while loop.\n \n @return true is do-while, false if while\n @since Commons Collections 3.1\n"
8440,class,org/apache/commons/collections/functors/ChainedTransformer," Transformer implementation that chains the specified transformers together.\n <p>\n The input object is passed to the first transformer. The transformed result\n is passed to the second transformer and so on.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8443,method,org/apache/commons/collections/functors/ChainedTransformer/getInstance/Transformer;Transformer," Factory method that performs validation.\n \n @param transformer1  the first transformer, not null\n @param transformer2  the second transformer, not null\n @return the <code>chained</code> transformer\n @throws IllegalArgumentException if either transformer is null\n"
8444,method,org/apache/commons/collections/functors/ChainedTransformer/transform/Object," Transforms the input to result via each decorated transformer\n \n @param object  the input object passed to the first transformer\n @return the transformed result\n"
8445,method,org/apache/commons/collections/functors/ChainedTransformer/getTransformers/," Gets the transformers, do not modify the array.\n @return the transformers\n @since Commons Collections 3.1\n"
8448,method,org/apache/commons/collections/functors/OnePredicate/getInstance/Predicate[]," Factory to create the predicate.\n <p>\n If the array is size zero, the predicate always returns false.\n If the array is size one, then that predicate is returned.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>any</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8449,method,org/apache/commons/collections/functors/OnePredicate/getInstance/Collection," Factory to create the predicate.\n\n @param predicates  the predicates to check, cloned, not null\n @return the <code>one</code> predicate\n @throws IllegalArgumentException if the predicates array is null\n @throws IllegalArgumentException if any predicate in the array is null\n"
8451,method,org/apache/commons/collections/functors/OnePredicate/getPredicates/," Gets the predicates, do not modify the array.\n \n @return the predicates\n @since Commons Collections 3.1\n"
8452,method,org/apache/commons/collections/functors/OnePredicate/OnePredicate/Predicate[]," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param predicates  the predicates to check, not cloned, not null\n"
8453,class,org/apache/commons/collections/functors/ExceptionClosure," Closure implementation that always throws an exception.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8454,method,org/apache/commons/collections/functors/ExceptionClosure/getInstance/," Factory returning the singleton instance.\n \n @return the singleton instance\n @since Commons Collections 3.1\n"
8455,method,org/apache/commons/collections/functors/ExceptionClosure/execute/Object," Always throw an exception.\n \n @param input  the input object\n @throws FunctorException always\n"
8456,field,org/apache/commons/collections/functors/ExceptionClosure/INSTANCE,"Singleton predicate instance "
8458,method,org/apache/commons/collections/functors/Equator/equate/Object;Object," Evaluates the two arguments for their equality.\n \n @param o1 the first object to be equated.\n @param o2 the second object to be equated.\n @return whether the two objects are equal.\n"
8460,class,org/apache/commons/collections/functors/NullIsTruePredicate," Predicate implementation that returns true if the input is null.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8461,method,org/apache/commons/collections/functors/NullIsTruePredicate/getInstance/Predicate," Factory to create the null true predicate.\n \n @param predicate  the predicate to decorate, not null\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8465,class,org/apache/commons/collections/functors/NullIsExceptionPredicate," Predicate implementation that throws an exception if the input is null.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8466,method,org/apache/commons/collections/functors/NullIsExceptionPredicate/getInstance/Predicate," Factory to create the null exception predicate.\n \n @param predicate  the predicate to decorate, not null\n @return the predicate\n @throws IllegalArgumentException if the predicate is null\n"
8470,class,org/apache/commons/collections/functors/ExceptionTransformer," Transformer implementation that always throws an exception.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8471,method,org/apache/commons/collections/functors/ExceptionTransformer/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8473,field,org/apache/commons/collections/functors/ExceptionTransformer/INSTANCE,"Singleton predicate instance "
8475,method,org/apache/commons/collections/functors/ConstantFactory/getInstance/Object," Factory method that performs validation.\n\n @param constantToReturn  the constant object to return each time in the factory\n @return the <code>constant</code> factory.\n"
8476,method,org/apache/commons/collections/functors/ConstantFactory/create/," Always return constant.\n \n @return the stored constant value\n"
8477,method,org/apache/commons/collections/functors/ConstantFactory/getConstant/," Gets the constant.\n \n @return the constant\n @since Commons Collections 3.1\n"
8478,method,org/apache/commons/collections/functors/ConstantFactory/ConstantFactory/Object," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n \n @param constantToReturn  the constant to return each time\n"
8479,field,org/apache/commons/collections/functors/ConstantFactory/NULL_INSTANCE,"Returns null each time "
8480,class,org/apache/commons/collections/functors/NullPredicate," Predicate implementation that returns true if the input is null.\n\n @since Commons Collections 3.0\n @version $Revision: 894507 $ $Date: 2009-12-30 00:12:18 +0100 (Wed, 30 Dec 2009) $\n\n @author Stephen Colebourne\n"
8481,method,org/apache/commons/collections/functors/NullPredicate/getInstance/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n @deprecated use {@link #nullPredicate()} instead.\n"
8482,method,org/apache/commons/collections/functors/NullPredicate/nullPredicate/," Factory returning the singleton instance.\n\n @return the singleton instance\n @since Commons Collections 3.1\n"
8483,method,org/apache/commons/collections/functors/NullPredicate/evaluate/Object," Evaluates the predicate returning true if the input is null.\n\n @param object  the input object\n @return true if input is null\n"
8484,field,org/apache/commons/collections/functors/NullPredicate/INSTANCE,"Singleton predicate instance "
8485,class,org/apache/commons/collections/functors/OrPredicate," Predicate implementation that returns true if either of the predicates return true.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8486,method,org/apache/commons/collections/functors/OrPredicate/getInstance/Predicate;Predicate," Factory to create the predicate.\n\n @param predicate1  the first predicate to check, not null\n @param predicate2  the second predicate to check, not null\n @return the <code>and</code> predicate\n @throws IllegalArgumentException if either predicate is null\n"
8487,method,org/apache/commons/collections/functors/OrPredicate/evaluate/Object," Evaluates the predicate returning true if either predicate returns true.\n\n @param object  the input object\n @return true if either decorated predicate returns true\n"
8488,method,org/apache/commons/collections/functors/OrPredicate/getPredicates/," Gets the two predicates being decorated as an array.\n\n @return the predicates\n @since Commons Collections 3.1\n"
8489,method,org/apache/commons/collections/functors/OrPredicate/OrPredicate/Predicate;Predicate," Constructor that performs no validation.\n Use <code>getInstance</code> if you want that.\n\n @param predicate1  the first predicate to check, not null\n @param predicate2  the second predicate to check, not null\n"
8490,class,org/apache/commons/collections/iterators/AbstractEmptyMapIterator,"\n Provides an implementation of an empty map iterator.\n\n @since Commons Collections 5\n @version $Revision: 815002 $ $Date: 2009-09-15 07:39:48 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n @author Matt Benson\n"
8491,method,org/apache/commons/collections/iterators/AbstractEmptyMapIterator/getKey/,""
8492,method,org/apache/commons/collections/iterators/AbstractEmptyMapIterator/getValue/,""
8493,method,org/apache/commons/collections/iterators/AbstractEmptyMapIterator/setValue/Object,""
8494,method,org/apache/commons/collections/iterators/AbstractEmptyMapIterator/AbstractEmptyMapIterator/," Create a new AbstractEmptyMapIterator.\n"
8496,method,org/apache/commons/collections/iterators/FilterListIterator/add/Object,"Not supported. "
8497,method,org/apache/commons/collections/iterators/FilterListIterator/hasNext/,""
8498,method,org/apache/commons/collections/iterators/FilterListIterator/hasPrevious/,""
8499,method,org/apache/commons/collections/iterators/FilterListIterator/next/,""
8500,method,org/apache/commons/collections/iterators/FilterListIterator/nextIndex/,""
8501,method,org/apache/commons/collections/iterators/FilterListIterator/previous/,""
8502,method,org/apache/commons/collections/iterators/FilterListIterator/previousIndex/,""
8503,method,org/apache/commons/collections/iterators/FilterListIterator/remove/,"Not supported. "
8504,method,org/apache/commons/collections/iterators/FilterListIterator/set/Object,"Not supported. "
8505,method,org/apache/commons/collections/iterators/FilterListIterator/getListIterator/,"\n Gets the iterator this iterator is using.\n \n @return the iterator.\n"
8506,method,org/apache/commons/collections/iterators/FilterListIterator/setListIterator/ListIterator,"\n Sets the iterator for this iterator to use.\n If iteration has started, this effectively resets the iterator.\n \n @param iterator  the iterator to use\n"
8507,method,org/apache/commons/collections/iterators/FilterListIterator/getPredicate/,"\n Gets the predicate this iterator is using.\n \n @return the predicate.\n"
8508,method,org/apache/commons/collections/iterators/FilterListIterator/setPredicate/Predicate,"\n Sets the predicate this the iterator to use.\n \n @param predicate  the transformer to use\n"
8511,method,org/apache/commons/collections/iterators/FilterListIterator/FilterListIterator/ListIterator;Predicate," Constructs a new <code>FilterListIterator</code>.\n\n @param iterator  the iterator to use\n @param predicate  the predicate to use\n"
8513,class,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator," Decorates an ordered map iterator such that it cannot be modified.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8514,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/decorate/OrderedMapIterator," Decorates the specified iterator such that it cannot be modified.\n\n @param iterator  the iterator to decorate\n @throws IllegalArgumentException if the iterator is null\n"
8515,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/hasNext/,""
8516,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/next/,""
8517,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/hasPrevious/,""
8518,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/previous/,""
8519,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/getKey/,""
8520,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/getValue/,""
8521,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/setValue/Object,""
8522,method,org/apache/commons/collections/iterators/UnmodifiableOrderedMapIterator/remove/,""
8523,class,org/apache/commons/collections/iterators/EnumerationIterator,"\n Adapter to make {@link Enumeration Enumeration} instances appear\n to be {@link Iterator Iterator} instances.\n\n @since Commons Collections 1.0\n @version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n @author <a href="mailto:jstrachan@apache.org">James Strachan</a>\n @author <a href="mailto:dlr@finemaltcoding.com">Daniel Rall</a>\n"
8524,method,org/apache/commons/collections/iterators/EnumerationIterator/hasNext/," Returns true if the underlying enumeration has more elements.\n\n @return true if the underlying enumeration has more elements\n @throws NullPointerException  if the underlying enumeration is null\n"
8525,method,org/apache/commons/collections/iterators/EnumerationIterator/next/," Returns the next object from the enumeration.\n\n @return the next object from the enumeration\n @throws NullPointerException if the enumeration is null\n"
8527,method,org/apache/commons/collections/iterators/EnumerationIterator/getEnumeration/," Returns the underlying enumeration.\n\n @return the underlying enumeration\n"
8528,method,org/apache/commons/collections/iterators/EnumerationIterator/setEnumeration/Enumeration," Sets the underlying enumeration.\n\n @param enumeration  the new underlying enumeration\n"
8530,method,org/apache/commons/collections/iterators/EnumerationIterator/EnumerationIterator/Enumeration," Constructs a new <code>EnumerationIterator</code> that provides\n an iterator view of the given enumeration.\n\n @param enumeration  the enumeration to use\n"
8531,method,org/apache/commons/collections/iterators/EnumerationIterator/EnumerationIterator/Enumeration;Collection," Constructs a new <code>EnumerationIterator</code> that will remove\n elements from the specified collection.\n\n @param enumeration  the enumeration to use\n @param collection  the collection to remove elements from\n"
8533,method,org/apache/commons/collections/iterators/EmptyIterator/getResettableInstance/," Get a typed resettable empty iterator instance.\n @param <E>\n @return ResettableIterator<E>\n"
8534,method,org/apache/commons/collections/iterators/EmptyIterator/getInstance/," Get a typed empty iterator instance.\n @param <E>\n @return Iterator<E>\n"
8535,method,org/apache/commons/collections/iterators/EmptyIterator/EmptyIterator/," Constructor.\n"
8536,field,org/apache/commons/collections/iterators/EmptyIterator/RESETTABLE_INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 3.1\n"
8537,field,org/apache/commons/collections/iterators/EmptyIterator/INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 2.1.1 and 3.1\n"
8539,method,org/apache/commons/collections/iterators/UniqueFilterIterator/UniqueFilterIterator/Iterator,"  Constructs a new <code>UniqueFilterIterator</code>.\n\n  @param iterator  the iterator to use\n"
8541,method,org/apache/commons/collections/iterators/ObjectArrayIterator/hasNext/," Returns true if there are more elements to return from the array.\n\n @return true if there is a next element to return\n"
8542,method,org/apache/commons/collections/iterators/ObjectArrayIterator/next/," Returns the next element in the array.\n\n @return the next element in the array\n @throws NoSuchElementException if all the elements in the array\n    have already been returned\n"
8543,method,org/apache/commons/collections/iterators/ObjectArrayIterator/remove/," Throws {@link UnsupportedOperationException}.\n\n @throws UnsupportedOperationException always\n"
8546,method,org/apache/commons/collections/iterators/ObjectArrayIterator/getStartIndex/," Gets the start index to loop from.\n \n @return the start index\n"
8547,method,org/apache/commons/collections/iterators/ObjectArrayIterator/getEndIndex/," Gets the end index to loop to.\n \n @return the end index\n"
8548,method,org/apache/commons/collections/iterators/ObjectArrayIterator/reset/," Resets the iterator back to the start index.\n"
8550,method,org/apache/commons/collections/iterators/ObjectArrayIterator/ObjectArrayIterator/Object[]," Constructs an ObjectArrayIterator that will iterate over the values in the\n specified array.\n\n @param array the array to iterate over\n @throws NullPointerException if <code>array</code> is <code>null</code>\n"
8551,method,org/apache/commons/collections/iterators/ObjectArrayIterator/ObjectArrayIterator/Object[];int," Constructs an ObjectArrayIterator that will iterate over the values in the\n specified array from a specific start index.\n\n @param array  the array to iterate over\n @param start  the index to start iterating at\n @throws NullPointerException if <code>array</code> is <code>null</code>\n @throws IndexOutOfBoundsException if the start index is out of bounds\n"
8553,field,org/apache/commons/collections/iterators/ObjectArrayIterator/array,"The array "
8554,field,org/apache/commons/collections/iterators/ObjectArrayIterator/startIndex,"The start index to loop from "
8555,field,org/apache/commons/collections/iterators/ObjectArrayIterator/endIndex,"The end index to loop to "
8556,field,org/apache/commons/collections/iterators/ObjectArrayIterator/index,"The current iterator index "
8558,method,org/apache/commons/collections/iterators/ListIteratorWrapper/add/Object," Throws {@link UnsupportedOperationException}\n unless the underlying <code>Iterator</code> is a <code>ListIterator</code>.\n\n @param obj  the object to add\n @throws UnsupportedOperationException\n"
8559,method,org/apache/commons/collections/iterators/ListIteratorWrapper/hasNext/," Returns true if there are more elements in the iterator.\n\n @return true if there are more elements\n"
8560,method,org/apache/commons/collections/iterators/ListIteratorWrapper/hasPrevious/," Returns true if there are previous elements in the iterator.\n\n @return true if there are previous elements\n"
8561,method,org/apache/commons/collections/iterators/ListIteratorWrapper/next/," Returns the next element from the iterator.\n\n @return the next element from the iterator\n @throws NoSuchElementException if there are no more elements\n"
8562,method,org/apache/commons/collections/iterators/ListIteratorWrapper/nextIndex/," Returns the index of the next element.\n\n @return the index of the next element\n"
8563,method,org/apache/commons/collections/iterators/ListIteratorWrapper/previous/," Returns the the previous element.\n\n @return the previous element\n @throws NoSuchElementException  if there are no previous elements\n"
8564,method,org/apache/commons/collections/iterators/ListIteratorWrapper/previousIndex/," Returns the index of the previous element.\n\n @return  the index of the previous element\n"
8566,method,org/apache/commons/collections/iterators/ListIteratorWrapper/set/Object," Throws {@link UnsupportedOperationException}\n unless the underlying <code>Iterator</code> is a <code>ListIterator</code>.\n\n @param obj  the object to set\n @throws UnsupportedOperationException\n"
8567,method,org/apache/commons/collections/iterators/ListIteratorWrapper/reset/," Resets this iterator back to the position at which the iterator\n was created.\n\n @since Commons Collections 3.2\n"
8568,method,org/apache/commons/collections/iterators/ListIteratorWrapper/ListIteratorWrapper/Iterator," Constructs a new <code>ListIteratorWrapper</code> that will wrap\n the given iterator.\n\n @param iterator  the iterator to wrap\n @throws NullPointerException if the iterator is null\n"
8570,method,org/apache/commons/collections/iterators/ArrayListIterator/hasPrevious/," Returns true if there are previous elements to return from the array.\n\n @return true if there is a previous element to return\n"
8571,method,org/apache/commons/collections/iterators/ArrayListIterator/previous/," Gets the previous element from the array.\n \n @return the previous element\n @throws NoSuchElementException if there is no previous element\n"
8572,method,org/apache/commons/collections/iterators/ArrayListIterator/next/," Gets the next element from the array.\n \n @return the next element\n @throws NoSuchElementException if there is no next element\n"
8573,method,org/apache/commons/collections/iterators/ArrayListIterator/nextIndex/," Gets the next index to be retrieved.\n \n @return the index of the item to be retrieved next\n"
8577,method,org/apache/commons/collections/iterators/ArrayListIterator/reset/," Resets the iterator back to the start index.\n"
8579,method,org/apache/commons/collections/iterators/ArrayListIterator/ArrayListIterator/Object," Constructs an ArrayListIterator that will iterate over the values in the\n specified array.\n\n @param array the array to iterate over\n @throws IllegalArgumentException if <code>array</code> is not an array.\n @throws NullPointerException if <code>array</code> is <code>null</code>\n"
8580,method,org/apache/commons/collections/iterators/ArrayListIterator/ArrayListIterator/Object;int," Constructs an ArrayListIterator that will iterate over the values in the\n specified array from a specific start index.\n\n @param array  the array to iterate over\n @param startIndex  the index to start iterating at\n @throws IllegalArgumentException if <code>array</code> is not an array.\n @throws NullPointerException if <code>array</code> is <code>null</code>\n @throws IndexOutOfBoundsException if the start index is out of bounds\n"
8593,method,org/apache/commons/collections/iterators/LoopingListIterator/reset/," Resets the iterator back to the start of the list.\n"
8594,method,org/apache/commons/collections/iterators/LoopingListIterator/size/," Gets the size of the list underlying the iterator.\n\n @return the current list size\n"
8596,class,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator," Provides basic behaviour for decorating an ordered map iterator with extra functionality.\n <p>\n All methods are forwarded to the decorated map iterator.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8597,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/getOrderedMapIterator/," Gets the iterator being decorated.\n \n @return the decorated iterator\n"
8598,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/hasNext/,""
8599,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/next/,""
8600,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/hasPrevious/,""
8601,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/previous/,""
8602,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/remove/,""
8603,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/getKey/,""
8604,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/getValue/,""
8605,method,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/setValue/Object,""
8607,field,org/apache/commons/collections/iterators/AbstractOrderedMapIteratorDecorator/iterator,"The iterator being decorated "
8608,class,org/apache/commons/collections/iterators/AbstractListIteratorDecorator," Provides basic behaviour for decorating a list iterator with extra functionality.\n <p>\n All methods are forwarded to the decorated list iterator.\n\n @since Commons Collections 3.0\n @version $Revision: 815059 $ $Date: 2009-09-15 07:55:30 +0200 (Tue, 15 Sep 2009) $\n\n @author Rodney Waldhoff\n @author Stephen Colebourne\n"
8609,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/getListIterator/," Gets the iterator being decorated.\n \n @return the decorated iterator\n"
8610,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/hasNext/,""
8611,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/next/,""
8612,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/nextIndex/,""
8613,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/hasPrevious/,""
8614,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/previous/,""
8615,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/previousIndex/,""
8616,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/remove/,""
8617,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/set/Object,""
8618,method,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/add/Object,""
8620,field,org/apache/commons/collections/iterators/AbstractListIteratorDecorator/iterator,"The iterator being decorated "
8622,method,org/apache/commons/collections/iterators/FilterIterator/hasNext/,"\n Returns true if the underlying iterator contains an object that \n matches the predicate.\n\n @return true if there is another object that matches the predicate\n @throws NullPointerException if either the iterator or predicate are null\n"
8623,method,org/apache/commons/collections/iterators/FilterIterator/next/,"\n Returns the next object that matches the predicate.\n\n @return the next object which matches the given predicate\n @throws NullPointerException if either the iterator or predicate are null\n @throws NoSuchElementException if there are no more elements that\n  match the predicate \n"
8625,method,org/apache/commons/collections/iterators/FilterIterator/getIterator/,"\n Gets the iterator this iterator is using.\n\n @return the iterator\n"
8626,method,org/apache/commons/collections/iterators/FilterIterator/setIterator/Iterator,"\n Sets the iterator for this iterator to use.\n If iteration has started, this effectively resets the iterator.\n\n @param iterator  the iterator to use\n"
8627,method,org/apache/commons/collections/iterators/FilterIterator/getPredicate/,"\n Gets the predicate this iterator is using.\n\n @return the predicate\n"
8628,method,org/apache/commons/collections/iterators/FilterIterator/setPredicate/Predicate,"\n Sets the predicate this the iterator to use.\n\n @param predicate  the predicate to use\n"
8631,method,org/apache/commons/collections/iterators/FilterIterator/FilterIterator/Iterator;Predicate," Constructs a new <code>FilterIterator</code> that will use the\n given iterator and predicate.\n\n @param iterator  the iterator to use\n @param predicate  the predicate to use\n"
8632,class,org/apache/commons/collections/iterators/SingletonIterator,"\n <code>SingletonIterator</code> is an {@link Iterator} over a single \n object instance.\n\n @since Commons Collections 2.0\n @version $Revision: 815004 $ $Date: 2009-09-15 07:42:44 +0200 (Tue, 15 Sep 2009) $\n\n @author James Strachan\n @author Stephen Colebourne\n @author Rodney Waldhoff\n"
8633,method,org/apache/commons/collections/iterators/SingletonIterator/hasNext/," Is another object available from the iterator?\n <p>\n This returns true if the single object hasn't been returned yet.\n \n @return true if the single object hasn't been returned yet\n"
8634,method,org/apache/commons/collections/iterators/SingletonIterator/next/," Get the next object from the iterator.\n <p>\n This returns the single object if it hasn't been returned yet.\n\n @return the single object\n @throws NoSuchElementException if the single object has already \n    been returned\n"
8636,method,org/apache/commons/collections/iterators/SingletonIterator/reset/," Reset the iterator to the start.\n"
8637,method,org/apache/commons/collections/iterators/SingletonIterator/SingletonIterator/Object," Constructs a new <code>SingletonIterator</code> where <code>remove</code>\n is a permitted operation.\n\n @param object  the single object to return from the iterator\n"
8638,method,org/apache/commons/collections/iterators/SingletonIterator/SingletonIterator/Object;boolean," Constructs a new <code>SingletonIterator</code> optionally choosing if\n <code>remove</code> is a permitted operation.\n\n @param object  the single object to return from the iterator\n @param removeAllowed  true if remove is allowed\n @since Commons Collections 3.1\n"
8639,class,org/apache/commons/collections/iterators/EmptyOrderedIterator,"\n Provides an implementation of an empty ordered iterator.\n\n @since Commons Collections 3.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8640,method,org/apache/commons/collections/iterators/EmptyOrderedIterator/getInstance/," Typed instance of the iterator.\n @param <E>\n @return OrderedIterator<E>\n"
8641,method,org/apache/commons/collections/iterators/EmptyOrderedIterator/EmptyOrderedIterator/," Constructor.\n"
8642,field,org/apache/commons/collections/iterators/EmptyOrderedIterator/INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 3.1\n"
8643,class,org/apache/commons/collections/iterators/UnmodifiableMapIterator,"\n Decorates a map iterator such that it cannot be modified.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n @author Stephen Colebourne\n"
8644,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/decorate/MapIterator," Decorates the specified iterator such that it cannot be modified.\n\n @param iterator  the iterator to decorate\n @throws IllegalArgumentException if the iterator is null\n"
8645,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/hasNext/,""
8646,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/next/,""
8647,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/getKey/,""
8648,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/getValue/,""
8649,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/setValue/Object,""
8650,method,org/apache/commons/collections/iterators/UnmodifiableMapIterator/remove/,""
8651,class,org/apache/commons/collections/iterators/IteratorEnumeration," Adapter to make an {@link Iterator Iterator} instance appear to be an\n {@link Enumeration Enumeration} instance.\n\n @since Commons Collections 1.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author <a href="mailto:jstrachan@apache.org">James Strachan</a>\n"
8652,method,org/apache/commons/collections/iterators/IteratorEnumeration/hasMoreElements/," Returns true if the underlying iterator has more elements.\n \n @return true if the underlying iterator has more elements\n"
8653,method,org/apache/commons/collections/iterators/IteratorEnumeration/nextElement/," Returns the next element from the underlying iterator.\n \n @return the next element from the underlying iterator.\n @throws java.util.NoSuchElementException if the underlying iterator has\n no more elements\n"
8654,method,org/apache/commons/collections/iterators/IteratorEnumeration/getIterator/," Returns the underlying iterator.\n \n @return the underlying iterator\n"
8655,method,org/apache/commons/collections/iterators/IteratorEnumeration/setIterator/Iterator," Sets the underlying iterator.\n \n @param iterator the new underlying iterator\n"
8657,method,org/apache/commons/collections/iterators/IteratorEnumeration/IteratorEnumeration/Iterator," Constructs a new <code>IteratorEnumeration</code> that will use the given\n iterator.\n \n @param iterator the iterator to use\n"
8658,class,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator," Provides basic behaviour for decorating a map iterator with extra functionality.\n <p>\n All methods are forwarded to the decorated map iterator.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8659,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/getMapIterator/," Gets the iterator being decorated.\n \n @return the decorated iterator\n"
8660,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/hasNext/,""
8661,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/next/,""
8662,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/remove/,""
8663,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/getKey/,""
8664,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/getValue/,""
8665,method,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/setValue/Object,""
8667,field,org/apache/commons/collections/iterators/AbstractMapIteratorDecorator/iterator,"The iterator being decorated "
8669,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/hasPrevious/," Returns true if there are previous elements to return from the array.\n\n @return true if there is a previous element to return\n"
8670,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/previous/," Gets the previous element from the array.\n \n @return the previous element\n @throws NoSuchElementException if there is no previous element\n"
8671,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/next/," Gets the next element from the array.\n \n @return the next element\n @throws NoSuchElementException if there is no next element\n"
8672,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/nextIndex/," Gets the next index to be retrieved.\n \n @return the index of the item to be retrieved next\n"
8676,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/reset/," Resets the iterator back to the start index.\n"
8678,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/ObjectArrayListIterator/Object[]," Constructs an ObjectArrayListIterator that will iterate over the values in the\n specified array.\n\n @param array the array to iterate over\n @throws NullPointerException if <code>array</code> is <code>null</code>\n"
8679,method,org/apache/commons/collections/iterators/ObjectArrayListIterator/ObjectArrayListIterator/Object[];int," Constructs an ObjectArrayListIterator that will iterate over the values in the\n specified array from a specific start index.\n\n @param array  the array to iterate over\n @param start  the index to start iterating at\n @throws NullPointerException if <code>array</code> is <code>null</code>\n @throws IndexOutOfBoundsException if the start index is out of bounds\n"
8683,method,org/apache/commons/collections/iterators/ObjectGraphIterator/updateCurrentIterator/," Loops around the iterators to find the next value to return.\n"
8684,method,org/apache/commons/collections/iterators/ObjectGraphIterator/findNext/Object," Finds the next object in the iteration given any start object.\n \n @param value  the value to start from\n"
8685,method,org/apache/commons/collections/iterators/ObjectGraphIterator/findNextByIterator/Iterator," Finds the next object in the iteration given an iterator.\n \n @param iterator  the iterator to start from\n"
8686,method,org/apache/commons/collections/iterators/ObjectGraphIterator/hasNext/," Checks whether there are any more elements in the iteration to obtain.\n \n @return true if elements remain in the iteration\n"
8687,method,org/apache/commons/collections/iterators/ObjectGraphIterator/next/," Gets the next element of the iteration.\n \n @return the next element from the iteration\n @throws NoSuchElementException if all the Iterators are exhausted\n"
8691,field,org/apache/commons/collections/iterators/ObjectGraphIterator/stack,"The stack of iterators "
8692,field,org/apache/commons/collections/iterators/ObjectGraphIterator/root,"The root object in the tree "
8693,field,org/apache/commons/collections/iterators/ObjectGraphIterator/transformer,"The transformer to use "
8694,field,org/apache/commons/collections/iterators/ObjectGraphIterator/hasNext,"Whether there is another element in the iteration "
8695,field,org/apache/commons/collections/iterators/ObjectGraphIterator/currentIterator,"The current iterator "
8696,field,org/apache/commons/collections/iterators/ObjectGraphIterator/currentValue,"The current value "
8697,field,org/apache/commons/collections/iterators/ObjectGraphIterator/lastUsedIterator,"The last used iterator, needed for remove() "
8698,class,org/apache/commons/collections/iterators/EmptyMapIterator,"\n Provides an implementation of an empty map iterator.\n\n @since Commons Collections 3.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8699,method,org/apache/commons/collections/iterators/EmptyMapIterator/getInstance/," Get a typed instance of the iterator.\n @param <K>\n @param <V>\n @return {@link MapIterator}<K, V>\n"
8700,method,org/apache/commons/collections/iterators/EmptyMapIterator/EmptyMapIterator/," Constructor.\n"
8701,field,org/apache/commons/collections/iterators/EmptyMapIterator/INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 3.1\n"
8702,class,org/apache/commons/collections/iterators/AbstractIteratorDecorator," Provides basic behaviour for decorating an iterator with extra functionality.\n <p>\n All methods are forwarded to the decorated iterator.\n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author James Strachan\n @author Stephen Colebourne\n"
8703,method,org/apache/commons/collections/iterators/AbstractIteratorDecorator/next/,""
8707,method,org/apache/commons/collections/iterators/ArrayIterator/hasNext/," Returns true if there are more elements to return from the array.\n\n @return true if there is a next element to return\n"
8708,method,org/apache/commons/collections/iterators/ArrayIterator/next/," Returns the next element in the array.\n\n @return the next element in the array\n @throws NoSuchElementException if all the elements in the array\n  have already been returned\n"
8709,method,org/apache/commons/collections/iterators/ArrayIterator/remove/," Throws {@link UnsupportedOperationException}.\n\n @throws UnsupportedOperationException always\n"
8712,method,org/apache/commons/collections/iterators/ArrayIterator/reset/," Resets the iterator back to the start index.\n"
8714,method,org/apache/commons/collections/iterators/ArrayIterator/ArrayIterator/Object," Constructs an ArrayIterator that will iterate over the values in the\n specified array.\n\n @param array the array to iterate over.\n @throws IllegalArgumentException if <code>array</code> is not an array.\n @throws NullPointerException if <code>array</code> is <code>null</code>\n"
8715,method,org/apache/commons/collections/iterators/ArrayIterator/ArrayIterator/Object;int," Constructs an ArrayIterator that will iterate over the values in the\n specified array from a specific start index.\n\n @param array  the array to iterate over.\n @param startIndex  the index to start iterating at.\n @throws IllegalArgumentException if <code>array</code> is not an array.\n @throws NullPointerException if <code>array</code> is <code>null</code>\n @throws IndexOutOfBoundsException if the index is invalid\n"
8716,method,org/apache/commons/collections/iterators/ArrayIterator/ArrayIterator/Object;int;int," Construct an ArrayIterator that will iterate over a range of values \n in the specified array.\n\n @param array  the array to iterate over.\n @param startIndex  the index to start iterating at.\n @param endIndex  the index to finish iterating at.\n @throws IllegalArgumentException if <code>array</code> is not an array.\n @throws NullPointerException if <code>array</code> is <code>null</code>\n @throws IndexOutOfBoundsException if either index is invalid\n"
8717,field,org/apache/commons/collections/iterators/ArrayIterator/array,"The array to iterate over "
8718,field,org/apache/commons/collections/iterators/ArrayIterator/startIndex,"The start index to loop from "
8719,field,org/apache/commons/collections/iterators/ArrayIterator/endIndex,"The end index to loop to "
8720,field,org/apache/commons/collections/iterators/ArrayIterator/index,"The current iterator index "
8721,class,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator," Provides basic behaviour for decorating an iterator with extra functionality\n without committing the generic type of the Iterator implementation.\n <p>\n All methods are forwarded to the decorated iterator.\n\n @since Commons Collections 5\n @version $Revision: 899713 $ $Date: 2010-01-15 17:57:24 +0100 (Fri, 15 Jan 2010) $\n\n @author James Strachan\n @author Stephen Colebourne\n @author Matt Benson\n"
8722,method,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator/getIterator/," Gets the iterator being decorated.\n \n @return the decorated iterator\n"
8723,method,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator/hasNext/,""
8724,method,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator/remove/,""
8725,method,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator/AbstractUntypedIteratorDecorator/Iterator," Create a new AbstractUntypedIteratorDecorator.\n"
8726,field,org/apache/commons/collections/iterators/AbstractUntypedIteratorDecorator/iterator,"The iterator being decorated "
8728,method,org/apache/commons/collections/iterators/EmptyListIterator/getResettableInstance/," Get a typed instance of the iterator.\n @param <E>\n @return {@link ResettableListIterator}<E>\n"
8729,method,org/apache/commons/collections/iterators/EmptyListIterator/getInstance/," Get a typed instance of the iterator.\n @param <E>\n @return {@link ListIterator}<E>\n"
8730,method,org/apache/commons/collections/iterators/EmptyListIterator/EmptyListIterator/," Constructor.\n"
8731,field,org/apache/commons/collections/iterators/EmptyListIterator/RESETTABLE_INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 3.1\n"
8732,field,org/apache/commons/collections/iterators/EmptyListIterator/INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 2.1.1 and 3.1\n"
8733,class,org/apache/commons/collections/iterators/EmptyOrderedMapIterator,"\n Provides an implementation of an empty ordered map iterator.\n\n @since Commons Collections 3.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8734,method,org/apache/commons/collections/iterators/EmptyOrderedMapIterator/getInstance/," Get a typed instance of the iterator.\n @param <K>\n @param <V>\n @return {@link OrderedMapIterator}<K, V>\n"
8735,method,org/apache/commons/collections/iterators/EmptyOrderedMapIterator/EmptyOrderedMapIterator/," Constructor.\n"
8736,field,org/apache/commons/collections/iterators/EmptyOrderedMapIterator/INSTANCE," Singleton instance of the iterator.\n @since Commons Collections 3.1\n"
8737,class,org/apache/commons/collections/iterators/TransformIterator,"\n Decorates an iterator such that each element returned is transformed.\n\n @since Commons Collections 1.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author James Strachan\n @author Stephen Colebourne\n"
8738,method,org/apache/commons/collections/iterators/TransformIterator/hasNext/,""
8739,method,org/apache/commons/collections/iterators/TransformIterator/next/," Gets the next object from the iteration, transforming it using the\n current transformer. If the transformer is null, no transformation\n occurs and the object from the iterator is returned directly.\n \n @return the next object\n @throws java.util.NoSuchElementException if there are no more elements\n"
8740,method,org/apache/commons/collections/iterators/TransformIterator/remove/,""
8741,method,org/apache/commons/collections/iterators/TransformIterator/getIterator/,"\n Gets the iterator this iterator is using.\n \n @return the iterator.\n"
8742,method,org/apache/commons/collections/iterators/TransformIterator/setIterator/Iterator,"\n Sets the iterator for this iterator to use.\n If iteration has started, this effectively resets the iterator.\n \n @param iterator  the iterator to use\n"
8743,method,org/apache/commons/collections/iterators/TransformIterator/getTransformer/,"\n Gets the transformer this iterator is using.\n \n @return the transformer.\n"
8744,method,org/apache/commons/collections/iterators/TransformIterator/setTransformer/Transformer,"\n Sets the transformer this the iterator to use.\n A null transformer is a no-op transformer.\n \n @param transformer  the transformer to use\n"
8745,method,org/apache/commons/collections/iterators/TransformIterator/transform/Object," Transforms the given object using the transformer.\n If the transformer is null, the original object is returned as-is.\n\n @param source  the object to transform\n @return the transformed object\n"
8747,method,org/apache/commons/collections/iterators/TransformIterator/TransformIterator/Iterator," Constructs a new <code>TransformIterator</code> that won't transform\n elements from the given iterator.\n\n @param iterator  the iterator to use\n"
8748,method,org/apache/commons/collections/iterators/TransformIterator/TransformIterator/Iterator;Transformer," Constructs a new <code>TransformIterator</code> that will use the\n given iterator and transformer.  If the given transformer is null,\n then objects will not be transformed.\n\n @param iterator  the iterator to use\n @param transformer  the transformer to use\n"
8749,class,org/apache/commons/collections/iterators/SingletonListIterator," <code>SingletonIterator</code> is an {@link ListIterator} over a single \n object instance.\n\n @since Commons Collections 2.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n @author Rodney Waldhoff\n"
8750,method,org/apache/commons/collections/iterators/SingletonListIterator/hasNext/," Is another object available from the iterator?\n <p>\n This returns true if the single object hasn't been returned yet.\n \n @return true if the single object hasn't been returned yet\n"
8751,method,org/apache/commons/collections/iterators/SingletonListIterator/hasPrevious/," Is a previous object available from the iterator?\n <p>\n This returns true if the single object has been returned.\n \n @return true if the single object has been returned\n"
8754,method,org/apache/commons/collections/iterators/SingletonListIterator/next/," Get the next object from the iterator.\n <p>\n This returns the single object if it hasn't been returned yet.\n\n @return the single object\n @throws NoSuchElementException if the single object has already \n    been returned\n"
8755,method,org/apache/commons/collections/iterators/SingletonListIterator/previous/," Get the previous object from the iterator.\n <p>\n This returns the single object if it has been returned.\n\n @return the single object\n @throws NoSuchElementException if the single object has not already \n    been returned\n"
8757,method,org/apache/commons/collections/iterators/SingletonListIterator/add/Object," Add always throws {@link UnsupportedOperationException}.\n\n @throws UnsupportedOperationException always\n"
8759,method,org/apache/commons/collections/iterators/SingletonListIterator/reset/," Reset the iterator back to the start.\n"
8760,method,org/apache/commons/collections/iterators/SingletonListIterator/SingletonListIterator/Object," Constructs a new <code>SingletonListIterator</code>.\n\n @param object  the single object to return from the iterator\n"
8761,class,org/apache/commons/collections/iterators/EntrySetMapIterator," Implements a <code>MapIterator</code> using a Map entrySet.\n Reverse iteration is not supported.\n <pre>\n MapIterator it = map.mapIterator();\n while (it.hasNext()) {\n   Object key = it.next();\n   Object value = it.getValue();\n   it.setValue(newValue);\n }\n </pre>\n  \n @since Commons Collections 3.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8762,method,org/apache/commons/collections/iterators/EntrySetMapIterator/hasNext/," Checks to see if there are more entries still to be iterated.\n\n @return <code>true</code> if the iterator has more elements\n"
8763,method,org/apache/commons/collections/iterators/EntrySetMapIterator/next/," Gets the next <em>key</em> from the <code>Map</code>.\n\n @return the next key in the iteration\n @throws java.util.NoSuchElementException if the iteration is finished\n"
8768,method,org/apache/commons/collections/iterators/EntrySetMapIterator/reset/," Resets the state of the iterator.\n"
8769,method,org/apache/commons/collections/iterators/EntrySetMapIterator/toString/," Gets the iterator as a String.\n \n @return a string version of the iterator\n"
8770,method,org/apache/commons/collections/iterators/EntrySetMapIterator/EntrySetMapIterator/Map," Constructor.\n \n @param map  the map to iterate over\n"
8771,class,org/apache/commons/collections/iterators/UnmodifiableIterator,"\n Decorates an iterator such that it cannot be modified.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 956291 $ $Date: 2010-06-19 22:30:20 +0200 (Sat, 19 Jun 2010) $\n\n @author Stephen Colebourne\n"
8772,method,org/apache/commons/collections/iterators/UnmodifiableIterator/decorate/Iterator," Decorates the specified iterator such that it cannot be modified.\n <p>\n If the iterator is already unmodifiable it is returned directly.\n\n @param iterator  the iterator to decorate\n @throws IllegalArgumentException if the iterator is null\n"
8773,method,org/apache/commons/collections/iterators/UnmodifiableIterator/hasNext/,""
8774,method,org/apache/commons/collections/iterators/UnmodifiableIterator/next/,""
8775,method,org/apache/commons/collections/iterators/UnmodifiableIterator/remove/,""
8780,method,org/apache/commons/collections/iterators/LoopingIterator/reset/," Resets the iterator back to the start of the collection.\n"
8781,method,org/apache/commons/collections/iterators/LoopingIterator/size/," Gets the size of the collection underlying the iterator.\n \n @return the current collection size\n"
8784,method,org/apache/commons/collections/iterators/IteratorChain/addIterator/Iterator," Add an Iterator to the end of the chain\n \n @param iterator Iterator to add\n @throws IllegalStateException if I've already started iterating\n @throws NullPointerException if the iterator is null\n"
8785,method,org/apache/commons/collections/iterators/IteratorChain/setIterator/int;Iterator," Set the Iterator at the given index\n \n @param index index of the Iterator to replace\n @param iterator Iterator to place at the given index\n @throws IndexOutOfBoundsException if index &lt; 0 or index &gt; size()\n @throws IllegalStateException if I've already started iterating\n @throws NullPointerException if the iterator is null\n"
8786,method,org/apache/commons/collections/iterators/IteratorChain/getIterators/," Get the list of Iterators (unmodifiable)\n \n @return the unmodifiable list of iterators added\n"
8787,method,org/apache/commons/collections/iterators/IteratorChain/size/," Number of Iterators in the current IteratorChain.\n \n @return Iterator count\n"
8789,method,org/apache/commons/collections/iterators/IteratorChain/updateCurrentIterator/," Updates the current iterator field to ensure that the current Iterator is\n not exhausted\n"
8790,method,org/apache/commons/collections/iterators/IteratorChain/hasNext/," Return true if any Iterator in the IteratorChain has a remaining element.\n \n @return true if elements remain\n"
8791,method,org/apache/commons/collections/iterators/IteratorChain/next/," Returns the next Object of the current Iterator\n \n @return Object from the current Iterator\n @throws java.util.NoSuchElementException if all the Iterators are\n exhausted\n"
8795,method,org/apache/commons/collections/iterators/IteratorChain/IteratorChain/Iterator;Iterator," Constructs a new <code>IteratorChain</code> over the two given iterators.\n <p>\n This method takes two iterators. The newly constructed iterator will\n iterate through each one of the input iterators in turn.\n \n @param first the first child iterator in the IteratorChain, not null\n @param second the second child iterator in the IteratorChain, not null\n @throws NullPointerException if either iterator is null\n"
8796,method,org/apache/commons/collections/iterators/IteratorChain/IteratorChain/Iterator[]," Constructs a new <code>IteratorChain</code> over the array of iterators.\n <p>\n This method takes an array of iterators. The newly constructed iterator\n will iterate through each one of the input iterators in turn.\n \n @param iteratorChain the array of iterators, not null\n @throws NullPointerException if iterators array is or contains null\n"
8797,method,org/apache/commons/collections/iterators/IteratorChain/IteratorChain/Collection," Constructs a new <code>IteratorChain</code> over the collection of\n iterators.\n <p>\n This method takes a collection of iterators. The newly constructed\n iterator will iterate through each one of the input iterators in turn.\n \n @param iteratorChain the collection of iterators, not null\n @throws NullPointerException if iterators collection is or contains null\n @throws ClassCastException if iterators collection doesn't contain an\n iterator\n"
8798,field,org/apache/commons/collections/iterators/IteratorChain/iteratorChain,"The chain of iterators "
8799,field,org/apache/commons/collections/iterators/IteratorChain/currentIteratorIndex,"The index of the current iterator "
8800,field,org/apache/commons/collections/iterators/IteratorChain/currentIterator,"The current iterator "
8803,class,org/apache/commons/collections/iterators/UnmodifiableListIterator,"\n Decorates a list iterator such that it cannot be modified.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Stephen Colebourne\n"
8804,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/decorate/ListIterator," Decorates the specified iterator such that it cannot be modified.\n\n @param iterator  the iterator to decorate\n @throws IllegalArgumentException if the iterator is null\n"
8805,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/hasNext/,""
8806,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/next/,""
8807,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/nextIndex/,""
8808,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/hasPrevious/,""
8809,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/previous/,""
8810,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/previousIndex/,""
8811,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/remove/,""
8812,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/set/Object,""
8813,method,org/apache/commons/collections/iterators/UnmodifiableListIterator/add/Object,""
8814,class,org/apache/commons/collections/iterators/CollatingIterator," Provides an ordered iteration over the elements contained in a collection of\n ordered Iterators.\n <p>\n Given two ordered {@link Iterator} instances <code>A</code> and\n <code>B</code>, the {@link #next} method on this iterator will return the\n lesser of <code>A.next()</code> and <code>B.next()</code>.\n\n @since Commons Collections 2.1\n @version $Revision: 814997 $ $Date: 2009-09-15 07:29:56 +0200 (Tue, 15 Sep 2009) $\n\n @author Rodney Waldhoff\n @author Stephen Colebourne\n"
8816,method,org/apache/commons/collections/iterators/CollatingIterator/setIterator/int;Iterator," Sets the iterator at the given index.\n \n @param index index of the Iterator to replace\n @param iterator Iterator to place at the given index\n @throws IndexOutOfBoundsException if index &lt; 0 or index &gt; size()\n @throws IllegalStateException if iteration has started\n @throws NullPointerException if the iterator is null\n"
8817,method,org/apache/commons/collections/iterators/CollatingIterator/getIterators/," Gets the list of Iterators (unmodifiable).\n \n @return the unmodifiable list of iterators added\n"
8818,method,org/apache/commons/collections/iterators/CollatingIterator/getComparator/," Gets the {@link Comparator} by which collatation occurs.\n"
8819,method,org/apache/commons/collections/iterators/CollatingIterator/setComparator/Comparator," Sets the {@link Comparator} by which collation occurs.\n \n @throws IllegalStateException if iteration has started\n"
8820,method,org/apache/commons/collections/iterators/CollatingIterator/hasNext/," Returns <code>true</code> if any child iterator has remaining elements.\n \n @return true if this iterator has remaining elements\n"
8821,method,org/apache/commons/collections/iterators/CollatingIterator/next/," Returns the next ordered element from a child iterator.\n \n @return the next ordered element\n @throws NoSuchElementException if no child iterator has any more elements\n"
8822,method,org/apache/commons/collections/iterators/CollatingIterator/remove/," Removes the last returned element from the child iterator that produced\n it.\n \n @throws IllegalStateException if there is no last returned element, or if\n the last returned element has already been removed\n"
8823,method,org/apache/commons/collections/iterators/CollatingIterator/getIteratorIndex/," Returns the index of the iterator that returned the last element.\n \n @return the index of the iterator that returned the last element\n @throws IllegalStateException if there is no last returned element\n"
8824,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/," Constructs a new <code>CollatingIterator</code>. Natural sort order will\n be used, and child iterators will have to be manually added using the\n {@link #addIterator(Iterator)} method.\n"
8825,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/Comparator," Constructs a new <code>CollatingIterator</code> that will used the\n specified comparator for ordering. Child iterators will have to be\n manually added using the {@link #addIterator(Iterator)} method.\n \n @param comp the comparator to use to sort, or null to use natural sort\n order\n"
8826,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/Comparator;int," Constructs a new <code>CollatingIterator</code> that will used the\n specified comparator for ordering and have the specified initial\n capacity. Child iterators will have to be manually added using the\n {@link #addIterator(Iterator)} method.\n \n @param comp the comparator to use to sort, or null to use natural sort\n order\n @param initIterCapacity the initial capacity for the internal list of\n child iterators\n"
8827,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/Comparator;Iterator;Iterator," Constructs a new <code>CollatingIterator</code> that will use the\n specified comparator to provide ordered iteration over the two given\n iterators.\n \n @param comp the comparator to use to sort, or null to use natural sort\n order\n @param a the first child ordered iterator\n @param b the second child ordered iterator\n @throws NullPointerException if either iterator is null\n"
8828,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/Comparator;Iterator[]," Constructs a new <code>CollatingIterator</code> that will use the\n specified comparator to provide ordered iteration over the array of\n iterators.\n \n @param comp the comparator to use to sort, or null to use natural sort\n order\n @param iterators the array of iterators\n @throws NullPointerException if iterators array is or contains null\n"
8829,method,org/apache/commons/collections/iterators/CollatingIterator/CollatingIterator/Comparator;Collection," Constructs a new <code>CollatingIterator</code> that will use the\n specified comparator to provide ordered iteration over the collection of\n iterators.\n \n @param comp the comparator to use to sort, or null to use natural sort\n order\n @param iterators the collection of iterators\n @throws NullPointerException if the iterators collection is or contains\n null\n @throws ClassCastException if the iterators collection contains an\n element that's not an {@link Iterator}\n"
8831,method,org/apache/commons/collections/iterators/ReverseListIterator/hasNext/," Checks whether there is another element.\n\n @return true if there is another element\n"
8832,method,org/apache/commons/collections/iterators/ReverseListIterator/next/," Gets the next element.\n The next element is the previous in the list.\n\n @return the next element in the iterator\n"
8833,method,org/apache/commons/collections/iterators/ReverseListIterator/nextIndex/," Gets the index of the next element.\n\n @return the index of the next element in the iterator\n"
8834,method,org/apache/commons/collections/iterators/ReverseListIterator/hasPrevious/," Checks whether there is a previous element.\n\n @return true if there is a previous element\n"
8835,method,org/apache/commons/collections/iterators/ReverseListIterator/previous/," Gets the previous element.\n The next element is the previous in the list.\n\n @return the previous element in the iterator\n"
8836,method,org/apache/commons/collections/iterators/ReverseListIterator/previousIndex/," Gets the index of the previous element.\n\n @return the index of the previous element in the iterator\n"
8837,method,org/apache/commons/collections/iterators/ReverseListIterator/remove/," Removes the last returned element.\n\n @throws UnsupportedOperationException if the list is unmodifiable\n @throws IllegalStateException if there is no element to remove\n"
8838,method,org/apache/commons/collections/iterators/ReverseListIterator/set/Object," Replaces the last returned element.\n\n @param obj  the object to set\n @throws UnsupportedOperationException if the list is unmodifiable\n @throws IllegalStateException if the iterator is not in a valid state for set\n"
8840,method,org/apache/commons/collections/iterators/ReverseListIterator/reset/," Resets the iterator back to the start (which is the\n end of the list as this is a reversed iterator)\n"
8841,method,org/apache/commons/collections/iterators/ReverseListIterator/ReverseListIterator/List," Constructor that wraps a list.\n\n @param list  the list to create a reversed iterator for\n @throws NullPointerException if the list is null\n"
8842,class,org/apache/commons/collections/splitmap/SplitMapUtils," Utilities for working with "split maps:" objects that implement {@link Put}\n and/or {@link Get} but not {@link Map}.\n\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 899713 $ $Date: 2010-01-15 17:57:24 +0100 (Fri, 15 Jan 2010) $\n @see Get\n @see Put\n @author Matt Benson\n"
8846,class,org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator," {@link IterableGet} that uses a {@link Map}<K, V> for the {@link Get}<K, V>\n implementation.\n\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Matt Benson\n"
8847,method,org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator/decorated/," Gets the map being decorated.\n\n @return the decorated map\n"
8857,method,org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator/mapIterator/," Get a MapIterator over this Get.\n @return MapIterator<K, V>\n"
8861,method,org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator/AbstractIterableGetMapDecorator/Map," Create a new AbstractSplitMapDecorator.\n @param decorated the Map to decorate\n"
8862,field,org/apache/commons/collections/splitmap/AbstractIterableGetMapDecorator/map,"The map to decorate "
8874,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/size/," Returns the number of elements stored in the buffer.\n\n @return this buffer's size\n"
8875,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/isEmpty/," Returns true if this buffer is empty; false otherwise.\n\n @return true if this buffer is empty\n"
8876,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/add/Object," Adds the given element to this buffer.\n\n @param obj  the element to add\n @return true, always\n @throws NullPointerException  if the given element is null\n"
8877,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/get/," Returns the next object in the buffer.\n\n @return the next object in the buffer\n @throws BufferUnderflowException  if this buffer is empty\n"
8878,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/remove/," Removes the next object from the buffer\n\n @return the removed object\n @throws BufferUnderflowException  if this buffer is empty\n"
8879,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/iterator/," Returns an iterator over this buffer's elements.\n\n @return an iterator over this buffer's elements\n"
8880,method,org/apache/commons/collections/buffer/UnboundedFifoBuffer/UnboundedFifoBuffer/," Constructs an UnboundedFifoBuffer with the default number of elements.\n It is exactly the same as performing the following:\n\n <pre>\n   new UnboundedFifoBuffer(32);\n </pre>\n"
8882,field,org/apache/commons/collections/buffer/UnboundedFifoBuffer/buffer,"The array of objects in the buffer. "
8883,field,org/apache/commons/collections/buffer/UnboundedFifoBuffer/head,"The current head index. "
8884,field,org/apache/commons/collections/buffer/UnboundedFifoBuffer/tail,"The current tail index. "
8886,method,org/apache/commons/collections/buffer/PriorityBuffer/isAscendingOrder/," Checks whether the heap is ascending or descending order.\n \n @return true if ascending order (a min heap)\n"
8887,method,org/apache/commons/collections/buffer/PriorityBuffer/comparator/," Gets the comparator being used for this buffer, null is natural order.\n \n @return the comparator in use, null is natural order\n"
8888,method,org/apache/commons/collections/buffer/PriorityBuffer/size/," Returns the number of elements in this buffer.\n\n @return the number of elements in this buffer\n"
8889,method,org/apache/commons/collections/buffer/PriorityBuffer/clear/," Clears all elements from the buffer.\n"
8890,method,org/apache/commons/collections/buffer/PriorityBuffer/add/Object," Adds an element to the buffer.\n <p>\n The element added will be sorted according to the comparator in use.\n\n @param element  the element to be added\n @return true always\n"
8891,method,org/apache/commons/collections/buffer/PriorityBuffer/get/," Gets the next element to be removed without actually removing it (peek).\n\n @return the next element\n @throws BufferUnderflowException if the buffer is empty\n"
8892,method,org/apache/commons/collections/buffer/PriorityBuffer/remove/," Gets and removes the next element (pop).\n\n @return the next element\n @throws BufferUnderflowException if the buffer is empty\n"
8893,method,org/apache/commons/collections/buffer/PriorityBuffer/isAtCapacity/," Tests if the buffer is at capacity.\n\n @return <code>true</code> if buffer is full; <code>false</code> otherwise.\n"
8900,method,org/apache/commons/collections/buffer/PriorityBuffer/compare/Object;Object," Compares two objects using the comparator if specified, or the\n natural order otherwise.\n \n @param a  the first object\n @param b  the second object\n @return -ve if a less than b, 0 if they are equal, +ve if a greater than b\n"
8902,method,org/apache/commons/collections/buffer/PriorityBuffer/iterator/," Returns an iterator over this heap's elements.\n\n @return an iterator over this heap's elements\n"
8903,method,org/apache/commons/collections/buffer/PriorityBuffer/toString/," Returns a string representation of this heap.  The returned string\n is similar to those produced by standard JDK collections.\n\n @return a string representation of this heap\n"
8904,method,org/apache/commons/collections/buffer/PriorityBuffer/PriorityBuffer/," Constructs a new empty buffer that sorts in ascending order by the\n natural order of the objects added.\n"
8906,method,org/apache/commons/collections/buffer/PriorityBuffer/PriorityBuffer/boolean," Constructs a new empty buffer specifying the sort order and using the\n natural order of the objects added.\n\n @param ascendingOrder  if <code>true</code> the heap is created as a \n minimum heap; otherwise, the heap is created as a maximum heap\n"
8908,method,org/apache/commons/collections/buffer/PriorityBuffer/PriorityBuffer/int," Constructs a new empty buffer that sorts in ascending order by the\n natural order of the objects added, specifying an initial capacity.\n  \n @param capacity  the initial capacity for the buffer, greater than zero\n @throws IllegalArgumentException if <code>capacity</code> is &lt;= <code>0</code>\n"
8910,method,org/apache/commons/collections/buffer/PriorityBuffer/PriorityBuffer/int;boolean," Constructs a new empty buffer that specifying initial capacity and\n sort order, using the natural order of the objects added.\n\n @param capacity  the initial capacity for the buffer, greater than zero\n @param ascendingOrder if <code>true</code> the heap is created as a \n  minimum heap; otherwise, the heap is created as a maximum heap.\n @throws IllegalArgumentException if <code>capacity</code> is <code>&lt;= 0</code>\n"
8912,field,org/apache/commons/collections/buffer/PriorityBuffer/elements," The elements in this buffer.\n"
8913,field,org/apache/commons/collections/buffer/PriorityBuffer/size," The number of elements currently in this buffer.\n"
8914,field,org/apache/commons/collections/buffer/PriorityBuffer/ascendingOrder," If true, the first element as determined by the sort order will \n be returned.  If false, the last element as determined by the\n sort order will be returned.\n"
8915,field,org/apache/commons/collections/buffer/PriorityBuffer/comparator," The comparator used to order the elements\n"
8919,method,org/apache/commons/collections/buffer/TransformedBuffer/getBuffer/," Gets the decorated buffer.\n \n @return the decorated buffer\n"
8920,method,org/apache/commons/collections/buffer/TransformedBuffer/get/,""
8921,method,org/apache/commons/collections/buffer/TransformedBuffer/remove/,""
8923,class,org/apache/commons/collections/buffer/UnmodifiableBuffer," Decorates another <code>Buffer</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
8925,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/iterator/,""
8926,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/add/Object,""
8927,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/addAll/Collection,""
8928,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/clear/,""
8929,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/remove/Object,""
8930,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/removeAll/Collection,""
8931,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/retainAll/Collection,""
8932,method,org/apache/commons/collections/buffer/UnmodifiableBuffer/remove/,""
8934,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/size/," Returns the number of elements stored in the buffer.\n\n @return this buffer's size\n"
8935,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/isEmpty/," Returns true if this buffer is empty; false otherwise.\n\n @return true if this buffer is empty\n"
8936,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/isFull/," Returns true if this collection is full and no new elements can be added.\n\n @return <code>true</code> if the collection is full\n"
8937,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/maxSize/," Gets the maximum size of the collection (the bound).\n\n @return the maximum number of elements the collection can hold\n"
8938,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/clear/," Clears this buffer.\n"
8939,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/add/Object," Adds the given element to this buffer.\n\n @param element  the element to add\n @return true, always\n @throws NullPointerException  if the given element is null\n @throws BufferOverflowException  if this buffer is full\n"
8940,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/get/," Returns the least recently inserted element in this buffer.\n\n @return the least recently inserted element\n @throws BufferUnderflowException  if the buffer is empty\n"
8941,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/remove/," Removes the least recently inserted element from this buffer.\n\n @return the least recently inserted element\n @throws BufferUnderflowException  if the buffer is empty\n"
8942,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/iterator/," Returns an iterator over this buffer's elements.\n\n @return an iterator over this buffer's elements\n"
8943,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/BoundedFifoBuffer/," Constructs a new <code>BoundedFifoBuffer</code> big enough to hold\n 32 elements.\n"
8944,method,org/apache/commons/collections/buffer/BoundedFifoBuffer/BoundedFifoBuffer/int," Constructs a new <code>BoundedFifoBuffer</code> big enough to hold\n the specified number of elements.\n\n @param size  the maximum number of elements for this fifo\n @throws IllegalArgumentException  if the size is less than 1\n"
8948,method,org/apache/commons/collections/buffer/SynchronizedBuffer/decorated/," Gets the buffer being decorated.\n \n @return the decorated buffer\n"
8949,method,org/apache/commons/collections/buffer/SynchronizedBuffer/get/,""
8950,method,org/apache/commons/collections/buffer/SynchronizedBuffer/remove/,""
8956,method,org/apache/commons/collections/buffer/BoundedBuffer/remove/,""
8957,method,org/apache/commons/collections/buffer/BoundedBuffer/add/Object,""
8958,method,org/apache/commons/collections/buffer/BoundedBuffer/addAll/Collection,""
8959,method,org/apache/commons/collections/buffer/BoundedBuffer/iterator/,""
8960,method,org/apache/commons/collections/buffer/BoundedBuffer/isFull/,""
8961,method,org/apache/commons/collections/buffer/BoundedBuffer/maxSize/,""
8964,method,org/apache/commons/collections/buffer/CircularFifoBuffer/add/Object," If the buffer is full, the least recently added element is discarded so\n that a new element can be inserted.\n\n @param element the element to add\n @return true, always\n"
8965,method,org/apache/commons/collections/buffer/CircularFifoBuffer/CircularFifoBuffer/," Constructor that creates a buffer with the default size of 32.\n"
8966,method,org/apache/commons/collections/buffer/CircularFifoBuffer/CircularFifoBuffer/int," Constructor that creates a buffer with the specified size.\n\n @param size  the size of the buffer (cannot be changed)\n @throws IllegalArgumentException  if the size is less than 1\n"
8969,method,org/apache/commons/collections/buffer/AbstractBufferDecorator/decorated/," Gets the buffer being decorated.\n \n @return the decorated buffer\n"
8970,method,org/apache/commons/collections/buffer/AbstractBufferDecorator/get/,""
8971,method,org/apache/commons/collections/buffer/AbstractBufferDecorator/remove/,""
8976,method,org/apache/commons/collections/buffer/PredicatedBuffer/decorated/," Gets the buffer being decorated.\n \n @return the decorated buffer\n"
8977,method,org/apache/commons/collections/buffer/PredicatedBuffer/get/,""
8978,method,org/apache/commons/collections/buffer/PredicatedBuffer/remove/,""
8983,method,org/apache/commons/collections/buffer/BlockingBuffer/add/Object,""
8984,method,org/apache/commons/collections/buffer/BlockingBuffer/addAll/Collection,""
8985,method,org/apache/commons/collections/buffer/BlockingBuffer/get/," Gets the next value from the buffer, waiting until an object is\n added if the buffer is empty. This method uses the default timeout\n set in the constructor.\n\n @throws BufferUnderflowException if an interrupt is received\n"
8986,method,org/apache/commons/collections/buffer/BlockingBuffer/get/long," Gets the next value from the buffer, waiting until an object is\n added for up to the specified timeout value if the buffer is empty.\n\n @param timeout  the timeout value in milliseconds\n @throws BufferUnderflowException if an interrupt is received\n @throws BufferUnderflowException if the timeout expires\n @since Commons Collections 3.2\n"
8987,method,org/apache/commons/collections/buffer/BlockingBuffer/remove/," Removes the next value from the buffer, waiting until an object is\n added if the buffer is empty. This method uses the default timeout\n set in the constructor.\n\n @throws BufferUnderflowException if an interrupt is received\n"
8988,method,org/apache/commons/collections/buffer/BlockingBuffer/remove/long," Removes the next value from the buffer, waiting until an object is\n added for up to the specified timeout value if the buffer is empty.\n\n @param timeout  the timeout value in milliseconds\n @throws BufferUnderflowException if an interrupt is received\n @throws BufferUnderflowException if the timeout expires\n @since Commons Collections 3.2\n"
8992,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/createBidiMap/Map;Map;BidiMap," Creates a new instance of this object.\n\n @param normalMap  the normal direction map\n @param reverseMap  the reverse direction map\n @param inverseMap  the inverse BidiMap\n @return new bidi map\n"
8993,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/comparator/,""
8994,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/valueComparator/,""
8995,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/firstKey/,""
8996,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/lastKey/,""
8997,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/nextKey/Object,""
8998,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/previousKey/Object,""
8999,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/mapIterator/," Obtains an ordered map iterator.\n <p>\n This implementation copies the elements to an ArrayList in order to\n provide the forward/backward behaviour.\n\n @return a new ordered map iterator\n"
9000,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/inverseSortedBidiMap/,""
9001,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/inverseOrderedBidiMap/,""
9002,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/headMap/Object,""
9003,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/tailMap/Object,""
9004,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/subMap/Object;Object,""
9006,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/DualTreeBidiMap/," Creates an empty <code>DualTreeBidiMap</code>\n"
9007,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/DualTreeBidiMap/Map," Constructs a <code>DualTreeBidiMap</code> and copies the mappings from\n specified <code>Map</code>.\n\n @param map  the map whose mappings are to be placed in this map\n"
9008,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/DualTreeBidiMap/Comparator;Comparator," Constructs a <code>DualTreeBidiMap</code> using the specified Comparator.\n\n @param keyComparator  the Comparator\n"
9009,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/DualTreeBidiMap/Map;Map;BidiMap," Constructs a <code>DualTreeBidiMap</code> that decorates the specified maps.\n\n @param normalMap  the normal direction map\n @param reverseMap  the reverse direction map\n @param inverseBidiMap  the inverse BidiMap\n"
9010,field,org/apache/commons/collections/bidimap/DualTreeBidiMap/comparator,"The key comparator to use "
9011,field,org/apache/commons/collections/bidimap/DualTreeBidiMap/valueComparator,"The value comparator to use "
9012,class,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap," Internal sorted map view.\n"
9013,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/containsValue/Object,""
9014,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/clear/,""
9015,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/headMap/Object,""
9016,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/tailMap/Object,""
9017,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/subMap/Object;Object,""
9018,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/decorated/,""
9019,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/previousKey/Object,""
9020,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/nextKey/Object,""
9021,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/ViewMap/DualTreeBidiMap/ViewMap/DualTreeBidiMap;SortedMap," Constructor.\n @param bidi  the parent bidi map\n @param sm  the subMap sorted map\n"
9022,class,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator," Inner class MapIterator.\n"
9023,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/hasNext/,""
9024,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/next/,""
9025,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/hasPrevious/,""
9026,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/previous/,""
9027,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/remove/,""
9028,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/getKey/,""
9029,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/getValue/,""
9030,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/setValue/Object,""
9031,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/reset/,""
9032,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/toString/,""
9033,method,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/DualTreeBidiMap/BidiOrderedMapIterator/AbstractDualBidiMap," Constructor.\n @param parent  the parent map\n"
9034,field,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/parent,"The parent map "
9035,field,org/apache/commons/collections/bidimap/DualTreeBidiMap/BidiOrderedMapIterator/iterator,"The iterator being decorated "
9037,method,org/apache/commons/collections/bidimap/DualHashBidiMap/createBidiMap/Map;Map;BidiMap," Creates a new instance of this object.\n \n @param normalMap  the normal direction map\n @param reverseMap  the reverse direction map\n @param inverseBidiMap  the inverse BidiMap\n @return new bidi map\n"
9038,method,org/apache/commons/collections/bidimap/DualHashBidiMap/DualHashBidiMap/," Creates an empty <code>HashBidiMap</code>.\n"
9039,method,org/apache/commons/collections/bidimap/DualHashBidiMap/DualHashBidiMap/Map,"\n Constructs a <code>HashBidiMap</code> and copies the mappings from\n specified <code>Map</code>.  \n\n @param map  the map whose mappings are to be placed in this map\n"
9040,method,org/apache/commons/collections/bidimap/DualHashBidiMap/DualHashBidiMap/Map;Map;BidiMap,"\n Constructs a <code>HashBidiMap</code> that decorates the specified maps.\n\n @param normalMap  the normal direction map\n @param reverseMap  the reverse direction map\n @param inverseBidiMap  the inverse BidiMap\n"
9041,class,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap," Decorates another <code>OrderedBidiMap</code> to ensure it can't be altered.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9043,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/clear/,""
9044,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/put/Object;Object,""
9045,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/putAll/Map,""
9046,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/remove/Object,""
9047,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/entrySet/,""
9048,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/keySet/,""
9049,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/values/,""
9050,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/removeValue/Object,""
9051,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/inverseBidiMap/,""
9052,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/mapIterator/,""
9053,method,org/apache/commons/collections/bidimap/UnmodifiableOrderedBidiMap/inverseOrderedBidiMap/,""
9054,class,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap," Decorates another <code>SortedBidiMap</code> to ensure it can't be altered.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9056,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/clear/,""
9057,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/put/Object;Object,""
9058,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/putAll/Map,""
9059,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/remove/Object,""
9060,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/entrySet/,""
9061,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/keySet/,""
9062,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/values/,""
9063,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/removeValue/Object,""
9064,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/mapIterator/,""
9065,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/inverseBidiMap/,""
9066,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/subMap/Object;Object,""
9067,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/headMap/Object,""
9068,method,org/apache/commons/collections/bidimap/UnmodifiableSortedBidiMap/tailMap/Object,""
9070,method,org/apache/commons/collections/bidimap/TreeBidiMap/size/," Returns the number of key-value mappings in this map.\n\n @return the number of key-value mappings in this map\n"
9071,method,org/apache/commons/collections/bidimap/TreeBidiMap/isEmpty/," Checks whether the map is empty or not.\n\n @return true if the map is empty\n"
9078,method,org/apache/commons/collections/bidimap/TreeBidiMap/clear/," Removes all mappings from this map.\n"
9081,method,org/apache/commons/collections/bidimap/TreeBidiMap/firstKey/," Gets the first (lowest) key currently in this map.\n\n @return the first (lowest) key currently in this sorted map\n @throws NoSuchElementException if this map is empty\n"
9082,method,org/apache/commons/collections/bidimap/TreeBidiMap/lastKey/," Gets the last (highest) key currently in this map.\n\n @return the last (highest) key currently in this sorted map\n @throws NoSuchElementException if this map is empty\n"
9085,method,org/apache/commons/collections/bidimap/TreeBidiMap/keySet/," Returns a set view of the keys contained in this map in key order.\n <p>\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa. If the map is modified while an iteration over\n the set is in progress, the results of the iteration are undefined.\n <p>\n The set supports element removal, which removes the corresponding mapping\n from the map. It does not support the add or addAll operations.\n\n @return a set view of the keys contained in this map.\n"
9086,method,org/apache/commons/collections/bidimap/TreeBidiMap/values/," Returns a set view of the values contained in this map in key order.\n The returned object can be cast to a Set.\n <p>\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa. If the map is modified while an iteration over\n the set is in progress, the results of the iteration are undefined.\n <p>\n The set supports element removal, which removes the corresponding mapping\n from the map. It does not support the add or addAll operations.\n\n @return a set view of the values contained in this map.\n"
9087,method,org/apache/commons/collections/bidimap/TreeBidiMap/entrySet/," Returns a set view of the entries contained in this map in key order.\n For simple iteration through the map, the MapIterator is quicker.\n <p>\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa. If the map is modified while an iteration over\n the set is in progress, the results of the iteration are undefined.\n <p>\n The set supports element removal, which removes the corresponding mapping\n from the map. It does not support the add or addAll operations.\n The returned MapEntry objects do not support setValue.\n\n @return a set view of the values contained in this map.\n"
9089,method,org/apache/commons/collections/bidimap/TreeBidiMap/inverseBidiMap/," Gets the inverse map for comparison.\n\n @return the inverse map\n"
9090,method,org/apache/commons/collections/bidimap/TreeBidiMap/equals/Object," Compares for equals as per the API.\n\n @param obj  the object to compare to\n @return true if equal\n"
9091,method,org/apache/commons/collections/bidimap/TreeBidiMap/hashCode/," Gets the hash code value for this map as per the API.\n\n @return the hash code value for this map\n"
9092,method,org/apache/commons/collections/bidimap/TreeBidiMap/toString/," Returns a string version of this Map in standard format.\n\n @return a standard format string version of the map\n"
9093,method,org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap/," Constructs a new empty TreeBidiMap.\n"
9094,method,org/apache/commons/collections/bidimap/TreeBidiMap/TreeBidiMap/Map," Constructs a new TreeBidiMap by copying an existing Map.\n\n @param map  the map to copy\n @throws ClassCastException if the keys/values in the map are\n  not Comparable or are not mutually comparable\n @throws NullPointerException if any key or value in the map is null\n"
9095,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap," Abstract <code>BidiMap</code> implemented using two maps.\n <p>\n An implementation can be written simply by implementing the\n <code>createMap</code> method.\n\n @see DualHashBidiMap\n @see DualTreeBidiMap\n @since Commons Collections 3.0\n @version $Id: AbstractDualBidiMap.java 966315 2010-07-21 17:03:58Z sebb $\n\n @author Matthew Hawthorne\n @author Stephen Colebourne\n"
9097,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/get/Object,""
9098,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/size/,""
9099,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/isEmpty/,""
9100,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/containsKey/Object,""
9101,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/equals/Object,""
9102,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/hashCode/,""
9103,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/toString/,""
9104,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/put/Object;Object,""
9105,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/putAll/Map,""
9106,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/remove/Object,""
9107,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/clear/,""
9108,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/containsValue/Object,""
9110,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/getKey/Object,""
9111,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/removeValue/Object,""
9112,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/inverseBidiMap/,""
9113,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/keySet/," Gets a keySet view of the map.\n Changes made on the view are reflected in the map.\n The set supports remove and clear but not add.\n\n @return the keySet view\n"
9115,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/values/," Gets a values view of the map.\n Changes made on the view are reflected in the map.\n The set supports remove and clear but not add.\n\n @return the values view\n"
9119,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/AbstractDualBidiMap/," Creates an empty map, initialised by <code>createMap</code>.\n <p>\n This constructor remains in place for deserialization.\n All other usage is deprecated in favour of\n {@link #AbstractDualBidiMap(Map, Map)}.\n"
9122,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/normalMap," Normal delegate map.\n"
9123,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/reverseMap," Reverse delegate map.\n"
9124,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/inverseBidiMap," Inverse view of this map.\n"
9125,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/keySet," View of the keys.\n"
9126,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/values," View of the values.\n"
9127,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/entrySet," View of the entries.\n"
9128,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View," Inner class View.\n"
9129,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View/removeAll/Collection,""
9130,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View/retainAll/Collection,""
9131,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View/clear/,""
9132,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View/AbstractDualBidiMap/View/Collection;AbstractDualBidiMap," Constructs a new view of the BidiMap.\n\n @param coll  the collection view being decorated\n @param parent  the parent BidiMap\n"
9133,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/View/parent,"The parent map "
9134,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySet," Inner class KeySet.\n"
9135,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySet/iterator/,""
9136,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySet/contains/Object,""
9137,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySet/remove/Object,""
9138,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySet/AbstractDualBidiMap/KeySet/AbstractDualBidiMap," Constructs a new view of the BidiMap.\n\n @param parent  the parent BidiMap\n"
9139,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator," Inner class KeySetIterator.\n"
9140,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/next/,""
9141,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/remove/,""
9142,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/AbstractDualBidiMap/KeySetIterator/Iterator;AbstractDualBidiMap," Constructor.\n @param iterator  the iterator to decorate\n @param parent  the parent map\n"
9143,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/parent,"The parent map "
9144,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/lastKey,"The last returned key "
9145,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/KeySetIterator/canRemove,"Whether remove is allowed at present "
9146,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/Values," Inner class Values.\n"
9147,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/Values/iterator/,""
9148,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/Values/contains/Object,""
9149,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/Values/remove/Object,""
9150,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/Values/AbstractDualBidiMap/Values/AbstractDualBidiMap," Constructs a new view of the BidiMap.\n\n @param parent  the parent BidiMap\n"
9151,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator," Inner class ValuesIterator.\n"
9152,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/next/,""
9153,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/remove/,""
9154,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/AbstractDualBidiMap/ValuesIterator/Iterator;AbstractDualBidiMap," Constructor.\n @param iterator  the iterator to decorate\n @param parent  the parent map\n"
9155,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/parent,"The parent map "
9156,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/lastValue,"The last returned value "
9157,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/ValuesIterator/canRemove,"Whether remove is allowed at present "
9158,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySet," Inner class EntrySet.\n"
9159,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySet/iterator/,""
9160,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySet/remove/Object,""
9161,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySet/AbstractDualBidiMap/EntrySet/AbstractDualBidiMap," Constructs a new view of the BidiMap.\n\n @param parent  the parent BidiMap\n"
9162,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator," Inner class EntrySetIterator.\n"
9163,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/next/,""
9164,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/remove/,""
9165,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/AbstractDualBidiMap/EntrySetIterator/Iterator;AbstractDualBidiMap," Constructor.\n @param iterator  the iterator to decorate\n @param parent  the parent map\n"
9166,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/parent,"The parent map "
9167,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/last,"The last returned entry "
9168,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/EntrySetIterator/canRemove,"Whether remove is allowed at present "
9169,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/MapEntry," Inner class MapEntry.\n"
9170,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/MapEntry/setValue/Object,""
9171,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/MapEntry/AbstractDualBidiMap/MapEntry/Entry;AbstractDualBidiMap," Constructor.\n @param entry  the entry to decorate\n @param parent  the parent map\n"
9172,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/MapEntry/parent,"The parent map "
9173,class,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator," Inner class MapIterator.\n"
9174,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/hasNext/,""
9175,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/next/,""
9176,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/remove/,""
9177,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/getKey/,""
9178,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/getValue/,""
9179,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/setValue/Object,""
9180,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/reset/,""
9181,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/toString/,""
9182,method,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/AbstractDualBidiMap/BidiMapIterator/AbstractDualBidiMap," Constructor.\n @param parent  the parent map\n"
9183,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/parent,"The parent map "
9184,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/iterator,"The iterator being wrapped "
9185,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/last,"The last returned entry "
9186,field,org/apache/commons/collections/bidimap/AbstractDualBidiMap/BidiMapIterator/canRemove,"Whether remove is allowed at present "
9187,class,org/apache/commons/collections/bidimap/UnmodifiableBidiMap," Decorates another <code>BidiMap</code> to ensure it can't be altered.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9189,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/clear/,""
9190,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/put/Object;Object,""
9191,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/putAll/Map,""
9192,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/remove/Object,""
9193,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/entrySet/,""
9194,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/keySet/,""
9195,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/values/,""
9196,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/removeValue/Object,""
9197,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/mapIterator/,""
9198,method,org/apache/commons/collections/bidimap/UnmodifiableBidiMap/inverseBidiMap/,""
9200,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9201,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/mapIterator/,""
9202,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/firstKey/,""
9203,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/lastKey/,""
9204,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/nextKey/Object,""
9205,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/previousKey/Object,""
9206,method,org/apache/commons/collections/bidimap/AbstractOrderedBidiMapDecorator/inverseBidiMap/,""
9209,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9210,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/inverseBidiMap/,""
9211,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/comparator/,""
9212,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/valueComparator/,""
9213,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/subMap/Object;Object,""
9214,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/headMap/Object,""
9215,method,org/apache/commons/collections/bidimap/AbstractSortedBidiMapDecorator/tailMap/Object,""
9218,method,org/apache/commons/collections/bidimap/AbstractBidiMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9219,method,org/apache/commons/collections/bidimap/AbstractBidiMapDecorator/mapIterator/,""
9220,method,org/apache/commons/collections/bidimap/AbstractBidiMapDecorator/getKey/Object,""
9221,method,org/apache/commons/collections/bidimap/AbstractBidiMapDecorator/removeValue/Object,""
9222,method,org/apache/commons/collections/bidimap/AbstractBidiMapDecorator/inverseBidiMap/,""
9224,class,org/apache/commons/collections/keyvalue/TiedMapEntry," A {@link java.util.Map.Entry Map.Entry} tied to a map underneath.\n <p>\n This can be used to enable a map entry to make changes on the underlying\n map, however this will probably mess up any iterators.\n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9225,method,org/apache/commons/collections/keyvalue/TiedMapEntry/getKey/," Gets the key of this entry\n \n @return the key\n"
9226,method,org/apache/commons/collections/keyvalue/TiedMapEntry/getValue/," Gets the value of this entry direct from the map.\n \n @return the value\n"
9227,method,org/apache/commons/collections/keyvalue/TiedMapEntry/setValue/Object," Sets the value associated with the key direct onto the map.\n \n @param value  the new value\n @return the old value\n @throws IllegalArgumentException if the value is set to this map entry\n"
9228,method,org/apache/commons/collections/keyvalue/TiedMapEntry/equals/Object," Compares this <code>Map.Entry</code> with another <code>Map.Entry</code>.\n <p>\n Implemented per API documentation of {@link java.util.Map.Entry#equals(Object)}\n \n @param obj  the object to compare to\n @return true if equal key and value\n"
9229,method,org/apache/commons/collections/keyvalue/TiedMapEntry/hashCode/," Gets a hashCode compatible with the equals method.\n <p>\n Implemented per API documentation of {@link java.util.Map.Entry#hashCode()}\n \n @return a suitable hash code\n"
9230,method,org/apache/commons/collections/keyvalue/TiedMapEntry/toString/," Gets a string version of the entry.\n \n @return entry as a string\n"
9231,method,org/apache/commons/collections/keyvalue/TiedMapEntry/TiedMapEntry/Map;Object," Constructs a new entry with the given Map and key.\n\n @param map  the map\n @param key  the key\n"
9233,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/getMapEntry/," Gets the map being decorated.\n \n @return the decorated map\n"
9234,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/getKey/,""
9235,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/getValue/,""
9236,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/setValue/Object,""
9237,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/equals/Object,""
9238,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/hashCode/,""
9239,method,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/toString/,""
9241,field,org/apache/commons/collections/keyvalue/AbstractMapEntryDecorator/entry,"The <code>Map.Entry</code> to decorate "
9242,class,org/apache/commons/collections/keyvalue/MultiKey,"\n A <code>MultiKey</code> allows multiple map keys to be merged together.\n <p>\n The purpose of this class is to avoid the need to write code to handle\n maps of maps. An example might be the need to look up a file name by \n key and locale. The typical solution might be nested maps. This class\n can be used instead by creating an instance passing in the key and locale.\n <p>\n Example usage:\n <pre>\n // populate map with data mapping key+locale to localizedText\n Map map = new HashMap();\n MultiKey multiKey = new MultiKey(key, locale);\n map.put(multiKey, localizedText);\n\n // later retrieve the localized text\n MultiKey multiKey = new MultiKey(key, locale);\n String localizedText = (String) map.get(multiKey);\n </pre>\n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Howard Lewis Ship\n @author Stephen Colebourne\n"
9245,method,org/apache/commons/collections/keyvalue/MultiKey/size/," Gets the size of the list of keys.\n \n @return the size of the list of keys\n @since Commons Collections 3.1\n"
9256,method,org/apache/commons/collections/keyvalue/UnmodifiableMapEntry/setValue/Object," Throws UnsupportedOperationException.\n \n @param value  the new value\n @return the previous value\n @throws UnsupportedOperationException always\n"
9260,class,org/apache/commons/collections/keyvalue/AbstractMapEntry," Abstract Pair class to assist with creating correct\n {@link java.util.Map.Entry Map.Entry} implementations.\n\n @since Commons Collections 3.0\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author James Strachan\n @author Michael A. Smith\n @author Neil O'Toole\n @author Stephen Colebourne\n"
9262,method,org/apache/commons/collections/keyvalue/AbstractMapEntry/equals/Object," Compares this <code>Map.Entry</code> with another <code>Map.Entry</code>.\n <p>\n Implemented per API documentation of {@link java.util.Map.Entry#equals(Object)}\n \n @param obj  the object to compare to\n @return true if equal key and value\n"
9263,method,org/apache/commons/collections/keyvalue/AbstractMapEntry/hashCode/," Gets a hashCode compatible with the equals method.\n <p>\n Implemented per API documentation of {@link java.util.Map.Entry#hashCode()}\n \n @return a suitable hash code\n"
9265,class,org/apache/commons/collections/keyvalue/AbstractKeyValue," Abstract pair class to assist with creating <code>KeyValue</code>\n and {@link java.util.Map.Entry Map.Entry} implementations.\n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author James Strachan\n @author Michael A. Smith\n @author Neil O'Toole\n @author Stephen Colebourne\n"
9266,method,org/apache/commons/collections/keyvalue/AbstractKeyValue/getKey/," Gets the key from the pair.\n\n @return the key \n"
9267,method,org/apache/commons/collections/keyvalue/AbstractKeyValue/getValue/," Gets the value from the pair.\n\n @return the value\n"
9270,field,org/apache/commons/collections/keyvalue/AbstractKeyValue/key,"The key "
9271,field,org/apache/commons/collections/keyvalue/AbstractKeyValue/value,"The value "
9273,method,org/apache/commons/collections/keyvalue/DefaultKeyValue/setKey/Object," Sets the key.\n\n @param key  the new key\n @return the old key\n @throws IllegalArgumentException if key is this object\n"
9274,method,org/apache/commons/collections/keyvalue/DefaultKeyValue/setValue/Object,"\n Sets the value.\n\n @return the old value of the value\n @param value the new value\n @throws IllegalArgumentException if value is this object\n"
9275,method,org/apache/commons/collections/keyvalue/DefaultKeyValue/toMapEntry/," Returns a new <code>Map.Entry</code> object with key and value from this pair.\n \n @return a MapEntry instance\n"
9276,method,org/apache/commons/collections/keyvalue/DefaultKeyValue/equals/Object," Compares this <code>Map.Entry</code> with another <code>Map.Entry</code>.\n <p>\n Returns true if the compared object is also a <code>DefaultKeyValue</code>,\n and its key and value are equal to this object's key and value.\n \n @param obj  the object to compare to\n @return true if equal key and value\n"
9278,method,org/apache/commons/collections/keyvalue/DefaultKeyValue/DefaultKeyValue/," Constructs a new pair with a null key and null value.\n"
9287,method,org/apache/commons/collections/bag/TreeBag/add/Object,""
9288,method,org/apache/commons/collections/bag/TreeBag/first/,""
9289,method,org/apache/commons/collections/bag/TreeBag/last/,""
9290,method,org/apache/commons/collections/bag/TreeBag/comparator/,""
9292,method,org/apache/commons/collections/bag/TreeBag/TreeBag/," Constructs an empty <code>TreeBag</code>.\n"
9293,method,org/apache/commons/collections/bag/TreeBag/TreeBag/Comparator," Constructs an empty bag that maintains order on its unique representative\n members according to the given {@link Comparator}.\n \n @param comparator the comparator to use\n"
9294,method,org/apache/commons/collections/bag/TreeBag/TreeBag/Collection," Constructs a <code>TreeBag</code> containing all the members of the\n specified collection.\n \n @param coll the collection to copy into the bag\n"
9298,method,org/apache/commons/collections/bag/TransformedSortedBag/getSortedBag/," Gets the decorated bag.\n \n @return the decorated bag\n"
9299,method,org/apache/commons/collections/bag/TransformedSortedBag/first/,""
9300,method,org/apache/commons/collections/bag/TransformedSortedBag/last/,""
9301,method,org/apache/commons/collections/bag/TransformedSortedBag/comparator/,""
9303,class,org/apache/commons/collections/bag/UnmodifiableBag," Decorates another <code>Bag</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9305,method,org/apache/commons/collections/bag/UnmodifiableBag/iterator/,""
9306,method,org/apache/commons/collections/bag/UnmodifiableBag/add/Object,""
9307,method,org/apache/commons/collections/bag/UnmodifiableBag/addAll/Collection,""
9308,method,org/apache/commons/collections/bag/UnmodifiableBag/clear/,""
9309,method,org/apache/commons/collections/bag/UnmodifiableBag/remove/Object,""
9310,method,org/apache/commons/collections/bag/UnmodifiableBag/removeAll/Collection,""
9311,method,org/apache/commons/collections/bag/UnmodifiableBag/retainAll/Collection,""
9312,method,org/apache/commons/collections/bag/UnmodifiableBag/add/Object;int,""
9313,method,org/apache/commons/collections/bag/UnmodifiableBag/remove/Object;int,""
9314,method,org/apache/commons/collections/bag/UnmodifiableBag/uniqueSet/,""
9317,method,org/apache/commons/collections/bag/PredicatedSortedBag/decorated/," Gets the decorated sorted bag.\n \n @return the decorated bag\n"
9318,method,org/apache/commons/collections/bag/PredicatedSortedBag/first/,""
9319,method,org/apache/commons/collections/bag/PredicatedSortedBag/last/,""
9320,method,org/apache/commons/collections/bag/PredicatedSortedBag/comparator/,""
9324,method,org/apache/commons/collections/bag/SynchronizedSortedBag/getSortedBag/," Gets the bag being decorated.\n \n @return the decorated bag\n"
9325,method,org/apache/commons/collections/bag/SynchronizedSortedBag/first/,""
9326,method,org/apache/commons/collections/bag/SynchronizedSortedBag/last/,""
9327,method,org/apache/commons/collections/bag/SynchronizedSortedBag/comparator/,""
9330,class,org/apache/commons/collections/bag/UnmodifiableSortedBag," Decorates another <code>SortedBag</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9332,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/iterator/,""
9333,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/add/Object,""
9334,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/addAll/Collection,""
9335,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/clear/,""
9336,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/remove/Object,""
9337,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/removeAll/Collection,""
9338,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/retainAll/Collection,""
9339,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/add/Object;int,""
9340,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/remove/Object;int,""
9341,method,org/apache/commons/collections/bag/UnmodifiableSortedBag/uniqueSet/,""
9344,method,org/apache/commons/collections/bag/PredicatedBag/decorated/," Gets the decorated bag.\n \n @return the decorated bag\n"
9345,method,org/apache/commons/collections/bag/PredicatedBag/add/Object;int,""
9346,method,org/apache/commons/collections/bag/PredicatedBag/remove/Object;int,""
9347,method,org/apache/commons/collections/bag/PredicatedBag/uniqueSet/,""
9348,method,org/apache/commons/collections/bag/PredicatedBag/getCount/Object,""
9351,method,org/apache/commons/collections/bag/HashBag/HashBag/," Constructs an empty <code>HashBag</code>.\n"
9352,method,org/apache/commons/collections/bag/HashBag/HashBag/Collection," Constructs a bag containing all the members of the given collection.\n \n @param coll  a collection to copy into this bag\n"
9354,method,org/apache/commons/collections/bag/AbstractBagDecorator/decorated/," Gets the bag being decorated.\n \n @return the decorated bag\n"
9355,method,org/apache/commons/collections/bag/AbstractBagDecorator/getCount/Object,""
9356,method,org/apache/commons/collections/bag/AbstractBagDecorator/add/Object;int,""
9357,method,org/apache/commons/collections/bag/AbstractBagDecorator/remove/Object;int,""
9358,method,org/apache/commons/collections/bag/AbstractBagDecorator/uniqueSet/,""
9363,method,org/apache/commons/collections/bag/AbstractMapBag/size/," Returns the number of elements in this bag.\n \n @return current size of the bag\n"
9364,method,org/apache/commons/collections/bag/AbstractMapBag/isEmpty/," Returns true if the underlying map is empty.\n \n @return true if bag is empty\n"
9365,method,org/apache/commons/collections/bag/AbstractMapBag/getCount/Object," Returns the number of occurrence of the given element in this bag by\n looking up its count in the underlying map.\n \n @param object the object to search for\n @return the number of occurrences of the object, zero if not found\n"
9366,method,org/apache/commons/collections/bag/AbstractMapBag/contains/Object," Determines if the bag contains the given element by checking if the\n underlying map contains the element as a key.\n \n @param object the object to search for\n @return true if the bag contains the given element\n"
9367,method,org/apache/commons/collections/bag/AbstractMapBag/containsAll/Collection," Determines if the bag contains the given elements.\n \n @param coll the collection to check against\n @return <code>true</code> if the Bag contains all the collection\n"
9369,method,org/apache/commons/collections/bag/AbstractMapBag/add/Object," Adds a new element to the bag, incrementing its count in the underlying\n map.\n \n @param object the object to add\n @return <code>true</code> if the object was not already in the\n <code>uniqueSet</code>\n"
9370,method,org/apache/commons/collections/bag/AbstractMapBag/add/Object;int," Adds a new element to the bag, incrementing its count in the map.\n \n @param object the object to search for\n @param nCopies the number of copies to add\n @return <code>true</code> if the object was not already in the\n <code>uniqueSet</code>\n"
9372,method,org/apache/commons/collections/bag/AbstractMapBag/clear/," Clears the bag by clearing the underlying map.\n"
9373,method,org/apache/commons/collections/bag/AbstractMapBag/remove/Object," Removes all copies of the specified object from the bag.\n \n @param object the object to remove\n @return true if the bag changed\n"
9374,method,org/apache/commons/collections/bag/AbstractMapBag/remove/Object;int," Removes a specified number of copies of an object from the bag.\n \n @param object the object to remove\n @param nCopies the number of copies to remove\n @return true if the bag changed\n"
9375,method,org/apache/commons/collections/bag/AbstractMapBag/removeAll/Collection," Removes objects from the bag according to their count in the specified\n collection.\n \n @param coll the collection to use\n @return true if the bag changed\n"
9377,method,org/apache/commons/collections/bag/AbstractMapBag/toArray/," Returns an array of all of this bag's elements.\n \n @return an array of all of this bag's elements\n"
9378,method,org/apache/commons/collections/bag/AbstractMapBag/toArray/Object[]," Returns an array of all of this bag's elements.\n \n @param array the array to populate\n @return an array of all of this bag's elements\n"
9379,method,org/apache/commons/collections/bag/AbstractMapBag/uniqueSet/," Returns an unmodifiable view of the underlying map's key set.\n \n @return the set of unique elements in this bag\n"
9380,method,org/apache/commons/collections/bag/AbstractMapBag/doWriteObject/ObjectOutputStream," Write the map out using a custom routine.\n @param out the output stream\n @throws IOException\n"
9381,method,org/apache/commons/collections/bag/AbstractMapBag/doReadObject/Map;ObjectInputStream," Read the map in using a custom routine.\n @param map the map to use\n @param in the input stream\n @throws IOException\n @throws ClassNotFoundException\n"
9382,method,org/apache/commons/collections/bag/AbstractMapBag/equals/Object," Compares this Bag to another. This Bag equals another Bag if it contains\n the same number of occurrences of the same elements.\n \n @param object the Bag to compare to\n @return true if equal\n"
9383,method,org/apache/commons/collections/bag/AbstractMapBag/hashCode/," Gets a hash code for the Bag compatible with the definition of equals.\n The hash code is defined as the sum total of a hash code for each\n element. The per element hash code is defined as\n <code>(e==null ? 0 : e.hashCode()) ^ noOccurances)</code>. This hash code\n is compatible with the Set interface.\n \n @return the hash code of the Bag\n"
9387,class,org/apache/commons/collections/bag/AbstractMapBag/MutableInteger," Mutable integer class for storing the data.\n"
9388,method,org/apache/commons/collections/bag/AbstractMapBag/MutableInteger/equals/Object,""
9389,method,org/apache/commons/collections/bag/AbstractMapBag/MutableInteger/hashCode/,""
9390,field,org/apache/commons/collections/bag/AbstractMapBag/MutableInteger/value,"The value of this mutable. "
9394,method,org/apache/commons/collections/bag/TransformedBag/getBag/," Gets the decorated bag.\n \n @return the decorated bag\n"
9395,method,org/apache/commons/collections/bag/TransformedBag/getCount/Object,""
9396,method,org/apache/commons/collections/bag/TransformedBag/remove/Object;int,""
9397,method,org/apache/commons/collections/bag/TransformedBag/add/Object;int,""
9398,method,org/apache/commons/collections/bag/TransformedBag/uniqueSet/,""
9401,method,org/apache/commons/collections/bag/AbstractSortedBagDecorator/decorated/," Gets the bag being decorated.\n \n @return the decorated bag\n"
9402,method,org/apache/commons/collections/bag/AbstractSortedBagDecorator/first/,""
9403,method,org/apache/commons/collections/bag/AbstractSortedBagDecorator/last/,""
9404,method,org/apache/commons/collections/bag/AbstractSortedBagDecorator/comparator/,""
9409,method,org/apache/commons/collections/bag/SynchronizedBag/getBag/," Gets the bag being decorated.\n \n @return the decorated bag\n"
9410,method,org/apache/commons/collections/bag/SynchronizedBag/add/Object;int,""
9411,method,org/apache/commons/collections/bag/SynchronizedBag/remove/Object;int,""
9412,method,org/apache/commons/collections/bag/SynchronizedBag/uniqueSet/,""
9413,method,org/apache/commons/collections/bag/SynchronizedBag/getCount/Object,""
9419,method,org/apache/commons/collections/set/CompositeSet/addComposited/Collection;Collection," Add two sets to this composite\n\n @throws IllegalArgumentException if c or d does not implement java.util.Set\n"
9420,method,org/apache/commons/collections/set/CompositeSet/addComposited/Collection[]," Add an array of sets to this composite\n @param comps\n @throws IllegalArgumentException if any of the collections in comps do not implement Set\n"
9421,method,org/apache/commons/collections/set/CompositeSet/setMutator/CollectionMutator," This can receive either a <code>CompositeCollection.CollectionMutator</code>\n or a <code>CompositeSet.SetMutator</code>. If a\n <code>CompositeCollection.CollectionMutator</code> is used than conflicts when adding\n composited sets will throw IllegalArgumentException\n <p>\n"
9423,method,org/apache/commons/collections/set/CompositeSet/equals/Object," @see Set#equals\n"
9424,method,org/apache/commons/collections/set/CompositeSet/hashCode/," @see Set#hashCode\n"
9426,method,org/apache/commons/collections/set/CompositeSet/CompositeSet/," Create an empty CompositeSet\n"
9427,method,org/apache/commons/collections/set/CompositeSet/CompositeSet/Set," Create a CompositeSet with just <code>set</code> composited\n @param set The initial set in the composite\n"
9428,method,org/apache/commons/collections/set/CompositeSet/CompositeSet/Set[]," Create a composite set with sets as the initial set of composited Sets\n"
9434,method,org/apache/commons/collections/set/MapBackedSet/size/,""
9435,method,org/apache/commons/collections/set/MapBackedSet/isEmpty/,""
9436,method,org/apache/commons/collections/set/MapBackedSet/iterator/,""
9437,method,org/apache/commons/collections/set/MapBackedSet/contains/Object,""
9438,method,org/apache/commons/collections/set/MapBackedSet/containsAll/Collection,""
9439,method,org/apache/commons/collections/set/MapBackedSet/add/Object,""
9440,method,org/apache/commons/collections/set/MapBackedSet/addAll/Collection,""
9441,method,org/apache/commons/collections/set/MapBackedSet/remove/Object,""
9442,method,org/apache/commons/collections/set/MapBackedSet/removeAll/Collection,""
9443,method,org/apache/commons/collections/set/MapBackedSet/retainAll/Collection,""
9444,method,org/apache/commons/collections/set/MapBackedSet/clear/,""
9445,method,org/apache/commons/collections/set/MapBackedSet/toArray/,""
9446,method,org/apache/commons/collections/set/MapBackedSet/toArray/Object[],""
9447,method,org/apache/commons/collections/set/MapBackedSet/equals/Object,""
9448,method,org/apache/commons/collections/set/MapBackedSet/hashCode/,""
9449,field,org/apache/commons/collections/set/MapBackedSet/map,"The map being used as the backing store "
9450,field,org/apache/commons/collections/set/MapBackedSet/dummyValue,"The dummyValue to use "
9452,method,org/apache/commons/collections/set/AbstractSetDecorator/decorated/," Gets the set being decorated.\n \n @return the decorated set\n"
9455,class,org/apache/commons/collections/set/UnmodifiableSet," Decorates another <code>Set</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9457,method,org/apache/commons/collections/set/UnmodifiableSet/iterator/,""
9458,method,org/apache/commons/collections/set/UnmodifiableSet/add/Object,""
9459,method,org/apache/commons/collections/set/UnmodifiableSet/addAll/Collection,""
9460,method,org/apache/commons/collections/set/UnmodifiableSet/clear/,""
9461,method,org/apache/commons/collections/set/UnmodifiableSet/remove/Object,""
9462,method,org/apache/commons/collections/set/UnmodifiableSet/removeAll/Collection,""
9463,method,org/apache/commons/collections/set/UnmodifiableSet/retainAll/Collection,""
9465,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/decorated/," Gets the set being decorated.\n \n @return the decorated set\n"
9466,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/subSet/Object;Object,""
9467,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/headSet/Object,""
9468,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/tailSet/Object,""
9469,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/first/,""
9470,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/last/,""
9471,method,org/apache/commons/collections/set/AbstractSortedSetDecorator/comparator/,""
9476,method,org/apache/commons/collections/set/SynchronizedSet/getSet/," Gets the decorated set.\n \n @return the decorated set\n"
9481,method,org/apache/commons/collections/set/PredicatedSortedSet/decorated/," Gets the sorted set being decorated.\n \n @return the decorated sorted set\n"
9482,method,org/apache/commons/collections/set/PredicatedSortedSet/comparator/,""
9483,method,org/apache/commons/collections/set/PredicatedSortedSet/first/,""
9484,method,org/apache/commons/collections/set/PredicatedSortedSet/last/,""
9485,method,org/apache/commons/collections/set/PredicatedSortedSet/subSet/Object;Object,""
9486,method,org/apache/commons/collections/set/PredicatedSortedSet/headSet/Object,""
9487,method,org/apache/commons/collections/set/PredicatedSortedSet/tailSet/Object,""
9491,method,org/apache/commons/collections/set/SynchronizedSortedSet/getSortedSet/," Gets the decorated set.\n\n @return the decorated set\n"
9492,method,org/apache/commons/collections/set/SynchronizedSortedSet/subSet/Object;Object,""
9493,method,org/apache/commons/collections/set/SynchronizedSortedSet/headSet/Object,""
9494,method,org/apache/commons/collections/set/SynchronizedSortedSet/tailSet/Object,""
9495,method,org/apache/commons/collections/set/SynchronizedSortedSet/first/,""
9496,method,org/apache/commons/collections/set/SynchronizedSortedSet/last/,""
9497,method,org/apache/commons/collections/set/SynchronizedSortedSet/comparator/,""
9502,method,org/apache/commons/collections/set/PredicatedSet/decorated/," Gets the set being decorated.\n \n @return the decorated set\n"
9505,method,org/apache/commons/collections/set/AbstractSerializableSetDecorator/AbstractSerializableSetDecorator/Set," Constructor.\n"
9510,class,org/apache/commons/collections/set/UnmodifiableSortedSet," Decorates another <code>SortedSet</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9512,method,org/apache/commons/collections/set/UnmodifiableSortedSet/iterator/,""
9513,method,org/apache/commons/collections/set/UnmodifiableSortedSet/add/Object,""
9514,method,org/apache/commons/collections/set/UnmodifiableSortedSet/addAll/Collection,""
9515,method,org/apache/commons/collections/set/UnmodifiableSortedSet/clear/,""
9516,method,org/apache/commons/collections/set/UnmodifiableSortedSet/remove/Object,""
9517,method,org/apache/commons/collections/set/UnmodifiableSortedSet/removeAll/Collection,""
9518,method,org/apache/commons/collections/set/UnmodifiableSortedSet/retainAll/Collection,""
9519,method,org/apache/commons/collections/set/UnmodifiableSortedSet/subSet/Object;Object,""
9520,method,org/apache/commons/collections/set/UnmodifiableSortedSet/headSet/Object,""
9521,method,org/apache/commons/collections/set/UnmodifiableSortedSet/tailSet/Object,""
9526,method,org/apache/commons/collections/set/ListOrderedSet/asList/," Gets an unmodifiable view of the order of the Set.\n\n @return an unmodifiable list view\n"
9527,method,org/apache/commons/collections/set/ListOrderedSet/clear/,""
9528,method,org/apache/commons/collections/set/ListOrderedSet/iterator/,""
9529,method,org/apache/commons/collections/set/ListOrderedSet/add/Object,""
9530,method,org/apache/commons/collections/set/ListOrderedSet/addAll/Collection,""
9531,method,org/apache/commons/collections/set/ListOrderedSet/remove/Object,""
9532,method,org/apache/commons/collections/set/ListOrderedSet/removeAll/Collection,""
9533,method,org/apache/commons/collections/set/ListOrderedSet/retainAll/Collection,""
9534,method,org/apache/commons/collections/set/ListOrderedSet/toArray/,""
9535,method,org/apache/commons/collections/set/ListOrderedSet/toArray/Object[],""
9536,method,org/apache/commons/collections/set/ListOrderedSet/get/int,""
9537,method,org/apache/commons/collections/set/ListOrderedSet/indexOf/Object,""
9538,method,org/apache/commons/collections/set/ListOrderedSet/add/int;Object,""
9539,method,org/apache/commons/collections/set/ListOrderedSet/addAll/int;Collection,""
9540,method,org/apache/commons/collections/set/ListOrderedSet/remove/int,""
9541,method,org/apache/commons/collections/set/ListOrderedSet/toString/," Uses the underlying List's toString so that order is achieved.\n This means that the decorated Set's toString is not used, so\n any custom toStrings will be ignored.\n"
9542,method,org/apache/commons/collections/set/ListOrderedSet/ListOrderedSet/," Constructs a new empty <code>ListOrderedSet</code> using\n a <code>HashSet</code> and an <code>ArrayList</code> internally.\n\n @since Commons Collections 3.1\n"
9545,field,org/apache/commons/collections/set/ListOrderedSet/setOrder,"Internal list to hold the sequence of objects "
9549,method,org/apache/commons/collections/set/TransformedSortedSet/getSortedSet/," Gets the decorated set.\n \n @return the decorated set\n"
9550,method,org/apache/commons/collections/set/TransformedSortedSet/first/,""
9551,method,org/apache/commons/collections/set/TransformedSortedSet/last/,""
9552,method,org/apache/commons/collections/set/TransformedSortedSet/comparator/,""
9553,method,org/apache/commons/collections/set/TransformedSortedSet/subSet/Object;Object,""
9554,method,org/apache/commons/collections/set/TransformedSortedSet/headSet/Object,""
9555,method,org/apache/commons/collections/set/TransformedSortedSet/tailSet/Object,""
9558,method,org/apache/commons/collections/map/HashedMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
9559,method,org/apache/commons/collections/map/HashedMap/HashedMap/," Constructs a new empty map with default size and load factor.\n"
9560,method,org/apache/commons/collections/map/HashedMap/HashedMap/int," Constructs a new, empty map with the specified initial capacity.\n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
9561,method,org/apache/commons/collections/map/HashedMap/HashedMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
9562,method,org/apache/commons/collections/map/HashedMap/HashedMap/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
9564,method,org/apache/commons/collections/map/CompositeMap/setMutator/MapMutator," Specify the MapMutator to be used by mutation operations.\n\n @param mutator  the MapMutator to be used for mutation delegation\n"
9566,method,org/apache/commons/collections/map/CompositeMap/removeComposited/Map," Remove a Map from the composite.\n\n @param map  the Map to be removed from the composite\n @return The removed Map or <code>null</code> if map is not in the composite\n"
9570,method,org/apache/commons/collections/map/CompositeMap/entrySet/," Returns a set view of the mappings contained in this map.  Each element\n in the returned set is a <code>Map.Entry</code>.  The set is backed by the\n map, so changes to the map are reflected in the set, and vice-versa.\n If the map is modified while an iteration over the set is in progress,\n the results of the iteration are undefined.  The set supports element\n removal, which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not support\n the <tt>add</tt> or <tt>addAll</tt> operations.\n <p>\n This implementation returns a <code>CompositeSet</code> which\n composites the entry sets from all of the composited maps.\n\n @see CompositeSet\n @return a set view of the mappings contained in this map.\n"
9572,method,org/apache/commons/collections/map/CompositeMap/isEmpty/," Returns <tt>true</tt> if this map contains no key-value mappings.\n\n @return <tt>true</tt> if this map contains no key-value mappings.\n"
9573,method,org/apache/commons/collections/map/CompositeMap/keySet/," Returns a set view of the keys contained in this map.  The set is\n backed by the map, so changes to the map are reflected in the set, and\n vice-versa.  If the map is modified while an iteration over the set is\n in progress, the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding mapping from\n the map, via the <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt> <tt>retainAll</tt>, and <tt>clear</tt> operations.\n It does not support the add or <tt>addAll</tt> operations.\n <p>\n This implementation returns a <code>CompositeSet</code> which\n composites the key sets from all of the composited maps.\n\n @return a set view of the keys contained in this map.\n"
9577,method,org/apache/commons/collections/map/CompositeMap/size/," Returns the number of key-value mappings in this map.  If the\n map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of key-value mappings in this map.\n"
9578,method,org/apache/commons/collections/map/CompositeMap/values/," Returns a collection view of the values contained in this map.  The\n collection is backed by the map, so changes to the map are reflected in\n the collection, and vice-versa.  If the map is modified while an\n iteration over the collection is in progress, the results of the\n iteration are undefined.  The collection supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Collection.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt> and <tt>clear</tt> operations.\n It does not support the add or <tt>addAll</tt> operations.\n\n @return a collection view of the values contained in this map.\n"
9579,method,org/apache/commons/collections/map/CompositeMap/equals/Object," Checks if this Map equals another as per the Map specification.\n\n @param obj  the object to compare to\n @return true if the maps are equal\n"
9580,method,org/apache/commons/collections/map/CompositeMap/hashCode/," Gets a hash code for the Map as per the Map specification.\n"
9581,method,org/apache/commons/collections/map/CompositeMap/CompositeMap/," Create a new, empty, CompositeMap.\n"
9582,method,org/apache/commons/collections/map/CompositeMap/CompositeMap/Map;Map," Create a new CompositeMap with two composited Map instances.\n\n @param one  the first Map to be composited\n @param two  the second Map to be composited\n @throws IllegalArgumentException if there is a key collision\n"
9583,method,org/apache/commons/collections/map/CompositeMap/CompositeMap/Map;Map;MapMutator," Create a new CompositeMap with two composited Map instances.\n\n @param one  the first Map to be composited\n @param two  the second Map to be composited\n @param mutator  MapMutator to be used for mutation operations\n"
9584,method,org/apache/commons/collections/map/CompositeMap/CompositeMap/Map[]," Create a new CompositeMap which composites all of the Map instances in the\n argument. It copies the argument array, it does not use it directly.\n\n @param composite  the Maps to be composited\n @throws IllegalArgumentException if there is a key collision\n"
9585,method,org/apache/commons/collections/map/CompositeMap/CompositeMap/Map[];MapMutator," Create a new CompositeMap which composites all of the Map instances in the\n argument. It copies the argument array, it does not use it directly.\n\n @param composite  Maps to be composited\n @param mutator  MapMutator to be used for mutation operations\n"
9592,method,org/apache/commons/collections/map/CaseInsensitiveMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
9593,method,org/apache/commons/collections/map/CaseInsensitiveMap/CaseInsensitiveMap/," Constructs a new empty map with default size and load factor.\n"
9594,method,org/apache/commons/collections/map/CaseInsensitiveMap/CaseInsensitiveMap/int," Constructs a new, empty map with the specified initial capacity. \n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
9595,method,org/apache/commons/collections/map/CaseInsensitiveMap/CaseInsensitiveMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
9597,class,org/apache/commons/collections/map/UnmodifiableMap," Decorates another <code>Map</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9599,method,org/apache/commons/collections/map/UnmodifiableMap/clear/,""
9600,method,org/apache/commons/collections/map/UnmodifiableMap/put/Object;Object,""
9601,method,org/apache/commons/collections/map/UnmodifiableMap/putAll/Map,""
9602,method,org/apache/commons/collections/map/UnmodifiableMap/remove/Object,""
9603,method,org/apache/commons/collections/map/UnmodifiableMap/mapIterator/,""
9604,method,org/apache/commons/collections/map/UnmodifiableMap/entrySet/,""
9605,method,org/apache/commons/collections/map/UnmodifiableMap/keySet/,""
9606,method,org/apache/commons/collections/map/UnmodifiableMap/values/,""
9607,class,org/apache/commons/collections/map/UnmodifiableEntrySet," Decorates a map entry <code>Set</code> to ensure it can't be altered.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9609,method,org/apache/commons/collections/map/UnmodifiableEntrySet/add/Entry,""
9610,method,org/apache/commons/collections/map/UnmodifiableEntrySet/addAll/Collection,""
9611,method,org/apache/commons/collections/map/UnmodifiableEntrySet/clear/,""
9612,method,org/apache/commons/collections/map/UnmodifiableEntrySet/remove/Object,""
9613,method,org/apache/commons/collections/map/UnmodifiableEntrySet/removeAll/Collection,""
9614,method,org/apache/commons/collections/map/UnmodifiableEntrySet/retainAll/Collection,""
9615,method,org/apache/commons/collections/map/UnmodifiableEntrySet/iterator/,""
9616,method,org/apache/commons/collections/map/UnmodifiableEntrySet/toArray/,""
9617,method,org/apache/commons/collections/map/UnmodifiableEntrySet/toArray/Object[],""
9620,method,org/apache/commons/collections/map/FixedSizeMap/put/Object;Object,""
9621,method,org/apache/commons/collections/map/FixedSizeMap/putAll/Map,""
9622,method,org/apache/commons/collections/map/FixedSizeMap/clear/,""
9623,method,org/apache/commons/collections/map/FixedSizeMap/remove/Object,""
9624,method,org/apache/commons/collections/map/FixedSizeMap/entrySet/,""
9625,method,org/apache/commons/collections/map/FixedSizeMap/keySet/,""
9626,method,org/apache/commons/collections/map/FixedSizeMap/values/,""
9627,method,org/apache/commons/collections/map/FixedSizeMap/isFull/,""
9628,method,org/apache/commons/collections/map/FixedSizeMap/maxSize/,""
9632,method,org/apache/commons/collections/map/MultiKeyMap/get/Object;Object," Gets the value mapped to the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @return the mapped value, null if no match\n"
9633,method,org/apache/commons/collections/map/MultiKeyMap/containsKey/Object;Object," Checks whether the map contains the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @return true if the map contains the key\n"
9634,method,org/apache/commons/collections/map/MultiKeyMap/put/Object;Object;Object," Stores the value against the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param value  the value to store\n @return the value previously mapped to this combined key, null if none\n"
9635,method,org/apache/commons/collections/map/MultiKeyMap/remove/Object;Object," Removes the specified multi-key from this map.\n \n @param key1  the first key\n @param key2  the second key\n @return the value mapped to the removed key, null if key not in map\n"
9636,method,org/apache/commons/collections/map/MultiKeyMap/hash/Object;Object," Gets the hash code for the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @return the hash code\n"
9637,method,org/apache/commons/collections/map/MultiKeyMap/isEqualKey/HashEntry;Object;Object," Is the key equal to the combined key.\n \n @param entry  the entry to compare to\n @param key1  the first key\n @param key2  the second key\n @return true if the key matches\n"
9638,method,org/apache/commons/collections/map/MultiKeyMap/get/Object;Object;Object," Gets the value mapped to the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return the mapped value, null if no match\n"
9639,method,org/apache/commons/collections/map/MultiKeyMap/containsKey/Object;Object;Object," Checks whether the map contains the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return true if the map contains the key\n"
9640,method,org/apache/commons/collections/map/MultiKeyMap/put/Object;Object;Object;Object," Stores the value against the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param value  the value to store\n @return the value previously mapped to this combined key, null if none\n"
9641,method,org/apache/commons/collections/map/MultiKeyMap/remove/Object;Object;Object," Removes the specified multi-key from this map.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return the value mapped to the removed key, null if key not in map\n"
9642,method,org/apache/commons/collections/map/MultiKeyMap/hash/Object;Object;Object," Gets the hash code for the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return the hash code\n"
9643,method,org/apache/commons/collections/map/MultiKeyMap/isEqualKey/HashEntry;Object;Object;Object," Is the key equal to the combined key.\n \n @param entry  the entry to compare to\n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return true if the key matches\n"
9644,method,org/apache/commons/collections/map/MultiKeyMap/get/Object;Object;Object;Object," Gets the value mapped to the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return the mapped value, null if no match\n"
9645,method,org/apache/commons/collections/map/MultiKeyMap/containsKey/Object;Object;Object;Object," Checks whether the map contains the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return true if the map contains the key\n"
9646,method,org/apache/commons/collections/map/MultiKeyMap/put/Object;Object;Object;Object;Object," Stores the value against the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param value  the value to store\n @return the value previously mapped to this combined key, null if none\n"
9647,method,org/apache/commons/collections/map/MultiKeyMap/remove/Object;Object;Object;Object," Removes the specified multi-key from this map.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return the value mapped to the removed key, null if key not in map\n"
9648,method,org/apache/commons/collections/map/MultiKeyMap/hash/Object;Object;Object;Object," Gets the hash code for the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return the hash code\n"
9649,method,org/apache/commons/collections/map/MultiKeyMap/isEqualKey/HashEntry;Object;Object;Object;Object," Is the key equal to the combined key.\n \n @param entry  the entry to compare to\n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return true if the key matches\n"
9650,method,org/apache/commons/collections/map/MultiKeyMap/get/Object;Object;Object;Object;Object," Gets the value mapped to the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @return the mapped value, null if no match\n"
9651,method,org/apache/commons/collections/map/MultiKeyMap/containsKey/Object;Object;Object;Object;Object," Checks whether the map contains the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @return true if the map contains the key\n"
9652,method,org/apache/commons/collections/map/MultiKeyMap/put/Object;Object;Object;Object;Object;Object," Stores the value against the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @param value  the value to store\n @return the value previously mapped to this combined key, null if none\n"
9653,method,org/apache/commons/collections/map/MultiKeyMap/remove/Object;Object;Object;Object;Object," Removes the specified multi-key from this map.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @return the value mapped to the removed key, null if key not in map\n"
9654,method,org/apache/commons/collections/map/MultiKeyMap/hash/Object;Object;Object;Object;Object," Gets the hash code for the specified multi-key.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @return the hash code\n"
9655,method,org/apache/commons/collections/map/MultiKeyMap/isEqualKey/HashEntry;Object;Object;Object;Object;Object," Is the key equal to the combined key.\n \n @param entry  the entry to compare to\n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @param key5  the fifth key\n @return true if the key matches\n"
9656,method,org/apache/commons/collections/map/MultiKeyMap/removeAll/Object," Removes all mappings where the first key is that specified.\n <p>\n This method removes all the mappings where the <code>MultiKey</code>\n has one or more keys, and the first matches that specified.\n \n @param key1  the first key\n @return true if any elements were removed\n"
9657,method,org/apache/commons/collections/map/MultiKeyMap/removeAll/Object;Object," Removes all mappings where the first two keys are those specified.\n <p>\n This method removes all the mappings where the <code>MultiKey</code>\n has two or more keys, and the first two match those specified.\n \n @param key1  the first key\n @param key2  the second key\n @return true if any elements were removed\n"
9658,method,org/apache/commons/collections/map/MultiKeyMap/removeAll/Object;Object;Object," Removes all mappings where the first three keys are those specified.\n <p>\n This method removes all the mappings where the <code>MultiKey</code>\n has three or more keys, and the first three match those specified.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @return true if any elements were removed\n"
9659,method,org/apache/commons/collections/map/MultiKeyMap/removeAll/Object;Object;Object;Object," Removes all mappings where the first four keys are those specified.\n <p>\n This method removes all the mappings where the <code>MultiKey</code>\n has four or more keys, and the first four match those specified.\n \n @param key1  the first key\n @param key2  the second key\n @param key3  the third key\n @param key4  the fourth key\n @return true if any elements were removed\n"
9660,method,org/apache/commons/collections/map/MultiKeyMap/checkKey/MultiKey," Check to ensure that input keys are valid MultiKey objects.\n \n @param key  the key to check\n"
9661,method,org/apache/commons/collections/map/MultiKeyMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
9664,method,org/apache/commons/collections/map/MultiKeyMap/mapIterator/,""
9666,method,org/apache/commons/collections/map/MultiKeyMap/MultiKeyMap/," Constructs a new MultiKeyMap that decorates a <code>HashedMap</code>.\n"
9668,field,org/apache/commons/collections/map/MultiKeyMap/map,"The decorated map "
9670,method,org/apache/commons/collections/map/MultiValueMap/decorate/Map," Creates a map which wraps the given map and\n maps keys to ArrayLists.\n\n @param map  the map to wrap\n"
9671,method,org/apache/commons/collections/map/MultiValueMap/decorate/Map;Class," Creates a map which decorates the given <code>map</code> and\n maps keys to collections of type <code>collectionClass</code>.\n\n @param map  the map to wrap\n @param collectionClass  the type of the collection class\n"
9673,method,org/apache/commons/collections/map/MultiValueMap/clear/," Clear the map.\n"
9674,method,org/apache/commons/collections/map/MultiValueMap/remove/Object;Object," Removes a specific value from map.\n <p>\n The item is removed from the collection mapped to the specified key.\n Other values attached to that key are unaffected.\n <p>\n If the last value for a key is removed, <code>null</code> will be returned\n from a subsequant <code>get(key)</code>.\n\n @param key  the key to remove from\n @param value the value to remove\n @return the value removed (which was passed in), null if nothing removed\n"
9675,method,org/apache/commons/collections/map/MultiValueMap/containsValue/Object," Checks whether the map contains the value specified.\n <p>\n This checks all collections against all keys for the value, and thus could be slow.\n\n @param value  the value to search for\n @return true if the map contains the value\n"
9676,method,org/apache/commons/collections/map/MultiValueMap/put/Object;Object," Adds the value to the collection associated with the specified key.\n <p>\n Unlike a normal <code>Map</code> the previous value is not replaced.\n Instead the new value is added to the collection stored against the key.\n\n @param key  the key to store against\n @param value  the value to add to the collection at the key\n @return the value added if the map changed and null if the map did not change\n"
9678,method,org/apache/commons/collections/map/MultiValueMap/values/," Gets a collection containing all the values in the map.\n <p>\n This returns a collection containing the combination of values from all keys.\n\n @return a collection view of the values contained in this map\n"
9679,method,org/apache/commons/collections/map/MultiValueMap/containsValue/Object;Object," Checks whether the collection at the specified key contains the value.\n\n @param value  the value to search for\n @return true if the map contains the value\n"
9680,method,org/apache/commons/collections/map/MultiValueMap/getCollection/Object," Gets the collection mapped to the specified key.\n This method is a convenience method to typecast the result of <code>get(key)</code>.\n\n @param key  the key to retrieve\n @return the collection mapped to the key, null if no mapping\n"
9681,method,org/apache/commons/collections/map/MultiValueMap/size/Object," Gets the size of the collection mapped to the specified key.\n\n @param key  the key to get size for\n @return the size of the collection at the key, zero if key not in map\n"
9682,method,org/apache/commons/collections/map/MultiValueMap/putAll/Object;Collection," Adds a collection of values to the collection associated with\n the specified key.\n\n @param key  the key to store against\n @param values  the values to add to the collection at the key, null ignored\n @return true if this map changed\n"
9683,method,org/apache/commons/collections/map/MultiValueMap/iterator/Object," Gets an iterator for the collection mapped to the specified key.\n\n @param key  the key to get an iterator for\n @return the iterator of the collection at the key, empty iterator if key not in map\n"
9684,method,org/apache/commons/collections/map/MultiValueMap/totalSize/," Gets the total size of the map by counting all the values.\n\n @return the total size of the map counting all values\n"
9686,method,org/apache/commons/collections/map/MultiValueMap/MultiValueMap/," Creates a MultiValueMap based on a <code>HashMap</code> and\n storing the multiple values in an <code>ArrayList</code>.\n"
9690,method,org/apache/commons/collections/map/FixedSizeSortedMap/getSortedMap/," Gets the map being decorated.\n \n @return the decorated map\n"
9691,method,org/apache/commons/collections/map/FixedSizeSortedMap/put/Object;Object,""
9692,method,org/apache/commons/collections/map/FixedSizeSortedMap/putAll/Map,""
9693,method,org/apache/commons/collections/map/FixedSizeSortedMap/clear/,""
9694,method,org/apache/commons/collections/map/FixedSizeSortedMap/remove/Object,""
9695,method,org/apache/commons/collections/map/FixedSizeSortedMap/entrySet/,""
9696,method,org/apache/commons/collections/map/FixedSizeSortedMap/keySet/,""
9697,method,org/apache/commons/collections/map/FixedSizeSortedMap/values/,""
9698,method,org/apache/commons/collections/map/FixedSizeSortedMap/subMap/Object;Object,""
9699,method,org/apache/commons/collections/map/FixedSizeSortedMap/headMap/Object,""
9700,method,org/apache/commons/collections/map/FixedSizeSortedMap/tailMap/Object,""
9701,method,org/apache/commons/collections/map/FixedSizeSortedMap/isFull/,""
9702,method,org/apache/commons/collections/map/FixedSizeSortedMap/maxSize/,""
9704,class,org/apache/commons/collections/map/AbstractIterableMap," Provide a basic {@link IterableMap} implementation.\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 815070 $ $Date: 2009-09-15 07:55:51 +0200 (Tue, 15 Sep 2009) $\n\n @author Matt Benson\n"
9706,method,org/apache/commons/collections/map/AbstractIterableMap/AbstractIterableMap/,""
9709,method,org/apache/commons/collections/map/PredicatedSortedMap/getSortedMap/," Gets the map being decorated.\n \n @return the decorated map\n"
9710,method,org/apache/commons/collections/map/PredicatedSortedMap/firstKey/,""
9711,method,org/apache/commons/collections/map/PredicatedSortedMap/lastKey/,""
9712,method,org/apache/commons/collections/map/PredicatedSortedMap/comparator/,""
9713,method,org/apache/commons/collections/map/PredicatedSortedMap/subMap/Object;Object,""
9714,method,org/apache/commons/collections/map/PredicatedSortedMap/headMap/Object,""
9715,method,org/apache/commons/collections/map/PredicatedSortedMap/tailMap/Object,""
9722,method,org/apache/commons/collections/map/LazySortedMap/getSortedMap/," Gets the map being decorated.\n \n @return the decorated map\n"
9723,method,org/apache/commons/collections/map/LazySortedMap/firstKey/,""
9724,method,org/apache/commons/collections/map/LazySortedMap/lastKey/,""
9725,method,org/apache/commons/collections/map/LazySortedMap/comparator/,""
9726,method,org/apache/commons/collections/map/LazySortedMap/subMap/Object;Object,""
9727,method,org/apache/commons/collections/map/LazySortedMap/headMap/Object,""
9728,method,org/apache/commons/collections/map/LazySortedMap/tailMap/Object,""
9732,method,org/apache/commons/collections/map/LinkedMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
9733,method,org/apache/commons/collections/map/LinkedMap/get/int," Gets the key at the specified index.\n \n @param index  the index to retrieve\n @return the key at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
9734,method,org/apache/commons/collections/map/LinkedMap/getValue/int," Gets the value at the specified index.\n \n @param index  the index to retrieve\n @return the value at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
9735,method,org/apache/commons/collections/map/LinkedMap/indexOf/Object," Gets the index of the specified key.\n \n @param key  the key to find the index of\n @return the index, or -1 if not found\n"
9736,method,org/apache/commons/collections/map/LinkedMap/remove/int," Removes the element at the specified index.\n\n @param index  the index of the object to remove\n @return the previous value corresponding the <code>key</code>,\n  or <code>null</code> if none existed\n @throws IndexOutOfBoundsException if the index is invalid\n"
9738,method,org/apache/commons/collections/map/LinkedMap/LinkedMap/," Constructs a new empty map with default size and load factor.\n"
9739,method,org/apache/commons/collections/map/LinkedMap/LinkedMap/int," Constructs a new, empty map with the specified initial capacity. \n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
9740,method,org/apache/commons/collections/map/LinkedMap/LinkedMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
9741,method,org/apache/commons/collections/map/LinkedMap/LinkedMap/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
9743,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9744,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/comparator/,""
9745,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/firstKey/,""
9746,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/lastKey/,""
9747,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/subMap/Object;Object,""
9748,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/headMap/Object,""
9749,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/tailMap/Object,""
9750,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/previousKey/Object,""
9751,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/nextKey/Object,""
9755,class,org/apache/commons/collections/map/AbstractSortedMapDecorator/SortedMapIterator," OrderedMapIterator implementation.\n\n @param <K>\n @param <V>\n"
9759,method,org/apache/commons/collections/map/AbstractSortedMapDecorator/SortedMapIterator/AbstractSortedMapDecorator/SortedMapIterator/Set," Create a new AbstractSortedMapDecorator.SortedMapIterator.\n"
9760,class,org/apache/commons/collections/map/UnmodifiableOrderedMap," Decorates another <code>OrderedMap</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
9762,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/mapIterator/,""
9763,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/clear/,""
9764,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/put/Object;Object,""
9765,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/putAll/Map,""
9766,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/remove/Object,""
9767,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/entrySet/,""
9768,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/keySet/,""
9769,method,org/apache/commons/collections/map/UnmodifiableOrderedMap/values/,""
9772,method,org/apache/commons/collections/map/PredicatedMap/validate/Object;Object," Validates a key value pair.\n \n @param key  the key to validate\n @param value  the value to validate\n @throws IllegalArgumentException if invalid\n"
9775,method,org/apache/commons/collections/map/PredicatedMap/put/Object;Object,""
9776,method,org/apache/commons/collections/map/PredicatedMap/putAll/Map,""
9778,field,org/apache/commons/collections/map/PredicatedMap/keyPredicate,"The key predicate to use "
9779,field,org/apache/commons/collections/map/PredicatedMap/valuePredicate,"The value predicate to use "
9783,method,org/apache/commons/collections/map/TransformedSortedMap/getSortedMap/," Gets the map being decorated.\n \n @return the decorated map\n"
9784,method,org/apache/commons/collections/map/TransformedSortedMap/firstKey/,""
9785,method,org/apache/commons/collections/map/TransformedSortedMap/lastKey/,""
9786,method,org/apache/commons/collections/map/TransformedSortedMap/comparator/,""
9787,method,org/apache/commons/collections/map/TransformedSortedMap/subMap/Object;Object,""
9788,method,org/apache/commons/collections/map/TransformedSortedMap/headMap/Object,""
9789,method,org/apache/commons/collections/map/TransformedSortedMap/tailMap/Object,""
9796,method,org/apache/commons/collections/map/LazyMap/get/Object,""
9799,field,org/apache/commons/collections/map/LazyMap/factory,"The factory to use to construct elements "
9801,method,org/apache/commons/collections/map/Flat3Map/get/Object," Gets the value mapped to the key specified.\n\n @param key  the key\n @return the mapped value, null if no match\n"
9802,method,org/apache/commons/collections/map/Flat3Map/size/," Gets the size of the map.\n\n @return the size\n"
9803,method,org/apache/commons/collections/map/Flat3Map/isEmpty/," Checks whether the map is currently empty.\n\n @return true if the map is currently size zero\n"
9804,method,org/apache/commons/collections/map/Flat3Map/containsKey/Object," Checks whether the map contains the specified key.\n\n @param key  the key to search for\n @return true if the map contains the key\n"
9805,method,org/apache/commons/collections/map/Flat3Map/containsValue/Object," Checks whether the map contains the specified value.\n\n @param value  the value to search for\n @return true if the map contains the key\n"
9806,method,org/apache/commons/collections/map/Flat3Map/put/Object;Object," Puts a key-value mapping into this map.\n\n @param key  the key to add\n @param value  the value to add\n @return the value previously mapped to this key, null if none\n"
9807,method,org/apache/commons/collections/map/Flat3Map/putAll/Map," Puts all the values from the specified map into this map.\n\n @param map  the map to add\n @throws NullPointerException if the map is null\n"
9809,method,org/apache/commons/collections/map/Flat3Map/remove/Object," Removes the specified mapping from this map.\n\n @param key  the mapping to remove\n @return the value mapped to the removed key, null if key not in map\n"
9810,method,org/apache/commons/collections/map/Flat3Map/clear/," Clears the map, resetting the size to zero and nullifying references\n to avoid garbage collection issues.\n"
9811,method,org/apache/commons/collections/map/Flat3Map/mapIterator/," Gets an iterator over the map.\n Changes made to the iterator affect this map.\n <p>\n A MapIterator returns the keys in the map. It also provides convenient\n methods to get the key and value, and set the value.\n It avoids the need to create an entrySet/keySet/values object.\n It also avoids creating the Map Entry object.\n\n @return the map iterator\n"
9812,method,org/apache/commons/collections/map/Flat3Map/entrySet/," Gets the entrySet view of the map.\n Changes made to the view affect this map.\n The Map Entry is not an independent object and changes as the\n iterator progresses.\n To simply iterate through the entries, use {@link #mapIterator()}.\n\n @return the entrySet view\n"
9813,method,org/apache/commons/collections/map/Flat3Map/keySet/," Gets the keySet view of the map.\n Changes made to the view affect this map.\n To simply iterate through the keys, use {@link #mapIterator()}.\n\n @return the keySet view\n"
9814,method,org/apache/commons/collections/map/Flat3Map/values/," Gets the values view of the map.\n Changes made to the view affect this map.\n To simply iterate through the values, use {@link #mapIterator()}.\n\n @return the values view\n"
9815,method,org/apache/commons/collections/map/Flat3Map/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n @since Commons Collections 3.1\n"
9816,method,org/apache/commons/collections/map/Flat3Map/equals/Object," Compares this map with another.\n\n @param obj  the object to compare to\n @return true if equal\n"
9817,method,org/apache/commons/collections/map/Flat3Map/hashCode/," Gets the standard Map hashCode.\n\n @return the hash code defined in the Map interface\n"
9818,method,org/apache/commons/collections/map/Flat3Map/toString/," Gets the map as a String.\n\n @return a string version of the map\n"
9819,method,org/apache/commons/collections/map/Flat3Map/Flat3Map/," Constructor.\n"
9820,method,org/apache/commons/collections/map/Flat3Map/Flat3Map/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
9822,method,org/apache/commons/collections/map/ReferenceMap/ReferenceMap/," Constructs a new <code>ReferenceMap</code> that will\n use hard references to keys and soft references to values.\n"
9828,method,org/apache/commons/collections/map/ReferenceIdentityMap/hash/Object," Gets the hash code for the key specified.\n <p>\n This implementation uses the identity hash code.\n \n @param key  the key to get a hash code for\n @return the hash code\n"
9831,method,org/apache/commons/collections/map/ReferenceIdentityMap/isEqualValue/Object;Object," Compares two values for equals.\n <p>\n This implementation uses <code>==</code>.\n \n @param value1  the first value to compare passed in from outside\n @param value2  the second value extracted from the entry via <code>getValue()</code>\n @return true if equal by identity\n"
9832,method,org/apache/commons/collections/map/ReferenceIdentityMap/ReferenceIdentityMap/," Constructs a new <code>ReferenceIdentityMap</code> that will\n use hard references to keys and soft references to values.\n"
9838,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9839,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/firstKey/,""
9840,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/lastKey/,""
9841,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/nextKey/Object,""
9842,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/previousKey/Object,""
9843,method,org/apache/commons/collections/map/AbstractOrderedMapDecorator/mapIterator/,""
9850,method,org/apache/commons/collections/map/DefaultedMap/get/Object,""
9851,method,org/apache/commons/collections/map/DefaultedMap/DefaultedMap/Object," Constructs a new empty <code>DefaultedMap</code> that decorates\n a <code>HashMap</code>.\n <p>\n The object passed in will be returned by the map whenever an\n unknown key is requested.\n \n @param defaultValue  the default value to return when the key is not found\n"
9852,method,org/apache/commons/collections/map/DefaultedMap/DefaultedMap/Transformer," Constructs a new empty <code>DefaultedMap</code> that decorates\n a <code>HashMap</code>.\n <p>\n @param defaultValueTransformer transformer to use to generate missing values.\n"
9856,method,org/apache/commons/collections/map/AbstractLinkedMap/containsValue/Object," Checks whether the map contains the specified value.\n \n @param value  the value to search for\n @return true if the map contains the value\n"
9857,method,org/apache/commons/collections/map/AbstractLinkedMap/clear/," Clears the map, resetting the size to zero and nullifying references\n to avoid garbage collection issues.\n"
9858,method,org/apache/commons/collections/map/AbstractLinkedMap/firstKey/," Gets the first key in the map, which is the first inserted.\n \n @return the eldest key\n"
9859,method,org/apache/commons/collections/map/AbstractLinkedMap/lastKey/," Gets the last key in the map, which is the most recently inserted.\n \n @return the most recently inserted key\n"
9861,method,org/apache/commons/collections/map/AbstractLinkedMap/getEntry/Object,""
9863,method,org/apache/commons/collections/map/AbstractLinkedMap/getEntry/int," Gets the key at the specified index.\n \n @param index  the index to retrieve\n @return the key at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
9864,method,org/apache/commons/collections/map/AbstractLinkedMap/addEntry/HashEntry;int," Adds an entry into this map, maintaining insertion order.\n <p>\n This implementation adds the entry to the data storage table and\n to the end of the linked list.\n \n @param link  the entry to add\n @param hashIndex  the index into the data array to store at\n"
9865,method,org/apache/commons/collections/map/AbstractLinkedMap/createEntry/HashEntry;int;Object;Object," Creates an entry to store the data.\n <p>\n This implementation creates a new LinkEntry instance.\n \n @param next  the next entry in sequence\n @param hashCode  the hash code to use\n @param key  the key to store\n @param value  the value to store\n @return the newly created entry\n"
9875,method,org/apache/commons/collections/map/AbstractLinkedMap/AbstractLinkedMap/int," Constructs a new, empty map with the specified initial capacity. \n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
9876,method,org/apache/commons/collections/map/AbstractLinkedMap/AbstractLinkedMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor. \n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
9877,method,org/apache/commons/collections/map/AbstractLinkedMap/AbstractLinkedMap/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
9878,field,org/apache/commons/collections/map/AbstractLinkedMap/header,"Header in the linked list "
9879,class,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator," MapIterator implementation.\n"
9880,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/next/,""
9881,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/previous/,""
9882,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/getKey/,""
9883,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/getValue/,""
9884,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/setValue/Object,""
9885,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkMapIterator/AbstractLinkedMap/LinkMapIterator/AbstractLinkedMap,""
9886,class,org/apache/commons/collections/map/AbstractLinkedMap/EntrySetIterator," EntrySet iterator.\n"
9887,method,org/apache/commons/collections/map/AbstractLinkedMap/EntrySetIterator/next/,""
9888,method,org/apache/commons/collections/map/AbstractLinkedMap/EntrySetIterator/previous/,""
9889,method,org/apache/commons/collections/map/AbstractLinkedMap/EntrySetIterator/AbstractLinkedMap/EntrySetIterator/AbstractLinkedMap,""
9890,class,org/apache/commons/collections/map/AbstractLinkedMap/KeySetIterator," KeySet iterator.\n"
9891,method,org/apache/commons/collections/map/AbstractLinkedMap/KeySetIterator/next/,""
9892,method,org/apache/commons/collections/map/AbstractLinkedMap/KeySetIterator/previous/,""
9893,method,org/apache/commons/collections/map/AbstractLinkedMap/KeySetIterator/AbstractLinkedMap/KeySetIterator/AbstractLinkedMap,""
9894,class,org/apache/commons/collections/map/AbstractLinkedMap/ValuesIterator," Values iterator.\n"
9895,method,org/apache/commons/collections/map/AbstractLinkedMap/ValuesIterator/next/,""
9896,method,org/apache/commons/collections/map/AbstractLinkedMap/ValuesIterator/previous/,""
9897,method,org/apache/commons/collections/map/AbstractLinkedMap/ValuesIterator/AbstractLinkedMap/ValuesIterator/AbstractLinkedMap,""
9899,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkEntry/AbstractLinkedMap/LinkEntry/HashEntry;int;Object;Object," Constructs a new entry.\n \n @param next  the next entry in the hash bucket sequence\n @param hashCode  the hash code\n @param key  the key\n @param value  the value\n"
9902,class,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator," Base Iterator that iterates in link order.\n"
9903,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/hasNext/,""
9904,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/hasPrevious/,""
9905,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/nextEntry/,""
9906,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/previousEntry/,""
9907,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/currentEntry/,""
9908,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/remove/,""
9909,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/reset/,""
9910,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/toString/,""
9911,method,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/AbstractLinkedMap/LinkIterator/AbstractLinkedMap,""
9912,field,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/parent,"The parent map "
9913,field,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/last,"The current (last returned) entry "
9914,field,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/next,"The next entry "
9915,field,org/apache/commons/collections/map/AbstractLinkedMap/LinkIterator/expectedModCount,"The modification count expected "
9918,method,org/apache/commons/collections/map/StaticBucketMap/isEmpty/," Checks if the size is currently zero.\n \n @return true if empty\n"
9919,method,org/apache/commons/collections/map/StaticBucketMap/get/Object," Gets the value associated with the key.\n \n @param key  the key to retrieve\n @return the associated value\n"
9920,method,org/apache/commons/collections/map/StaticBucketMap/containsKey/Object," Checks if the map contains the specified key.\n \n @param key  the key to check\n @return true if found\n"
9921,method,org/apache/commons/collections/map/StaticBucketMap/containsValue/Object," Checks if the map contains the specified value.\n \n @param value  the value to check\n @return true if found\n"
9922,method,org/apache/commons/collections/map/StaticBucketMap/put/Object;Object," Puts a new key value mapping into the map.\n \n @param key  the key to use\n @param value  the value to use\n @return the previous mapping for the key\n"
9923,method,org/apache/commons/collections/map/StaticBucketMap/remove/Object," Removes the specified key from the map.\n \n @param key  the key to remove\n @return the previous value at this key\n"
9924,method,org/apache/commons/collections/map/StaticBucketMap/keySet/," Gets the key set.\n \n @return the key set\n"
9925,method,org/apache/commons/collections/map/StaticBucketMap/values/," Gets the values.\n \n @return the values\n"
9926,method,org/apache/commons/collections/map/StaticBucketMap/entrySet/," Gets the entry set.\n \n @return the entry set\n"
9928,method,org/apache/commons/collections/map/StaticBucketMap/clear/," Clears the map of all entries.\n"
9929,method,org/apache/commons/collections/map/StaticBucketMap/equals/Object," Compares this map to another, as per the Map specification.\n \n @param obj  the object to compare to\n @return true if equal\n"
9930,method,org/apache/commons/collections/map/StaticBucketMap/hashCode/," Gets the hash code, as per the Map specification.\n \n @return the hash code\n"
9932,method,org/apache/commons/collections/map/StaticBucketMap/StaticBucketMap/," Initializes the map with the default number of buckets (255).\n"
9935,method,org/apache/commons/collections/map/AbstractMapDecorator/decorated/," Gets the map being decorated.\n \n @return the decorated map\n"
9936,method,org/apache/commons/collections/map/AbstractMapDecorator/clear/,""
9937,method,org/apache/commons/collections/map/AbstractMapDecorator/containsKey/Object,""
9938,method,org/apache/commons/collections/map/AbstractMapDecorator/containsValue/Object,""
9939,method,org/apache/commons/collections/map/AbstractMapDecorator/entrySet/,""
9940,method,org/apache/commons/collections/map/AbstractMapDecorator/get/Object,""
9941,method,org/apache/commons/collections/map/AbstractMapDecorator/isEmpty/,""
9942,method,org/apache/commons/collections/map/AbstractMapDecorator/keySet/,""
9943,method,org/apache/commons/collections/map/AbstractMapDecorator/put/Object;Object,""
9944,method,org/apache/commons/collections/map/AbstractMapDecorator/putAll/Map,""
9945,method,org/apache/commons/collections/map/AbstractMapDecorator/remove/Object,""
9946,method,org/apache/commons/collections/map/AbstractMapDecorator/size/,""
9947,method,org/apache/commons/collections/map/AbstractMapDecorator/values/,""
9948,method,org/apache/commons/collections/map/AbstractMapDecorator/equals/Object,""
9949,method,org/apache/commons/collections/map/AbstractMapDecorator/hashCode/,""
9950,method,org/apache/commons/collections/map/AbstractMapDecorator/toString/,""
9953,field,org/apache/commons/collections/map/AbstractMapDecorator/map,"The map to decorate "
9955,method,org/apache/commons/collections/map/LRUMap/get/Object," Gets the value mapped to the key specified.\n <p>\n This operation changes the position of the key in the map to the\n most recently used position (first).\n\n @param key  the key\n @return the mapped value, null if no match\n"
9956,method,org/apache/commons/collections/map/LRUMap/moveToMRU/LinkEntry," Moves an entry to the MRU position at the end of the list.\n <p>\n This implementation moves the updated entry to the end of the list.\n\n @param entry  the entry to update\n"
9957,method,org/apache/commons/collections/map/LRUMap/updateEntry/HashEntry;Object," Updates an existing key-value mapping.\n <p>\n This implementation moves the updated entry to the top of the list\n using {@link #moveToMRU(AbstractLinkedMap.LinkEntry)}.\n\n @param entry  the entry to update\n @param newValue  the new value to store\n"
9958,method,org/apache/commons/collections/map/LRUMap/addMapping/int;int;Object;Object," Adds a new key-value mapping into this map.\n <p>\n This implementation checks the LRU size and determines whether to\n discard an entry or not using {@link #removeLRU(AbstractLinkedMap.LinkEntry)}.\n <p>\n From Commons Collections 3.1 this method uses {@link #isFull()} rather\n than accessing <code>size</code> and <code>maxSize</code> directly.\n It also handles the scanUntilRemovable functionality.\n\n @param hashIndex  the index into the data array to store at\n @param hashCode  the hash code of the key to add\n @param key  the key to add\n @param value  the value to add\n"
9959,method,org/apache/commons/collections/map/LRUMap/reuseMapping/LinkEntry;int;int;Object;Object," Reuses an entry by removing it and moving it to a new place in the map.\n <p>\n This method uses {@link #removeEntry}, {@link #reuseEntry} and {@link #addEntry}.\n\n @param entry  the entry to reuse\n @param hashIndex  the index into the data array to store at\n @param hashCode  the hash code of the key to add\n @param key  the key to add\n @param value  the value to add\n"
9961,method,org/apache/commons/collections/map/LRUMap/isFull/," Returns true if this map is full and no new mappings can be added.\n\n @return <code>true</code> if the map is full\n"
9962,method,org/apache/commons/collections/map/LRUMap/maxSize/," Gets the maximum size of the map (the bound).\n\n @return the maximum number of elements the map can hold\n"
9963,method,org/apache/commons/collections/map/LRUMap/isScanUntilRemovable/," Whether this LRUMap will scan until a removable entry is found when the\n map is full.\n\n @return true if this map scans\n @since Commons Collections 3.1\n"
9964,method,org/apache/commons/collections/map/LRUMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
9967,method,org/apache/commons/collections/map/LRUMap/LRUMap/," Constructs a new empty map with a maximum size of 100.\n"
9968,method,org/apache/commons/collections/map/LRUMap/LRUMap/int," Constructs a new, empty map with the specified maximum size.\n\n @param maxSize  the maximum size of the map\n @throws IllegalArgumentException if the maximum size is less than one\n"
9969,method,org/apache/commons/collections/map/LRUMap/LRUMap/int;boolean," Constructs a new, empty map with the specified maximum size.\n\n @param maxSize  the maximum size of the map\n @param scanUntilRemovable  scan until a removeable entry is found, default false\n @throws IllegalArgumentException if the maximum size is less than one\n @since Commons Collections 3.1\n"
9970,method,org/apache/commons/collections/map/LRUMap/LRUMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n @param maxSize  the maximum size of the map\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the maximum size is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
9971,method,org/apache/commons/collections/map/LRUMap/LRUMap/int;float;boolean," Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n @param maxSize  the maximum size of the ma\n @param loadFactor  the load factor\n @param scanUntilRemovable  scan until a removeable entry is found, default false\n @throws IllegalArgumentException if the maximum size is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n @since Commons Collections 3.1\n"
9972,method,org/apache/commons/collections/map/LRUMap/LRUMap/Map," Constructor copying elements from another map.\n <p>\n The maximum size is set from the map's size.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n @throws IllegalArgumentException if the map is empty\n"
9973,method,org/apache/commons/collections/map/LRUMap/LRUMap/Map;boolean," Constructor copying elements from another map.\n <p/>\n The maximum size is set from the map's size.\n\n @param map  the map to copy\n @param scanUntilRemovable  scan until a removeable entry is found, default false\n @throws NullPointerException if the map is null\n @throws IllegalArgumentException if the map is empty\n @since Commons Collections 3.1\n"
9974,field,org/apache/commons/collections/map/LRUMap/DEFAULT_MAX_SIZE,"Default maximum size "
9976,method,org/apache/commons/collections/map/SingletonMap/getKey/," Gets the key.\n\n @return the key \n"
9977,method,org/apache/commons/collections/map/SingletonMap/getValue/," Gets the value.\n\n @return the value\n"
9978,method,org/apache/commons/collections/map/SingletonMap/setValue/Object," Sets the value.\n\n @param value  the new value to set\n @return the old value\n"
9979,method,org/apache/commons/collections/map/SingletonMap/isFull/," Is the map currently full, always true.\n\n @return true always\n"
9980,method,org/apache/commons/collections/map/SingletonMap/maxSize/," Gets the maximum size of the map, always 1.\n \n @return 1 always\n"
9981,method,org/apache/commons/collections/map/SingletonMap/get/Object," Gets the value mapped to the key specified.\n \n @param key  the key\n @return the mapped value, null if no match\n"
9982,method,org/apache/commons/collections/map/SingletonMap/size/," Gets the size of the map, always 1.\n \n @return the size of 1\n"
9984,method,org/apache/commons/collections/map/SingletonMap/containsKey/Object," Checks whether the map contains the specified key.\n \n @param key  the key to search for\n @return true if the map contains the key\n"
9985,method,org/apache/commons/collections/map/SingletonMap/containsValue/Object," Checks whether the map contains the specified value.\n \n @param value  the value to search for\n @return true if the map contains the key\n"
9988,method,org/apache/commons/collections/map/SingletonMap/remove/Object," Unsupported operation.\n \n @param key  the mapping to remove\n @return the value mapped to the removed key, null if key not in map\n @throws UnsupportedOperationException always\n"
9989,method,org/apache/commons/collections/map/SingletonMap/clear/," Unsupported operation.\n"
9990,method,org/apache/commons/collections/map/SingletonMap/entrySet/," Gets the entrySet view of the map.\n Changes made via <code>setValue</code> affect this map.\n To simply iterate through the entries, use {@link #mapIterator()}.\n \n @return the entrySet view\n"
9991,method,org/apache/commons/collections/map/SingletonMap/keySet/," Gets the unmodifiable keySet view of the map.\n Changes made to the view affect this map.\n To simply iterate through the keys, use {@link #mapIterator()}.\n \n @return the keySet view\n"
9992,method,org/apache/commons/collections/map/SingletonMap/values/," Gets the unmodifiable values view of the map.\n Changes made to the view affect this map.\n To simply iterate through the values, use {@link #mapIterator()}.\n \n @return the values view\n"
9998,method,org/apache/commons/collections/map/SingletonMap/isEqualKey/Object," Compares the specified key to the stored key.\n \n @param key  the key to compare\n @return true if equal\n"
9999,method,org/apache/commons/collections/map/SingletonMap/isEqualValue/Object," Compares the specified value to the stored value.\n \n @param value  the value to compare\n @return true if equal\n"
10000,method,org/apache/commons/collections/map/SingletonMap/clone/," Clones the map without cloning the key or value.\n\n @return a shallow clone\n"
10001,method,org/apache/commons/collections/map/SingletonMap/equals/Object," Compares this map with another.\n \n @param obj  the object to compare to\n @return true if equal\n"
10002,method,org/apache/commons/collections/map/SingletonMap/hashCode/," Gets the standard Map hashCode.\n \n @return the hash code defined in the Map interface\n"
10003,method,org/apache/commons/collections/map/SingletonMap/toString/," Gets the map as a String.\n \n @return a string version of the map\n"
10004,method,org/apache/commons/collections/map/SingletonMap/SingletonMap/," Constructor that creates a map of <code>null</code> to <code>null</code>.\n"
10005,method,org/apache/commons/collections/map/SingletonMap/SingletonMap/Object;Object," Constructor specifying the key and value.\n\n @param key  the key to use\n @param value  the value to use\n"
10006,method,org/apache/commons/collections/map/SingletonMap/SingletonMap/KeyValue," Constructor specifying the key and value as a <code>KeyValue</code>.\n\n @param keyValue  the key value pair to use\n"
10007,method,org/apache/commons/collections/map/SingletonMap/SingletonMap/Entry," Constructor specifying the key and value as a <code>MapEntry</code>.\n\n @param mapEntry  the mapEntry to use\n"
10011,method,org/apache/commons/collections/map/AbstractHashedMap/get/Object," Gets the value mapped to the key specified.\n\n @param key  the key\n @return the mapped value, null if no match\n"
10012,method,org/apache/commons/collections/map/AbstractHashedMap/size/," Gets the size of the map.\n\n @return the size\n"
10013,method,org/apache/commons/collections/map/AbstractHashedMap/isEmpty/," Checks whether the map is currently empty.\n\n @return true if the map is currently size zero\n"
10014,method,org/apache/commons/collections/map/AbstractHashedMap/containsKey/Object," Checks whether the map contains the specified key.\n\n @param key  the key to search for\n @return true if the map contains the key\n"
10015,method,org/apache/commons/collections/map/AbstractHashedMap/containsValue/Object," Checks whether the map contains the specified value.\n\n @param value  the value to search for\n @return true if the map contains the value\n"
10016,method,org/apache/commons/collections/map/AbstractHashedMap/put/Object;Object," Puts a key-value mapping into this map.\n\n @param key  the key to add\n @param value  the value to add\n @return the value previously mapped to this key, null if none\n"
10017,method,org/apache/commons/collections/map/AbstractHashedMap/putAll/Map," Puts all the values from the specified map into this map.\n <p>\n This implementation iterates around the specified map and\n uses {@link #put(Object, Object)}.\n\n @param map  the map to add\n @throws NullPointerException if the map is null\n"
10018,method,org/apache/commons/collections/map/AbstractHashedMap/remove/Object," Removes the specified mapping from this map.\n\n @param key  the mapping to remove\n @return the value mapped to the removed key, null if key not in map\n"
10019,method,org/apache/commons/collections/map/AbstractHashedMap/clear/," Clears the map, resetting the size to zero and nullifying references\n to avoid garbage collection issues.\n"
10035,method,org/apache/commons/collections/map/AbstractHashedMap/ensureCapacity/int," Changes the size of the data structure to the capacity proposed.\n\n @param newCapacity  the new capacity of the array (a power of two, less or equal to max)\n"
10036,method,org/apache/commons/collections/map/AbstractHashedMap/calculateNewCapacity/int," Calculates the new capacity of the map.\n This implementation normalizes the capacity to a power of two.\n\n @param proposedCapacity  the proposed capacity\n @return the normalized new capacity\n"
10037,method,org/apache/commons/collections/map/AbstractHashedMap/calculateThreshold/int;float," Calculates the new threshold of the map, where it will be resized.\n This implementation uses the load factor.\n\n @param newCapacity  the new capacity\n @param factor  the load factor\n @return the new resize threshold\n"
10042,method,org/apache/commons/collections/map/AbstractHashedMap/mapIterator/," Gets an iterator over the map.\n Changes made to the iterator affect this map.\n <p>\n A MapIterator returns the keys in the map. It also provides convenient\n methods to get the key and value, and set the value.\n It avoids the need to create an entrySet/keySet/values object.\n It also avoids creating the Map.Entry object.\n\n @return the map iterator\n"
10043,method,org/apache/commons/collections/map/AbstractHashedMap/entrySet/," Gets the entrySet view of the map.\n Changes made to the view affect this map.\n To simply iterate through the entries, use {@link #mapIterator()}.\n\n @return the entrySet view\n"
10045,method,org/apache/commons/collections/map/AbstractHashedMap/keySet/," Gets the keySet view of the map.\n Changes made to the view affect this map.\n To simply iterate through the keys, use {@link #mapIterator()}.\n\n @return the keySet view\n"
10047,method,org/apache/commons/collections/map/AbstractHashedMap/values/," Gets the values view of the map.\n Changes made to the view affect this map.\n To simply iterate through the values, use {@link #mapIterator()}.\n\n @return the values view\n"
10052,method,org/apache/commons/collections/map/AbstractHashedMap/equals/Object," Compares this map with another.\n\n @param obj  the object to compare to\n @return true if equal\n"
10053,method,org/apache/commons/collections/map/AbstractHashedMap/hashCode/," Gets the standard Map hashCode.\n\n @return the hash code defined in the Map interface\n"
10054,method,org/apache/commons/collections/map/AbstractHashedMap/toString/," Gets the map as a String.\n\n @return a string version of the map\n"
10057,method,org/apache/commons/collections/map/AbstractHashedMap/AbstractHashedMap/int," Constructs a new, empty map with the specified initial capacity and\n default load factor.\n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
10058,method,org/apache/commons/collections/map/AbstractHashedMap/AbstractHashedMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than or equal to zero\n"
10059,method,org/apache/commons/collections/map/AbstractHashedMap/AbstractHashedMap/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
10060,field,org/apache/commons/collections/map/AbstractHashedMap/NO_NEXT_ENTRY,""
10061,field,org/apache/commons/collections/map/AbstractHashedMap/NO_PREVIOUS_ENTRY,""
10062,field,org/apache/commons/collections/map/AbstractHashedMap/REMOVE_INVALID,""
10063,field,org/apache/commons/collections/map/AbstractHashedMap/GETKEY_INVALID,""
10064,field,org/apache/commons/collections/map/AbstractHashedMap/GETVALUE_INVALID,""
10065,field,org/apache/commons/collections/map/AbstractHashedMap/SETVALUE_INVALID,""
10066,field,org/apache/commons/collections/map/AbstractHashedMap/DEFAULT_CAPACITY,"The default capacity to use "
10067,field,org/apache/commons/collections/map/AbstractHashedMap/DEFAULT_THRESHOLD,"The default threshold to use "
10068,field,org/apache/commons/collections/map/AbstractHashedMap/DEFAULT_LOAD_FACTOR,"The default load factor to use "
10069,field,org/apache/commons/collections/map/AbstractHashedMap/MAXIMUM_CAPACITY,"The maximum capacity allowed "
10070,field,org/apache/commons/collections/map/AbstractHashedMap/NULL,"An object for masking null "
10071,field,org/apache/commons/collections/map/AbstractHashedMap/loadFactor,"Load factor, normally 0.75 "
10072,field,org/apache/commons/collections/map/AbstractHashedMap/size,"The size of the map "
10073,field,org/apache/commons/collections/map/AbstractHashedMap/data,"Map entries "
10074,field,org/apache/commons/collections/map/AbstractHashedMap/threshold,"Size at which to rehash "
10075,field,org/apache/commons/collections/map/AbstractHashedMap/modCount,"Modification count for iterators "
10076,field,org/apache/commons/collections/map/AbstractHashedMap/entrySet,"Entry set "
10077,field,org/apache/commons/collections/map/AbstractHashedMap/keySet,"Key set "
10078,field,org/apache/commons/collections/map/AbstractHashedMap/values,"Values "
10079,class,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator," MapIterator implementation.\n"
10080,method,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator/next/,""
10081,method,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator/getKey/,""
10082,method,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator/getValue/,""
10083,method,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator/setValue/Object,""
10084,method,org/apache/commons/collections/map/AbstractHashedMap/HashMapIterator/AbstractHashedMap/HashMapIterator/AbstractHashedMap,""
10085,class,org/apache/commons/collections/map/AbstractHashedMap/EntrySet," EntrySet implementation.\n"
10086,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/size/,""
10087,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/clear/,""
10088,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/contains/Object,""
10089,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/remove/Object,""
10090,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/iterator/,""
10091,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/AbstractHashedMap/EntrySet/AbstractHashedMap,""
10092,field,org/apache/commons/collections/map/AbstractHashedMap/EntrySet/parent,"The parent map "
10093,class,org/apache/commons/collections/map/AbstractHashedMap/EntrySetIterator," EntrySet iterator.\n"
10094,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySetIterator/next/,""
10095,method,org/apache/commons/collections/map/AbstractHashedMap/EntrySetIterator/AbstractHashedMap/EntrySetIterator/AbstractHashedMap,""
10096,class,org/apache/commons/collections/map/AbstractHashedMap/KeySet," KeySet implementation.\n"
10097,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/size/,""
10098,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/clear/,""
10099,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/contains/Object,""
10100,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/remove/Object,""
10101,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/iterator/,""
10102,method,org/apache/commons/collections/map/AbstractHashedMap/KeySet/AbstractHashedMap/KeySet/AbstractHashedMap,""
10103,field,org/apache/commons/collections/map/AbstractHashedMap/KeySet/parent,"The parent map "
10104,class,org/apache/commons/collections/map/AbstractHashedMap/KeySetIterator," KeySet iterator.\n"
10105,method,org/apache/commons/collections/map/AbstractHashedMap/KeySetIterator/next/,""
10106,method,org/apache/commons/collections/map/AbstractHashedMap/KeySetIterator/AbstractHashedMap/KeySetIterator/AbstractHashedMap,""
10107,class,org/apache/commons/collections/map/AbstractHashedMap/Values," Values implementation.\n"
10108,method,org/apache/commons/collections/map/AbstractHashedMap/Values/size/,""
10109,method,org/apache/commons/collections/map/AbstractHashedMap/Values/clear/,""
10110,method,org/apache/commons/collections/map/AbstractHashedMap/Values/contains/Object,""
10111,method,org/apache/commons/collections/map/AbstractHashedMap/Values/iterator/,""
10112,method,org/apache/commons/collections/map/AbstractHashedMap/Values/AbstractHashedMap/Values/AbstractHashedMap,""
10113,field,org/apache/commons/collections/map/AbstractHashedMap/Values/parent,"The parent map "
10114,class,org/apache/commons/collections/map/AbstractHashedMap/ValuesIterator," Values iterator.\n"
10115,method,org/apache/commons/collections/map/AbstractHashedMap/ValuesIterator/next/,""
10116,method,org/apache/commons/collections/map/AbstractHashedMap/ValuesIterator/AbstractHashedMap/ValuesIterator/AbstractHashedMap,""
10118,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/getKey/,""
10119,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/getValue/,""
10120,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/setValue/Object,""
10121,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/equals/Object,""
10122,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/hashCode/,""
10123,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/toString/,""
10124,method,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/AbstractHashedMap/HashEntry/HashEntry;int;Object;Object,""
10125,field,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/next,"The next entry in the hash chain "
10126,field,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/hashCode,"The hash code of the key "
10127,field,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/key,"The key "
10128,field,org/apache/commons/collections/map/AbstractHashedMap/HashEntry/value,"The value "
10129,class,org/apache/commons/collections/map/AbstractHashedMap/HashIterator," Base Iterator\n"
10130,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/hasNext/,""
10131,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/nextEntry/,""
10132,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/currentEntry/,""
10133,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/remove/,""
10134,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/toString/,""
10135,method,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/AbstractHashedMap/HashIterator/AbstractHashedMap,""
10136,field,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/parent,"The parent map "
10137,field,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/hashIndex,"The current index into the array of buckets "
10138,field,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/last,"The last returned entry "
10139,field,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/next,"The next entry "
10140,field,org/apache/commons/collections/map/AbstractHashedMap/HashIterator/expectedModCount,"The modification count expected "
10142,method,org/apache/commons/collections/map/IdentityMap/hash/Object," Gets the hash code for the key specified.\n This implementation uses the identity hash code.\n\n @param key  the key to get a hash code for\n @return the hash code\n"
10143,method,org/apache/commons/collections/map/IdentityMap/isEqualKey/Object;Object," Compares two keys for equals.\n This implementation uses <code>==</code>.\n\n @param key1  the first key to compare\n @param key2  the second key to compare\n @return true if equal by identity\n"
10144,method,org/apache/commons/collections/map/IdentityMap/isEqualValue/Object;Object," Compares two values for equals.\n This implementation uses <code>==</code>.\n\n @param value1  the first value to compare\n @param value2  the second value to compare\n @return true if equal by identity\n"
10145,method,org/apache/commons/collections/map/IdentityMap/createEntry/HashEntry;int;Object;Object," Creates an entry to store the data.\n This implementation creates an IdentityEntry instance.\n\n @param next  the next entry in sequence\n @param hashCode  the hash code to use\n @param key  the key to store\n @param value  the value to store\n @return the newly created entry\n"
10146,method,org/apache/commons/collections/map/IdentityMap/clone/," Clones the map without cloning the keys or values.\n\n @return a shallow clone\n"
10147,method,org/apache/commons/collections/map/IdentityMap/IdentityMap/," Constructs a new empty map with default size and load factor.\n"
10148,method,org/apache/commons/collections/map/IdentityMap/IdentityMap/int," Constructs a new, empty map with the specified initial capacity.\n\n @param initialCapacity  the initial capacity\n @throws IllegalArgumentException if the initial capacity is less than one\n"
10149,method,org/apache/commons/collections/map/IdentityMap/IdentityMap/int;float," Constructs a new, empty map with the specified initial capacity and\n load factor.\n\n @param initialCapacity  the initial capacity\n @param loadFactor  the load factor\n @throws IllegalArgumentException if the initial capacity is less than one\n @throws IllegalArgumentException if the load factor is less than zero\n"
10150,method,org/apache/commons/collections/map/IdentityMap/IdentityMap/Map," Constructor copying elements from another map.\n\n @param map  the map to copy\n @throws NullPointerException if the map is null\n"
10151,class,org/apache/commons/collections/map/IdentityMap/IdentityEntry," HashEntry\n"
10152,method,org/apache/commons/collections/map/IdentityMap/IdentityEntry/equals/Object,""
10153,method,org/apache/commons/collections/map/IdentityMap/IdentityEntry/hashCode/,""
10154,method,org/apache/commons/collections/map/IdentityMap/IdentityEntry/IdentityMap/IdentityEntry/HashEntry;int;Object;Object,""
10155,class,org/apache/commons/collections/map/UnmodifiableSortedMap," Decorates another <code>SortedMap</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
10157,method,org/apache/commons/collections/map/UnmodifiableSortedMap/clear/,""
10158,method,org/apache/commons/collections/map/UnmodifiableSortedMap/put/Object;Object,""
10159,method,org/apache/commons/collections/map/UnmodifiableSortedMap/putAll/Map,""
10160,method,org/apache/commons/collections/map/UnmodifiableSortedMap/remove/Object,""
10161,method,org/apache/commons/collections/map/UnmodifiableSortedMap/entrySet/,""
10162,method,org/apache/commons/collections/map/UnmodifiableSortedMap/keySet/,""
10163,method,org/apache/commons/collections/map/UnmodifiableSortedMap/values/,""
10164,method,org/apache/commons/collections/map/UnmodifiableSortedMap/firstKey/,""
10165,method,org/apache/commons/collections/map/UnmodifiableSortedMap/lastKey/,""
10166,method,org/apache/commons/collections/map/UnmodifiableSortedMap/comparator/,""
10167,method,org/apache/commons/collections/map/UnmodifiableSortedMap/subMap/Object;Object,""
10168,method,org/apache/commons/collections/map/UnmodifiableSortedMap/headMap/Object,""
10169,method,org/apache/commons/collections/map/UnmodifiableSortedMap/tailMap/Object,""
10172,method,org/apache/commons/collections/map/AbstractReferenceMap/size/," Gets the size of the map.\n\n @return the size\n"
10173,method,org/apache/commons/collections/map/AbstractReferenceMap/isEmpty/," Checks whether the map is currently empty.\n\n @return true if the map is currently size zero\n"
10174,method,org/apache/commons/collections/map/AbstractReferenceMap/containsKey/Object," Checks whether the map contains the specified key.\n\n @param key  the key to search for\n @return true if the map contains the key\n"
10175,method,org/apache/commons/collections/map/AbstractReferenceMap/containsValue/Object," Checks whether the map contains the specified value.\n\n @param value  the value to search for\n @return true if the map contains the value\n"
10176,method,org/apache/commons/collections/map/AbstractReferenceMap/get/Object," Gets the value mapped to the key specified.\n\n @param key  the key\n @return the mapped value, null if no match\n"
10178,method,org/apache/commons/collections/map/AbstractReferenceMap/remove/Object," Removes the specified mapping from this map.\n\n @param key  the mapping to remove\n @return the value mapped to the removed key, null if key not in map\n"
10179,method,org/apache/commons/collections/map/AbstractReferenceMap/clear/," Clears this map.\n"
10182,method,org/apache/commons/collections/map/AbstractReferenceMap/keySet/," Returns a set view of this map's keys.\n\n @return a set view of this map's keys\n"
10183,method,org/apache/commons/collections/map/AbstractReferenceMap/values/," Returns a collection view of this map's values.\n\n @return a set view of this map's values\n"
10187,method,org/apache/commons/collections/map/AbstractReferenceMap/purge/Reference," Purges the specified reference.\n\n @param ref  the reference to purge\n"
10188,method,org/apache/commons/collections/map/AbstractReferenceMap/getEntry/Object," Gets the entry mapped to the key specified.\n\n @param key  the key\n @return the entry, null if no match\n"
10191,method,org/apache/commons/collections/map/AbstractReferenceMap/createEntry/HashEntry;int;Object;Object," Creates a ReferenceEntry instead of a HashEntry.\n\n @param next  the next entry in sequence\n @param hashCode  the hash code to use\n @param key  the key to store\n @param value  the value to store\n @return the newly created entry\n"
10192,method,org/apache/commons/collections/map/AbstractReferenceMap/createEntrySetIterator/," Creates an entry set iterator.\n\n @return the entrySet iterator\n"
10193,method,org/apache/commons/collections/map/AbstractReferenceMap/createKeySetIterator/," Creates an key set iterator.\n\n @return the keySet iterator\n"
10194,method,org/apache/commons/collections/map/AbstractReferenceMap/createValuesIterator/," Creates an values iterator.\n\n @return the values iterator\n"
10197,method,org/apache/commons/collections/map/AbstractReferenceMap/AbstractReferenceMap/," Constructor used during deserialization.\n"
10199,field,org/apache/commons/collections/map/AbstractReferenceMap/keyType," The reference type for keys.\n"
10200,field,org/apache/commons/collections/map/AbstractReferenceMap/valueType," The reference type for values.\n"
10202,class,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength," Reference type enum.\n"
10203,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/values/,""
10204,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/valueOf/String,""
10205,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/resolve/int," Resolve enum from int.\n @param value\n @return ReferenceType\n @throws IllegalArgumentException if the specified value is invalid.\n"
10206,field,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/HARD,""
10207,field,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/SOFT,""
10208,field,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/WEAK,""
10209,field,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceStrength/value,"value "
10213,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/setValue/Object," Sets the value of the entry.\n\n @param obj  the object to store\n @return the previous value\n"
10214,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/equals/Object," Compares this map entry to another.\n <p>\n This implementation uses <code>isEqualKey</code> and\n <code>isEqualValue</code> on the main map for comparison.\n\n @param obj  the other map entry to compare to\n @return true if equal, false if not\n"
10215,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/hashCode/," Gets the hashcode of the entry using temporary hard references.\n <p>\n This implementation uses <code>hashEntry</code> on the main map.\n\n @return the hashcode of the entry\n"
10216,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/toReference/ReferenceStrength;Object;int," Constructs a reference of the given type to the given referent.\n The reference is registered with the queue for later purging.\n\n @param type  HARD, SOFT or WEAK\n @param referent  the object to refer to\n @param hash  the hash code of the <i>key</i> of the mapping;\n    this number might be different from referent.hashCode() if\n    the referent represents a value and not a key\n"
10217,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/next/," Gets the next entry in the bucket.\n\n @return the next entry in the bucket\n"
10218,method,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/AbstractReferenceMap/ReferenceEntry/AbstractReferenceMap;HashEntry;int;Object;Object," Creates a new entry object for the ReferenceMap.\n\n @param parent  the parent map\n @param next  the next entry in the hash bucket\n @param hashCode  the hash code of the key\n @param key  the key\n @param value  the value\n"
10219,field,org/apache/commons/collections/map/AbstractReferenceMap/ReferenceEntry/parent,"The parent map "
10220,class,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter," Adapts a Map entrySet to the MapIterator interface.\n\n @since Commons Collections 5\n @TODO fix version\n @version $Revision: 966368 $ $Date: 2010-07-21 21:07:52 +0200 (Wed, 21 Jul 2010) $\n\n @author Matt Benson\n"
10228,method,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter/current/," Get the currently active entry.\n @return Map.Entry<K, V>\n"
10229,method,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter/EntrySetToMapIteratorAdapter/Set," Create a new EntrySetToMapIteratorAdapter.\n"
10230,field,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter/entrySet,"The adapted Map entry Set. "
10231,field,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter/iterator,"The resettable iterator in use. "
10232,field,org/apache/commons/collections/map/EntrySetToMapIteratorAdapter/entry,"The currently positioned Map entry. "
10235,method,org/apache/commons/collections/map/ListOrderedMap/mapIterator/,""
10236,method,org/apache/commons/collections/map/ListOrderedMap/firstKey/," Gets the first key in this map by insert order.\n\n @return the first key currently in this map\n @throws NoSuchElementException if this map is empty\n"
10237,method,org/apache/commons/collections/map/ListOrderedMap/lastKey/," Gets the last key in this map by insert order.\n\n @return the last key currently in this map\n @throws NoSuchElementException if this map is empty\n"
10238,method,org/apache/commons/collections/map/ListOrderedMap/nextKey/Object," Gets the next key to the one specified using insert order.\n This method performs a list search to find the key and is O(n).\n \n @param key  the key to find previous for\n @return the next key, null if no match or at start\n"
10239,method,org/apache/commons/collections/map/ListOrderedMap/previousKey/Object," Gets the previous key to the one specified using insert order.\n This method performs a list search to find the key and is O(n).\n \n @param key  the key to find previous for\n @return the previous key, null if no match or at start\n"
10240,method,org/apache/commons/collections/map/ListOrderedMap/put/Object;Object,""
10241,method,org/apache/commons/collections/map/ListOrderedMap/putAll/Map,""
10242,method,org/apache/commons/collections/map/ListOrderedMap/putAll/int;Map," Puts the values contained in a supplied Map into the Map starting at\n the specified index.\n\n @param index the index in the Map to start at.\n @param map the Map containing the values to be added.\n"
10243,method,org/apache/commons/collections/map/ListOrderedMap/remove/Object,""
10244,method,org/apache/commons/collections/map/ListOrderedMap/clear/,""
10245,method,org/apache/commons/collections/map/ListOrderedMap/keySet/," Gets a view over the keys in the map.\n <p>\n The Collection will be ordered by object insertion into the map.\n\n @see #keyList()\n @return the fully modifiable collection view over the keys\n"
10246,method,org/apache/commons/collections/map/ListOrderedMap/keyList/," Gets a view over the keys in the map as a List.\n <p>\n The List will be ordered by object insertion into the map.\n The List is unmodifiable.\n\n @see #keySet()\n @return the unmodifiable list view over the keys\n @since Commons Collections 3.2\n"
10247,method,org/apache/commons/collections/map/ListOrderedMap/values/," Gets a view over the values in the map.\n <p>\n The Collection will be ordered by object insertion into the map.\n <p>\n From Commons Collections 3.2, this Collection can be cast\n to a list, see {@link #valueList()}\n\n @see #valueList()\n @return the fully modifiable collection view over the values\n"
10248,method,org/apache/commons/collections/map/ListOrderedMap/valueList/," Gets a view over the values in the map as a List.\n <p>\n The List will be ordered by object insertion into the map.\n The List supports remove and set, but does not support add.\n\n @see #values()\n @return the partially modifiable list view over the values\n @since Commons Collections 3.2\n"
10249,method,org/apache/commons/collections/map/ListOrderedMap/entrySet/," Gets a view over the entries in the map.\n <p>\n The Set will be ordered by object insertion into the map.\n\n @return the fully modifiable set view over the entries\n"
10250,method,org/apache/commons/collections/map/ListOrderedMap/toString/," Returns the Map as a string.\n \n @return the Map as a String\n"
10251,method,org/apache/commons/collections/map/ListOrderedMap/get/int," Gets the key at the specified index.\n \n @param index  the index to retrieve\n @return the key at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
10252,method,org/apache/commons/collections/map/ListOrderedMap/getValue/int," Gets the value at the specified index.\n \n @param index  the index to retrieve\n @return the key at the specified index\n @throws IndexOutOfBoundsException if the index is invalid\n"
10253,method,org/apache/commons/collections/map/ListOrderedMap/indexOf/Object," Gets the index of the specified key.\n \n @param key  the key to find the index of\n @return the index, or -1 if not found\n"
10254,method,org/apache/commons/collections/map/ListOrderedMap/setValue/int;Object," Sets the value at the specified index.\n\n @param index  the index of the value to set\n @return the previous value at that index\n @throws IndexOutOfBoundsException if the index is invalid\n @since Commons Collections 3.2\n"
10256,method,org/apache/commons/collections/map/ListOrderedMap/remove/int," Removes the element at the specified index.\n\n @param index  the index of the object to remove\n @return the removed value, or <code>null</code> if none existed\n @throws IndexOutOfBoundsException if the index is invalid\n"
10258,method,org/apache/commons/collections/map/ListOrderedMap/ListOrderedMap/," Constructs a new empty <code>ListOrderedMap</code> that decorates\n a <code>HashMap</code>.\n \n @since Commons Collections 3.1\n"
10260,field,org/apache/commons/collections/map/ListOrderedMap/insertOrder,"Internal list to hold the sequence of objects "
10269,method,org/apache/commons/collections/map/TransformedMap/put/Object;Object,""
10270,method,org/apache/commons/collections/map/TransformedMap/putAll/Map,""
10272,field,org/apache/commons/collections/map/TransformedMap/keyTransformer,"The transformer to use for the key "
10273,field,org/apache/commons/collections/map/TransformedMap/valueTransformer,"The transformer to use for the value "
10275,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/decorated/," Gets the collection being decorated.\n All access to the decorated collection goes via this method.\n \n @return the decorated collection\n"
10276,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/add/Object,""
10277,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/addAll/Collection,""
10278,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/clear/,""
10279,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/contains/Object,""
10280,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/isEmpty/,""
10281,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/iterator/,""
10282,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/remove/Object,""
10283,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/size/,""
10284,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/toArray/,""
10285,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/toArray/Object[],""
10286,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/containsAll/Collection,""
10287,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/removeAll/Collection,""
10288,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/retainAll/Collection,""
10289,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/equals/Object,""
10290,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/hashCode/,""
10291,method,org/apache/commons/collections/collection/AbstractCollectionDecorator/toString/,""
10294,field,org/apache/commons/collections/collection/AbstractCollectionDecorator/collection,"The collection being decorated "
10296,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/decorated/," Gets the collection being decorated. All access to the decorated\n collection goes via this method.\n \n @return the decorated collection\n"
10297,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/clear/,""
10298,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/contains/Object,""
10299,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/isEmpty/,""
10300,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/remove/Object,""
10301,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/size/,""
10302,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/toArray/,""
10303,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/toArray/Object[],""
10304,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/containsAll/Collection,""
10305,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/removeAll/Collection,""
10306,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/retainAll/Collection,""
10307,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/equals/Object,""
10308,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/hashCode/,""
10309,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/toString/,""
10310,method,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/AbstractUntypedCollectionDecorator/," Create a new AbstractUntypedCollectionDecorator.\n"
10311,field,org/apache/commons/collections/collection/AbstractUntypedCollectionDecorator/collection,"The collection being decorated "
10315,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/iterator/,""
10316,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/add/Object,""
10317,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/addAll/Collection,""
10318,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/clear/,""
10319,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/remove/Object,""
10320,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/removeAll/Collection,""
10321,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/retainAll/Collection,""
10322,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/isFull/,""
10323,method,org/apache/commons/collections/collection/UnmodifiableBoundedCollection/maxSize/,""
10325,class,org/apache/commons/collections/collection/UnmodifiableCollection," Decorates another <code>Collection</code> to ensure it can't be altered.\n <p>\n This class is Serializable from Commons Collections 3.1.\n <p>\n Attempts to modify it will result in an UnsupportedOperationException. \n\n @param <E> the type of the elements in the collection\n @since Commons Collections 3.0\n @version $Revision: 966327 $ $Date: 2010-07-21 19:39:49 +0200 (Wed, 21 Jul 2010) $\n\n @author Stephen Colebourne\n"
10327,method,org/apache/commons/collections/collection/UnmodifiableCollection/iterator/,""
10328,method,org/apache/commons/collections/collection/UnmodifiableCollection/add/Object,""
10329,method,org/apache/commons/collections/collection/UnmodifiableCollection/addAll/Collection,""
10330,method,org/apache/commons/collections/collection/UnmodifiableCollection/clear/,""
10331,method,org/apache/commons/collections/collection/UnmodifiableCollection/remove/Object,""
10332,method,org/apache/commons/collections/collection/UnmodifiableCollection/removeAll/Collection,""
10333,method,org/apache/commons/collections/collection/UnmodifiableCollection/retainAll/Collection,""
10339,method,org/apache/commons/collections/collection/TransformedCollection/add/Object,""
10340,method,org/apache/commons/collections/collection/TransformedCollection/addAll/Collection,""
10342,field,org/apache/commons/collections/collection/TransformedCollection/transformer,"The transformer to use "
10349,field,org/apache/commons/collections/collection/PredicatedCollection/predicate,"The predicate to use "
10352,method,org/apache/commons/collections/collection/SynchronizedCollection/decorated/," Gets the collection being decorated.\n \n @return the decorated collection\n"
10353,method,org/apache/commons/collections/collection/SynchronizedCollection/add/Object,""
10354,method,org/apache/commons/collections/collection/SynchronizedCollection/addAll/Collection,""
10355,method,org/apache/commons/collections/collection/SynchronizedCollection/clear/,""
10356,method,org/apache/commons/collections/collection/SynchronizedCollection/contains/Object,""
10357,method,org/apache/commons/collections/collection/SynchronizedCollection/containsAll/Collection,""
10358,method,org/apache/commons/collections/collection/SynchronizedCollection/isEmpty/,""
10360,method,org/apache/commons/collections/collection/SynchronizedCollection/toArray/,""
10361,method,org/apache/commons/collections/collection/SynchronizedCollection/toArray/Object[],""
10362,method,org/apache/commons/collections/collection/SynchronizedCollection/remove/Object,""
10363,method,org/apache/commons/collections/collection/SynchronizedCollection/removeAll/Collection,""
10364,method,org/apache/commons/collections/collection/SynchronizedCollection/retainAll/Collection,""
10365,method,org/apache/commons/collections/collection/SynchronizedCollection/size/,""
10366,method,org/apache/commons/collections/collection/SynchronizedCollection/equals/Object,""
10367,method,org/apache/commons/collections/collection/SynchronizedCollection/hashCode/,""
10368,method,org/apache/commons/collections/collection/SynchronizedCollection/toString/,""
10371,field,org/apache/commons/collections/collection/SynchronizedCollection/collection,"The collection to decorate "
10378,method,org/apache/commons/collections/collection/CompositeCollection/toArray/," Returns an array containing all of the elements in this composite.\n\n @return an object array of all the elements in the collection\n"
10379,method,org/apache/commons/collections/collection/CompositeCollection/toArray/Object[]," Returns an object array, populating the supplied array if possible.\n See <code>Collection</code> interface for full details.\n\n @param array  the array to use, populating if possible\n @return an array of all the elements in the collection\n"
10380,method,org/apache/commons/collections/collection/CompositeCollection/add/Object," Adds an object to the collection, throwing UnsupportedOperationException\n unless a CollectionMutator strategy is specified.\n\n @param obj  the object to add\n @return true if the collection was modified\n @throws UnsupportedOperationException if CollectionMutator hasn't been set\n @throws UnsupportedOperationException if add is unsupported\n @throws ClassCastException if the object cannot be added due to its type\n @throws NullPointerException if the object cannot be added because its null\n @throws IllegalArgumentException if the object cannot be added\n"
10381,method,org/apache/commons/collections/collection/CompositeCollection/remove/Object," Removes an object from the collection, throwing UnsupportedOperationException\n unless a CollectionMutator strategy is specified.\n\n @param obj  the object being removed\n @return true if the collection is changed\n @throws UnsupportedOperationException if removed is unsupported\n @throws ClassCastException if the object cannot be removed due to its type\n @throws NullPointerException if the object cannot be removed because its null\n @throws IllegalArgumentException if the object cannot be removed\n"
10383,method,org/apache/commons/collections/collection/CompositeCollection/addAll/Collection," Adds a collection of elements to this collection, throwing\n UnsupportedOperationException unless a CollectionMutator strategy is specified.\n\n @param coll  the collection to add\n @return true if the collection was modified\n @throws UnsupportedOperationException if CollectionMutator hasn't been set\n @throws UnsupportedOperationException if add is unsupported\n @throws ClassCastException if the object cannot be added due to its type\n @throws NullPointerException if the object cannot be added because its null\n @throws IllegalArgumentException if the object cannot be added\n"
10387,method,org/apache/commons/collections/collection/CompositeCollection/setMutator/CollectionMutator," Specify a CollectionMutator strategy instance to handle changes.\n\n @param mutator  the mutator to use\n"
10388,method,org/apache/commons/collections/collection/CompositeCollection/addComposited/Collection," Add these Collections to the list of collections in this composite\n\n @param compositeCollection  the Collection to be appended to the composite\n"
10389,method,org/apache/commons/collections/collection/CompositeCollection/addComposited/Collection;Collection," Add these Collections to the list of collections in this composite\n\n @param compositeCollection1  the Collection to be appended to the composite\n @param compositeCollection2  the Collection to be appended to the composite\n"
10390,method,org/apache/commons/collections/collection/CompositeCollection/addComposited/Collection[]," Add these Collections to the list of collections in this composite\n\n @param compositeCollections  the Collections to be appended to the composite\n"
10391,method,org/apache/commons/collections/collection/CompositeCollection/removeComposited/Collection," Removes a collection from the those being decorated in this composite.\n\n @param coll  collection to be removed\n"
10392,method,org/apache/commons/collections/collection/CompositeCollection/toCollection/," Returns a new collection containing all of the elements\n\n @return A new ArrayList containing all of the elements in this composite.\n         The new collection is <i>not</i> backed by this composite.\n"
10393,method,org/apache/commons/collections/collection/CompositeCollection/getCollections/," Gets the collections being decorated.\n\n @return Unmodifiable list of all collections in this composite.\n"
10394,method,org/apache/commons/collections/collection/CompositeCollection/getMutator/," Get the collection mutator to be used for this CompositeCollection.\n @return CollectionMutator<E>\n"
10395,method,org/apache/commons/collections/collection/CompositeCollection/CompositeCollection/," Create an empty CompositeCollection.\n"
10396,method,org/apache/commons/collections/collection/CompositeCollection/CompositeCollection/Collection," Create a Composite Collection with one collection.\n\n @param compositeCollection  the Collection to be appended to the composite\n"
10397,method,org/apache/commons/collections/collection/CompositeCollection/CompositeCollection/Collection;Collection," Create a Composite Collection with two collections.\n\n @param compositeCollection1  the Collection to be appended to the composite\n @param compositeCollection2  the Collection to be appended to the composite\n"
10398,method,org/apache/commons/collections/collection/CompositeCollection/CompositeCollection/Collection[]," Create a Composite Collection with an array of collections.\n\n @param compositeCollections  the collections to composite\n"
10399,field,org/apache/commons/collections/collection/CompositeCollection/mutator,"CollectionMutator to handle changes to the collection "
10400,field,org/apache/commons/collections/collection/CompositeCollection/all,"Collections in the composite "
10401,interface,org/apache/commons/collections/collection/CompositeCollection/CollectionMutator," Pluggable strategy to handle changes to the composite.\n\n @param <E> the element being held in the collection\n"
10420,method,java/io/WriteAbortedException/getMessage/," Produce the message and include the message from the nested\n exception, if there is one.\n"
10422,method,java/io/WriteAbortedException/WriteAbortedException/String;Exception," Constructs a WriteAbortedException with a string describing\n the exception and the exception causing the abort.\n @param s   String describing the exception.\n @param ex  Exception causing the abort.\n"
10423,field,java/io/WriteAbortedException/detail," Exception that was caught while writing the ObjectStream.\n\n <p>This field predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @serial\n"
10424,class,java/io/UnsupportedEncodingException," The Character Encoding is not supported.\n\n @author  Asmus Freytag\n @version 1.18, 03/23/10\n @since   JDK1.1\n"
10425,method,java/io/UnsupportedEncodingException/UnsupportedEncodingException/," Constructs an UnsupportedEncodingException without a detail message.\n"
10426,method,java/io/UnsupportedEncodingException/UnsupportedEncodingException/String," Constructs an UnsupportedEncodingException with a detail message.\n @param s Describes the reason for the exception.\n"
10427,class,java/io/UTFDataFormatException," Signals that a malformed string in\n <a href="DataInput.html#modified-utf-8">modified UTF-8</a>\n format has been read in a data\n input stream or by any class that implements the data input\n interface.\n See the\n <a href="DataInput.html#modified-utf-8"><code>DataInput</code></a>\n class description for the format in\n which modified UTF-8 strings are read and written.\n\n @author  Frank Yellin\n @version 1.15, 03/23/10\n @see     java.io.DataInput\n @see     java.io.DataInputStream#readUTF(java.io.DataInput)\n @see     java.io.IOException\n @since   JDK1.0\n"
10429,method,java/io/UTFDataFormatException/UTFDataFormatException/String," Constructs a <code>UTFDataFormatException</code> with the\n specified detail message. The string <code>s</code> can be\n retrieved later by the\n <code>{@link java.lang.Throwable#getMessage}</code>\n method of class <code>java.lang.Throwable</code>.\n\n @param   s   the detail message.\n"
10430,class,java/io/SyncFailedException," Signals that a sync operation has failed.\n\n @author  Ken Arnold\n @version 1.17, 03/23/10\n @see     java.io.FileDescriptor#sync\n @see	    java.io.IOException\n @since   JDK1.1\n"
10431,method,java/io/SyncFailedException/SyncFailedException/String," Constructs an SyncFailedException with a detail message.\n A detail message is a String that describes this particular exception.\n\n @param desc  a String describing the exception.\n"
10433,method,java/io/StringWriter/write/int," Write a single character.\n"
10434,method,java/io/StringWriter/write/char[];int;int," Write a portion of an array of characters.\n\n @param  cbuf  Array of characters\n @param  off   Offset from which to start writing characters\n @param  len   Number of characters to write\n"
10435,method,java/io/StringWriter/write/String," Write a string.\n"
10436,method,java/io/StringWriter/write/String;int;int," Write a portion of a string.\n\n @param  str  String to be written\n @param  off  Offset from which to start writing characters\n @param  len  Number of characters to write\n"
10440,method,java/io/StringWriter/toString/," Return the buffer's current value as a string.\n"
10441,method,java/io/StringWriter/getBuffer/," Return the string buffer itself.\n\n @return StringBuffer holding the current buffer value.\n"
10442,method,java/io/StringWriter/flush/," Flush the stream.\n"
10444,method,java/io/StringWriter/StringWriter/," Create a new string writer using the default initial string-buffer\n size.\n"
10446,class,java/io/StringReader," A character stream whose source is a string.\n\n @version 	1.27, 10/03/23\n @author	Mark Reinhold\n @since	JDK1.1\n"
10450,method,java/io/StringReader/ready/," Tells whether this stream is ready to be read.\n\n @return True if the next read() is guaranteed not to block for input\n\n @exception  IOException  If the stream is closed\n"
10451,method,java/io/StringReader/markSupported/," Tells whether this stream supports the mark() operation, which it does.\n"
10455,method,java/io/StringReader/StringReader/String," Creates a new string reader.\n\n @param s  String providing the character stream.\n"
10457,method,java/io/StringBufferInputStream/read/," Reads the next byte of data from this input stream. The value\n byte is returned as an <code>int</code> in the range\n <code>0</code> to <code>255</code>. If no byte is available\n because the end of the stream has been reached, the value\n <code>-1</code> is returned.\n <p>\n The <code>read</code> method of\n <code>StringBufferInputStream</code> cannot block. It returns the\n low eight bits of the next character in this input stream's buffer.\n\n @return     the next byte of data, or <code>-1</code> if the end of the\n             stream is reached.\n"
10458,method,java/io/StringBufferInputStream/read/byte[];int;int," Reads up to <code>len</code> bytes of data from this input stream\n into an array of bytes.\n <p>\n The <code>read</code> method of\n <code>StringBufferInputStream</code> cannot block. It copies the\n low eight bits from the characters in this input stream's buffer into\n the byte array argument.\n\n @param      b     the buffer into which the data is read.\n @param      off   the start offset of the data.\n @param      len   the maximum number of bytes read.\n @return     the total number of bytes read into the buffer, or\n             <code>-1</code> if there is no more data because the end of\n             the stream has been reached.\n"
10459,method,java/io/StringBufferInputStream/skip/long," Skips <code>n</code> bytes of input from this input stream. Fewer\n bytes might be skipped if the end of the input stream is reached.\n\n @param      n   the number of bytes to be skipped.\n @return     the actual number of bytes skipped.\n"
10460,method,java/io/StringBufferInputStream/available/," Returns the number of bytes that can be read from the input\n stream without blocking.\n\n @return     the value of <code>count&nbsp;-&nbsp;pos</code>, which is the\n             number of bytes remaining to be read from the input buffer.\n"
10461,method,java/io/StringBufferInputStream/reset/," Resets the input stream to begin reading from the first character\n of this input stream's underlying buffer.\n"
10462,method,java/io/StringBufferInputStream/StringBufferInputStream/String," Creates a string input stream to read data from the specified string.\n\n @param      s   the underlying input buffer.\n"
10463,field,java/io/StringBufferInputStream/buffer," The string from which bytes are read.\n"
10464,field,java/io/StringBufferInputStream/pos," The index of the next character to read from the input stream buffer.\n\n @see        java.io.StringBufferInputStream#buffer\n"
10465,field,java/io/StringBufferInputStream/count," The number of valid characters in the input stream buffer.\n\n @see        java.io.StringBufferInputStream#buffer\n"
10467,method,java/io/StreamTokenizer/resetSyntax/," Resets this tokenizer's syntax table so that all characters are\n "ordinary." See the <code>ordinaryChar</code> method\n for more information on a character being ordinary.\n\n @see     java.io.StreamTokenizer#ordinaryChar(int)\n"
10468,method,java/io/StreamTokenizer/wordChars/int;int," Specifies that all characters <i>c</i> in the range\n <code>low&nbsp;&lt;=&nbsp;<i>c</i>&nbsp;&lt;=&nbsp;high</code>\n are word constituents. A word token consists of a word constituent\n followed by zero or more word constituents or number constituents.\n\n @param   low   the low end of the range.\n @param   hi    the high end of the range.\n"
10470,method,java/io/StreamTokenizer/ordinaryChars/int;int," Specifies that all characters <i>c</i> in the range\n <code>low&nbsp;&lt;=&nbsp;<i>c</i>&nbsp;&lt;=&nbsp;high</code>\n are "ordinary" in this tokenizer. See the\n <code>ordinaryChar</code> method for more information on a\n character being ordinary.\n\n @param   low   the low end of the range.\n @param   hi    the high end of the range.\n @see     java.io.StreamTokenizer#ordinaryChar(int)\n"
10472,method,java/io/StreamTokenizer/commentChar/int," Specified that the character argument starts a single-line\n comment. All characters from the comment character to the end of\n the line are ignored by this stream tokenizer.\n\n <p>Any other attribute settings for the specified character are cleared.\n\n @param   ch   the character.\n"
10481,method,java/io/StreamTokenizer/lineno/," Return the current line number.\n\n @return  the current line number of this stream tokenizer.\n"
10482,method,java/io/StreamTokenizer/toString/," Returns the string representation of the current stream token and\n the line number it occurs on.\n\n <p>The precise string returned is unspecified, although the following\n example can be considered typical:\n\n <blockquote><pre>Token['a'], line 10</pre></blockquote>\n\n @return  a string representation of the token\n @see     java.io.StreamTokenizer#nval\n @see     java.io.StreamTokenizer#sval\n @see     java.io.StreamTokenizer#ttype\n"
10483,method,java/io/StreamTokenizer/StreamTokenizer/InputStream," Creates a stream tokenizer that parses the specified input\n stream. The stream tokenizer is initialized to the following\n default state:\n <ul>\n <li>All byte values <code>'A'</code> through <code>'Z'</code>,\n     <code>'a'</code> through <code>'z'</code>, and\n     <code>'&#92;u00A0'</code> through <code>'&#92;u00FF'</code> are\n     considered to be alphabetic.\n <li>All byte values <code>'&#92;u0000'</code> through\n     <code>'&#92;u0020'</code> are considered to be white space.\n <li><code>'/'</code> is a comment character.\n <li>Single quote <code>'&#92;''</code> and double quote <code>'"'</code>\n     are string quote characters.\n <li>Numbers are parsed.\n <li>Ends of lines are treated as white space, not as separate tokens.\n <li>C-style and C++-style comments are not recognized.\n </ul>\n\n @deprecated As of JDK version 1.1, the preferred way to tokenize an\n input stream is to convert it into a character stream, for example:\n <blockquote><pre>\n   Reader r = new BufferedReader(new InputStreamReader(is));\n   StreamTokenizer st = new StreamTokenizer(r);\n </pre></blockquote>\n\n @param      is        an input stream.\n @see        java.io.BufferedReader\n @see        java.io.InputStreamReader\n @see        java.io.StreamTokenizer#StreamTokenizer(java.io.Reader)\n"
10484,method,java/io/StreamTokenizer/StreamTokenizer/Reader," Create a tokenizer that parses the given character stream.\n\n @param r  a Reader object providing the input stream.\n @since   JDK1.1\n"
10486,field,java/io/StreamTokenizer/TT_EOF," A constant indicating that the end of the stream has been read.\n"
10487,field,java/io/StreamTokenizer/TT_EOL," A constant indicating that the end of the line has been read.\n"
10488,field,java/io/StreamTokenizer/TT_NUMBER," A constant indicating that a number token has been read.\n"
10489,field,java/io/StreamTokenizer/TT_WORD," A constant indicating that a word token has been read.\n"
10490,field,java/io/StreamTokenizer/sval," If the current token is a word token, this field contains a\n string giving the characters of the word token. When the current\n token is a quoted string token, this field contains the body of\n the string.\n <p>\n The current token is a word when the value of the\n <code>ttype</code> field is <code>TT_WORD</code>. The current token is\n a quoted string token when the value of the <code>ttype</code> field is\n a quote character.\n <p>\n The initial value of this field is null.\n\n @see     java.io.StreamTokenizer#quoteChar(int)\n @see     java.io.StreamTokenizer#TT_WORD\n @see     java.io.StreamTokenizer#ttype\n"
10491,field,java/io/StreamTokenizer/nval," If the current token is a number, this field contains the value\n of that number. The current token is a number when the value of\n the <code>ttype</code> field is <code>TT_NUMBER</code>.\n <p>\n The initial value of this field is 0.0.\n\n @see     java.io.StreamTokenizer#TT_NUMBER\n @see     java.io.StreamTokenizer#ttype\n"
10492,class,java/io/StreamCorruptedException," Thrown when control information that was read from an object stream\n violates internal consistency checks.\n\n @author  unascribed\n @version 1.18, 03/23/10\n @since   JDK1.1\n"
10493,method,java/io/StreamCorruptedException/StreamCorruptedException/String," Create a StreamCorruptedException and list a reason why thrown.\n\n @param reason  String describing the reason for the exception.\n"
10494,method,java/io/StreamCorruptedException/StreamCorruptedException/," Create a StreamCorruptedException and list no reason why thrown.\n"
10496,method,java/io/SerializablePermission/SerializablePermission/String," Creates a new SerializablePermission with the specified name.\n The name is the symbolic name of the SerializablePermission, such as\n "enableSubstitution", etc.\n\n @param name the name of the SerializablePermission.\n\n @throws NullPointerException if <code>name</code> is <code>null</code>.\n @throws IllegalArgumentException if <code>name</code> is empty.\n"
10499,class,java/io/SequenceInputStream," A <code>SequenceInputStream</code> represents\n the logical concatenation of other input\n streams. It starts out with an ordered\n collection of input streams and reads from\n the first one until end of file is reached,\n whereupon it reads from the second one,\n and so on, until end of file is reached\n on the last of the contained input streams.\n\n @author  Author van Hoff\n @version 1.34, 03/23/10\n @since   JDK1.0\n"
10505,method,java/io/SequenceInputStream/SequenceInputStream/InputStream;InputStream," Initializes a newly\n created <code>SequenceInputStream</code>\n by remembering the two arguments, which\n will be read in order, first <code>s1</code>\n and then <code>s2</code>, to provide the\n bytes to be read from this <code>SequenceInputStream</code>.\n\n @param   s1   the first input stream to read.\n @param   s2   the second input stream to read.\n"
10522,method,java/io/RandomAccessFile/getChannel/," Returns the unique {@link java.nio.channels.FileChannel FileChannel}\n object associated with this file.\n\n <p> The {@link java.nio.channels.FileChannel#position()\n </code>position<code>} of the returned channel will always be equal to\n this object's file-pointer offset as returned by the {@link\n #getFilePointer getFilePointer} method.  Changing this object's\n file-pointer offset, whether explicitly or by reading or writing bytes,\n will change the position of the channel, and vice versa.  Changing the\n file's length via this object will change the length seen via the file\n channel, and vice versa.\n\n @return  the file channel associated with this file\n\n @since 1.4\n @spec JSR-51\n"
10562,class,java/io/PushbackReader," A character-stream reader that allows characters to be pushed back into the\n stream.\n\n @version 	1.22, 10/03/23\n @author	Mark Reinhold\n @since	JDK1.1\n"
10569,method,java/io/PushbackReader/mark/int," Marks the present position in the stream. The <code>mark</code>\n for class <code>PushbackReader</code> always throws an exception.\n\n @exception  IOException  Always, since mark is not supported\n"
10570,method,java/io/PushbackReader/reset/," Resets the stream. The <code>reset</code> method of \n <code>PushbackReader</code> always throws an exception.\n\n @exception  IOException  Always, since reset is not supported\n"
10571,method,java/io/PushbackReader/markSupported/," Tells whether this stream supports the mark() operation, which it does\n not.\n"
10574,method,java/io/PushbackReader/PushbackReader/Reader;int," Creates a new pushback reader with a pushback buffer of the given size.\n\n @param   in   The reader from which characters will be read\n @param	size The size of the pushback buffer\n @exception IllegalArgumentException if size is <= 0\n"
10575,method,java/io/PushbackReader/PushbackReader/Reader," Creates a new pushback reader with a one-character pushback buffer.\n\n @param   in  The reader from which characters will be read\n"
10584,method,java/io/PushbackInputStream/markSupported/," Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods, which it does not.\n\n @return   <code>false</code>, since this class does not support the\n           <code>mark</code> and <code>reset</code> methods.\n @see     java.io.InputStream#mark(int)\n @see     java.io.InputStream#reset()\n"
10588,method,java/io/PushbackInputStream/PushbackInputStream/InputStream;int," Creates a <code>PushbackInputStream</code>\n with a pushback buffer of the specified <code>size</code>,\n and saves its  argument, the input stream\n <code>in</code>, for later use. Initially,\n there is no pushed-back byte  (the field\n <code>pushBack</code> is initialized to\n <code>-1</code>).\n\n @param  in    the input stream from which bytes will be read.\n @param  size  the size of the pushback buffer.\n @exception IllegalArgumentException if size is <= 0\n @since  JDK1.1\n"
10589,method,java/io/PushbackInputStream/PushbackInputStream/InputStream," Creates a <code>PushbackInputStream</code>\n and saves its  argument, the input stream\n <code>in</code>, for later use. Initially,\n there is no pushed-back byte  (the field\n <code>pushBack</code> is initialized to\n <code>-1</code>).\n\n @param   in   the input stream from which bytes will be read.\n"
10590,field,java/io/PushbackInputStream/buf," The pushback buffer.\n @since   JDK1.1\n"
10591,field,java/io/PushbackInputStream/pos," The position within the pushback buffer from which the next byte will\n be read.  When the buffer is empty, <code>pos</code> is equal to\n <code>buf.length</code>; when the buffer is full, <code>pos</code> is\n equal to zero.\n\n @since   JDK1.1\n"
10593,method,java/io/PrintWriter/flush/," Flushes the stream.\n @see #checkError()\n"
10594,method,java/io/PrintWriter/close/," Closes the stream and releases any system resources associated\n with it. Closing a previously closed stream has no effect.\n\n @see #checkError()\n"
10598,method,java/io/PrintWriter/write/int," Writes a single character.\n @param c int specifying a character to be written.\n"
10599,method,java/io/PrintWriter/write/char[];int;int," Writes A Portion of an array of characters.\n @param buf Array of characters\n @param off Offset from which to start writing characters\n @param len Number of characters to write\n"
10601,method,java/io/PrintWriter/write/String;int;int," Writes a portion of a string.\n @param s A String\n @param off Offset from which to start writing characters\n @param len Number of characters to write\n"
10603,method,java/io/PrintWriter/print/boolean," Prints a boolean value.  The string produced by <code>{@link\n java.lang.String#valueOf(boolean)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n @param      b   The <code>boolean</code> to be printed\n"
10604,method,java/io/PrintWriter/print/char," Prints a character.  The character is translated into one or more bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n @param      c   The <code>char</code> to be printed\n"
10605,method,java/io/PrintWriter/print/int," Prints an integer.  The string produced by <code>{@link\n java.lang.String#valueOf(int)}</code> is translated into bytes according\n to the platform's default character encoding, and these bytes are\n written in exactly the manner of the <code>{@link #write(int)}</code>\n method.\n\n @param      i   The <code>int</code> to be printed\n @see        java.lang.Integer#toString(int)\n"
10606,method,java/io/PrintWriter/print/long," Prints a long integer.  The string produced by <code>{@link\n java.lang.String#valueOf(long)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link #write(int)}</code>\n method.\n\n @param      l   The <code>long</code> to be printed\n @see        java.lang.Long#toString(long)\n"
10607,method,java/io/PrintWriter/print/float," Prints a floating-point number.  The string produced by <code>{@link\n java.lang.String#valueOf(float)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link #write(int)}</code>\n method.\n\n @param      f   The <code>float</code> to be printed\n @see        java.lang.Float#toString(float)\n"
10608,method,java/io/PrintWriter/print/double," Prints a double-precision floating-point number.  The string produced by\n <code>{@link java.lang.String#valueOf(double)}</code> is translated into\n bytes according to the platform's default character encoding, and these\n bytes are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n @param      d   The <code>double</code> to be printed\n @see        java.lang.Double#toString(double)\n"
10609,method,java/io/PrintWriter/print/char[]," Prints an array of characters.  The characters are converted into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link #write(int)}</code>\n method.\n\n @param      s   The array of chars to be printed\n\n @throws  NullPointerException  If <code>s</code> is <code>null</code>\n"
10610,method,java/io/PrintWriter/print/String," Prints a string.  If the argument is <code>null</code> then the string\n <code>"null"</code> is printed.  Otherwise, the string's characters are\n converted into bytes according to the platform's default character\n encoding, and these bytes are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      s   The <code>String</code> to be printed\n"
10611,method,java/io/PrintWriter/print/Object," Prints an object.  The string produced by the <code>{@link\n java.lang.String#valueOf(Object)}</code> method is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the <code>{@link #write(int)}</code>\n method.\n\n @param      obj   The <code>Object</code> to be printed\n @see        java.lang.Object#toString()\n"
10629,method,java/io/PrintWriter/PrintWriter/Writer," Creates a new PrintWriter, without automatic line flushing.\n\n @param  out        A character-output stream\n"
10630,method,java/io/PrintWriter/PrintWriter/Writer;boolean," Creates a new PrintWriter.\n\n @param  out        A character-output stream\n @param  autoFlush  A boolean; if true, the <tt>println</tt>,\n                    <tt>printf</tt>, or <tt>format</tt> methods will\n                    flush the output buffer\n"
10637,field,java/io/PrintWriter/out," The underlying character-output stream of this\n <code>PrintWriter</code>.\n\n @since 1.2\n"
10639,method,java/io/PrintStream/flush/," Flushes the stream.  This is done by writing any buffered output bytes to\n the underlying output stream and then flushing that stream.\n\n @see        java.io.OutputStream#flush()\n"
10640,method,java/io/PrintStream/close/," Closes the stream.  This is done by flushing the stream and then closing\n the underlying output stream.\n\n @see        java.io.OutputStream#close()\n"
10646,method,java/io/PrintStream/print/boolean," Prints a boolean value.  The string produced by <code>{@link\n java.lang.String#valueOf(boolean)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      b   The <code>boolean</code> to be printed\n"
10647,method,java/io/PrintStream/print/char," Prints a character.  The character is translated into one or more bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      c   The <code>char</code> to be printed\n"
10648,method,java/io/PrintStream/print/int," Prints an integer.  The string produced by <code>{@link\n java.lang.String#valueOf(int)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      i   The <code>int</code> to be printed\n @see        java.lang.Integer#toString(int)\n"
10649,method,java/io/PrintStream/print/long," Prints a long integer.  The string produced by <code>{@link\n java.lang.String#valueOf(long)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      l   The <code>long</code> to be printed\n @see        java.lang.Long#toString(long)\n"
10650,method,java/io/PrintStream/print/float," Prints a floating-point number.  The string produced by <code>{@link\n java.lang.String#valueOf(float)}</code> is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      f   The <code>float</code> to be printed\n @see        java.lang.Float#toString(float)\n"
10651,method,java/io/PrintStream/print/double," Prints a double-precision floating-point number.  The string produced by\n <code>{@link java.lang.String#valueOf(double)}</code> is translated into\n bytes according to the platform's default character encoding, and these\n bytes are written in exactly the manner of the <code>{@link\n #write(int)}</code> method.\n\n @param      d   The <code>double</code> to be printed\n @see        java.lang.Double#toString(double)\n"
10652,method,java/io/PrintStream/print/char[]," Prints an array of characters.  The characters are converted into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      s   The array of chars to be printed\n\n @throws  NullPointerException  If <code>s</code> is <code>null</code>\n"
10653,method,java/io/PrintStream/print/String," Prints a string.  If the argument is <code>null</code> then the string\n <code>"null"</code> is printed.  Otherwise, the string's characters are\n converted into bytes according to the platform's default character\n encoding, and these bytes are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      s   The <code>String</code> to be printed\n"
10654,method,java/io/PrintStream/print/Object," Prints an object.  The string produced by the <code>{@link\n java.lang.String#valueOf(Object)}</code> method is translated into bytes\n according to the platform's default character encoding, and these bytes\n are written in exactly the manner of the\n <code>{@link #write(int)}</code> method.\n\n @param      obj   The <code>Object</code> to be printed\n @see        java.lang.Object#toString()\n"
10672,method,java/io/PrintStream/PrintStream/OutputStream," Creates a new print stream.  This stream will not flush automatically.\n\n @param  out        The output stream to which values and objects will be\n                    printed\n\n @see java.io.PrintWriter#PrintWriter(java.io.OutputStream)\n"
10679,class,java/io/PipedWriter," Piped character-output streams.\n\n @version 	1.20, 10/03/23\n @author	Mark Reinhold\n @since	JDK1.1\n"
10687,class,java/io/PipedReader," Piped character-input streams.\n\n @version 	1.20, 10/03/23\n @author	Mark Reinhold\n @since	JDK1.1\n"
10691,method,java/io/PipedReader/ready/," Tell whether this stream is ready to be read.  A piped character\n stream is ready if the circular buffer is not empty.\n\n @exception  IOException  if the pipe is\n			<a href=PipedInputStream.html#BROKEN> <code>broken</code></a>,\n			{@link #connect(java.io.PipedWriter) unconnected}, or closed.\n"
10716,field,java/io/PipedInputStream/PIPE_SIZE," The default size of the pipe's circular input buffer.\n @since   JDK1.1\n"
10717,field,java/io/PipedInputStream/buffer," The circular buffer into which incoming data is placed.\n @since   JDK1.1\n"
10718,field,java/io/PipedInputStream/in," The index of the position in the circular buffer at which the\n next byte of data will be stored when received from the connected\n piped output stream. <code>in&lt;0</code> implies the buffer is empty,\n <code>in==out</code> implies the buffer is full\n @since   JDK1.1\n"
10719,field,java/io/PipedInputStream/out," The index of the position in the circular buffer at which the next\n byte of data will be read by this piped input stream.\n @since   JDK1.1\n"
10726,method,java/io/OutputStreamWriter/close/,""
10727,method,java/io/OutputStreamWriter/OutputStreamWriter/OutputStream;String," Creates an OutputStreamWriter that uses the named charset.\n\n @param  out\n         An OutputStream\n\n @param  charsetName\n         The name of a supported\n         {@link java.nio.charset.Charset </code>charset<code>}\n\n @exception  UnsupportedEncodingException\n             If the named encoding is not supported\n"
10728,method,java/io/OutputStreamWriter/OutputStreamWriter/OutputStream," Creates an OutputStreamWriter that uses the default character encoding.\n\n @param  out  An OutputStream\n"
10729,method,java/io/OutputStreamWriter/OutputStreamWriter/OutputStream;Charset," Creates an OutputStreamWriter that uses the given charset. </p>\n\n @param  out\n         An OutputStream\n\n @param  cs\n         A charset\n\n @since 1.4\n @spec JSR-51\n"
10730,method,java/io/OutputStreamWriter/OutputStreamWriter/OutputStream;CharsetEncoder," Creates an OutputStreamWriter that uses the given charset encoder.  </p>\n\n @param  out\n         An OutputStream\n\n @param  enc\n         A charset encoder\n\n @since 1.4\n @spec JSR-51\n"
10737,method,java/io/OutputStream/OutputStream/,""
10739,field,java/io/OptionalDataException/length," The number of bytes of primitive data available to be read\n in the current buffer.\n\n @serial\n"
10740,field,java/io/OptionalDataException/eof," True if there is no more data in the buffered part of the stream.\n\n @serial\n"
10741,class,java/io/ObjectStreamField," A description of a Serializable field from a Serializable class.  An array\n of ObjectStreamFields is used to declare the Serializable fields of a class.\n\n @author	Mike Warres\n @author	Roger Riggs\n @version 1.48, 10/03/23\n @see ObjectStreamClass\n @since 1.2\n"
10742,method,java/io/ObjectStreamField/getName/," Get the name of this field.\n\n @return	a <code>String</code> representing the name of the serializable\n 		field \n"
10743,method,java/io/ObjectStreamField/getType/," Get the type of the field.  If the type is non-primitive and this\n <code>ObjectStreamField</code> was obtained from a deserialized {@link\n ObjectStreamClass} instance, then <code>Object.class</code> is returned.\n Otherwise, the <code>Class</code> object for the type of the field is\n returned.\n\n @return	a <code>Class</code> object representing the type of the\n 		serializable field\n"
10744,method,java/io/ObjectStreamField/getTypeCode/,"\n Returns character encoding of field type.  The encoding is as follows:\n <blockquote><pre>\n B            byte\n C            char\n D            double\n F            float\n I            int\n J            long\n L            class or interface\n S            short\n Z            boolean\n [            array\n </pre></blockquote>\n\n @return	the typecode of the serializable field\n"
10745,method,java/io/ObjectStreamField/getTypeString/," Return the JVM type signature.\n\n @return	null if this field has a primitive type.\n"
10746,method,java/io/ObjectStreamField/getOffset/," Offset of field within instance data.\n\n @return	the offset of this field\n @see #setOffset\n"
10747,method,java/io/ObjectStreamField/setOffset/int,"\n Offset within instance data.\n\n @param	offset the offset of the field\n @see #getOffset\n"
10749,method,java/io/ObjectStreamField/isUnshared/," Returns boolean value indicating whether or not the serializable field\n represented by this ObjectStreamField instance is unshared.\n\n @since 1.4\n"
10750,method,java/io/ObjectStreamField/compareTo/Object," Compare this field with another <code>ObjectStreamField</code>.  Return\n -1 if this is smaller, 0 if equal, 1 if greater.  Types that are\n primitives are "smaller" than object types.  If equal, the field names\n are compared.\n"
10751,method,java/io/ObjectStreamField/toString/," Return a string that describes this field.\n"
10755,method,java/io/ObjectStreamException/ObjectStreamException/String," Create an ObjectStreamException with the specified argument.\n\n @param classname the detailed message for the exception\n"
10756,method,java/io/ObjectStreamException/ObjectStreamException/," Create an ObjectStreamException.\n"
10757,interface,java/io/ObjectStreamConstants," Constants written into the Object Serialization Stream. \n\n @author  unascribed\n @version 1.37, 03/23/10\n @since JDK 1.1\n"
10758,field,java/io/ObjectStreamConstants/STREAM_MAGIC," Magic number that is written to the stream header.\n"
10759,field,java/io/ObjectStreamConstants/STREAM_VERSION," Version number that is written to the stream header.\n"
10760,field,java/io/ObjectStreamConstants/TC_BASE,"\n First tag value.\n"
10761,field,java/io/ObjectStreamConstants/TC_NULL," Null object reference.\n"
10762,field,java/io/ObjectStreamConstants/TC_REFERENCE," Reference to an object already written into the stream.\n"
10763,field,java/io/ObjectStreamConstants/TC_CLASSDESC," new Class Descriptor.\n"
10764,field,java/io/ObjectStreamConstants/TC_OBJECT," new Object.\n"
10765,field,java/io/ObjectStreamConstants/TC_STRING,"\n new String.\n"
10766,field,java/io/ObjectStreamConstants/TC_ARRAY," new Array.\n"
10767,field,java/io/ObjectStreamConstants/TC_CLASS," Reference to Class.\n"
10768,field,java/io/ObjectStreamConstants/TC_BLOCKDATA," Block of optional data. Byte following tag indicates number\n of bytes in this block data.\n"
10769,field,java/io/ObjectStreamConstants/TC_ENDBLOCKDATA,"\n End of optional block data blocks for an object.\n"
10770,field,java/io/ObjectStreamConstants/TC_RESET," Reset stream context. All handles written into stream are reset.\n"
10771,field,java/io/ObjectStreamConstants/TC_BLOCKDATALONG," long Block data. The long following the tag indicates the\n number of bytes in this block data.\n"
10772,field,java/io/ObjectStreamConstants/TC_EXCEPTION," Exception during write. \n"
10773,field,java/io/ObjectStreamConstants/TC_LONGSTRING," Long string.\n"
10774,field,java/io/ObjectStreamConstants/TC_PROXYCLASSDESC," new Proxy Class Descriptor.\n"
10775,field,java/io/ObjectStreamConstants/TC_ENUM," new Enum constant.\n @since 1.5\n"
10776,field,java/io/ObjectStreamConstants/TC_MAX,"\n Last tag value.\n"
10777,field,java/io/ObjectStreamConstants/baseWireHandle," First wire handle to be assigned. \n"
10778,field,java/io/ObjectStreamConstants/SC_WRITE_METHOD,"\n Bit mask for ObjectStreamClass flag. Indicates a Serializable class \n defines its own writeObject method.\n"
10779,field,java/io/ObjectStreamConstants/SC_BLOCK_DATA," Bit mask for ObjectStreamClass flag. Indicates Externalizable data \n written in Block Data mode.\n Added for PROTOCOL_VERSION_2.\n\n @see #PROTOCOL_VERSION_2\n @since 1.2\n"
10780,field,java/io/ObjectStreamConstants/SC_SERIALIZABLE," Bit mask for ObjectStreamClass flag. Indicates class is Serializable.\n"
10781,field,java/io/ObjectStreamConstants/SC_EXTERNALIZABLE," Bit mask for ObjectStreamClass flag. Indicates class is Externalizable.\n"
10782,field,java/io/ObjectStreamConstants/SC_ENUM," Bit mask for ObjectStreamClass flag. Indicates class is an enum type.\n @since 1.5\n"
10783,field,java/io/ObjectStreamConstants/SUBSTITUTION_PERMISSION," Enable substitution of one object for another during \n serialization/deserialization.\n\n @see java.io.ObjectOutputStream#enableReplaceObject(boolean)\n @see java.io.ObjectInputStream#enableResolveObject(boolean)\n @since 1.2\n"
10786,field,java/io/ObjectStreamConstants/PROTOCOL_VERSION_2," A Stream Protocol Version. <p>\n \n This protocol is written by JVM 1.2.\n\n Externalizable data is written in block data mode and is \n terminated with TC_ENDBLOCKDATA. Externalizable classdescriptor\n flags has SC_BLOCK_DATA enabled. JVM 1.1.6 and greater can \n read this format change.\n\n Enables writing a nonSerializable class descriptor into the\n stream. The serialVersionUID of a nonSerializable class is \n set to 0L. \n\n @see java.io.ObjectOutputStream#useProtocolVersion(int)\n @see #SC_BLOCK_DATA\n @since 1.2\n"
10787,class,java/io/ObjectStreamClass," Serialization's descriptor for classes.  It contains the name and\n serialVersionUID of the class.  The ObjectStreamClass for a specific class\n loaded in this Java VM can be found/created using the lookup method.\n \n <p>The algorithm to compute the SerialVersionUID is described in \n <a href="../../../platform/serialization/spec/class.html#4100">Object\n Serialization Specification, Section 4.6, Stream Unique Identifiers</a>.\n\n @author	Mike Warres\n @author	Roger Riggs\n @version 1.153, 03/23/10\n @see ObjectStreamField\n @see <a href="../../../platform/serialization/spec/class.html">Object Serialization Specification, Section 4, Class Descriptors</a>\n @since   JDK1.1\n"
10788,method,java/io/ObjectStreamClass/lookup/Class,"\n Find the descriptor for a class that can be serialized.  Creates an\n ObjectStreamClass instance if one does not exist yet for class. Null is\n returned if the specified class does not implement java.io.Serializable\n or java.io.Externalizable.\n\n @param	cl class for which to get the descriptor\n @return	the class descriptor for the specified class\n"
10789,method,java/io/ObjectStreamClass/lookupAny/Class," Returns the descriptor for any class, regardless of whether it\n implements {@link Serializable}.\n\n @param        cl class for which to get the descriptor\n @return       the class descriptor for the specified class\n @since 1.6\n"
10790,method,java/io/ObjectStreamClass/getName/," Returns the name of the class described by this descriptor.\n This method returns the name of the class in the format that\n is used by the {@link Class#getName} method.\n\n @return a string representing the name of the class\n"
10791,method,java/io/ObjectStreamClass/getSerialVersionUID/," Return the serialVersionUID for this class.  The serialVersionUID\n defines a set of classes all with the same name that have evolved from a\n common root class and agree to be serialized and deserialized using a\n common format.  NonSerializable classes have a serialVersionUID of 0L.\n\n @return	the SUID of the class described by this descriptor\n"
10792,method,java/io/ObjectStreamClass/forClass/," Return the class in the local VM that this version is mapped to.  Null\n is returned if there is no corresponding local class.\n\n @return	the <code>Class</code> instance that this descriptor represents\n"
10793,method,java/io/ObjectStreamClass/getFields/," Return an array of the fields of this serializable class.\n\n @return	an array containing an element for each persistent field of\n 		this class. Returns an array of length zero if there are no\n 		fields.\n @since 1.2\n"
10794,method,java/io/ObjectStreamClass/getField/String," Get the field of this class by name.\n\n @param	name the name of the data field to look for\n @return	The ObjectStreamField object of the named field or null if\n 		there is no such named field.\n"
10795,method,java/io/ObjectStreamClass/toString/," Return a string describing this ObjectStreamClass.\n"
10796,field,java/io/ObjectStreamClass/NO_FIELDS,"serialPersistentFields value indicating no serializable fields "
10831,class,java/io/ObjectOutputStream/PutField," Provide programmatic access to the persistent fields to be written\n to ObjectOutput.\n\n @since 1.2\n"
10832,method,java/io/ObjectOutputStream/PutField/put/String;boolean," Put the value of the named boolean field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>boolean</code>\n"
10833,method,java/io/ObjectOutputStream/PutField/put/String;byte," Put the value of the named byte field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>byte</code>\n"
10834,method,java/io/ObjectOutputStream/PutField/put/String;char," Put the value of the named char field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>char</code>\n"
10835,method,java/io/ObjectOutputStream/PutField/put/String;short," Put the value of the named short field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>short</code>\n"
10836,method,java/io/ObjectOutputStream/PutField/put/String;int," Put the value of the named int field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>int</code>\n"
10837,method,java/io/ObjectOutputStream/PutField/put/String;long," Put the value of the named long field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>long</code>\n"
10838,method,java/io/ObjectOutputStream/PutField/put/String;float," Put the value of the named float field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>float</code>\n"
10839,method,java/io/ObjectOutputStream/PutField/put/String;double," Put the value of the named double field into the persistent field.\n\n @param  name the name of the serializable field\n @param  val the value to assign to the field\n @throws IllegalArgumentException if <code>name</code> does not\n match the name of a serializable field for the class whose fields\n are being written, or if the type of the named field is not\n <code>double</code>\n"
10842,method,java/io/ObjectOutputStream/PutField/ObjectOutputStream/PutField/,""
10844,method,java/io/ObjectOutput/writeObject/Object," Write an object to the underlying storage or stream.  The\n class that implements this interface defines how the object is\n written.\n\n @param obj the object to be written\n @exception IOException Any of the usual Input/Output related exceptions.\n"
10851,method,java/io/ObjectInputValidation/validateObject/," Validates the object.\n\n @exception InvalidObjectException If the object cannot validate itself.\n"
10886,class,java/io/ObjectInputStream/GetField," Provide access to the persistent fields read from the input stream.\n"
10887,method,java/io/ObjectInputStream/GetField/getObjectStreamClass/," Get the ObjectStreamClass that describes the fields in the stream.\n\n @return  the descriptor class that describes the serializable fields\n"
10898,method,java/io/ObjectInputStream/GetField/ObjectInputStream/GetField/,""
10900,method,java/io/ObjectInput/readObject/," Read and return an object. The class that implements this interface\n defines where the object is "read" from.\n\n @return the object read from the stream\n @exception java.lang.ClassNotFoundException If the class of a serialized\n      object cannot be found.\n @exception IOException If any of the usual Input/Output\n related exceptions occur.\n"
10908,method,java/io/NotSerializableException/NotSerializableException/String,"\n Constructs a NotSerializableException object with message string. \n\n @param classname Class of the instance being serialized/deserialized.\n"
10909,method,java/io/NotSerializableException/NotSerializableException/,"  Constructs a NotSerializableException object.\n"
10910,class,java/io/NotActiveException," Thrown when serialization or deserialization is not active.\n\n @author  unascribed\n @version 1.19, 03/23/10\n @since   JDK1.1\n"
10911,method,java/io/NotActiveException/NotActiveException/String," Constructor to create a new NotActiveException with the reason given.\n\n @param reason  a String describing the reason for the exception.\n"
10912,method,java/io/NotActiveException/NotActiveException/," Constructor to create a new NotActiveException without a reason.\n"
10914,method,java/io/LineNumberReader/setLineNumber/int," Set the current line number.\n\n @param  lineNumber\n         An int specifying the line number\n\n @see #getLineNumber\n"
10915,method,java/io/LineNumberReader/getLineNumber/," Get the current line number.\n\n @return  The current line number\n\n @see #setLineNumber\n"
10921,method,java/io/LineNumberReader/reset/," Reset the stream to the most recent mark.\n\n @throws  IOException\n          If the stream has not been marked, or if the mark has been\n          invalidated \n"
10922,method,java/io/LineNumberReader/LineNumberReader/Reader," Create a new line-numbering reader, using the default input-buffer\n size.\n\n @param  in\n         A Reader object to provide the underlying stream\n"
10923,method,java/io/LineNumberReader/LineNumberReader/Reader;int," Create a new line-numbering reader, reading characters into a buffer of\n the given size.\n\n @param  in\n         A Reader object to provide the underlying stream\n\n @param  sz\n         An int specifying the size of the buffer\n"
10928,method,java/io/LineNumberInputStream/setLineNumber/int," Sets the line number to the specified argument. \n\n @param      lineNumber   the new line number.\n @see #getLineNumber\n"
10929,method,java/io/LineNumberInputStream/getLineNumber/," Returns the current line number.\n\n @return     the current line number.\n @see #setLineNumber\n"
10933,method,java/io/LineNumberInputStream/LineNumberInputStream/InputStream," Constructs a newline number input stream that reads its input \n from the specified input stream. \n\n @param      in   the underlying input stream.\n"
10935,method,java/io/InvalidObjectException/InvalidObjectException/String," Constructs an <code>InvalidObjectException</code>.\n @param reason Detailed message explaining the reason for the failure.\n\n @see ObjectInputValidation\n"
10936,class,java/io/InvalidClassException," Thrown when the Serialization runtime detects one of the following\n problems with a Class.\n <UL>\n <LI> The serial version of the class does not match that of the class\n      descriptor read from the stream\n <LI> The class contains unknown datatypes\n <LI> The class does not have an accessible no-arg constructor\n </UL>\n\n @author  unascribed\n @version 1.25, 03/23/10\n @since   JDK1.1\n"
10937,method,java/io/InvalidClassException/getMessage/," Produce the message and include the classname, if present.\n"
10938,method,java/io/InvalidClassException/InvalidClassException/String," Report an InvalidClassException for the reason specified.\n\n @param reason  String describing the reason for the exception.\n"
10939,method,java/io/InvalidClassException/InvalidClassException/String;String," Constructs an InvalidClassException object.\n\n @param cname   a String naming the invalid class.\n @param reason  a String describing the reason for the exception.\n"
10940,field,java/io/InvalidClassException/classname," Name of the invalid class.\n\n @serial Name of the invalid class.\n"
10943,method,java/io/InterruptedIOException/InterruptedIOException/String," Constructs an <code>InterruptedIOException</code> with the\n specified detail message. The string <code>s</code> can be\n retrieved later by the\n <code>{@link java.lang.Throwable#getMessage}</code>\n method of class <code>java.lang.Throwable</code>.\n\n @param   s   the detail message.\n"
10950,method,java/io/InputStreamReader/close/,""
10951,method,java/io/InputStreamReader/InputStreamReader/InputStream," Creates an InputStreamReader that uses the default charset.\n\n @param  in   An InputStream\n"
10952,method,java/io/InputStreamReader/InputStreamReader/InputStream;String," Creates an InputStreamReader that uses the named charset.\n\n @param  in\n         An InputStream\n\n @param  charsetName\n         The name of a supported\n         {@link java.nio.charset.Charset </code>charset<code>}\n\n @exception  UnsupportedEncodingException\n             If the named charset is not supported\n"
10953,method,java/io/InputStreamReader/InputStreamReader/InputStream;Charset," Creates an InputStreamReader that uses the given charset. </p>\n\n @param  in       An InputStream\n @param  cs       A charset\n\n @since 1.4\n @spec JSR-51\n"
10954,method,java/io/InputStreamReader/InputStreamReader/InputStream;CharsetDecoder," Creates an InputStreamReader that uses the given charset decoder.  </p>\n\n @param  in       An InputStream\n @param  dec      A charset decoder\n\n @since 1.4\n @spec JSR-51\n"
10964,method,java/io/InputStream/markSupported/," Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. Whether or not <code>mark</code> and\n <code>reset</code> are supported is an invariant property of a\n particular input stream instance. The <code>markSupported</code> method\n of <code>InputStream</code> returns <code>false</code>.\n\n @return  <code>true</code> if this stream instance supports the mark\n          and reset methods; <code>false</code> otherwise.\n @see     java.io.InputStream#mark(int)\n @see     java.io.InputStream#reset()\n"
10965,method,java/io/InputStream/InputStream/,""
10966,class,java/io/IOException," Signals that an I/O exception of some sort has occurred. This\n class is the general class of exceptions produced by failed or\n interrupted I/O operations.\n\n @author  unascribed\n @version 1.25, 03/23/10\n @see     java.io.InputStream\n @see     java.io.OutputStream\n @since   JDK1.0\n"
10968,method,java/io/IOException/IOException/String," Constructs an {@code IOException} with the specified detail message.\n\n @param message\n        The detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method)\n"
10970,method,java/io/IOException/IOException/Throwable," Constructs an {@code IOException} with the specified cause and a\n detail message of {@code (cause==null ? null : cause.toString())}\n (which typically contains the class and detail message of {@code cause}).\n This constructor is useful for IO exceptions that are little more\n than wrappers for other throwables.\n\n @param cause\n        The cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A null value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n\n @since 1.6\n"
10980,method,java/io/FilterWriter/close/,""
10981,method,java/io/FilterWriter/FilterWriter/Writer," Create a new filtered writer.\n\n @param out  a Writer object to provide the underlying stream.\n @throws NullPointerException if <code>out</code> is <code>null</code>\n"
10982,field,java/io/FilterWriter/out," The underlying character-output stream.\n"
10988,method,java/io/FilterReader/markSupported/," Tells whether this stream supports the mark() operation.\n"
10991,method,java/io/FilterReader/close/,""
10992,method,java/io/FilterReader/FilterReader/Reader," Creates a new filtered reader.\n\n @param in  a Reader object providing the underlying stream.\n @throws NullPointerException if <code>in</code> is <code>null</code>\n"
10993,field,java/io/FilterReader/in," The underlying character-input stream.\n"
11000,method,java/io/FilterOutputStream/FilterOutputStream/OutputStream," Creates an output stream filter built on top of the specified \n underlying output stream. \n\n @param   out   the underlying output stream to be assigned to \n                the field <tt>this.out</tt> for later use, or \n                <code>null</code> if this instance is to be \n                created without an underlying stream.\n"
11001,field,java/io/FilterOutputStream/out," The underlying output stream to be filtered. \n"
11011,method,java/io/FilterInputStream/markSupported/," Tests if this input stream supports the <code>mark</code> \n and <code>reset</code> methods. \n This method\n simply performs <code>in.markSupported()</code>.\n\n @return  <code>true</code> if this stream type supports the\n          <code>mark</code> and <code>reset</code> method;\n          <code>false</code> otherwise.\n @see     java.io.FilterInputStream#in\n @see     java.io.InputStream#mark(int)\n @see     java.io.InputStream#reset()\n"
11012,method,java/io/FilterInputStream/FilterInputStream/InputStream," Creates a <code>FilterInputStream</code>\n by assigning the  argument <code>in</code>\n to the field <code>this.in</code> so as\n to remember it for later use.\n\n @param   in   the underlying input stream, or <code>null</code> if \n          this instance is to be created without an underlying stream.\n"
11013,field,java/io/FilterInputStream/in," The input stream to be filtered. \n"
11014,interface,java/io/FilenameFilter," Instances of classes that implement this interface are used to\n filter filenames. These instances are used to filter directory\n listings in the <code>list</code> method of class\n <code>File</code>, and by the Abstract Window Toolkit's file\n dialog component.\n\n @author  Arthur van Hoff\n @author  Jonathan Payne\n @version 1.25, 03/23/10\n @see     java.awt.FileDialog#setFilenameFilter(java.io.FilenameFilter)\n @see     java.io.File\n @see     java.io.File#list(java.io.FilenameFilter)\n @since   JDK1.0\n"
11017,method,java/io/FileWriter/FileWriter/String," Constructs a FileWriter object given a file name.\n\n @param fileName  String The system-dependent filename.\n @throws IOException  if the named file exists but is a directory rather\n                  than a regular file, does not exist but cannot be\n                  created, or cannot be opened for any other reason\n"
11018,method,java/io/FileWriter/FileWriter/String;boolean," Constructs a FileWriter object given a file name with a boolean\n indicating whether or not to append the data written.\n\n @param fileName  String The system-dependent filename.\n @param append    boolean if <code>true</code>, then data will be written\n                  to the end of the file rather than the beginning.\n @throws IOException  if the named file exists but is a directory rather\n                  than a regular file, does not exist but cannot be\n                  created, or cannot be opened for any other reason\n"
11019,method,java/io/FileWriter/FileWriter/File," Constructs a FileWriter object given a File object.\n\n @param file  a File object to write to.\n @throws IOException  if the file exists but is a directory rather than\n                  a regular file, does not exist but cannot be created,\n                  or cannot be opened for any other reason\n"
11020,method,java/io/FileWriter/FileWriter/File;boolean," Constructs a FileWriter object given a File object. If the second\n argument is <code>true</code>, then bytes will be written to the end\n of the file rather than the beginning.\n\n @param file  a File object to write to\n @param     append    if <code>true</code>, then bytes will be written\n                      to the end of the file rather than the beginning\n @throws IOException  if the file exists but is a directory rather than\n                  a regular file, does not exist but cannot be created,\n                  or cannot be opened for any other reason\n @since 1.4\n"
11021,method,java/io/FileWriter/FileWriter/FileDescriptor," Constructs a FileWriter object associated with a file descriptor.\n\n @param fd  FileDescriptor object to write to.\n"
11023,method,java/io/FileReader/FileReader/String," Creates a new <tt>FileReader</tt>, given the name of the\n file to read from.\n\n @param fileName the name of the file to read from\n @exception  FileNotFoundException  if the named file does not exist,\n                   is a directory rather than a regular file,\n                   or for some other reason cannot be opened for\n                   reading.\n"
11024,method,java/io/FileReader/FileReader/File," Creates a new <tt>FileReader</tt>, given the <tt>File</tt> \n to read from.\n\n @param file the <tt>File</tt> to read from\n @exception  FileNotFoundException  if the file does not exist,\n                   is a directory rather than a regular file,\n                   or for some other reason cannot be opened for\n                   reading.\n"
11025,method,java/io/FileReader/FileReader/FileDescriptor," Creates a new <tt>FileReader</tt>, given the \n <tt>FileDescriptor</tt> to read from.\n\n @param fd the FileDescriptor to read from\n"
11027,method,java/io/FilePermission/implies/Permission," Checks if this FilePermission object "implies" the specified permission.\n <P>\n More specifically, this method returns true if:<p>\n <ul>\n <li> <i>p</i> is an instanceof FilePermission,<p>\n <li> <i>p</i>'s actions are a proper subset of this\n object's actions, and <p>\n <li> <i>p</i>'s pathname is implied by this object's\n      pathname. For example, "/tmp/*" implies "/tmp/foo", since\n      "/tmp/*" encompasses all files in the "/tmp" directory,\n      including the one named "foo".\n </ul>\n\n @param p the permission to check against.\n\n @return <code>true</code> if the specified permission is not\n 			<code>null</code> and is implied by this object,\n			<code>false</code> otherwise.  \n"
11028,method,java/io/FilePermission/equals/Object," Checks two FilePermission objects for equality. Checks that <i>obj</i> is\n a FilePermission, and has the same pathname and actions as this object.\n <P>\n @param obj the object we are testing for equality with this object.\n @return <code>true</code> if obj is a FilePermission, and has the same\n 		pathname and actions as this FilePermission object,\n		<code>false</code> otherwise.\n"
11029,method,java/io/FilePermission/hashCode/," Returns the hash code value for this object.\n \n @return a hash code value for this object.\n"
11039,method,java/io/FileOutputStream/getChannel/," Returns the unique {@link java.nio.channels.FileChannel FileChannel}\n object associated with this file output stream. </p>\n\n <p> The initial {@link java.nio.channels.FileChannel#position()\n </code>position<code>} of the returned channel will be equal to the\n number of bytes written to the file so far unless this stream is in\n append mode, in which case it will be equal to the size of the file.\n Writing bytes to this stream will increment the channel's position\n accordingly.  Changing the channel's position, either explicitly or by\n writing, will change this stream's file position.\n\n @return  the file channel associated with this file output stream\n\n @since 1.4\n @spec JSR-51\n"
11048,method,java/io/FileNotFoundException/FileNotFoundException/String," Constructs a <code>FileNotFoundException</code> with the\n specified detail message. The string <code>s</code> can be\n retrieved later by the\n <code>{@link java.lang.Throwable#getMessage}</code>\n method of class <code>java.lang.Throwable</code>.\n\n @param   s   the detail message.\n"
11049,class,java/io/FileInputStream," A <code>FileInputStream</code> obtains input bytes\n from a file in a file system. What files\n are  available depends on the host environment.\n\n <p><code>FileInputStream</code> is meant for reading streams of raw bytes\n such as image data. For reading streams of characters, consider using\n <code>FileReader</code>.\n\n @author  Arthur van Hoff\n @version 1.69, 03/23/10\n @see     java.io.File\n @see     java.io.FileDescriptor\n @see	    java.io.FileOutputStream\n @since   JDK1.0\n"
11057,method,java/io/FileInputStream/getChannel/," Returns the unique {@link java.nio.channels.FileChannel FileChannel}\n object associated with this file input stream.\n\n <p> The initial {@link java.nio.channels.FileChannel#position()\n </code>position<code>} of the returned channel will be equal to the\n number of bytes read from the file so far.  Reading bytes from this\n stream will increment the channel's position.  Changing the channel's\n position, either explicitly or by reading, will change this stream's\n file position.\n\n @return  the file channel associated with this file input stream\n\n @since 1.4\n @spec JSR-51\n"
11065,method,java/io/File/getName/," Returns the name of the file or directory denoted by this abstract\n pathname.  This is just the last name in the pathname's name\n sequence.  If the pathname's name sequence is empty, then the empty\n string is returned.\n\n @return  The name of the file or directory denoted by this abstract\n          pathname, or the empty string if this pathname's name sequence\n          is empty\n"
11066,method,java/io/File/getParent/," Returns the pathname string of this abstract pathname's parent, or\n <code>null</code> if this pathname does not name a parent directory.\n\n <p> The <em>parent</em> of an abstract pathname consists of the\n pathname's prefix, if any, and each name in the pathname's name\n sequence except for the last.  If the name sequence is empty then\n the pathname does not name a parent directory.\n\n @return  The pathname string of the parent directory named by this\n          abstract pathname, or <code>null</code> if this pathname\n          does not name a parent\n"
11067,method,java/io/File/getParentFile/," Returns the abstract pathname of this abstract pathname's parent,\n or <code>null</code> if this pathname does not name a parent\n directory.\n\n <p> The <em>parent</em> of an abstract pathname consists of the\n pathname's prefix, if any, and each name in the pathname's name\n sequence except for the last.  If the name sequence is empty then\n the pathname does not name a parent directory.\n\n @return  The abstract pathname of the parent directory named by this\n          abstract pathname, or <code>null</code> if this pathname\n          does not name a parent\n\n @since 1.2\n"
11068,method,java/io/File/getPath/," Converts this abstract pathname into a pathname string.  The resulting\n string uses the {@link #separator default name-separator character} to\n separate the names in the name sequence.\n\n @return  The string form of this abstract pathname\n"
11069,method,java/io/File/isAbsolute/," Tests whether this abstract pathname is absolute.  The definition of\n absolute pathname is system dependent.  On UNIX systems, a pathname is\n absolute if its prefix is <code>"/"</code>.  On Microsoft Windows systems, a\n pathname is absolute if its prefix is a drive specifier followed by\n <code>"\\"</code>, or if its prefix is <code>"\\\\"</code>.\n\n @return  <code>true</code> if this abstract pathname is absolute,\n          <code>false</code> otherwise\n"
11105,method,java/io/File/getTotalSpace/," Returns the size of the partition <a href="#partName">named</a> by this\n abstract pathname.\n\n @return  The size, in bytes, of the partition or <tt>0L</tt> if this\n          abstract pathname does not name a partition\n\n @throws  SecurityException\n          If a security manager has been installed and it denies\n          {@link RuntimePermission}<tt>("getFileSystemAttributes")</tt>\n          or its {@link SecurityManager#checkRead(String)} method denies\n          read access to the file named by this abstract pathname\n\n @since  1.6\n"
11110,method,java/io/File/compareTo/File," Compares two abstract pathnames lexicographically.  The ordering\n defined by this method depends upon the underlying system.  On UNIX\n systems, alphabetic case is significant in comparing pathnames; on Microsoft Windows\n systems it is not.\n\n @param   pathname  The abstract pathname to be compared to this abstract\n                    pathname\n \n @return  Zero if the argument is equal to this abstract pathname, a\n		value less than zero if this abstract pathname is\n		lexicographically less than the argument, or a value greater\n		than zero if this abstract pathname is lexicographically\n		greater than the argument\n\n @since   1.2\n"
11112,method,java/io/File/hashCode/," Computes a hash code for this abstract pathname.  Because equality of\n abstract pathnames is inherently system-dependent, so is the computation\n of their hash codes.  On UNIX systems, the hash code of an abstract\n pathname is equal to the exclusive <em>or</em> of the hash code\n of its pathname string and the decimal value\n <code>1234321</code>.  On Microsoft Windows systems, the hash\n code is equal to the exclusive <em>or</em> of the hash code of\n its pathname string converted to lower case and the decimal\n value <code>1234321</code>.  Locale is not taken into account on\n lowercasing the pathname string.\n\n @return  A hash code for this abstract pathname\n"
11113,method,java/io/File/toString/," Returns the pathname string of this abstract pathname.  This is just the\n string returned by the <code>{@link #getPath}</code> method.\n\n @return  The string form of this abstract pathname\n"
11114,method,java/io/File/File/String," Creates a new <code>File</code> instance by converting the given\n pathname string into an abstract pathname.  If the given string is\n the empty string, then the result is the empty abstract pathname.\n\n @param   pathname  A pathname string\n @throws  NullPointerException\n          If the <code>pathname</code> argument is <code>null</code>\n"
11118,field,java/io/File/separatorChar," The system-dependent default name-separator character.  This field is\n initialized to contain the first character of the value of the system\n property <code>file.separator</code>.  On UNIX systems the value of this\n field is <code>'/'</code>; on Microsoft Windows systems it is <code>'\\'</code>.\n\n @see     java.lang.System#getProperty(java.lang.String)\n"
11119,field,java/io/File/separator," The system-dependent default name-separator character, represented as a\n string for convenience.  This string contains a single character, namely\n <code>{@link #separatorChar}</code>.\n"
11120,field,java/io/File/pathSeparatorChar," The system-dependent path-separator character.  This field is\n initialized to contain the first character of the value of the system\n property <code>path.separator</code>.  This character is used to\n separate filenames in a sequence of files given as a <em>path list</em>.\n On UNIX systems, this character is <code>':'</code>; on Microsoft Windows systems it\n is <code>';'</code>.\n\n @see     java.lang.System#getProperty(java.lang.String)\n"
11121,field,java/io/File/pathSeparator," The system-dependent path-separator character, represented as a string\n for convenience.  This string contains a single character, namely\n <code>{@link #pathSeparatorChar}</code>.\n"
11143,method,java/io/DataOutputStream/size/," Returns the current value of the counter <code>written</code>, \n the number of bytes written to this data output stream so far.\n If the counter overflows, it will be wrapped to Integer.MAX_VALUE.\n\n @return  the value of the <code>written</code> field.\n @see     java.io.DataOutputStream#written\n"
11144,method,java/io/DataOutputStream/DataOutputStream/OutputStream," Creates a new data output stream to write data to the specified \n underlying output stream. The counter <code>written</code> is \n set to zero.\n\n @param   out   the underlying output stream, to be saved for later \n                use.\n @see     java.io.FilterOutputStream#out\n"
11145,field,java/io/DataOutputStream/written," The number of bytes written to the data output stream so far. \n If this counter overflows, it will be wrapped to Integer.MAX_VALUE.\n"
11146,interface,java/io/DataOutput," The <code>DataOutput</code> interface provides\n for converting data from any of the Java\n primitive types to a series of bytes and\n writing these bytes to a binary stream.\n There is  also a facility for converting\n a <code>String</code> into\n <a href="DataInput.html#modified-utf-8">modified UTF-8</a>\n format and writing the resulting series\n of bytes.\n <p>\n For all the methods in this interface that\n write bytes, it is generally true that if\n a byte cannot be written for any reason,\n an <code>IOException</code> is thrown.\n\n @author  Frank Yellin\n @version 1.24, 03/23/10\n @see     java.io.DataInput\n @see     java.io.DataOutputStream\n @since   JDK1.0\n"
11180,method,java/io/DataInputStream/DataInputStream/InputStream," Creates a DataInputStream that uses the specified\n underlying InputStream.\n\n @param  in   the specified input stream\n"
11198,method,java/io/Console/writer/," Retrieves the unique {@link java.io.PrintWriter PrintWriter} object\n associated with this console.\n\n @return  The printwriter associated with this console\n"
11206,method,java/io/Console/flush/," Flushes the console and forces any buffered output to be written\n immediately .\n"
11209,class,java/io/CharConversionException," Base class for character conversion exceptions.\n\n @author      Asmus Freytag\n @version 	1.17, 03/23/10\n @since       JDK1.1\n"
11210,method,java/io/CharConversionException/CharConversionException/," This provides no detailed message.\n"
11211,method,java/io/CharConversionException/CharConversionException/String," This provides a detailed message.\n\n @param s the detailed message associated with the exception.\n"
11213,method,java/io/CharArrayWriter/write/int," Writes a character to the buffer.\n"
11214,method,java/io/CharArrayWriter/write/char[];int;int," Writes characters to the buffer.\n @param c	the data to be written\n @param off	the start offset in the data\n @param len	the number of chars that are written\n"
11215,method,java/io/CharArrayWriter/write/String;int;int," Write a portion of a string to the buffer.\n @param  str  String to be written from\n @param  off  Offset from which to start reading characters\n @param  len  Number of characters to be written\n"
11220,method,java/io/CharArrayWriter/reset/," Resets the buffer so that you can use it again without\n throwing away the already allocated buffer.\n"
11221,method,java/io/CharArrayWriter/toCharArray/," Returns a copy of the input data.\n\n @return an array of chars copied from the input data.\n"
11222,method,java/io/CharArrayWriter/size/," Returns the current size of the buffer.\n\n @return an int representing the current size of the buffer.\n"
11223,method,java/io/CharArrayWriter/toString/," Converts input data to a string.\n @return the string.\n"
11224,method,java/io/CharArrayWriter/flush/," Flush the stream.\n"
11226,method,java/io/CharArrayWriter/CharArrayWriter/," Creates a new CharArrayWriter.\n"
11227,method,java/io/CharArrayWriter/CharArrayWriter/int," Creates a new CharArrayWriter with the specified initial size.\n\n @param initialSize  an int specifying the initial buffer size.\n @exception IllegalArgumentException if initialSize is negative\n"
11228,field,java/io/CharArrayWriter/buf," The buffer where data is stored.\n"
11229,field,java/io/CharArrayWriter/count," The number of chars in the buffer.\n"
11230,class,java/io/CharArrayReader," This class implements a character buffer that can be used as a\n character-input stream.\n\n @author	Herb Jellinek\n @version 	1.26, 03/23/10\n @since       JDK1.1\n"
11235,method,java/io/CharArrayReader/markSupported/," Tells whether this stream supports the mark() operation, which it does.\n"
11239,method,java/io/CharArrayReader/CharArrayReader/char[]," Creates a CharArrayReader from the specified array of chars.\n @param buf	Input buffer (not copied)\n"
11240,method,java/io/CharArrayReader/CharArrayReader/char[];int;int," Creates a CharArrayReader from the specified array of chars.\n\n <p> The resulting reader will start reading at the given\n <tt>offset</tt>.  The total number of <tt>char</tt> values that can be\n read from this reader will be either <tt>length</tt> or\n <tt>buf.length-offset</tt>, whichever is smaller.\n\n @throws IllegalArgumentException\n         If <tt>offset</tt> is negative or greater than\n         <tt>buf.length</tt>, or if <tt>length</tt> is negative, or if\n         the sum of these two values is negative.\n\n @param buf	Input buffer (not copied)\n @param offset    Offset of the first char to read\n @param length	Number of chars to read\n"
11241,field,java/io/CharArrayReader/buf,"The character buffer. "
11242,field,java/io/CharArrayReader/pos,"The current buffer position. "
11243,field,java/io/CharArrayReader/markedPos,"The position of mark in buffer. "
11244,field,java/io/CharArrayReader/count,"\n  The index of the end of this buffer.  There is not valid\n  data at or beyond this index.\n"
11246,method,java/io/ByteArrayOutputStream/write/int," Writes the specified byte to this byte array output stream. \n\n @param   b   the byte to be written.\n"
11247,method,java/io/ByteArrayOutputStream/write/byte[];int;int," Writes <code>len</code> bytes from the specified byte array \n starting at offset <code>off</code> to this byte array output stream.\n\n @param   b     the data.\n @param   off   the start offset in the data.\n @param   len   the number of bytes to write.\n"
11250,method,java/io/ByteArrayOutputStream/toByteArray/," Creates a newly allocated byte array. Its size is the current \n size of this output stream and the valid contents of the buffer \n have been copied into it. \n\n @return  the current contents of this output stream, as a byte array.\n @see     java.io.ByteArrayOutputStream#size()\n"
11251,method,java/io/ByteArrayOutputStream/size/," Returns the current size of the buffer.\n\n @return  the value of the <code>count</code> field, which is the number\n          of valid bytes in this output stream.\n @see     java.io.ByteArrayOutputStream#count\n"
11254,method,java/io/ByteArrayOutputStream/toString/int," Creates a newly allocated string. Its size is the current size of \n the output stream and the valid contents of the buffer have been \n copied into it. Each character <i>c</i> in the resulting string is \n constructed from the corresponding element <i>b</i> in the byte \n array such that:\n <blockquote><pre>\n     c == (char)(((hibyte &amp; 0xff) &lt;&lt; 8) | (b &amp; 0xff))\n </pre></blockquote>\n\n @deprecated This method does not properly convert bytes into characters.\n As of JDK&nbsp;1.1, the preferred way to do this is via the\n <code>toString(String enc)</code> method, which takes an encoding-name\n argument, or the <code>toString()</code> method, which uses the\n platform's default character encoding.\n\n @param      hibyte    the high byte of each resulting Unicode character.\n @return     the current contents of the output stream, as a string.\n @see        java.io.ByteArrayOutputStream#size()\n @see        java.io.ByteArrayOutputStream#toString(String)\n @see        java.io.ByteArrayOutputStream#toString()\n"
11257,method,java/io/ByteArrayOutputStream/ByteArrayOutputStream/int," Creates a new byte array output stream, with a buffer capacity of \n the specified size, in bytes. \n\n @param   size   the initial size.\n @exception  IllegalArgumentException if size is negative.\n"
11258,field,java/io/ByteArrayOutputStream/buf,"\n The buffer where data is stored. \n"
11259,field,java/io/ByteArrayOutputStream/count," The number of valid bytes in the buffer. \n"
11261,method,java/io/ByteArrayInputStream/read/," Reads the next byte of data from this input stream. The value \n byte is returned as an <code>int</code> in the range \n <code>0</code> to <code>255</code>. If no byte is available \n because the end of the stream has been reached, the value \n <code>-1</code> is returned. \n <p>\n This <code>read</code> method \n cannot block. \n\n @return  the next byte of data, or <code>-1</code> if the end of the\n          stream has been reached.\n"
11262,method,java/io/ByteArrayInputStream/read/byte[];int;int," Reads up to <code>len</code> bytes of data into an array of bytes \n from this input stream. \n If <code>pos</code> equals <code>count</code>,\n then <code>-1</code> is returned to indicate\n end of file. Otherwise, the  number <code>k</code>\n of bytes read is equal to the smaller of\n <code>len</code> and <code>count-pos</code>.\n If <code>k</code> is positive, then bytes\n <code>buf[pos]</code> through <code>buf[pos+k-1]</code>\n are copied into <code>b[off]</code>  through\n <code>b[off+k-1]</code> in the manner performed\n by <code>System.arraycopy</code>. The\n value <code>k</code> is added into <code>pos</code>\n and <code>k</code> is returned.\n <p>\n This <code>read</code> method cannot block. \n\n @param   b     the buffer into which the data is read.\n @param   off   the start offset in the destination array <code>b</code>\n @param   len   the maximum number of bytes read.\n @return  the total number of bytes read into the buffer, or\n          <code>-1</code> if there is no more data because the end of\n          the stream has been reached.\n @exception  NullPointerException If <code>b</code> is <code>null</code>.\n @exception  IndexOutOfBoundsException If <code>off</code> is negative, \n <code>len</code> is negative, or <code>len</code> is greater than \n <code>b.length - off</code>\n"
11263,method,java/io/ByteArrayInputStream/skip/long," Skips <code>n</code> bytes of input from this input stream. Fewer \n bytes might be skipped if the end of the input stream is reached. \n The actual number <code>k</code>\n of bytes to be skipped is equal to the smaller\n of <code>n</code> and  <code>count-pos</code>.\n The value <code>k</code> is added into <code>pos</code>\n and <code>k</code> is returned.\n\n @param   n   the number of bytes to be skipped.\n @return  the actual number of bytes skipped.\n"
11264,method,java/io/ByteArrayInputStream/available/," Returns the number of remaining bytes that can be read (or skipped over)\n from this input stream.\n <p>\n The value returned is <code>count&nbsp;- pos</code>, \n which is the number of bytes remaining to be read from the input buffer.\n\n @return  the number of remaining bytes that can be read (or skipped\n          over) from this input stream without blocking.\n"
11265,method,java/io/ByteArrayInputStream/markSupported/," Tests if this <code>InputStream</code> supports mark/reset. The\n <code>markSupported</code> method of <code>ByteArrayInputStream</code>\n always returns <code>true</code>.\n\n @since   JDK1.1\n"
11267,method,java/io/ByteArrayInputStream/reset/," Resets the buffer to the marked position.  The marked position\n is 0 unless another position was marked or an offset was specified\n in the constructor.\n"
11269,method,java/io/ByteArrayInputStream/ByteArrayInputStream/byte[]," Creates a <code>ByteArrayInputStream</code>\n so that it  uses <code>buf</code> as its\n buffer array. \n The buffer array is not copied. \n The initial value of <code>pos</code>\n is <code>0</code> and the initial value\n of  <code>count</code> is the length of\n <code>buf</code>.\n\n @param   buf   the input buffer.\n"
11270,method,java/io/ByteArrayInputStream/ByteArrayInputStream/byte[];int;int," Creates <code>ByteArrayInputStream</code>\n that uses <code>buf</code> as its\n buffer array. The initial value of <code>pos</code>\n is <code>offset</code> and the initial value\n of <code>count</code> is the minimum of <code>offset+length</code>\n and <code>buf.length</code>.\n The buffer array is not copied. The buffer's mark is\n set to the specified offset.\n\n @param   buf      the input buffer.\n @param   offset   the offset in the buffer of the first byte to read.\n @param   length   the maximum number of bytes to read from the buffer.\n"
11281,method,java/io/BufferedWriter/close/,""
11282,method,java/io/BufferedWriter/BufferedWriter/Writer," Creates a buffered character-output stream that uses a default-sized\n output buffer.\n\n @param  out  A Writer\n"
11283,method,java/io/BufferedWriter/BufferedWriter/Writer;int," Creates a new buffered character-output stream that uses an output\n buffer of the given size.\n\n @param  out  A Writer\n @param  sz   Output-buffer size, a positive integer\n\n @exception  IllegalArgumentException  If sz is <= 0\n"
11290,method,java/io/BufferedReader/markSupported/," Tells whether this stream supports the mark() operation, which it does.\n"
11293,method,java/io/BufferedReader/close/,""
11294,method,java/io/BufferedReader/BufferedReader/Reader;int," Creates a buffering character-input stream that uses an input buffer of\n the specified size.\n\n @param  in   A Reader\n @param  sz   Input-buffer size\n\n @exception  IllegalArgumentException  If sz is <= 0\n"
11295,method,java/io/BufferedReader/BufferedReader/Reader," Creates a buffering character-input stream that uses a default-sized\n input buffer.\n\n @param  in   A Reader\n"
11300,method,java/io/BufferedOutputStream/BufferedOutputStream/OutputStream," Creates a new buffered output stream to write data to the\n specified underlying output stream.\n\n @param   out   the underlying output stream.\n"
11301,method,java/io/BufferedOutputStream/BufferedOutputStream/OutputStream;int," Creates a new buffered output stream to write data to the \n specified underlying output stream with the specified buffer \n size. \n\n @param   out    the underlying output stream.\n @param   size   the buffer size.\n @exception IllegalArgumentException if size &lt;= 0.\n"
11302,field,java/io/BufferedOutputStream/buf," The internal buffer where data is stored. \n"
11303,field,java/io/BufferedOutputStream/count," The number of valid bytes in the buffer. This value is always \n in the range <tt>0</tt> through <tt>buf.length</tt>; elements \n <tt>buf[0]</tt> through <tt>buf[count-1]</tt> contain valid \n byte data.\n"
11311,method,java/io/BufferedInputStream/markSupported/," Tests if this input stream supports the <code>mark</code> \n and <code>reset</code> methods. The <code>markSupported</code> \n method of <code>BufferedInputStream</code> returns \n <code>true</code>. \n\n @return  a <code>boolean</code> indicating if this stream type supports\n          the <code>mark</code> and <code>reset</code> methods.\n @see     java.io.InputStream#mark(int)\n @see     java.io.InputStream#reset()\n"
11313,method,java/io/BufferedInputStream/BufferedInputStream/InputStream," Creates a <code>BufferedInputStream</code>\n and saves its  argument, the input stream\n <code>in</code>, for later use. An internal\n buffer array is created and  stored in <code>buf</code>.\n\n @param   in   the underlying input stream.\n"
11314,method,java/io/BufferedInputStream/BufferedInputStream/InputStream;int," Creates a <code>BufferedInputStream</code>\n with the specified buffer size,\n and saves its  argument, the input stream\n <code>in</code>, for later use.  An internal\n buffer array of length  <code>size</code>\n is created and stored in <code>buf</code>.\n\n @param   in     the underlying input stream.\n @param   size   the buffer size.\n @exception IllegalArgumentException if size <= 0.\n"
11316,field,java/io/BufferedInputStream/count," The index one greater than the index of the last valid byte in \n the buffer. \n This value is always\n in the range <code>0</code> through <code>buf.length</code>;\n elements <code>buf[0]</code>  through <code>buf[count-1]\n </code>contain buffered input data obtained\n from the underlying  input stream.\n"
11321,method,java/rmi/UnmarshalException/UnmarshalException/String," Constructs an <code>UnmarshalException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11322,method,java/rmi/UnmarshalException/UnmarshalException/String;Exception," Constructs an <code>UnmarshalException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11324,method,java/rmi/UnknownHostException/UnknownHostException/String," Constructs an <code>UnknownHostException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11325,method,java/rmi/UnknownHostException/UnknownHostException/String;Exception," Constructs an <code>UnknownHostException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11327,method,java/rmi/UnexpectedException/UnexpectedException/String," Constructs an <code>UnexpectedException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11328,method,java/rmi/UnexpectedException/UnexpectedException/String;Exception," Constructs a <code>UnexpectedException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11330,method,java/rmi/StubNotFoundException/StubNotFoundException/String," Constructs a <code>StubNotFoundException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11331,method,java/rmi/StubNotFoundException/StubNotFoundException/String;Exception," Constructs a <code>StubNotFoundException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11333,method,java/rmi/ServerRuntimeException/ServerRuntimeException/String;Exception," Constructs a <code>ServerRuntimeException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @deprecated no replacement\n @since JDK1.1\n"
11335,method,java/rmi/ServerException/ServerException/String," Constructs a <code>ServerException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11336,method,java/rmi/ServerException/ServerException/String;Exception," Constructs a <code>ServerException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11340,method,java/rmi/RemoteException/getMessage/," Returns the detail message, including the message from the cause, if\n any, of this exception.\n \n @return the detail message\n"
11342,method,java/rmi/RemoteException/RemoteException/," Constructs a <code>RemoteException</code>.\n"
11343,method,java/rmi/RemoteException/RemoteException/String," Constructs a <code>RemoteException</code> with the specified\n detail message.\n\n @param s the detail message\n"
11344,method,java/rmi/RemoteException/RemoteException/String;Throwable," Constructs a <code>RemoteException</code> with the specified detail\n message and cause.  This constructor sets the {@link #detail}\n field to the specified <code>Throwable</code>.\n\n @param s the detail message\n @param cause the cause\n"
11345,field,java/rmi/RemoteException/detail," The cause of the remote exception.\n\n <p>This field predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @serial\n"
11348,method,java/rmi/RMISecurityManager/RMISecurityManager/," Constructs a new <code>RMISecurityManager</code>.\n @since JDK1.1\n"
11350,method,java/rmi/RMISecurityException/RMISecurityException/String," Construct an <code>RMISecurityException</code> with a detail message.\n @param name the detail message\n @since JDK1.1\n @deprecated no replacement\n"
11351,method,java/rmi/RMISecurityException/RMISecurityException/String;String," Construct an <code>RMISecurityException</code> with a detail message.\n @param name the detail message\n @param arg ignored\n @since JDK1.1\n @deprecated no replacement\n"
11352,class,java/rmi/NotBoundException," A <code>NotBoundException</code> is thrown if an attempt\n is made to lookup or unbind in the registry a name that has\n no associated binding.\n \n @version 1.14, 03/23/10\n @since   JDK1.1\n @author  Ann Wollrath\n @author  Roger Riggs\n @see     java.rmi.Naming#lookup(String)\n @see     java.rmi.Naming#unbind(String)\n @see     java.rmi.registry.Registry#lookup(String)\n @see     java.rmi.registry.Registry#unbind(String) \n"
11353,method,java/rmi/NotBoundException/NotBoundException/," Constructs a <code>NotBoundException</code> with no\n specified detail message.\n @since JDK1.1\n"
11354,method,java/rmi/NotBoundException/NotBoundException/String," Constructs a <code>NotBoundException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11356,method,java/rmi/NoSuchObjectException/NoSuchObjectException/String," Constructs a <code>NoSuchObjectException</code> with the specified\n detail message.\n\n @param s the detail message\n @since   JDK1.1\n"
11358,method,java/rmi/Naming/lookup/String," Returns a reference, a stub, for the remote object associated\n with the specified <code>name</code>.\n\n @param name a name in URL format (without the scheme component) \n @return a reference for a remote object\n @exception NotBoundException if name is not currently bound\n @exception RemoteException if registry could not be contacted\n @exception AccessException if this operation is not permitted\n @exception MalformedURLException if the name is not an appropriately\n  formatted URL\n @since JDK1.1\n"
11359,method,java/rmi/Naming/bind/String;Remote," Binds the specified <code>name</code> to a remote object.\n\n @param name a name in URL format (without the scheme component) \n @param obj a reference for the remote object (usually a stub)\n @exception AlreadyBoundException if name is already bound\n @exception MalformedURLException if the name is not an appropriately\n  formatted URL\n @exception RemoteException if registry could not be contacted\n @exception AccessException if this operation is not permitted (if\n originating from a non-local host, for example)\n @since JDK1.1\n"
11360,method,java/rmi/Naming/unbind/String," Destroys the binding for the specified name that is associated\n with a remote object.\n\n @param name a name in URL format (without the scheme component) \n @exception NotBoundException if name is not currently bound\n @exception MalformedURLException if the name is not an appropriately\n  formatted URL\n @exception RemoteException if registry could not be contacted\n @exception AccessException if this operation is not permitted (if\n originating from a non-local host, for example)\n @since JDK1.1\n"
11361,method,java/rmi/Naming/rebind/String;Remote,"\n Rebinds the specified name to a new remote object. Any existing\n binding for the name is replaced.\n\n @param name a name in URL format (without the scheme component)\n @param obj new remote object to associate with the name\n @exception MalformedURLException if the name is not an appropriately\n  formatted URL\n @exception RemoteException if registry could not be contacted\n @exception AccessException if this operation is not permitted (if\n originating from a non-local host, for example)\n @since JDK1.1\n"
11365,method,java/rmi/MarshalledObject/hashCode/," Return a hash code for this <code>MarshalledObject</code>.\n\n @return a hash code\n"
11369,method,java/rmi/MarshalException/MarshalException/String," Constructs a <code>MarshalException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11370,method,java/rmi/MarshalException/MarshalException/String;Exception," Constructs a <code>MarshalException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11372,method,java/rmi/ConnectIOException/ConnectIOException/String," Constructs a <code>ConnectIOException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11373,method,java/rmi/ConnectIOException/ConnectIOException/String;Exception," Constructs a <code>ConnectIOException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11375,method,java/rmi/ConnectException/ConnectException/String," Constructs a <code>ConnectException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11376,method,java/rmi/ConnectException/ConnectException/String;Exception," Constructs a <code>ConnectException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11377,class,java/rmi/AlreadyBoundException," An <code>AlreadyBoundException</code> is thrown if an attempt\n is made to bind an object in the registry to a name that already\n has an associated binding.\n \n @version 1.14, 03/23/10\n @since   JDK1.1\n @author  Ann Wollrath\n @author  Roger Riggs\n @see     java.rmi.Naming#bind(String, java.rmi.Remote)\n @see     java.rmi.registry.Registry#bind(String, java.rmi.Remote)\n"
11378,method,java/rmi/AlreadyBoundException/AlreadyBoundException/," Constructs an <code>AlreadyBoundException</code> with no\n specified detail message.\n @since JDK1.1\n"
11379,method,java/rmi/AlreadyBoundException/AlreadyBoundException/String," Constructs an <code>AlreadyBoundException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11381,method,java/rmi/AccessException/AccessException/String," Constructs an <code>AccessException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11382,method,java/rmi/AccessException/AccessException/String;Exception," Constructs an <code>AccessException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11384,method,java/rmi/activation/UnknownObjectException/UnknownObjectException/String," Constructs an <code>UnknownObjectException</code> with the specified\n detail message.\n\n @param s the detail message\n @since 1.2\n"
11385,class,java/rmi/activation/UnknownGroupException," An <code>UnknownGroupException</code> is thrown by methods of classes and\n interfaces in the <code>java.rmi.activation</code> package when the\n <code>ActivationGroupID</code> parameter to the method is determined to be\n invalid, i.e., not known by the <code>ActivationSystem</code>.  An\n <code>UnknownGroupException</code> is also thrown if the\n <code>ActivationGroupID</code> in an <code>ActivationDesc</code> refers to\n a group that is not registered with the <code>ActivationSystem</code>\n \n @version 1.15, 03/23/10\n @author  Ann Wollrath\n @since   1.2\n @see     java.rmi.activation.Activatable\n @see     java.rmi.activation.ActivationGroup\n @see     java.rmi.activation.ActivationGroupID\n @see     java.rmi.activation.ActivationMonitor\n @see     java.rmi.activation.ActivationSystem\n"
11386,method,java/rmi/activation/UnknownGroupException/UnknownGroupException/String," Constructs an <code>UnknownGroupException</code> with the specified\n detail message.\n\n @param s the detail message\n @since 1.2\n"
11389,interface,java/rmi/activation/ActivationSystem," The <code>ActivationSystem</code> provides a means for registering\n groups and "activatable" objects to be activated within those groups.\n The <code>ActivationSystem</code> works closely with the\n <code>Activator</code>, which activates objects registered via the\n <code>ActivationSystem</code>, and the <code>ActivationMonitor</code>,\n which obtains information about active and inactive objects,\n and inactive groups.\n\n @author 	Ann Wollrath\n @version	1.20, 03/23/10\n @see		Activator\n @see		ActivationMonitor\n @since	1.2\n"
11395,method,java/rmi/activation/ActivationSystem/shutdown/," Shutdown the activation system. Destroys all groups spawned by\n the activation daemon and exits the activation daemon.\n @exception RemoteException if failed to contact/shutdown the activation\n daemon\n @since 1.2\n"
11400,field,java/rmi/activation/ActivationSystem/SYSTEM_PORT,"The port to lookup the activation system. "
11407,class,java/rmi/activation/ActivationID," Activation makes use of special identifiers to denote remote\n objects that can be activated over time. An activation identifier\n (an instance of the class <code>ActivationID</code>) contains several\n pieces of information needed for activating an object:\n <ul>\n <li> a remote reference to the object's activator (a {@link\n java.rmi.server.RemoteRef RemoteRef}\n instance), and\n <li> a unique identifier (a {@link java.rmi.server.UID UID}\n instance) for the object. </ul> <p>\n\n An activation identifier for an object can be obtained by registering\n an object with the activation system. Registration is accomplished\n in a few ways: <ul>\n <li>via the <code>Activatable.register</code> method\n <li>via the first <code>Activatable</code> constructor (that takes\n three arguments and both registers and exports the object, and\n <li>via the first <code>Activatable.exportObject</code> method\n that takes the activation descriptor, object and port as arguments;\n this method both registers and exports the object. </ul>\n\n @author	Ann Wollrath\n @version	1.32, 10/03/23\n @see		Activatable\n @since	1.2\n"
11409,method,java/rmi/activation/ActivationID/hashCode/," Returns a hashcode for the activation id.  Two identifiers that\n refer to the same remote object will have the same hash code.\n\n @see java.util.Hashtable\n @since 1.2\n"
11411,method,java/rmi/activation/ActivationID/ActivationID/Activator," The constructor for <code>ActivationID</code> takes a single\n argument, activator, that specifies a remote reference to the\n activator responsible for activating the object associated with\n this identifier. An instance of <code>ActivationID</code> is globally\n unique.\n\n @param activator reference to the activator responsible for\n activating the object\n @since 1.2\n"
11413,method,java/rmi/activation/ActivationGroupID/getSystem/," Returns the group's activation system.\n @return the group's activation system\n @since 1.2\n"
11414,method,java/rmi/activation/ActivationGroupID/hashCode/," Returns a hashcode for the group's identifier.  Two group\n identifiers that refer to the same remote group will have the\n same hash code.\n\n @see java.util.Hashtable\n @since 1.2\n"
11416,method,java/rmi/activation/ActivationGroupID/ActivationGroupID/ActivationSystem," Constructs a unique group id.\n\n @param system the group's activation system\n @since 1.2\n"
11418,method,java/rmi/activation/ActivationGroupDesc/getClassName/," Returns the group's class name (possibly <code>null</code>).  A\n <code>null</code> group class name indicates the system's default\n <code>ActivationGroup</code> implementation.\n @return the group's class name\n @since 1.2\n"
11419,method,java/rmi/activation/ActivationGroupDesc/getLocation/," Returns the group's code location.\n @return the group's code location\n @since 1.2\n"
11420,method,java/rmi/activation/ActivationGroupDesc/getData/," Returns the group's initialization data.\n @return the group's initialization data\n @since 1.2\n"
11422,method,java/rmi/activation/ActivationGroupDesc/getCommandEnvironment/," Returns the group's command-environment control object.\n @return the command-environment object, or <code>null</code>\n @since 1.2\n"
11423,method,java/rmi/activation/ActivationGroupDesc/equals/Object," Compares two activation group descriptors for content equality.\n\n @param	obj	the Object to compare with\n @return	true if these Objects are equal; false otherwise.\n @see		java.util.Hashtable\n @since 1.2\n"
11424,method,java/rmi/activation/ActivationGroupDesc/hashCode/," Produce identical numbers for similar <code>ActivationGroupDesc</code>s.\n @return an integer\n @see java.util.Hashtable\n"
11428,method,java/rmi/activation/ActivationGroupDesc/CommandEnvironment/getCommandPath/," Fetch the configured path-qualified java command name.\n\n @return the configured name, or <code>null</code> if configured to\n accept the default\n @since 1.2\n"
11430,method,java/rmi/activation/ActivationGroupDesc/CommandEnvironment/equals/Object," Compares two command environments for content equality.\n\n @param	obj	the Object to compare with\n @return	true if these Objects are equal; false otherwise.\n @see		java.util.Hashtable\n @since 1.2\n"
11431,method,java/rmi/activation/ActivationGroupDesc/CommandEnvironment/hashCode/," Return identical values for similar\n <code>CommandEnvironment</code>s.\n @return an integer\n @see java.util.Hashtable\n"
11437,method,java/rmi/activation/ActivationGroup/currentGroupID/," Returns the current activation group's identifier.  Returns null\n if no group is currently active for this VM.\n @return the activation group's identifier\n @since 1.2 \n"
11442,method,java/rmi/activation/ActivationGroup/ActivationGroup/ActivationGroupID," Constructs an activation group with the given activation group\n identifier.  The group is exported as a\n <code>java.rmi.server.UnicastRemoteObject</code>.\n\n @param	groupID the group's identifier\n @throws	RemoteException if this group could not be exported\n @since	1.2 \n"
11444,method,java/rmi/activation/ActivationException/getMessage/," Returns the detail message, including the message from the cause, if\n any, of this exception.\n\n @return	the detail message\n"
11446,method,java/rmi/activation/ActivationException/ActivationException/," Constructs an <code>ActivationException</code>.\n"
11447,method,java/rmi/activation/ActivationException/ActivationException/String," Constructs an <code>ActivationException</code> with the specified\n detail message.\n\n @param s the detail message\n"
11448,method,java/rmi/activation/ActivationException/ActivationException/String;Throwable," Constructs an <code>ActivationException</code> with the specified\n detail message and cause.  This constructor sets the {@link #detail}\n field to the specified <code>Throwable</code>.\n\n @param s the detail message\n @param cause the cause\n"
11449,field,java/rmi/activation/ActivationException/detail," The cause of the activation exception.\n\n <p>This field predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @serial \n"
11451,method,java/rmi/activation/ActivationDesc/getGroupID/," Returns the group identifier for the object specified by this\n descriptor. A group provides a way to aggregate objects into a\n single Java virtual machine. RMI creates/activates objects with\n the same <code>groupID</code> in the same virtual machine.\n\n @return the group identifier\n @since 1.2\n"
11452,method,java/rmi/activation/ActivationDesc/getClassName/," Returns the class name for the object specified by this\n descriptor.\n @return the class name\n @since 1.2\n"
11453,method,java/rmi/activation/ActivationDesc/getLocation/," Returns the code location for the object specified by\n this descriptor.\n @return the code location\n @since 1.2\n"
11454,method,java/rmi/activation/ActivationDesc/getData/," Returns a "marshalled object" containing intialization/activation\n data for the object specified by this descriptor.\n @return the object specific "initialization" data\n @since 1.2\n"
11456,method,java/rmi/activation/ActivationDesc/equals/Object," Compares two activation descriptors for content equality.\n\n @param	obj	the Object to compare with\n @return	true if these Objects are equal; false otherwise.\n @see		java.util.Hashtable\n @since 1.2\n"
11457,method,java/rmi/activation/ActivationDesc/hashCode/," Return the same hashCode for similar <code>ActivationDesc</code>s.\n @return an integer\n @see java.util.Hashtable\n"
11463,method,java/rmi/activation/ActivateFailedException/ActivateFailedException/String," Constructs an <code>ActivateFailedException</code> with the specified\n detail message.\n\n @param s the detail message\n @since 1.2\n"
11464,method,java/rmi/activation/ActivateFailedException/ActivateFailedException/String;Exception," Constructs an <code>ActivateFailedException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since 1.2\n"
11479,class,java/rmi/dgc/VMID," A VMID is a identifier that is unique across all Java virtual\n machines.  VMIDs are used by the distributed garbage collector\n to identify client VMs.\n\n @version	1.22, 03/23/10\n @author	Ann Wollrath\n @author	Peter Jones\n"
11480,method,java/rmi/dgc/VMID/isUnique/," Return true if an accurate address can be determined for this\n host.  If false, reliable VMID cannot be generated from this host\n @return true if host address can be determined, false otherwise\n @deprecated\n"
11481,method,java/rmi/dgc/VMID/hashCode/," Compute hash code for this VMID.\n"
11482,method,java/rmi/dgc/VMID/equals/Object," Compare this VMID to another, and return true if they are the\n same identifier.\n"
11483,method,java/rmi/dgc/VMID/toString/," Return string representation of this VMID.\n"
11485,class,java/rmi/dgc/Lease," A lease contains a unique VM identifier and a lease duration. A\n Lease object is used to request and grant leases to remote object\n references.\n"
11486,method,java/rmi/dgc/Lease/getVMID/," Returns the client VMID associated with the lease.\n @return client VMID\n"
11487,method,java/rmi/dgc/Lease/getValue/," Returns the lease duration.\n @return lease duration\n"
11495,method,java/rmi/server/UnicastRemoteObject/clone/," Returns a clone of the remote object that is distinct from\n the original.\n\n @exception CloneNotSupportedException if clone failed due to\n a RemoteException.\n @return the new remote object\n @since JDK1.1\n"
11500,method,java/rmi/server/UnicastRemoteObject/UnicastRemoteObject/," Creates and exports a new UnicastRemoteObject object using an\n anonymous port.\n @throws RemoteException if failed to export object\n @since JDK1.1\n"
11504,method,java/rmi/server/UID/hashCode/," Returns the hash code value for this <code>UID</code>.\n\n @return	the hash code value for this <code>UID</code>\n"
11506,method,java/rmi/server/UID/toString/," Returns a string representation of this <code>UID</code>.\n\n @return	a string representation of this <code>UID</code>\n"
11509,method,java/rmi/server/UID/UID/," Generates a <code>UID</code> that is unique over time with\n respect to the host that it was generated on.\n"
11510,method,java/rmi/server/UID/UID/short," Creates a "well-known" <code>UID</code>.\n\n There are 2<sup>16</sup> possible such well-known ids.\n\n <p>A <code>UID</code> created via this constructor will not\n clash with any <code>UID</code>s generated via the no-arg\n constructor.\n\n @param	num number for well-known <code>UID</code>\n"
11512,method,java/rmi/server/SocketSecurityException/SocketSecurityException/String," Constructs an <code>SocketSecurityException</code> with the specified\n detail message.\n\n @param s the detail message.\n @since JDK1.1\n"
11513,method,java/rmi/server/SocketSecurityException/SocketSecurityException/String;Exception," Constructs an <code>SocketSecurityException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message.\n @param ex the nested exception\n @since JDK1.1\n"
11515,method,java/rmi/server/SkeletonNotFoundException/SkeletonNotFoundException/String," Constructs a <code>SkeletonNotFoundException</code> with the specified\n detail message.\n\n @param s the detail message.\n @since JDK1.1\n"
11516,method,java/rmi/server/SkeletonNotFoundException/SkeletonNotFoundException/String;Exception," Constructs a <code>SkeletonNotFoundException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message.\n @param ex the nested exception\n @since JDK1.1\n"
11518,method,java/rmi/server/SkeletonMismatchException/SkeletonMismatchException/String," Constructs a new <code>SkeletonMismatchException</code> with\n a specified detail message.\n\n @param s the detail message\n @since JDK1.1\n @deprecated no replacement\n"
11521,method,java/rmi/server/Skeleton/getOperations/," Returns the operations supported by the skeleton.\n @return operations supported by skeleton\n @since JDK1.1\n @deprecated no replacement\n"
11522,interface,java/rmi/server/ServerRef," A ServerRef represents the server-side handle for a remote object\n implementation.\n\n @version 1.18, 03/23/10\n @author  Ann Wollrath\n @since   JDK1.1\n"
11525,field,java/rmi/server/ServerRef/serialVersionUID,"indicate compatibility with JDK 1.1.x version of class. "
11527,method,java/rmi/server/ServerNotActiveException/ServerNotActiveException/," Constructs an <code>ServerNotActiveException</code> with no specified\n detail message.\n @since JDK1.1\n"
11528,method,java/rmi/server/ServerNotActiveException/ServerNotActiveException/String," Constructs an <code>ServerNotActiveException</code> with the specified\n detail message.\n\n @param s the detail message.\n @since JDK1.1\n"
11530,method,java/rmi/server/ServerCloneException/getMessage/," Returns the detail message, including the message from the cause, if\n any, of this exception.\n \n @return the detail message\n"
11532,method,java/rmi/server/ServerCloneException/ServerCloneException/String," Constructs a <code>ServerCloneException</code> with the specified\n detail message.\n\n @param s the detail message.\n"
11533,method,java/rmi/server/ServerCloneException/ServerCloneException/String;Exception," Constructs a <code>ServerCloneException</code> with the specified\n detail message and cause.\n\n @param s the detail message.\n @param cause the cause\n"
11534,field,java/rmi/server/ServerCloneException/detail," The cause of the exception.\n\n <p>This field predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @serial\n"
11536,method,java/rmi/server/RemoteStub/setRef/RemoteStub;RemoteRef," Sets the remote reference inside the remote stub.\n\n @param stub the remote stub\n @param ref the remote reference\n @since JDK1.1\n @deprecated no replacement.  The <code>setRef</code> method\n is not needed since <code>RemoteStub</code>s can be created with\n the <code>RemoteStub(RemoteRef)</code> constructor.\n"
11537,method,java/rmi/server/RemoteStub/RemoteStub/," Constructs a <code>RemoteStub</code>.\n"
11538,method,java/rmi/server/RemoteStub/RemoteStub/RemoteRef," Constructs a <code>RemoteStub</code>, with the specified remote\n reference.\n\n @param ref the remote reference\n @since JDK1.1\n"
11543,method,java/rmi/server/RemoteServer/RemoteServer/," Constructs a <code>RemoteServer</code>.\n @since JDK1.1\n"
11544,method,java/rmi/server/RemoteServer/RemoteServer/RemoteRef," Constructs a <code>RemoteServer</code> with the given reference type.\n\n @param ref the remote reference\n @since JDK1.1\n"
11550,method,java/rmi/server/RemoteRef/getRefClass/ObjectOutput," Returns the class name of the ref type to be serialized onto\n the stream 'out'.\n @param out the output stream to which the reference will be serialized\n @return the class name (without package qualification) of the reference\n type\n @since JDK1.1\n"
11551,method,java/rmi/server/RemoteRef/remoteHashCode/," Returns a hashcode for a remote object.  Two remote object stubs\n that refer to the same remote object will have the same hash code\n (in order to support remote objects as keys in hash tables).\n\n @return remote object hashcode\n @see		java.util.Hashtable\n @since JDK1.1\n"
11552,method,java/rmi/server/RemoteRef/remoteEquals/RemoteRef," Compares two remote objects for equality.\n Returns a boolean that indicates whether this remote object is\n equivalent to the specified Object. This method is used when a\n remote object is stored in a hashtable.\n @param	obj	the Object to compare with\n @return	true if these Objects are equal; false otherwise.\n @see		java.util.Hashtable\n @since JDK1.1\n"
11553,method,java/rmi/server/RemoteRef/remoteToString/," Returns a String that represents the reference of this remote\n object.\n @return string representing remote object reference\n @since JDK1.1\n"
11554,field,java/rmi/server/RemoteRef/serialVersionUID,"indicate compatibility with JDK 1.1.x version of class. "
11558,method,java/rmi/server/RemoteObjectInvocationHandler/RemoteObjectInvocationHandler/RemoteRef," Creates a new <code>RemoteObjectInvocationHandler</code> constructed\n with the specified <code>RemoteRef</code>.\n\n @param ref the remote ref\n\n @throws NullPointerException if <code>ref</code> is <code>null</code>\n"
11559,class,java/rmi/server/RemoteObject," The <code>RemoteObject</code> class implements the\n <code>java.lang.Object</code> behavior for remote objects.\n <code>RemoteObject</code> provides the remote semantics of Object by\n implementing methods for hashCode, equals, and toString.\n\n @author	Ann Wollrath\n @author	Laird Dornin\n @author	Peter Jones\n @version	1.35, 10/03/23\n @since	JDK1.1\n"
11562,method,java/rmi/server/RemoteObject/hashCode/," Returns a hashcode for a remote object.  Two remote object stubs\n that refer to the same remote object will have the same hash code\n (in order to support remote objects as keys in hash tables).\n\n @see		java.util.Hashtable\n"
11564,method,java/rmi/server/RemoteObject/toString/," Returns a String that represents the value of this remote object.\n"
11565,method,java/rmi/server/RemoteObject/RemoteObject/," Creates a remote object.\n"
11566,method,java/rmi/server/RemoteObject/RemoteObject/RemoteRef," Creates a remote object, initialized with the specified remote\n reference.\n @param newref remote reference\n"
11567,field,java/rmi/server/RemoteObject/ref,"The object's remote reference. "
11580,method,java/rmi/server/RMISocketFactory/getSocketFactory/," Returns the socket factory set by the <code>setSocketFactory</code>\n method. Returns <code>null</code> if no socket factory has been\n set.\n @return the socket factory\n @see #setSocketFactory(RMISocketFactory)\n @since JDK1.1\n"
11581,method,java/rmi/server/RMISocketFactory/getDefaultSocketFactory/," Returns a reference to the default socket factory used\n by this RMI implementation.  This will be the factory used\n by the RMI runtime when <code>getSocketFactory</code>\n returns <code>null</code>.\n @return the default RMI socket factory\n @since JDK1.1\n"
11583,method,java/rmi/server/RMISocketFactory/getFailureHandler/," Returns the handler for socket creation failure set by the\n <code>setFailureHandler</code> method.\n @return the failure handler\n @see #setFailureHandler(RMIFailureHandler)\n @since JDK1.1\n"
11584,method,java/rmi/server/RMISocketFactory/RMISocketFactory/," Constructs an <code>RMISocketFactory</code>.\n @since JDK1.1\n"
11595,method,java/rmi/server/RMIClassLoaderSpi/getClassAnnotation/Class," Provides the implementation for\n {@link RMIClassLoader#getClassAnnotation(Class)}.\n\n Returns the annotation string (representing a location for\n the class definition) that RMI will use to annotate the class\n descriptor when marshalling objects of the given class.\n\n @param	cl the class to obtain the annotation for\n\n @return	a string to be used to annotate the given class when\n it gets marshalled, or <code>null</code>\n\n @throws	NullPointerException if <code>cl</code> is <code>null</code>\n"
11596,method,java/rmi/server/RMIClassLoaderSpi/RMIClassLoaderSpi/,""
11598,method,java/rmi/server/RMIClassLoader/loadClass/String," Loads the class with the specified <code>name</code>.\n\n <p>This method delegates to {@link #loadClass(String,String)},\n passing <code>null</code> as the first argument and\n <code>name</code> as the second argument.\n\n @param	name the name of the class to load\n\n @return	the <code>Class</code> object representing the loaded class\n\n @throws MalformedURLException if a provider-specific URL used\n to load classes is invalid\n\n @throws	ClassNotFoundException if a definition for the class\n could not be found at the codebase location\n\n @deprecated replaced by <code>loadClass(String,String)</code> method\n @see #loadClass(String,String)\n"
11600,method,java/rmi/server/RMIClassLoader/loadClass/String;String," Loads a class from a codebase URL path.\n\n <p>This method delegates to the\n {@link RMIClassLoaderSpi#loadClass(String,String,ClassLoader)}\n method of the provider instance, passing <code>codebase</code>\n as the first argument, <code>name</code> as the second argument,\n and <code>null</code> as the third argument.\n\n @param	codebase the list of URLs (separated by spaces) to load\n the class from, or <code>null</code>\n\n @param	name the name of the class to load\n\n @return	the <code>Class</code> object representing the loaded class\n\n @throws MalformedURLException if <code>codebase</code> is\n non-<code>null</code> and contains an invalid URL, or if\n <code>codebase</code> is <code>null</code> and a provider-specific\n URL used to load classes is invalid\n\n @throws	ClassNotFoundException if a definition for the class\n could not be found at the specified location\n\n @since	1.2\n"
11604,method,java/rmi/server/RMIClassLoader/getClassAnnotation/Class," Returns the annotation string (representing a location for\n the class definition) that RMI will use to annotate the class\n descriptor when marshalling objects of the given class.\n \n <p>This method delegates to the\n {@link RMIClassLoaderSpi#getClassAnnotation(Class)} method\n of the provider instance, passing <code>cl</code> as the argument.\n\n @param	cl the class to obtain the annotation for\n\n @return	a string to be used to annotate the given class when\n it gets marshalled, or <code>null</code>\n\n @throws	NullPointerException if <code>cl</code> is <code>null</code>\n\n @since	1.2\n"
11606,method,java/rmi/server/RMIClassLoader/getSecurityContext/ClassLoader," Returns the security context of the given class loader.\n\n @param	loader a class loader from which to get the security context\n\n @return	the security context\n\n @deprecated no replacement.  As of the Java 2 platform v1.2, RMI no\n longer uses this method to obtain a class loader's security context.\n @see java.lang.SecurityManager#getSecurityContext()\n"
11607,class,java/rmi/server/Operation," An <code>Operation</code> contains a description of a Java method.\n <code>Operation</code> objects were used in JDK1.1 version stubs and\n skeletons. The <code>Operation</code> class is not needed for 1.2 style\n stubs (stubs generated with <code>rmic -v1.2</code>); hence, this class\n is deprecated.\n\n @version 1.19, 03/23/10\n @since JDK1.1\n @deprecated no replacement\n"
11608,method,java/rmi/server/Operation/getOperation/," Returns the name of the method.\n @return method name\n @deprecated no replacement\n @since JDK1.1\n"
11609,method,java/rmi/server/Operation/toString/," Returns the string representation of the operation.\n @deprecated no replacement\n @since JDK1.1\n"
11610,method,java/rmi/server/Operation/Operation/String," Creates a new Operation object.\n @param op method name\n @deprecated no replacement\n @since JDK1.1\n"
11614,method,java/rmi/server/ObjID/hashCode/," Returns the hash code value for this object identifier, the\n object number.\n\n @return	the hash code value for this object identifier\n"
11616,method,java/rmi/server/ObjID/toString/," Returns a string representation of this object identifier.\n\n @return	a string representation of this object identifier\n"
11618,method,java/rmi/server/ObjID/ObjID/int," Creates a "well-known" object identifier.\n\n <p>An <code>ObjID</code> created via this constructor will not\n clash with any <code>ObjID</code>s generated via the no-arg\n constructor.\n\n @param	objNum object number for well-known object identifier\n"
11619,field,java/rmi/server/ObjID/REGISTRY_ID,"Object number for well-known <code>ObjID</code> of the registry. "
11620,field,java/rmi/server/ObjID/ACTIVATOR_ID,"Object number for well-known <code>ObjID</code> of the activator. "
11621,field,java/rmi/server/ObjID/DGC_ID," Object number for well-known <code>ObjID</code> of\n the distributed garbage collector.\n"
11624,method,java/rmi/server/LogStream/getDefaultStream/," Return the current default stream for new logs.\n @return default log stream\n @see #setDefaultStream\n @since JDK1.1\n @deprecated no replacement\n"
11625,method,java/rmi/server/LogStream/setDefaultStream/PrintStream," Set the default stream for new logs.\n @param newDefault new default log stream\n @see #getDefaultStream\n @since JDK1.1\n @deprecated no replacement\n"
11626,method,java/rmi/server/LogStream/getOutputStream/," Return the current stream to which output from this log is sent.\n @return output stream for this log\n @see #setOutputStream\n @since JDK1.1\n @deprecated no replacement\n"
11627,method,java/rmi/server/LogStream/setOutputStream/OutputStream," Set the stream to which output from this log is sent.\n @param out new output stream for this log\n @see #getOutputStream\n @since JDK1.1\n @deprecated no replacement\n"
11628,method,java/rmi/server/LogStream/write/int," Write a byte of data to the stream.  If it is not a newline, then\n the byte is appended to the internal buffer.  If it is a newline,\n then the currently buffered line is sent to the log's output\n stream, prefixed with the appropriate logging information.\n @since JDK1.1\n @deprecated no replacement\n"
11629,method,java/rmi/server/LogStream/write/byte[];int;int," Write a subarray of bytes.  Pass each through write byte method.\n @since JDK1.1\n @deprecated no replacement\n"
11630,method,java/rmi/server/LogStream/toString/," Return log name as string representation.\n @return log name\n @since JDK1.1\n @deprecated no replacement\n"
11631,method,java/rmi/server/LogStream/parseLevel/String," Convert a string name of a logging level to its internal\n integer representation.\n @param s name of logging level (e.g., 'SILENT', 'BRIEF', 'VERBOSE')\n @return corresponding integer log level\n @since JDK1.1\n @deprecated no replacement\n"
11632,field,java/rmi/server/LogStream/SILENT,"log level constant (no logging). "
11633,field,java/rmi/server/LogStream/BRIEF,"log level constant (brief logging). "
11634,field,java/rmi/server/LogStream/VERBOSE,"log level constant (verbose logging). "
11636,method,java/rmi/server/LoaderHandler/loadClass/String," Loads a class from the location specified by the\n <code>java.rmi.server.codebase</code> property.\n\n @param  name the name of the class to load\n @return the <code>Class</code> object representing the loaded class\n @exception MalformedURLException\n            if the system property <b>java.rmi.server.codebase</b>\n            contains an invalid URL\n @exception ClassNotFoundException\n            if a definition for the class could not\n            be found at the codebase location.\n @since JDK1.1\n @deprecated no replacement\n"
11637,method,java/rmi/server/LoaderHandler/loadClass/URL;String," Loads a class from a URL.\n\n @param codebase  the URL from which to load the class\n @param name      the name of the class to load\n @return the <code>Class</code> object representing the loaded class\n @exception MalformedURLException\n            if the <code>codebase</code> paramater\n            contains an invalid URL\n @exception ClassNotFoundException\n            if a definition for the class could not\n            be found at the specified URL\n @since JDK1.1\n @deprecated no replacement\n"
11638,method,java/rmi/server/LoaderHandler/getSecurityContext/ClassLoader," Returns the security context of the given class loader.\n\n @param loader  a class loader from which to get the security context\n @return the security context\n @since JDK1.1\n @deprecated no replacement\n"
11639,field,java/rmi/server/LoaderHandler/packagePrefix,"package of system <code>LoaderHandler</code> implementation. "
11640,class,java/rmi/server/ExportException," An <code>ExportException</code> is a <code>RemoteException</code>\n thrown if an attempt to export a remote object fails.  A remote object is\n exported via the constructors and <code>exportObject</code> methods of\n <code>java.rmi.server.UnicastRemoteObject</code> and\n <code>java.rmi.activation.Activatable</code>.\n\n @version 1.14, 03/23/10\n @author  Ann Wollrath\n @since   JDK1.1\n @see java.rmi.server.UnicastRemoteObject\n @see java.rmi.activation.Activatable\n"
11641,method,java/rmi/server/ExportException/ExportException/String," Constructs an <code>ExportException</code> with the specified\n detail message.\n\n @param s the detail message\n @since JDK1.1\n"
11642,method,java/rmi/server/ExportException/ExportException/String;Exception," Constructs an <code>ExportException</code> with the specified\n detail message and nested exception.\n\n @param s the detail message\n @param ex the nested exception\n @since JDK1.1\n"
11652,field,java/rmi/registry/Registry/REGISTRY_PORT,"Well known port for registry. "
11654,method,java/rmi/registry/LocateRegistry/getRegistry/," Returns a reference to the the remote object <code>Registry</code> for\n the local host on the default registry port of 1099.\n\n @return reference (a stub) to the remote object registry\n @exception RemoteException if the reference could not be created\n @since JDK1.1\n"
11655,method,java/rmi/registry/LocateRegistry/getRegistry/int," Returns a reference to the the remote object <code>Registry</code> for\n the local host on the specified <code>port</code>.\n\n @param port port on which the registry accepts requests\n @return reference (a stub) to the remote object registry\n @exception RemoteException if the reference could not be created\n @since JDK1.1\n"
11656,method,java/rmi/registry/LocateRegistry/getRegistry/String," Returns a reference to the remote object <code>Registry</code> on the\n specified <code>host</code> on the default registry port of 1099.  If\n <code>host</code> is <code>null</code>, the local host is used.\n\n @param host host for the remote registry\n @return reference (a stub) to the remote object registry\n @exception RemoteException if the reference could not be created\n @since JDK1.1\n"
11657,method,java/rmi/registry/LocateRegistry/getRegistry/String;int," Returns a reference to the remote object <code>Registry</code> on the\n specified <code>host</code> and <code>port</code>. If <code>host</code>\n is <code>null</code>, the local host is used.\n\n @param host host for the remote registry\n @param port port on which the registry accepts requests\n @return reference (a stub) to the remote object registry\n @exception RemoteException if the reference could not be created\n @since JDK1.1\n"
11658,method,java/rmi/registry/LocateRegistry/getRegistry/String;int;RMIClientSocketFactory," Returns a locally created remote reference to the remote object\n <code>Registry</code> on the specified <code>host</code> and\n <code>port</code>.  Communication with this remote registry will\n use the supplied <code>RMIClientSocketFactory</code> <code>csf</code>\n to create <code>Socket</code> connections to the registry on the\n remote <code>host</code> and <code>port</code>.\n\n @param host host for the remote registry\n @param port port on which the registry accepts requests\n @param csf  client-side <code>Socket</code> factory used to\n      make connections to the registry.  If <code>csf</code>\n      is null, then the default client-side <code>Socket</code>\n      factory will be used in the registry stub.\n @return reference (a stub) to the remote registry\n @exception RemoteException if the reference could not be created\n @since 1.2\n"
11661,class,java/lang/Void," The Void class is an uninstantiable placeholder class to hold a\n reference to the Class object representing the Java keyword\n void.\n\n @author  unascribed\n @version 1.16, 03/23/10\n @since   JDK1.1\n"
11662,field,java/lang/Void/TYPE," The Class object representing the pseudo-type corresponding to\n the keyword void.\n"
11664,method,java/lang/VirtualMachineError/VirtualMachineError/," Constructs a <code>VirtualMachineError</code> with no detail message.\n"
11665,method,java/lang/VirtualMachineError/VirtualMachineError/String," Constructs a <code>VirtualMachineError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
11666,class,java/lang/VerifyError," Thrown when the "verifier" detects that a class file, \n though well formed, contains some sort of internal inconsistency \n or security problem. \n\n @author  unascribed\n @version 1.15, 03/23/10\n @since   JDK1.0\n"
11667,method,java/lang/VerifyError/VerifyError/," Constructs an <code>VerifyError</code> with no detail message.\n"
11668,method,java/lang/VerifyError/VerifyError/String," Constructs an <code>VerifyError</code> with the specified detail message.\n\n @param   s   the detail message.\n"
11669,class,java/lang/UnsupportedOperationException," Thrown to indicate that the requested operation is not supported.<p>\n\n This class is a member of the\n <a href="{@docRoot}/../technotes/guides/collections/index.html">\n Java Collections Framework</a>.\n\n @author  Josh Bloch\n @version 1.22, 03/23/10\n @since   1.2\n"
11670,method,java/lang/UnsupportedOperationException/UnsupportedOperationException/," Constructs an UnsupportedOperationException with no detail message.\n"
11671,method,java/lang/UnsupportedOperationException/UnsupportedOperationException/String," Constructs an UnsupportedOperationException with the specified\n detail message.\n\n @param message the detail message\n"
11673,method,java/lang/UnsupportedOperationException/UnsupportedOperationException/Throwable," Constructs a new exception with the specified cause and a detail\n message of <tt>(cause==null ? null : cause.toString())</tt> (which\n typically contains the class and detail message of <tt>cause</tt>).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n @since  1.5\n"
11674,class,java/lang/UnsupportedClassVersionError," Thrown when the Java Virtual Machine attempts to read a class \n file and determines that the major and minor version numbers\n in the file are not supported.\n\n @since   1.2\n"
11675,method,java/lang/UnsupportedClassVersionError/UnsupportedClassVersionError/," Constructs a <code>UnsupportedClassVersionError</code> \n with no detail message. \n"
11676,method,java/lang/UnsupportedClassVersionError/UnsupportedClassVersionError/String," Constructs a <code>UnsupportedClassVersionError</code> with\n the specified detail message. \n\n @param   s   the detail message.\n"
11677,class,java/lang/UnsatisfiedLinkError," Thrown if the Java Virtual Machine cannot find an appropriate \n native-language definition of a method declared <code>native</code>. \n\n @author unascribed\n @version 1.23, 03/23/10\n @see     java.lang.Runtime\n @since   JDK1.0\n"
11678,method,java/lang/UnsatisfiedLinkError/UnsatisfiedLinkError/," Constructs an <code>UnsatisfiedLinkError</code> with no detail message.\n"
11679,method,java/lang/UnsatisfiedLinkError/UnsatisfiedLinkError/String," Constructs an <code>UnsatisfiedLinkError</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
11680,class,java/lang/UnknownError," Thrown when an unknown but serious exception has occurred in the \n Java Virtual Machine. \n\n @author unascribed\n @version 1.15, 03/23/10\n @since   JDK1.0\n"
11681,method,java/lang/UnknownError/UnknownError/," Constructs an <code>UnknownError</code> with no detail message. \n"
11682,method,java/lang/UnknownError/UnknownError/String," Constructs an <code>UnknownError</code> with the specified detail \n message. \n\n @param   s   the detail message.\n"
11684,method,java/lang/TypeNotPresentException/typeName/," Returns the fully qualified name of the unavailable type.\n\n @return the fully qualified name of the unavailable type\n"
11685,method,java/lang/TypeNotPresentException/TypeNotPresentException/String;Throwable," Constructs a <tt>TypeNotPresentException</tt> for the named type\n with the specified cause.\n\n @param typeName the fully qualified name of the unavailable type\n @param cause the exception that was thrown when the system attempted to\n    load the named type, or <tt>null</tt> if unavailable or inapplicable\n"
11693,method,java/lang/Throwable/printStackTrace/PrintStream," Prints this throwable and its backtrace to the specified print stream.\n\n @param s <code>PrintStream</code> to use for output\n"
11694,method,java/lang/Throwable/printStackTrace/PrintWriter," Prints this throwable and its backtrace to the specified\n print writer.\n\n @param s <code>PrintWriter</code> to use for output\n @since   JDK1.1\n"
11736,method,java/lang/ThreadDeath/ThreadDeath/,""
11792,method,java/lang/Thread/State/values/,""
11793,method,java/lang/Thread/State/valueOf/String,""
11806,method,java/lang/System/console/," Returns the unique {@link java.io.Console Console} object associated\n with the current Java virtual machine, if any.\n\n @return  The system console, if any, otherwise <tt>null</tt>.\n\n @since   1.6\n"
11809,method,java/lang/System/getSecurityManager/," Gets the system security interface.\n\n @return  if a security manager has already been established for the\n          current application, then that security manager is returned;\n          otherwise, <code>null</code> is returned.\n @see     #setSecurityManager\n"
11828,method,java/lang/System/mapLibraryName/String," Maps a library name into a platform-specific string representing\n a native library.\n\n @param      libname the name of the library.\n @return     a platform-dependent native library name.\n @exception  NullPointerException if <code>libname</code> is\n             <code>null</code>\n @see        java.lang.System#loadLibrary(java.lang.String)\n @see        java.lang.ClassLoader#findLibrary(java.lang.String)\n @since      1.2\n"
11829,field,java/lang/System/in," The "standard" input stream. This stream is already\n open and ready to supply input data. Typically this stream\n corresponds to keyboard input or another input source specified by\n the host environment or user.\n"
11830,field,java/lang/System/out," The "standard" output stream. This stream is already\n open and ready to accept output data. Typically this stream\n corresponds to display output or another output destination\n specified by the host environment or user.\n <p>\n For simple stand-alone Java applications, a typical way to write\n a line of output data is:\n <blockquote><pre>\n     System.out.println(data)\n </pre></blockquote>\n <p>\n See the <code>println</code> methods in class <code>PrintStream</code>.\n\n @see     java.io.PrintStream#println()\n @see     java.io.PrintStream#println(boolean)\n @see     java.io.PrintStream#println(char)\n @see     java.io.PrintStream#println(char[])\n @see     java.io.PrintStream#println(double)\n @see     java.io.PrintStream#println(float)\n @see     java.io.PrintStream#println(int)\n @see     java.io.PrintStream#println(long)\n @see     java.io.PrintStream#println(java.lang.Object)\n @see     java.io.PrintStream#println(java.lang.String)\n"
11834,class,java/lang/StringIndexOutOfBoundsException," Thrown by <code>String</code> methods to indicate that an index\n is either negative or greater than the size of the string.  For\n some methods such as the charAt method, this exception also is\n thrown when the index is equal to the size of the string.\n\n @author  unascribed\n @version 1.24, 03/23/10\n @see     java.lang.String#charAt(int)\n @since   JDK1.0\n"
11835,method,java/lang/StringIndexOutOfBoundsException/StringIndexOutOfBoundsException/," Constructs a <code>StringIndexOutOfBoundsException</code> with no \n detail message. \n\n @since   JDK1.0.\n"
11836,method,java/lang/StringIndexOutOfBoundsException/StringIndexOutOfBoundsException/String," Constructs a <code>StringIndexOutOfBoundsException</code> with \n the specified detail message. \n\n @param   s   the detail message.\n"
11837,method,java/lang/StringIndexOutOfBoundsException/StringIndexOutOfBoundsException/int," Constructs a new <code>StringIndexOutOfBoundsException</code> \n class with an argument indicating the illegal index. \n\n @param   index   the illegal index.\n"
11839,method,java/lang/StringBuilder/append/Object," @see     java.lang.String#valueOf(java.lang.Object)\n @see     #append(java.lang.String)\n"
11840,method,java/lang/StringBuilder/append/String,""
11844,method,java/lang/StringBuilder/append/char[],""
11845,method,java/lang/StringBuilder/append/char[];int;int,""
11846,method,java/lang/StringBuilder/append/boolean," @see     java.lang.String#valueOf(boolean)\n @see     #append(java.lang.String)\n"
11847,method,java/lang/StringBuilder/append/char,""
11848,method,java/lang/StringBuilder/append/int," @see     java.lang.String#valueOf(int)\n @see     #append(java.lang.String)\n"
11849,method,java/lang/StringBuilder/append/long," @see     java.lang.String#valueOf(long)\n @see     #append(java.lang.String)\n"
11850,method,java/lang/StringBuilder/append/float," @see     java.lang.String#valueOf(float)\n @see     #append(java.lang.String)\n"
11851,method,java/lang/StringBuilder/append/double," @see     java.lang.String#valueOf(double)\n @see     #append(java.lang.String)\n"
11852,method,java/lang/StringBuilder/appendCodePoint/int," @since 1.5\n"
11872,method,java/lang/StringBuilder/reverse/,""
11873,method,java/lang/StringBuilder/toString/,""
11874,method,java/lang/StringBuilder/StringBuilder/," Constructs a string builder with no characters in it and an \n initial capacity of 16 characters. \n"
11875,method,java/lang/StringBuilder/StringBuilder/int," Constructs a string builder with no characters in it and an \n initial capacity specified by the <code>capacity</code> argument. \n\n @param      capacity  the initial capacity.\n @throws     NegativeArraySizeException  if the <code>capacity</code>\n               argument is less than <code>0</code>.\n"
11876,method,java/lang/StringBuilder/StringBuilder/String," Constructs a string builder initialized to the contents of the \n specified string. The initial capacity of the string builder is \n <code>16</code> plus the length of the string argument.  \n\n @param   str   the initial contents of the buffer.\n @throws    NullPointerException if <code>str</code> is <code>null</code>\n"
11877,method,java/lang/StringBuilder/StringBuilder/CharSequence," Constructs a string builder that contains the same characters\n as the specified <code>CharSequence</code>. The initial capacity of\n the string builder is <code>16</code> plus the length of the\n <code>CharSequence</code> argument.\n\n @param      seq   the sequence to copy.\n @throws    NullPointerException if <code>seq</code> is <code>null</code>\n"
11879,method,java/lang/StringBuffer/length/,""
11880,method,java/lang/StringBuffer/capacity/,""
11881,method,java/lang/StringBuffer/ensureCapacity/int,""
11882,method,java/lang/StringBuffer/trimToSize/," @since      1.5\n"
11885,method,java/lang/StringBuffer/codePointAt/int," @since      1.5\n"
11886,method,java/lang/StringBuffer/codePointBefore/int," @since     1.5\n"
11887,method,java/lang/StringBuffer/codePointCount/int;int," @since     1.5\n"
11888,method,java/lang/StringBuffer/offsetByCodePoints/int;int," @since     1.5\n"
11891,method,java/lang/StringBuffer/append/Object," @see     java.lang.String#valueOf(java.lang.Object)\n @see     #append(java.lang.String)\n"
11892,method,java/lang/StringBuffer/append/String,""
11896,method,java/lang/StringBuffer/append/char[],""
11897,method,java/lang/StringBuffer/append/char[];int;int,""
11898,method,java/lang/StringBuffer/append/boolean," @see     java.lang.String#valueOf(boolean)\n @see     #append(java.lang.String)\n"
11899,method,java/lang/StringBuffer/append/char,""
11900,method,java/lang/StringBuffer/append/int," @see     java.lang.String#valueOf(int)\n @see     #append(java.lang.String)\n"
11901,method,java/lang/StringBuffer/appendCodePoint/int," @since 1.5\n"
11902,method,java/lang/StringBuffer/append/long," @see     java.lang.String#valueOf(long)\n @see     #append(java.lang.String)\n"
11903,method,java/lang/StringBuffer/append/float," @see     java.lang.String#valueOf(float)\n @see     #append(java.lang.String)\n"
11904,method,java/lang/StringBuffer/append/double," @see     java.lang.String#valueOf(double)\n @see     #append(java.lang.String)\n"
11927,method,java/lang/StringBuffer/reverse/," @since   JDK1.0.2\n"
11928,method,java/lang/StringBuffer/toString/,""
11929,method,java/lang/StringBuffer/StringBuffer/," Constructs a string buffer with no characters in it and an \n initial capacity of 16 characters. \n"
11930,method,java/lang/StringBuffer/StringBuffer/int," Constructs a string buffer with no characters in it and \n the specified initial capacity. \n\n @param      capacity  the initial capacity.\n @exception  NegativeArraySizeException  if the <code>capacity</code>\n               argument is less than <code>0</code>.\n"
11931,method,java/lang/StringBuffer/StringBuffer/String," Constructs a string buffer initialized to the contents of the \n specified string. The initial capacity of the string buffer is \n <code>16</code> plus the length of the string argument.\n\n @param   str   the initial contents of the buffer.\n @exception NullPointerException if <code>str</code> is <code>null</code>\n"
11932,method,java/lang/StringBuffer/StringBuffer/CharSequence," Constructs a string buffer that contains the same characters\n as the specified <code>CharSequence</code>. The initial capacity of\n the string buffer is <code>16</code> plus the length of the\n <code>CharSequence</code> argument.\n <p>\n If the length of the specified <code>CharSequence</code> is\n less than or equal to zero, then an empty buffer of capacity\n <code>16</code> is returned.\n\n @param      seq   the sequence to copy.\n @exception NullPointerException if <code>seq</code> is <code>null</code>\n @since 1.5\n"
11934,method,java/lang/String/length/," Returns the length of this string.\n The length is equal to the number of <a href="Character.html#unicode">Unicode\n code units</a> in the string.\n\n @return  the length of the sequence of characters represented by this\n          object.\n"
11936,method,java/lang/String/charAt/int," Returns the <code>char</code> value at the\n specified index. An index ranges from <code>0</code> to\n <code>length() - 1</code>. The first <code>char</code> value of the sequence\n is at index <code>0</code>, the next at index <code>1</code>,\n and so on, as for array indexing.\n\n <p>If the <code>char</code> value specified by the index is a\n <a href="Character.html#unicode">surrogate</a>, the surrogate\n value is returned.\n\n @param      index   the index of the <code>char</code> value.\n @return     the <code>char</code> value at the specified index of this string.\n             The first <code>char</code> value is at index <code>0</code>.\n @exception  IndexOutOfBoundsException  if the <code>index</code>\n             argument is negative or not less than the length of this\n             string.\n"
11937,method,java/lang/String/codePointAt/int," Returns the character (Unicode code point) at the specified\n index. The index refers to <code>char</code> values\n (Unicode code units) and ranges from <code>0</code> to\n {@link #length()}<code> - 1</code>.\n\n <p> If the <code>char</code> value specified at the given index\n is in the high-surrogate range, the following index is less\n than the length of this <code>String</code>, and the\n <code>char</code> value at the following index is in the\n low-surrogate range, then the supplementary code point\n corresponding to this surrogate pair is returned. Otherwise,\n the <code>char</code> value at the given index is returned.\n\n @param      index the index to the <code>char</code> values\n @return     the code point value of the character at the\n             <code>index</code>\n @exception  IndexOutOfBoundsException  if the <code>index</code>\n             argument is negative or not less than the length of this\n             string.\n @since      1.5\n"
11949,method,java/lang/String/equalsIgnoreCase/String," Compares this {@code String} to another {@code String}, ignoring case\n considerations.  Two strings are considered equal ignoring case if they\n are of the same length and corresponding characters in the two strings\n are equal ignoring case.\n\n <p> Two characters {@code c1} and {@code c2} are considered the same\n ignoring case if at least one of the following is true:\n <ul>\n   <li> The two characters are the same (as compared by the\n        {@code ==} operator)\n   <li> Applying the method {@link\n        java.lang.Character#toUpperCase(char)} to each character\n        produces the same result\n   <li> Applying the method {@link\n        java.lang.Character#toLowerCase(char)} to each character\n        produces the same result\n </ul>\n\n @param  anotherString\n         The {@code String} to compare this {@code String} against\n\n @return  {@code true} if the argument is not {@code null} and it\n          represents an equivalent {@code String} ignoring case; {@code\n          false} otherwise\n\n @see  #equals(Object)\n"
11950,method,java/lang/String/compareTo/String," Compares two strings lexicographically.\n The comparison is based on the Unicode value of each character in\n the strings. The character sequence represented by this\n <code>String</code> object is compared lexicographically to the\n character sequence represented by the argument string. The result is\n a negative integer if this <code>String</code> object\n lexicographically precedes the argument string. The result is a\n positive integer if this <code>String</code> object lexicographically\n follows the argument string. The result is zero if the strings\n are equal; <code>compareTo</code> returns <code>0</code> exactly when\n the {@link #equals(Object)} method would return <code>true</code>.\n <p>\n This is the definition of lexicographic ordering. If two strings are\n different, then either they have different characters at some index\n that is a valid index for both strings, or their lengths are different,\n or both. If they have different characters at one or more index\n positions, let <i>k</i> be the smallest such index; then the string\n whose character at position <i>k</i> has the smaller value, as\n determined by using the &lt; operator, lexicographically precedes the\n other string. In this case, <code>compareTo</code> returns the\n difference of the two character values at position <code>k</code> in\n the two string -- that is, the value:\n <blockquote><pre>\n this.charAt(k)-anotherString.charAt(k)\n </pre></blockquote>\n If there is no index position at which they differ, then the shorter\n string lexicographically precedes the longer string. In this case,\n <code>compareTo</code> returns the difference of the lengths of the\n strings -- that is, the value:\n <blockquote><pre>\n this.length()-anotherString.length()\n </pre></blockquote>\n\n @param   anotherString   the <code>String</code> to be compared.\n @return  the value <code>0</code> if the argument string is equal to\n          this string; a value less than <code>0</code> if this string\n          is lexicographically less than the string argument; and a\n          value greater than <code>0</code> if this string is\n          lexicographically greater than the string argument.\n"
11954,method,java/lang/String/startsWith/String;int," Tests if the substring of this string beginning at the\n specified index starts with the specified prefix.\n\n @param   prefix    the prefix.\n @param   toffset   where to begin looking in this string.\n @return  <code>true</code> if the character sequence represented by the\n          argument is a prefix of the substring of this object starting\n          at index <code>toffset</code>; <code>false</code> otherwise.\n          The result is <code>false</code> if <code>toffset</code> is\n          negative or greater than the length of this\n          <code>String</code> object; otherwise the result is the same\n          as the result of the expression\n          <pre>\n          this.substring(toffset).startsWith(prefix)\n          </pre>\n"
11957,method,java/lang/String/hashCode/," Returns a hash code for this string. The hash code for a\n <code>String</code> object is computed as\n <blockquote><pre>\n s[0]*31^(n-1) + s[1]*31^(n-2) + ... + s[n-1]\n </pre></blockquote>\n using <code>int</code> arithmetic, where <code>s[i]</code> is the\n <i>i</i>th character of the string, <code>n</code> is the length of\n the string, and <code>^</code> indicates exponentiation.\n (The hash value of the empty string is zero.)\n\n @return  a hash code value for this object.\n"
11958,method,java/lang/String/indexOf/int," Returns the index within this string of the first occurrence of\n the specified character. If a character with value\n <code>ch</code> occurs in the character sequence represented by\n this <code>String</code> object, then the index (in Unicode\n code units) of the first such occurrence is returned. For\n values of <code>ch</code> in the range from 0 to 0xFFFF\n (inclusive), this is the smallest value <i>k</i> such that:\n <blockquote><pre>\n this.charAt(<i>k</i>) == ch\n </pre></blockquote>\n is true. For other values of <code>ch</code>, it is the\n smallest value <i>k</i> such that:\n <blockquote><pre>\n this.codePointAt(<i>k</i>) == ch\n </pre></blockquote>\n is true. In either case, if no such character occurs in this\n string, then <code>-1</code> is returned.\n\n @param   ch   a character (Unicode code point).\n @return  the index of the first occurrence of the character in the\n          character sequence represented by this object, or\n          <code>-1</code> if the character does not occur.\n"
11960,method,java/lang/String/lastIndexOf/int," Returns the index within this string of the last occurrence of\n the specified character. For values of <code>ch</code> in the\n range from 0 to 0xFFFF (inclusive), the index (in Unicode code\n units) returned is the largest value <i>k</i> such that:\n <blockquote><pre>\n this.charAt(<i>k</i>) == ch\n </pre></blockquote>\n is true. For other values of <code>ch</code>, it is the\n largest value <i>k</i> such that:\n <blockquote><pre>\n this.codePointAt(<i>k</i>) == ch\n </pre></blockquote>\n is true.  In either case, if no such character occurs in this\n string, then <code>-1</code> is returned.  The\n <code>String</code> is searched backwards starting at the last\n character.\n\n @param   ch   a character (Unicode code point).\n @return  the index of the last occurrence of the character in the\n          character sequence represented by this object, or\n          <code>-1</code> if the character does not occur.\n"
11962,method,java/lang/String/indexOf/String," Returns the index within this string of the first occurrence of the\n specified substring. The integer returned is the smallest value\n <i>k</i> such that:\n <blockquote><pre>\n this.startsWith(str, <i>k</i>)\n </pre></blockquote>\n is <code>true</code>.\n\n @param   str   any string.\n @return  if the string argument occurs as a substring within this\n          object, then the index of the first character of the first\n          such substring is returned; if it does not occur as a\n          substring, <code>-1</code> is returned.\n"
11963,method,java/lang/String/indexOf/String;int," Returns the index within this string of the first occurrence of the\n specified substring, starting at the specified index.  The integer\n returned is the smallest value <tt>k</tt> for which:\n <blockquote><pre>\n     k &gt;= Math.min(fromIndex, this.length()) && this.startsWith(str, k)\n </pre></blockquote>\n If no such value of <i>k</i> exists, then -1 is returned.\n\n @param   str         the substring for which to search.\n @param   fromIndex   the index from which to start the search.\n @return  the index within this string of the first occurrence of the\n          specified substring, starting at the specified index.\n"
11964,method,java/lang/String/lastIndexOf/String," Returns the index within this string of the rightmost occurrence\n of the specified substring.  The rightmost empty string "" is\n considered to occur at the index value <code>this.length()</code>.\n The returned index is the largest value <i>k</i> such that\n <blockquote><pre>\n this.startsWith(str, k)\n </pre></blockquote>\n is true.\n\n @param   str   the substring to search for.\n @return  if the string argument occurs one or more times as a substring\n          within this object, then the index of the first character of\n          the last such substring is returned. If it does not occur as\n          a substring, <code>-1</code> is returned.\n"
11965,method,java/lang/String/lastIndexOf/String;int," Returns the index within this string of the last occurrence of the\n specified substring, searching backward starting at the specified index.\n The integer returned is the largest value <i>k</i> such that:\n <blockquote><pre>\n     k &lt;= Math.min(fromIndex, this.length()) && this.startsWith(str, k)\n </pre></blockquote>\n If no such value of <i>k</i> exists, then -1 is returned.\n\n @param   str         the substring to search for.\n @param   fromIndex   the index to start the search from.\n @return  the index within this string of the last occurrence of the\n          specified substring.\n"
11969,method,java/lang/String/concat/String," Concatenates the specified string to the end of this string.\n <p>\n If the length of the argument string is <code>0</code>, then this\n <code>String</code> object is returned. Otherwise, a new\n <code>String</code> object is created, representing a character\n sequence that is the concatenation of the character sequence\n represented by this <code>String</code> object and the character\n sequence represented by the argument string.<p>\n Examples:\n <blockquote><pre>\n "cares".concat("s") returns "caress"\n "to".concat("get").concat("her") returns "together"\n </pre></blockquote>\n\n @param   str   the <code>String</code> that is concatenated to the end\n                of this <code>String</code>.\n @return  a string that represents the concatenation of this object's\n          characters followed by the string argument's characters.\n"
11970,method,java/lang/String/replace/char;char," Returns a new string resulting from replacing all occurrences of\n <code>oldChar</code> in this string with <code>newChar</code>.\n <p>\n If the character <code>oldChar</code> does not occur in the\n character sequence represented by this <code>String</code> object,\n then a reference to this <code>String</code> object is returned.\n Otherwise, a new <code>String</code> object is created that\n represents a character sequence identical to the character sequence\n represented by this <code>String</code> object, except that every\n occurrence of <code>oldChar</code> is replaced by an occurrence\n of <code>newChar</code>.\n <p>\n Examples:\n <blockquote><pre>\n "mesquite in your cellar".replace('e', 'o')\n         returns "mosquito in your collar"\n "the war of baronets".replace('r', 'y')\n         returns "the way of bayonets"\n "sparring with a purple porpoise".replace('p', 't')\n         returns "starring with a turtle tortoise"\n "JonL".replace('q', 'x') returns "JonL" (no change)\n </pre></blockquote>\n\n @param   oldChar   the old character.\n @param   newChar   the new character.\n @return  a string derived from this string by replacing every\n          occurrence of <code>oldChar</code> with <code>newChar</code>.\n"
11975,method,java/lang/String/replace/CharSequence;CharSequence," Replaces each substring of this string that matches the literal target\n sequence with the specified literal replacement sequence. The\n replacement proceeds from the beginning of the string to the end, for\n example, replacing "aa" with "b" in the string "aaa" will result in\n "ba" rather than "ab".\n\n @param  target The sequence of char values to be replaced\n @param  replacement The replacement sequence of char values\n @return  The resulting string\n @throws NullPointerException if <code>target</code> or\n         <code>replacement</code> is <code>null</code>.\n @since 1.5\n"
11983,method,java/lang/String/toString/," This object (which is already a string!) is itself returned.\n\n @return  the string itself.\n"
11984,method,java/lang/String/toCharArray/," Converts this string to a new character array.\n\n @return  a newly allocated character array whose length is the length\n          of this string and whose contents are initialized to contain\n          the character sequence represented by this string.\n"
11987,method,java/lang/String/valueOf/Object," Returns the string representation of the <code>Object</code> argument.\n\n @param   obj   an <code>Object</code>.\n @return  if the argument is <code>null</code>, then a string equal to\n          <code>"null"</code>; otherwise, the value of\n          <code>obj.toString()</code> is returned.\n @see     java.lang.Object#toString()\n"
11988,method,java/lang/String/valueOf/char[]," Returns the string representation of the <code>char</code> array\n argument. The contents of the character array are copied; subsequent\n modification of the character array does not affect the newly\n created string.\n\n @param   data   a <code>char</code> array.\n @return  a newly allocated string representing the same sequence of\n          characters contained in the character array argument.\n"
11989,method,java/lang/String/valueOf/char[];int;int," Returns the string representation of a specific subarray of the\n <code>char</code> array argument.\n <p>\n The <code>offset</code> argument is the index of the first\n character of the subarray. The <code>count</code> argument\n specifies the length of the subarray. The contents of the subarray\n are copied; subsequent modification of the character array does not\n affect the newly created string.\n\n @param   data     the character array.\n @param   offset   the initial offset into the value of the\n                  <code>String</code>.\n @param   count    the length of the value of the <code>String</code>.\n @return  a string representing the sequence of characters contained\n          in the subarray of the character array argument.\n @exception IndexOutOfBoundsException if <code>offset</code> is\n          negative, or <code>count</code> is negative, or\n          <code>offset+count</code> is larger than\n          <code>data.length</code>.\n"
11990,method,java/lang/String/copyValueOf/char[];int;int," Returns a String that represents the character sequence in the\n array specified.\n\n @param   data     the character array.\n @param   offset   initial offset of the subarray.\n @param   count    length of the subarray.\n @return  a <code>String</code> that contains the characters of the\n          specified subarray of the character array.\n"
11991,method,java/lang/String/copyValueOf/char[]," Returns a String that represents the character sequence in the\n array specified.\n\n @param   data   the character array.\n @return  a <code>String</code> that contains the characters of the\n          character array.\n"
11992,method,java/lang/String/valueOf/boolean," Returns the string representation of the <code>boolean</code> argument.\n\n @param   b   a <code>boolean</code>.\n @return  if the argument is <code>true</code>, a string equal to\n          <code>"true"</code> is returned; otherwise, a string equal to\n          <code>"false"</code> is returned.\n"
11993,method,java/lang/String/valueOf/char," Returns the string representation of the <code>char</code>\n argument.\n\n @param   c   a <code>char</code>.\n @return  a string of length <code>1</code> containing\n          as its single character the argument <code>c</code>.\n"
11994,method,java/lang/String/valueOf/int," Returns the string representation of the <code>int</code> argument.\n <p>\n The representation is exactly the one returned by the\n <code>Integer.toString</code> method of one argument.\n\n @param   i   an <code>int</code>.\n @return  a string representation of the <code>int</code> argument.\n @see     java.lang.Integer#toString(int, int)\n"
11995,method,java/lang/String/valueOf/long," Returns the string representation of the <code>long</code> argument.\n <p>\n The representation is exactly the one returned by the\n <code>Long.toString</code> method of one argument.\n\n @param   l   a <code>long</code>.\n @return  a string representation of the <code>long</code> argument.\n @see     java.lang.Long#toString(long)\n"
11996,method,java/lang/String/valueOf/float," Returns the string representation of the <code>float</code> argument.\n <p>\n The representation is exactly the one returned by the\n <code>Float.toString</code> method of one argument.\n\n @param   f   a <code>float</code>.\n @return  a string representation of the <code>float</code> argument.\n @see     java.lang.Float#toString(float)\n"
11997,method,java/lang/String/valueOf/double," Returns the string representation of the <code>double</code> argument.\n <p>\n The representation is exactly the one returned by the\n <code>Double.toString</code> method of one argument.\n\n @param   d   a <code>double</code>.\n @return  a  string representation of the <code>double</code> argument.\n @see     java.lang.Double#toString(double)\n"
12000,method,java/lang/String/String/String," Initializes a newly created {@code String} object so that it represents\n the same sequence of characters as the argument; in other words, the\n newly created string is a copy of the argument string. Unless an\n explicit copy of {@code original} is needed, use of this constructor is\n unnecessary since Strings are immutable.\n\n @param  original\n         A {@code String}\n"
12001,method,java/lang/String/String/char[]," Allocates a new {@code String} so that it represents the sequence of\n characters currently contained in the character array argument. The\n contents of the character array are copied; subsequent modification of\n the character array does not affect the newly created string.\n\n @param  value\n         The initial value of the string\n"
12002,method,java/lang/String/String/char[];int;int," Allocates a new {@code String} that contains characters from a subarray\n of the character array argument. The {@code offset} argument is the\n index of the first character of the subarray and the {@code count}\n argument specifies the length of the subarray. The contents of the\n subarray are copied; subsequent modification of the character array does\n not affect the newly created string.\n\n @param  value\n         Array that is the source of characters\n\n @param  offset\n         The initial offset\n\n @param  count\n         The length\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code count} arguments index\n          characters outside the bounds of the {@code value} array\n"
12003,method,java/lang/String/String/int[];int;int," Allocates a new {@code String} that contains characters from a subarray\n of the Unicode code point array argument. The {@code offset} argument\n is the index of the first code point of the subarray and the\n {@code count} argument specifies the length of the subarray. The\n contents of the subarray are converted to {@code char}s; subsequent\n modification of the {@code int} array does not affect the newly created\n string.\n\n @param  codePoints\n         Array that is the source of Unicode code points\n\n @param  offset\n         The initial offset\n\n @param  count\n         The length\n\n @throws  IllegalArgumentException\n          If any invalid Unicode code point is found in {@code\n          codePoints}\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} and {@code count} arguments index\n          characters outside the bounds of the {@code codePoints} array\n\n @since  1.5\n"
12004,method,java/lang/String/String/byte[];int;int;int," Allocates a new {@code String} constructed from a subarray of an array\n of 8-bit integer values.\n\n <p> The {@code offset} argument is the index of the first byte of the\n subarray, and the {@code count} argument specifies the length of the\n subarray.\n\n <p> Each {@code byte} in the subarray is converted to a {@code char} as\n specified in the method above.\n\n @deprecated This method does not properly convert bytes into characters.\n As of JDK&nbsp;1.1, the preferred way to do this is via the\n {@code String} constructors that take a {@link\n java.nio.charset.Charset}, charset name, or that use the platform's\n default charset.\n\n @param  ascii\n         The bytes to be converted to characters\n\n @param  hibyte\n         The top 8 bits of each 16-bit Unicode code unit\n\n @param  offset\n         The initial offset\n @param  count\n         The length\n\n @throws  IndexOutOfBoundsException\n          If the {@code offset} or {@code count} argument is invalid\n\n @see  #String(byte[], int)\n @see  #String(byte[], int, int, java.lang.String)\n @see  #String(byte[], int, int, java.nio.charset.Charset)\n @see  #String(byte[], int, int)\n @see  #String(byte[], java.lang.String)\n @see  #String(byte[], java.nio.charset.Charset)\n @see  #String(byte[])\n"
12005,method,java/lang/String/String/byte[];int," Allocates a new {@code String} containing characters constructed from\n an array of 8-bit integer values. Each character <i>c</i>in the\n resulting string is constructed from the corresponding component\n <i>b</i> in the byte array such that:\n\n <blockquote><pre>\n     <b><i>c</i></b> == (char)(((hibyte &amp; 0xff) &lt;&lt; 8)\n                         | (<b><i>b</i></b> &amp; 0xff))\n </pre></blockquote>\n\n @deprecated  This method does not properly convert bytes into\n characters.  As of JDK&nbsp;1.1, the preferred way to do this is via the\n {@code String} constructors that take a {@link\n java.nio.charset.Charset}, charset name, or that use the platform's\n default charset.\n\n @param  ascii\n         The bytes to be converted to characters\n\n @param  hibyte\n         The top 8 bits of each 16-bit Unicode code unit\n\n @see  #String(byte[], int, int, java.lang.String)\n @see  #String(byte[], int, int, java.nio.charset.Charset)\n @see  #String(byte[], int, int)\n @see  #String(byte[], java.lang.String)\n @see  #String(byte[], java.nio.charset.Charset)\n @see  #String(byte[])\n"
12012,method,java/lang/String/String/StringBuffer," Allocates a new string that contains the sequence of characters\n currently contained in the string buffer argument. The contents of the\n string buffer are copied; subsequent modification of the string buffer\n does not affect the newly created string.\n\n @param  buffer\n         A {@code StringBuffer}\n"
12013,method,java/lang/String/String/StringBuilder," Allocates a new string that contains the sequence of characters\n currently contained in the string builder argument. The contents of the\n string builder are copied; subsequent modification of the string builder\n does not affect the newly created string.\n\n <p> This constructor is provided to ease migration to {@code\n StringBuilder}. Obtaining a string from a string builder via the {@code\n toString} method is likely to run faster and is generally preferred.\n\n @param   builder\n          A {@code StringBuilder}\n\n @since  1.5\n"
12016,method,java/lang/StrictMath/sin/double," Returns the trigonometric sine of an angle. Special cases:\n <ul><li>If the argument is NaN or an infinity, then the \n result is NaN.\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.</ul>\n\n @param   a   an angle, in radians.\n @return  the sine of the argument.\n"
12017,method,java/lang/StrictMath/cos/double," Returns the trigonometric cosine of an angle. Special cases:\n <ul><li>If the argument is NaN or an infinity, then the \n result is NaN.</ul>\n\n @param   a   an angle, in radians.\n @return  the cosine of the argument.\n"
12018,method,java/lang/StrictMath/tan/double," Returns the trigonometric tangent of an angle. Special cases:\n <ul><li>If the argument is NaN or an infinity, then the result \n is NaN.\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.</ul>\n\n @param   a   an angle, in radians.\n @return  the tangent of the argument.\n"
12019,method,java/lang/StrictMath/asin/double," Returns the arc sine of a value; the returned angle is in the\n range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:\n <ul><li>If the argument is NaN or its absolute value is greater \n than 1, then the result is NaN.\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.</ul>\n\n @param   a   the value whose arc sine is to be returned.\n @return  the arc sine of the argument.\n"
12020,method,java/lang/StrictMath/acos/double," Returns the arc cosine of a value; the returned angle is in the\n range 0.0 through <i>pi</i>.  Special case:\n <ul><li>If the argument is NaN or its absolute value is greater \n than 1, then the result is NaN.</ul>\n\n @param   a   the value whose arc cosine is to be returned.\n @return  the arc cosine of the argument.\n"
12021,method,java/lang/StrictMath/atan/double," Returns the arc tangent of a value; the returned angle is in the\n range -<i>pi</i>/2 through <i>pi</i>/2.  Special cases:\n <ul><li>If the argument is NaN, then the result is NaN.\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.</ul>\n\n @param   a   the value whose arc tangent is to be returned.\n @return  the arc tangent of the argument.\n"
12022,method,java/lang/StrictMath/toRadians/double," Converts an angle measured in degrees to an approximately\n equivalent angle measured in radians.  The conversion from\n degrees to radians is generally inexact.\n\n @param   angdeg   an angle, in degrees\n @return  the measurement of the angle <code>angdeg</code>\n          in radians.\n"
12024,method,java/lang/StrictMath/exp/double," Returns Euler's number <i>e</i> raised to the power of a\n <code>double</code> value. Special cases:\n <ul><li>If the argument is NaN, the result is NaN.\n <li>If the argument is positive infinity, then the result is \n positive infinity.\n <li>If the argument is negative infinity, then the result is \n positive zero.</ul>\n\n @param   a   the exponent to raise <i>e</i> to.\n @return  the value <i>e</i><sup><code>a</code></sup>, \n		where <i>e</i> is the base of the natural logarithms.\n"
12025,method,java/lang/StrictMath/log/double," Returns the natural logarithm (base <i>e</i>) of a <code>double</code>\n value. Special cases:\n <ul><li>If the argument is NaN or less than zero, then the result \n is NaN.\n <li>If the argument is positive infinity, then the result is \n positive infinity.\n <li>If the argument is positive zero or negative zero, then the \n result is negative infinity.</ul>\n\n @param   a   a value\n @return  the value ln&nbsp;<code>a</code>, the natural logarithm of\n          <code>a</code>.\n"
12026,method,java/lang/StrictMath/log10/double," Returns the base 10 logarithm of a <code>double</code> value.\n Special cases:\n\n <ul><li>If the argument is NaN or less than zero, then the result \n is NaN.\n <li>If the argument is positive infinity, then the result is \n positive infinity.\n <li>If the argument is positive zero or negative zero, then the \n result is negative infinity.\n <li> If the argument is equal to 10<sup><i>n</i></sup> for\n integer <i>n</i>, then the result is <i>n</i>.\n </ul>\n\n @param   a   a value\n @return  the base 10 logarithm of  <code>a</code>.\n @since 1.5\n"
12027,method,java/lang/StrictMath/sqrt/double," Returns the correctly rounded positive square root of a\n <code>double</code> value.\n Special cases:\n <ul><li>If the argument is NaN or less than zero, then the result \n is NaN. \n <li>If the argument is positive infinity, then the result is positive \n infinity. \n <li>If the argument is positive zero or negative zero, then the \n result is the same as the argument.</ul>\n Otherwise, the result is the <code>double</code> value closest to \n the true mathematical square root of the argument value.\n\n @param   a   a value.\n @return  the positive square root of <code>a</code>.\n"
12028,method,java/lang/StrictMath/cbrt/double," Returns the cube root of a <code>double</code> value.  For\n positive finite <code>x</code>, <code>cbrt(-x) ==\n -cbrt(x)</code>; that is, the cube root of a negative value is\n the negative of the cube root of that value's magnitude.\n Special cases: \n\n <ul>\n\n <li>If the argument is NaN, then the result is NaN.\n\n <li>If the argument is infinite, then the result is an infinity\n with the same sign as the argument.\n\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.\n \n </ul>\n\n @param   a   a value.\n @return  the cube root of <code>a</code>.\n @since 1.5\n"
12029,method,java/lang/StrictMath/IEEEremainder/double;double," Computes the remainder operation on two arguments as prescribed \n by the IEEE 754 standard.\n The remainder value is mathematically equal to \n <code>f1&nbsp;-&nbsp;f2</code>&nbsp;&times;&nbsp;<i>n</i>,\n where <i>n</i> is the mathematical integer closest to the exact \n mathematical value of the quotient <code>f1/f2</code>, and if two \n mathematical integers are equally close to <code>f1/f2</code>, \n then <i>n</i> is the integer that is even. If the remainder is \n zero, its sign is the same as the sign of the first argument. \n Special cases:\n <ul><li>If either argument is NaN, or the first argument is infinite, \n or the second argument is positive zero or negative zero, then the \n result is NaN.\n <li>If the first argument is finite and the second argument is \n infinite, then the result is the same as the first argument.</ul>\n\n @param   f1   the dividend.\n @param   f2   the divisor.\n @return  the remainder when <code>f1</code> is divided by\n          <code>f2</code>.\n"
12031,method,java/lang/StrictMath/floor/double," Returns the largest (closest to positive infinity)\n <code>double</code> value that is less than or equal to the\n argument and is equal to a mathematical integer. Special cases:\n <ul><li>If the argument value is already equal to a\n mathematical integer, then the result is the same as the\n argument.  <li>If the argument is NaN or an infinity or\n positive zero or negative zero, then the result is the same as\n the argument.</ul>\n\n @param   a   a value.\n @return  the largest (closest to positive infinity) \n          floating-point value that less than or equal to the argument\n          and is equal to a mathematical integer. \n"
12032,method,java/lang/StrictMath/rint/double," Returns the <code>double</code> value that is closest in value\n to the argument and is equal to a mathematical integer. If two\n <code>double</code> values that are mathematical integers are\n equally close to the value of the argument, the result is the\n integer value that is even. Special cases:\n <ul><li>If the argument value is already equal to a mathematical \n integer, then the result is the same as the argument. \n <li>If the argument is NaN or an infinity or positive zero or negative \n zero, then the result is the same as the argument.</ul>\n\n @param   a   a value.\n @return  the closest floating-point value to <code>a</code> that is\n          equal to a mathematical integer.\n @author Joseph D. Darcy\n"
12033,method,java/lang/StrictMath/atan2/double;double," Returns the angle <i>theta</i> from the conversion of rectangular\n coordinates (<code>x</code>,&nbsp;<code>y</code>) to polar\n coordinates (r,&nbsp;<i>theta</i>).\n This method computes the phase <i>theta</i> by computing an arc tangent\n of <code>y/x</code> in the range of -<i>pi</i> to <i>pi</i>. Special \n cases:\n <ul><li>If either argument is NaN, then the result is NaN. \n <li>If the first argument is positive zero and the second argument \n is positive, or the first argument is positive and finite and the \n second argument is positive infinity, then the result is positive \n zero. \n <li>If the first argument is negative zero and the second argument \n is positive, or the first argument is negative and finite and the \n second argument is positive infinity, then the result is negative zero. \n <li>If the first argument is positive zero and the second argument \n is negative, or the first argument is positive and finite and the \n second argument is negative infinity, then the result is the \n <code>double</code> value closest to <i>pi</i>. \n <li>If the first argument is negative zero and the second argument \n is negative, or the first argument is negative and finite and the \n second argument is negative infinity, then the result is the \n <code>double</code> value closest to -<i>pi</i>. \n <li>If the first argument is positive and the second argument is \n positive zero or negative zero, or the first argument is positive \n infinity and the second argument is finite, then the result is the \n <code>double</code> value closest to <i>pi</i>/2. \n <li>If the first argument is negative and the second argument is \n positive zero or negative zero, or the first argument is negative \n infinity and the second argument is finite, then the result is the \n <code>double</code> value closest to -<i>pi</i>/2. \n <li>If both arguments are positive infinity, then the result is the \n <code>double</code> value closest to <i>pi</i>/4. \n <li>If the first argument is positive infinity and the second argument \n is negative infinity, then the result is the <code>double</code> \n value closest to 3*<i>pi</i>/4. \n <li>If the first argument is negative infinity and the second argument \n is positive infinity, then the result is the <code>double</code> value \n closest to -<i>pi</i>/4. \n <li>If both arguments are negative infinity, then the result is the \n <code>double</code> value closest to -3*<i>pi</i>/4.</ul>\n\n @param   y   the ordinate coordinate\n @param   x   the abscissa coordinate\n @return  the <i>theta</i> component of the point\n          (<i>r</i>,&nbsp;<i>theta</i>)\n          in polar coordinates that corresponds to the point\n          (<i>x</i>,&nbsp;<i>y</i>) in Cartesian coordinates.\n"
12035,method,java/lang/StrictMath/round/float," Returns the closest <code>int</code> to the argument. The \n result is rounded to an integer by adding 1/2, taking the \n floor of the result, and casting the result to type <code>int</code>. \n In other words, the result is equal to the value of the expression:\n <p><pre>(int)Math.floor(a + 0.5f)</pre>\n <p>\n Special cases:\n <ul><li>If the argument is NaN, the result is 0.\n <li>If the argument is negative infinity or any value less than or \n equal to the value of <code>Integer.MIN_VALUE</code>, the result is \n equal to the value of <code>Integer.MIN_VALUE</code>. \n <li>If the argument is positive infinity or any value greater than or \n equal to the value of <code>Integer.MAX_VALUE</code>, the result is \n equal to the value of <code>Integer.MAX_VALUE</code>.</ul> \n\n @param   a   a floating-point value to be rounded to an integer.\n @return  the value of the argument rounded to the nearest\n          <code>int</code> value.\n @see     java.lang.Integer#MAX_VALUE\n @see     java.lang.Integer#MIN_VALUE\n"
12036,method,java/lang/StrictMath/round/double," Returns the closest <code>long</code> to the argument. The result \n is rounded to an integer by adding 1/2, taking the floor of the \n result, and casting the result to type <code>long</code>. In other \n words, the result is equal to the value of the expression:\n <p><pre>(long)Math.floor(a + 0.5d)</pre>\n <p>\n Special cases:\n <ul><li>If the argument is NaN, the result is 0.\n <li>If the argument is negative infinity or any value less than or \n equal to the value of <code>Long.MIN_VALUE</code>, the result is \n equal to the value of <code>Long.MIN_VALUE</code>. \n <li>If the argument is positive infinity or any value greater than or \n equal to the value of <code>Long.MAX_VALUE</code>, the result is \n equal to the value of <code>Long.MAX_VALUE</code>.</ul> \n\n @param   a  a floating-point value to be rounded to a\n		<code>long</code>. \n @return  the value of the argument rounded to the nearest\n          <code>long</code> value.\n @see     java.lang.Long#MAX_VALUE\n @see     java.lang.Long#MIN_VALUE\n"
12040,method,java/lang/StrictMath/abs/float," Returns the absolute value of a <code>float</code> value. \n If the argument is not negative, the argument is returned.\n If the argument is negative, the negation of the argument is returned. \n Special cases:\n <ul><li>If the argument is positive zero or negative zero, the \n result is positive zero. \n <li>If the argument is infinite, the result is positive infinity. \n <li>If the argument is NaN, the result is NaN.</ul>\n In other words, the result is the same as the value of the expression: \n <p><pre>Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(a))</pre>\n\n @param   a   the argument whose absolute value is to be determined\n @return  the absolute value of the argument.\n"
12041,method,java/lang/StrictMath/abs/double," Returns the absolute value of a <code>double</code> value.\n If the argument is not negative, the argument is returned.\n If the argument is negative, the negation of the argument is returned. \n Special cases:\n <ul><li>If the argument is positive zero or negative zero, the result \n is positive zero. \n <li>If the argument is infinite, the result is positive infinity. \n <li>If the argument is NaN, the result is NaN.</ul>\n In other words, the result is the same as the value of the expression: \n <p><code>Double.longBitsToDouble((Double.doubleToLongBits(a)&lt;&lt;1)&gt;&gt;&gt;1)</code>\n\n @param   a   the argument whose absolute value is to be determined\n @return  the absolute value of the argument.\n"
12042,method,java/lang/StrictMath/max/int;int," Returns the greater of two <code>int</code> values. That is, the \n result is the argument closer to the value of \n <code>Integer.MAX_VALUE</code>. If the arguments have the same value, \n the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the larger of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MAX_VALUE\n"
12043,method,java/lang/StrictMath/max/long;long," Returns the greater of two <code>long</code> values. That is, the \n result is the argument closer to the value of \n <code>Long.MAX_VALUE</code>. If the arguments have the same value, \n the result is that same value. \n\n @param   a   an argument.\n @param   b   another argument.\n @return  the larger of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MAX_VALUE\n"
12046,method,java/lang/StrictMath/min/int;int," Returns the smaller of two <code>int</code> values. That is,\n the result the argument closer to the value of\n <code>Integer.MIN_VALUE</code>.  If the arguments have the same\n value, the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the smaller of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MIN_VALUE\n"
12047,method,java/lang/StrictMath/min/long;long," Returns the smaller of two <code>long</code> values. That is,\n the result is the argument closer to the value of\n <code>Long.MIN_VALUE</code>. If the arguments have the same\n value, the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the smaller of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MIN_VALUE\n"
12052,method,java/lang/StrictMath/signum/double," Returns the signum function of the argument; zero if the argument\n is zero, 1.0 if the argument is greater than zero, -1.0 if the\n argument is less than zero.\n\n <p>Special Cases:\n <ul>\n <li> If the argument is NaN, then the result is NaN.\n <li> If the argument is positive zero or negative zero, then the\n      result is the same as the argument.\n </ul>\n\n @param d the floating-point value whose signum is to be returned\n @return the signum function of the argument\n @author Joseph D. Darcy\n @since 1.5\n"
12053,method,java/lang/StrictMath/signum/float," Returns the signum function of the argument; zero if the argument\n is zero, 1.0f if the argument is greater than zero, -1.0f if the\n argument is less than zero.\n\n <p>Special Cases:\n <ul>\n <li> If the argument is NaN, then the result is NaN.\n <li> If the argument is positive zero or negative zero, then the\n      result is the same as the argument.\n </ul>\n\n @param f the floating-point value whose signum is to be returned\n @return the signum function of the argument\n @author Joseph D. Darcy\n @since 1.5\n"
12054,method,java/lang/StrictMath/sinh/double," Returns the hyperbolic sine of a <code>double</code> value.\n The hyperbolic sine of <i>x</i> is defined to be\n (<i>e<sup>x</sup>&nbsp;-&nbsp;e<sup>-x</sup></i>)/2\n where <i>e</i> is {@linkplain Math#E Euler's number}.\n\n <p>Special cases:\n <ul>\n\n <li>If the argument is NaN, then the result is NaN.\n\n <li>If the argument is infinite, then the result is an infinity\n with the same sign as the argument.\n\n <li>If the argument is zero, then the result is a zero with the\n same sign as the argument.\n\n </ul>\n\n @param   x The number whose hyperbolic sine is to be returned.\n @return  The hyperbolic sine of <code>x</code>.\n @since 1.5\n"
12055,method,java/lang/StrictMath/cosh/double," Returns the hyperbolic cosine of a <code>double</code> value.\n The hyperbolic cosine of <i>x</i> is defined to be\n (<i>e<sup>x</sup>&nbsp;+&nbsp;e<sup>-x</sup></i>)/2\n where <i>e</i> is {@linkplain Math#E Euler's number}.\n\n <p>Special cases:\n <ul>\n\n <li>If the argument is NaN, then the result is NaN.\n\n <li>If the argument is infinite, then the result is positive\n infinity.\n\n <li>If the argument is zero, then the result is <code>1.0</code>.\n\n </ul>\n\n @param   x The number whose hyperbolic cosine is to be returned.\n @return  The hyperbolic cosine of <code>x</code>.\n @since 1.5\n"
12057,method,java/lang/StrictMath/hypot/double;double," Returns sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)\n without intermediate overflow or underflow.\n\n <p>Special cases:\n <ul>\n\n <li> If either argument is infinite, then the result\n is positive infinity.\n\n <li> If either argument is NaN and neither argument is infinite,\n then the result is NaN.\n\n </ul>\n\n @param x a value\n @param y a value\n @return sqrt(<i>x</i><sup>2</sup>&nbsp;+<i>y</i><sup>2</sup>)\n without intermediate overflow or underflow\n @since 1.5\n"
12060,method,java/lang/StrictMath/copySign/double;double," Returns the first floating-point argument with the sign of the\n second floating-point argument.  For this method, a NaN\n {@code sign} argument is always treated as if it were\n positive.\n\n @param magnitude  the parameter providing the magnitude of the result\n @param sign   the parameter providing the sign of the result\n @return a value with the magnitude of {@code magnitude}\n and the sign of {@code sign}.\n @since 1.6\n"
12061,method,java/lang/StrictMath/copySign/float;float," Returns the first floating-point argument with the sign of the\n second floating-point argument.  For this method, a NaN\n {@code sign} argument is always treated as if it were\n positive.\n\n @param magnitude  the parameter providing the magnitude of the result\n @param sign   the parameter providing the sign of the result\n @return a value with the magnitude of {@code magnitude}\n and the sign of {@code sign}.\n @since 1.6\n"
12062,method,java/lang/StrictMath/getExponent/float," Returns the unbiased exponent used in the representation of a\n {@code float}.  Special cases:\n\n <ul>\n <li>If the argument is NaN or infinite, then the result is\n {@link Float#MAX_EXPONENT} + 1.\n <li>If the argument is zero or subnormal, then the result is\n {@link Float#MIN_EXPONENT} -1.\n </ul>\n @param f a {@code float} value\n @since 1.6\n"
12063,method,java/lang/StrictMath/getExponent/double," Returns the unbiased exponent used in the representation of a\n {@code double}.  Special cases:\n\n <ul>\n <li>If the argument is NaN or infinite, then the result is\n {@link Double#MAX_EXPONENT} + 1.\n <li>If the argument is zero or subnormal, then the result is\n {@link Double#MIN_EXPONENT} -1.\n </ul>\n @param d a {@code double} value\n @since 1.6\n"
12070,field,java/lang/StrictMath/E," The <code>double</code> value that is closer than any other to\n <i>e</i>, the base of the natural logarithms.\n"
12071,field,java/lang/StrictMath/PI," The <code>double</code> value that is closer than any other to\n <i>pi</i>, the ratio of the circumference of a circle to its\n diameter.\n"
12074,method,java/lang/StackTraceElement/getLineNumber/," Returns the line number of the source line containing the execution\n point represented by this stack trace element.  Generally, this is\n derived from the <tt>LineNumberTable</tt> attribute of the relevant\n <tt>class</tt> file (as per <i>The Java Virtual Machine\n Specification</i>, Section 4.7.8).\n\n @return the line number of the source line containing the execution\n         point represented by this stack trace element, or a negative\n         number if this information is unavailable.\n"
12075,method,java/lang/StackTraceElement/getClassName/," Returns the fully qualified name of the class containing the\n execution point represented by this stack trace element.\n\n @return the fully qualified name of the <tt>Class</tt> containing\n         the execution point represented by this stack trace element.\n"
12076,method,java/lang/StackTraceElement/getMethodName/," Returns the name of the method containing the execution point\n represented by this stack trace element.  If the execution point is\n contained in an instance or class initializer, this method will return\n the appropriate <i>special method name</i>, <tt>&lt;init&gt;</tt> or\n <tt>&lt;clinit&gt;</tt>, as per Section 3.9 of <i>The Java Virtual\n Machine Specification</i>.\n\n @return the name of the method containing the execution point\n         represented by this stack trace element.\n"
12077,method,java/lang/StackTraceElement/isNativeMethod/," Returns true if the method containing the execution point\n represented by this stack trace element is a native method.\n\n @return <tt>true</tt> if the method containing the execution point\n         represented by this stack trace element is a native method.\n"
12080,method,java/lang/StackTraceElement/hashCode/," Returns a hash code value for this stack trace element.\n"
12081,method,java/lang/StackTraceElement/StackTraceElement/String;String;String;int," Creates a stack trace element representing the specified execution\n point.\n\n @param declaringClass the fully qualified name of the class containing\n        the execution point represented by the stack trace element\n @param methodName the name of the method containing the execution point\n        represented by the stack trace element\n @param fileName the name of the file containing the execution point\n         represented by the stack trace element, or <tt>null</tt> if\n         this information is unavailable\n @param lineNumber the line number of the source line containing the\n         execution point represented by this stack trace element, or\n         a negative number if this information is unavailable. A value\n         of -2 indicates that the method containing the execution point\n         is a native method\n @throws NullPointerException if <tt>declaringClass</tt> or\n         <tt>methodName</tt> is null\n @since 1.5\n"
12082,class,java/lang/StackOverflowError," Thrown when a stack overflow occurs because an application \n recurses too deeply. \n\n @author unascribed\n @version 1.23, 03/23/10\n @since   JDK1.0\n"
12083,method,java/lang/StackOverflowError/StackOverflowError/," Constructs a <code>StackOverflowError</code> with no detail message.\n"
12084,method,java/lang/StackOverflowError/StackOverflowError/String," Constructs a <code>StackOverflowError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12089,method,java/lang/Short/valueOf/String;int," Returns a <code>Short</code> object holding the value\n extracted from the specified <code>String</code> when parsed\n with the radix given by the second argument. The first argument\n is interpreted as representing a signed <code>short</code> in\n the radix specified by the second argument, exactly as if the\n argument were given to the {@link #parseShort(java.lang.String,\n int)} method. The result is a <code>Short</code> object that\n represents the <code>short</code> value specified by the string.\n <p> In other words, this method returns a <code>Short</code> object\n equal to the value of:\n\n <blockquote><code>\n new Short(Short.parseShort(s, radix))\n </code></blockquote>\n\n @param s		the string to be parsed\n @param radix 	the radix to be used in interpreting <code>s</code>\n @return          a <code>Short</code> object holding the value \n			represented by the string argument in the \n			specified radix.\n @exception	NumberFormatException If the <code>String</code> does\n			not contain a parsable <code>short</code>.\n"
12090,method,java/lang/Short/valueOf/String," Returns a <code>Short</code> object holding the\n value given by the specified <code>String</code>. The argument\n is interpreted as representing a signed decimal\n <code>short</code>, exactly as if the argument were given to\n the {@link #parseShort(java.lang.String)} method. The result is\n a <code>Short</code> object that represents the\n <code>short</code> value specified by the string.  <p> In other\n words, this method returns a <code>Byte</code> object equal to\n the value of:\n\n <blockquote><code>\n new Short(Short.parseShort(s))\n </code></blockquote>\n\n @param s		the string to be parsed\n @return          a <code>Short</code> object holding the value\n 			represented by the string argument\n @exception	NumberFormatException If the <code>String</code> does\n			not contain a parsable <code>short</code>.\n"
12093,method,java/lang/Short/byteValue/," Returns the value of this <code>Short</code> as a\n <code>byte</code>.\n"
12094,method,java/lang/Short/shortValue/," Returns the value of this <code>Short</code> as a\n <code>short</code>.\n"
12095,method,java/lang/Short/intValue/," Returns the value of this <code>Short</code> as an\n <code>int</code>.\n"
12096,method,java/lang/Short/longValue/," Returns the value of this <code>Short</code> as a\n <code>long</code>.\n"
12097,method,java/lang/Short/floatValue/," Returns the value of this <code>Short</code> as a\n <code>float</code>.\n"
12098,method,java/lang/Short/doubleValue/," Returns the value of this <code>Short</code> as a\n <code>double</code>.\n"
12099,method,java/lang/Short/toString/," Returns a <code>String</code> object representing this\n <code>Short</code>'s value.  The value is converted to signed\n decimal representation and returned as a string, exactly as if\n the <code>short</code> value were given as an argument to the\n {@link java.lang.Short#toString(short)} method.\n\n @return  a string representation of the value of this object in\n          base&nbsp;10.\n"
12100,method,java/lang/Short/hashCode/," Returns a hash code for this <code>Short</code>.\n"
12102,method,java/lang/Short/compareTo/Short," Compares two <code>Short</code> objects numerically.\n\n @param   anotherShort   the <code>Short</code> to be compared.\n @return	the value <code>0</code> if this <code>Short</code> is\n 		equal to the argument <code>Short</code>; a value less than\n 		<code>0</code> if this <code>Short</code> is numerically less\n 		than the argument <code>Short</code>; and a value greater than\n 		 <code>0</code> if this <code>Short</code> is numerically\n 		 greater than the argument <code>Short</code> (signed\n 		 comparison).\n @since   1.2\n"
12103,method,java/lang/Short/reverseBytes/short," Returns the value obtained by reversing the order of the bytes in the\n two's complement representation of the specified <tt>short</tt> value.\n\n @return the value obtained by reversing (or, equivalently, swapping)\n     the bytes in the specified <tt>short</tt> value.\n @since 1.5\n"
12104,method,java/lang/Short/Short/short," Constructs a newly allocated <code>Short</code> object that\n represents the specified <code>short</code> value.\n\n @param value	the value to be represented by the \n			<code>Short</code>.\n"
12105,method,java/lang/Short/Short/String," Constructs a newly allocated <code>Short</code> object that\n represents the <code>short</code> value indicated by the\n <code>String</code> parameter. The string is converted to a\n <code>short</code> value in exactly the manner used by the\n <code>parseShort</code> method for radix 10.\n\n @param s		the <code>String</code> to be converted to a \n			<code>Short</code>\n @exception	NumberFormatException If the <code>String</code> \n			does not contain a parsable <code>short</code>.\n @see        java.lang.Short#parseShort(java.lang.String, int)\n"
12106,field,java/lang/Short/MIN_VALUE," A constant holding the minimum value a <code>short</code> can\n have, -2<sup>15</sup>.\n"
12107,field,java/lang/Short/MAX_VALUE," A constant holding the maximum value a <code>short</code> can\n have, 2<sup>15</sup>-1.\n"
12108,field,java/lang/Short/TYPE," The <code>Class</code> instance representing the primitive type\n <code>short</code>.\n"
12109,field,java/lang/Short/SIZE," The number of bits used to represent a <tt>short</tt> value in two's\n complement binary form.\n @since 1.5\n"
12154,class,java/lang/SecurityException," Thrown by the security manager to indicate a security violation. \n\n @author  unascribed\n @version 1.18, 03/23/10\n @see     java.lang.SecurityManager\n @since   JDK1.0\n"
12155,method,java/lang/SecurityException/SecurityException/," Constructs a <code>SecurityException</code> with no detail  message.\n"
12156,method,java/lang/SecurityException/SecurityException/String," Constructs a <code>SecurityException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12157,method,java/lang/SecurityException/SecurityException/String;Throwable," Creates a <code>SecurityException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
12158,method,java/lang/SecurityException/SecurityException/Throwable," Creates a <code>SecurityException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
12166,method,java/lang/RuntimeException/RuntimeException/Throwable,"Constructs a new runtime exception with the specified cause and a\n detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).  This constructor is useful for runtime exceptions\n that are little more than wrappers for other throwables.\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method).  (A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n @since  1.4\n"
12167,class,java/lang/Runtime," Every Java application has a single instance of class \n <code>Runtime</code> that allows the application to interface with \n the environment in which the application is running. The current \n runtime can be obtained from the <code>getRuntime</code> method. \n <p>\n An application cannot create its own instance of this class. \n\n @author  unascribed\n @version 1.79, 03/23/10\n @see     java.lang.Runtime#getRuntime()\n @since   JDK1.0\n"
12171,method,java/lang/Runtime/removeShutdownHook/Thread," De-registers a previously-registered virtual-machine shutdown hook. <p>\n\n @param hook the hook to remove\n @return <tt>true</tt> if the specified hook had previously been\n registered and was successfully de-registered, <tt>false</tt>\n otherwise.\n\n @throws  IllegalStateException\n          If the virtual machine is already in the process of shutting\n          down\n\n @throws  SecurityException\n          If a security manager is present and it denies\n          <tt>{@link RuntimePermission}("shutdownHooks")</tt>\n\n @see #addShutdownHook\n @see #exit(int)\n @since 1.3\n"
12183,method,java/lang/Runtime/maxMemory/," Returns the maximum amount of memory that the Java virtual machine will\n attempt to use.  If there is no inherent limit then the value {@link\n java.lang.Long#MAX_VALUE} will be returned. </p>\n\n @return  the maximum amount of memory that the virtual machine will\n          attempt to use, measured in bytes\n @since 1.4\n"
12197,method,java/lang/ProcessBuilder/command/List," Sets this process builder's operating system program and\n arguments.  This method does <i>not</i> make a copy of the\n <code>command</code> list.  Subsequent updates to the list will\n be reflected in the state of the process builder.  It is not\n checked whether <code>command</code> corresponds to a valid\n operating system command.</p>\n\n @param   command  The list containing the program and its arguments\n @return  This process builder\n\n @throws  NullPointerException\n          If the argument is <code>null</code>\n"
12198,method,java/lang/ProcessBuilder/command/String[]," Sets this process builder's operating system program and\n arguments.  This is a convenience method that sets the command\n to a string list containing the same strings as the\n <code>command</code> array, in the same order.  It is not\n checked whether <code>command</code> corresponds to a valid\n operating system command.</p>\n\n @param   command  A string array containing the program and its arguments\n @return  This process builder\n"
12199,method,java/lang/ProcessBuilder/command/," Returns this process builder's operating system program and\n arguments.  The returned list is <i>not</i> a copy.  Subsequent\n updates to the list will be reflected in the state of this\n process builder.</p>\n\n @return  This process builder's program and its arguments\n"
12206,method,java/lang/ProcessBuilder/ProcessBuilder/List," Constructs a process builder with the specified operating\n system program and arguments.  This constructor does <i>not</i>\n make a copy of the <code>command</code> list.  Subsequent\n updates to the list will be reflected in the state of the\n process builder.  It is not checked whether\n <code>command</code> corresponds to a valid operating system\n command.</p>\n\n @param   command  The list containing the program and its arguments\n\n @throws  NullPointerException\n          If the argument is <code>null</code>\n"
12207,method,java/lang/ProcessBuilder/ProcessBuilder/String[]," Constructs a process builder with the specified operating\n system program and arguments.  This is a convenience\n constructor that sets the process builder's command to a string\n list containing the same strings as the <code>command</code>\n array, in the same order.  It is not checked whether\n <code>command</code> corresponds to a valid operating system\n command.</p>\n\n @param   command  A string array containing the program and its arguments\n"
12213,method,java/lang/Process/exitValue/," Returns the exit value for the subprocess.\n\n @return  the exit value of the subprocess represented by this \n          <code>Process</code> object. by convention, the value \n          <code>0</code> indicates normal termination.\n @exception  IllegalThreadStateException  if the subprocess represented \n             by this <code>Process</code> object has not yet terminated.\n"
12214,method,java/lang/Process/destroy/," Kills the subprocess. The subprocess represented by this \n <code>Process</code> object is forcibly terminated.\n"
12215,method,java/lang/Process/Process/,""
12217,method,java/lang/Package/getName/," Return the name of this package.\n\n @return  The fully-qualified name of this package as defined in the\n          <em>Java Language Specification, Third Edition</em>\n          <a href="http://java.sun.com/docs/books/jls/third_edition/html/names.html#6.5.3">\n          &sect;6.5.3</a>, for example, <tt>java.lang</tt>\n"
12218,method,java/lang/Package/getSpecificationTitle/," Return the title of the specification that this package implements.\n @return the specification title, null is returned if it is not known.\n"
12220,method,java/lang/Package/getSpecificationVendor/," Return the name of the organization, vendor,\n or company that owns and maintains the specification\n of the classes that implement this package.\n @return the specification vendor, null is returned if it is not known.\n"
12221,method,java/lang/Package/getImplementationTitle/," Return the title of this package.\n @return the title of the implementation, null is returned if it is not known.\n"
12223,method,java/lang/Package/getImplementationVendor/," Returns the name of the organization,\n vendor or company that provided this implementation.\n @return the vendor that implemented this package..\n"
12224,method,java/lang/Package/isSealed/," Returns true if this package is sealed.\n\n @return true if the package is sealed, false otherwise\n"
12225,method,java/lang/Package/isSealed/URL," Returns true if this package is sealed with respect to the specified\n code source url.\n\n @param url the code source url\n @return true if this package is sealed with respect to url\n"
12229,method,java/lang/Package/hashCode/," Return the hash code computed from the package name.\n @return the hash code computed from the package name.\n"
12230,method,java/lang/Package/toString/," Returns the string representation of this Package.\n Its value is the string "package " and the package name.\n If the package title is defined it is appended.\n If the package version is defined it is appended.\n @return the string representation of the package.\n"
12233,method,java/lang/Package/getAnnotations/," @since 1.5\n"
12234,method,java/lang/Package/getDeclaredAnnotations/," @since 1.5\n"
12236,class,java/lang/OutOfMemoryError," Thrown when the Java Virtual Machine cannot allocate an object \n because it is out of memory, and no more memory could be made \n available by the garbage collector. \n\n @author  unascribed\n @version 1.23, 03/23/10\n @since   JDK1.0\n"
12237,method,java/lang/OutOfMemoryError/OutOfMemoryError/," Constructs an <code>OutOfMemoryError</code> with no detail message.\n"
12238,method,java/lang/OutOfMemoryError/OutOfMemoryError/String," Constructs an <code>OutOfMemoryError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12251,method,java/lang/Object/Object/,""
12252,class,java/lang/NumberFormatException," Thrown to indicate that the application has attempted to convert \n a string to one of the numeric types, but that the string does not \n have the appropriate format. \n\n @author  unascribed\n @version 1.22, 03/23/10\n @see     java.lang.Integer#toString()\n @since   JDK1.0\n"
12253,method,java/lang/NumberFormatException/NumberFormatException/," Constructs a <code>NumberFormatException</code> with no detail message.\n"
12254,method,java/lang/NumberFormatException/NumberFormatException/String," Constructs a <code>NumberFormatException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12262,method,java/lang/Number/Number/,""
12264,method,java/lang/NullPointerException/NullPointerException/," Constructs a <code>NullPointerException</code> with no detail message.\n"
12265,method,java/lang/NullPointerException/NullPointerException/String," Constructs a <code>NullPointerException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12266,class,java/lang/NoSuchMethodException," Thrown when a particular method cannot be found.\n\n @author     unascribed\n @version    1.15, 03/23/10\n @since      JDK1.0\n"
12267,method,java/lang/NoSuchMethodException/NoSuchMethodException/," Constructs a <code>NoSuchMethodException</code> without a detail message.\n"
12268,method,java/lang/NoSuchMethodException/NoSuchMethodException/String," Constructs a <code>NoSuchMethodException</code> with a detail message. \n\n @param      s   the detail message.\n"
12270,method,java/lang/NoSuchMethodError/NoSuchMethodError/," Constructs a <code>NoSuchMethodError</code> with no detail message.\n"
12271,method,java/lang/NoSuchMethodError/NoSuchMethodError/String," Constructs a <code>NoSuchMethodError</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12272,class,java/lang/NoSuchFieldException," Signals that the class doesn't have a field of a specified name.\n\n @author  unascribed\n @version 1.16, 03/23/10\n @since   JDK1.1\n"
12273,method,java/lang/NoSuchFieldException/NoSuchFieldException/," Constructor.\n"
12274,method,java/lang/NoSuchFieldException/NoSuchFieldException/String," Constructor with a detail message.\n\n @param s the detail message\n"
12276,method,java/lang/NoSuchFieldError/NoSuchFieldError/," Constructs a <code>NoSuchFieldException</code> with no detail  message.\n"
12277,method,java/lang/NoSuchFieldError/NoSuchFieldError/String," Constructs a <code>NoSuchFieldException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12279,method,java/lang/NoClassDefFoundError/NoClassDefFoundError/," Constructs a <code>NoClassDefFoundError</code> with no detail message.\n"
12280,method,java/lang/NoClassDefFoundError/NoClassDefFoundError/String," Constructs a <code>NoClassDefFoundError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12281,class,java/lang/NegativeArraySizeException," Thrown if an application tries to create an array with negative size.\n\n @author  unascribed\n @version 1.21, 03/23/10\n @since   JDK1.0\n"
12282,method,java/lang/NegativeArraySizeException/NegativeArraySizeException/," Constructs a <code>NegativeArraySizeException</code> with no \n detail message. \n"
12283,method,java/lang/NegativeArraySizeException/NegativeArraySizeException/String," Constructs a <code>NegativeArraySizeException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12291,method,java/lang/Math/toRadians/double," Converts an angle measured in degrees to an approximately\n equivalent angle measured in radians.  The conversion from\n degrees to radians is generally inexact.\n\n @param   angdeg   an angle, in degrees\n @return  the measurement of the angle <code>angdeg</code>\n          in radians.\n @since   1.2\n"
12296,method,java/lang/Math/sqrt/double," Returns the correctly rounded positive square root of a \n <code>double</code> value.\n Special cases:\n <ul><li>If the argument is NaN or less than zero, then the result \n is NaN. \n <li>If the argument is positive infinity, then the result is positive \n infinity. \n <li>If the argument is positive zero or negative zero, then the \n result is the same as the argument.</ul>\n Otherwise, the result is the <code>double</code> value closest to \n the true mathematical square root of the argument value.\n \n @param   a   a value.\n @return  the positive square root of <code>a</code>.\n          If the argument is NaN or less than zero, the result is NaN.\n"
12298,method,java/lang/Math/IEEEremainder/double;double," Computes the remainder operation on two arguments as prescribed \n by the IEEE 754 standard.\n The remainder value is mathematically equal to \n <code>f1&nbsp;-&nbsp;f2</code>&nbsp;&times;&nbsp;<i>n</i>,\n where <i>n</i> is the mathematical integer closest to the exact \n mathematical value of the quotient <code>f1/f2</code>, and if two \n mathematical integers are equally close to <code>f1/f2</code>, \n then <i>n</i> is the integer that is even. If the remainder is \n zero, its sign is the same as the sign of the first argument. \n Special cases:\n <ul><li>If either argument is NaN, or the first argument is infinite, \n or the second argument is positive zero or negative zero, then the \n result is NaN.\n <li>If the first argument is finite and the second argument is \n infinite, then the result is the same as the first argument.</ul>\n\n @param   f1   the dividend.\n @param   f2   the divisor.\n @return  the remainder when <code>f1</code> is divided by\n          <code>f2</code>.\n"
12300,method,java/lang/Math/floor/double," Returns the largest (closest to positive infinity)\n <code>double</code> value that is less than or equal to the\n argument and is equal to a mathematical integer. Special cases:\n <ul><li>If the argument value is already equal to a\n mathematical integer, then the result is the same as the\n argument.  <li>If the argument is NaN or an infinity or\n positive zero or negative zero, then the result is the same as\n the argument.</ul>\n\n @param   a   a value.\n @return  the largest (closest to positive infinity) \n          floating-point value that less than or equal to the argument\n          and is equal to a mathematical integer. \n"
12301,method,java/lang/Math/rint/double," Returns the <code>double</code> value that is closest in value\n to the argument and is equal to a mathematical integer. If two\n <code>double</code> values that are mathematical integers are\n equally close, the result is the integer value that is\n even. Special cases:\n <ul><li>If the argument value is already equal to a mathematical \n integer, then the result is the same as the argument. \n <li>If the argument is NaN or an infinity or positive zero or negative \n zero, then the result is the same as the argument.</ul>\n\n @param   a   a <code>double</code> value.\n @return  the closest floating-point value to <code>a</code> that is\n          equal to a mathematical integer.\n"
12304,method,java/lang/Math/round/float," Returns the closest <code>int</code> to the argument. The \n result is rounded to an integer by adding 1/2, taking the \n floor of the result, and casting the result to type <code>int</code>. \n In other words, the result is equal to the value of the expression:\n <p><pre>(int)Math.floor(a + 0.5f)</pre>\n <p>\n Special cases:\n <ul><li>If the argument is NaN, the result is 0.\n <li>If the argument is negative infinity or any value less than or \n equal to the value of <code>Integer.MIN_VALUE</code>, the result is \n equal to the value of <code>Integer.MIN_VALUE</code>. \n <li>If the argument is positive infinity or any value greater than or \n equal to the value of <code>Integer.MAX_VALUE</code>, the result is \n equal to the value of <code>Integer.MAX_VALUE</code>.</ul> \n\n @param   a   a floating-point value to be rounded to an integer.\n @return  the value of the argument rounded to the nearest\n          <code>int</code> value.\n @see     java.lang.Integer#MAX_VALUE\n @see     java.lang.Integer#MIN_VALUE\n"
12305,method,java/lang/Math/round/double," Returns the closest <code>long</code> to the argument. The result \n is rounded to an integer by adding 1/2, taking the floor of the \n result, and casting the result to type <code>long</code>. In other \n words, the result is equal to the value of the expression:\n <p><pre>(long)Math.floor(a + 0.5d)</pre>\n <p>\n Special cases:\n <ul><li>If the argument is NaN, the result is 0.\n <li>If the argument is negative infinity or any value less than or \n equal to the value of <code>Long.MIN_VALUE</code>, the result is \n equal to the value of <code>Long.MIN_VALUE</code>. \n <li>If the argument is positive infinity or any value greater than or \n equal to the value of <code>Long.MAX_VALUE</code>, the result is \n equal to the value of <code>Long.MAX_VALUE</code>.</ul> \n\n @param   a   a floating-point value to be rounded to a \n		<code>long</code>.\n @return  the value of the argument rounded to the nearest\n          <code>long</code> value.\n @see     java.lang.Long#MAX_VALUE\n @see     java.lang.Long#MIN_VALUE\n"
12309,method,java/lang/Math/abs/float," Returns the absolute value of a <code>float</code> value.\n If the argument is not negative, the argument is returned.\n If the argument is negative, the negation of the argument is returned.\n Special cases:\n <ul><li>If the argument is positive zero or negative zero, the \n result is positive zero. \n <li>If the argument is infinite, the result is positive infinity. \n <li>If the argument is NaN, the result is NaN.</ul>\n In other words, the result is the same as the value of the expression: \n <p><pre>Float.intBitsToFloat(0x7fffffff & Float.floatToIntBits(a))</pre>\n\n @param   a   the argument whose absolute value is to be determined\n @return  the absolute value of the argument.\n"
12310,method,java/lang/Math/abs/double," Returns the absolute value of a <code>double</code> value.\n If the argument is not negative, the argument is returned.\n If the argument is negative, the negation of the argument is returned.\n Special cases:\n <ul><li>If the argument is positive zero or negative zero, the result \n is positive zero. \n <li>If the argument is infinite, the result is positive infinity. \n <li>If the argument is NaN, the result is NaN.</ul>\n In other words, the result is the same as the value of the expression: \n <p><code>Double.longBitsToDouble((Double.doubleToLongBits(a)&lt;&lt;1)&gt;&gt;&gt;1)</code> \n\n @param   a   the argument whose absolute value is to be determined\n @return  the absolute value of the argument.\n"
12311,method,java/lang/Math/max/int;int," Returns the greater of two <code>int</code> values. That is, the \n result is the argument closer to the value of \n <code>Integer.MAX_VALUE</code>. If the arguments have the same value, \n the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the larger of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MAX_VALUE\n"
12312,method,java/lang/Math/max/long;long," Returns the greater of two <code>long</code> values. That is, the \n result is the argument closer to the value of \n <code>Long.MAX_VALUE</code>. If the arguments have the same value, \n the result is that same value. \n\n @param   a   an argument.\n @param   b   another argument.\n @return  the larger of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MAX_VALUE\n"
12315,method,java/lang/Math/min/int;int," Returns the smaller of two <code>int</code> values. That is,\n the result the argument closer to the value of\n <code>Integer.MIN_VALUE</code>.  If the arguments have the same\n value, the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the smaller of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MIN_VALUE\n"
12316,method,java/lang/Math/min/long;long," Returns the smaller of two <code>long</code> values. That is,\n the result is the argument closer to the value of\n <code>Long.MIN_VALUE</code>. If the arguments have the same\n value, the result is that same value.\n\n @param   a   an argument.\n @param   b   another argument.\n @return  the smaller of <code>a</code> and <code>b</code>.\n @see     java.lang.Long#MIN_VALUE\n"
12321,method,java/lang/Math/signum/double," Returns the signum function of the argument; zero if the argument\n is zero, 1.0 if the argument is greater than zero, -1.0 if the\n argument is less than zero.\n\n <p>Special Cases:\n <ul>\n <li> If the argument is NaN, then the result is NaN.\n <li> If the argument is positive zero or negative zero, then the\n      result is the same as the argument.\n </ul>\n\n @param d the floating-point value whose signum is to be returned\n @return the signum function of the argument\n @author Joseph D. Darcy\n @since 1.5\n"
12322,method,java/lang/Math/signum/float," Returns the signum function of the argument; zero if the argument\n is zero, 1.0f if the argument is greater than zero, -1.0f if the\n argument is less than zero.\n\n <p>Special Cases:\n <ul>\n <li> If the argument is NaN, then the result is NaN.\n <li> If the argument is positive zero or negative zero, then the\n      result is the same as the argument.\n </ul>\n\n @param f the floating-point value whose signum is to be returned\n @return the signum function of the argument\n @author Joseph D. Darcy\n @since 1.5\n"
12331,method,java/lang/Math/getExponent/float," Returns the unbiased exponent used in the representation of a\n {@code float}.  Special cases:\n\n <ul>\n <li>If the argument is NaN or infinite, then the result is\n {@link Float#MAX_EXPONENT} + 1.\n <li>If the argument is zero or subnormal, then the result is\n {@link Float#MIN_EXPONENT} -1.\n </ul>\n @param f a {@code float} value\n @return the unbiased exponent of the argument\n @since 1.6\n"
12332,method,java/lang/Math/getExponent/double," Returns the unbiased exponent used in the representation of a\n {@code double}.  Special cases:\n\n <ul>\n <li>If the argument is NaN or infinite, then the result is\n {@link Double#MAX_EXPONENT} + 1.\n <li>If the argument is zero or subnormal, then the result is\n {@link Double#MIN_EXPONENT} -1.\n </ul>\n @param d a {@code double} value\n @return the unbiased exponent of the argument\n @since 1.6\n"
12339,field,java/lang/Math/E," The <code>double</code> value that is closer than any other to\n <i>e</i>, the base of the natural logarithms.\n"
12340,field,java/lang/Math/PI," The <code>double</code> value that is closer than any other to\n <i>pi</i>, the ratio of the circumference of a circle to its\n diameter.\n"
12344,method,java/lang/Long/toOctalString/long," Returns a string representation of the <code>long</code>\n argument as an unsigned integer in base&nbsp;8.\n <p>\n The unsigned <code>long</code> value is the argument plus\n 2<sup>64</sup> if the argument is negative; otherwise, it is\n equal to the argument.  This value is converted to a string of\n ASCII digits in octal (base&nbsp;8) with no extra leading\n <code>0</code>s.\n <p>\n If the unsigned magnitude is zero, it is represented by a\n single zero character <code>'0'</code>\n (<code>'&#92;u0030'</code>); otherwise, the first character of\n the representation of the unsigned magnitude will not be the\n zero character. The following characters are used as octal\n digits:\n <blockquote><pre>\n 01234567\n </pre></blockquote>\n These are the characters <code>'&#92;u0030'</code> through \n <code>'&#92;u0037'</code>. \n\n @param   i   a <code>long</code> to be converted to a string.\n @return  the string representation of the unsigned <code>long</code> \n		value represented by the argument in octal (base&nbsp;8).\n @since   JDK 1.0.2\n"
12345,method,java/lang/Long/toBinaryString/long," Returns a string representation of the <code>long</code>\n argument as an unsigned integer in base&nbsp;2.\n <p>\n The unsigned <code>long</code> value is the argument plus\n 2<sup>64</sup> if the argument is negative; otherwise, it is\n equal to the argument.  This value is converted to a string of\n ASCII digits in binary (base&nbsp;2) with no extra leading\n <code>0</code>s.  If the unsigned magnitude is zero, it is\n represented by a single zero character <code>'0'</code>\n (<code>'&#92;u0030'</code>); otherwise, the first character of\n the representation of the unsigned magnitude will not be the\n zero character. The characters <code>'0'</code>\n (<code>'&#92;u0030'</code>) and <code>'1'</code>\n (<code>'&#92;u0031'</code>) are used as binary digits.\n\n @param   i   a <code>long</code> to be converted to a string.\n @return  the string representation of the unsigned <code>long</code> \n          value represented by the argument in binary (base&nbsp;2).\n @since   JDK 1.0.2\n"
12346,method,java/lang/Long/toString/long," Returns a <code>String</code> object representing the specified\n <code>long</code>.  The argument is converted to signed decimal\n representation and returned as a string, exactly as if the\n argument and the radix 10 were given as arguments to the {@link\n #toString(long, int)} method.\n\n @param   i   a <code>long</code> to be converted.\n @return  a string representation of the argument in base&nbsp;10.\n"
12349,method,java/lang/Long/valueOf/String;int," Returns a <code>Long</code> object holding the value\n extracted from the specified <code>String</code> when parsed\n with the radix given by the second argument.  The first\n argument is interpreted as representing a signed\n <code>long</code> in the radix specified by the second\n argument, exactly as if the arguments were given to the {@link\n #parseLong(java.lang.String, int)} method. The result is a\n <code>Long</code> object that represents the <code>long</code>\n value specified by the string.\n <p>\n In other words, this method returns a <code>Long</code> object equal \n to the value of:\n\n <blockquote><code>\n new Long(Long.parseLong(s, radix))\n </code></blockquote>\n\n @param      s       the string to be parsed\n @param      radix   the radix to be used in interpreting <code>s</code>\n @return     a <code>Long</code> object holding the value\n             represented by the string argument in the specified\n             radix.\n @exception  NumberFormatException  If the <code>String</code> does not\n             contain a parsable <code>long</code>.\n"
12350,method,java/lang/Long/valueOf/String," Returns a <code>Long</code> object holding the value\n of the specified <code>String</code>. The argument is\n interpreted as representing a signed decimal <code>long</code>,\n exactly as if the argument were given to the {@link\n #parseLong(java.lang.String)} method. The result is a\n <code>Long</code> object that represents the integer value\n specified by the string.\n <p>\n In other words, this method returns a <code>Long</code> object\n equal to the value of:\n\n <blockquote><pre>\n new Long(Long.parseLong(s))\n </pre></blockquote>\n\n @param      s   the string to be parsed.\n @return     a <code>Long</code> object holding the value\n             represented by the string argument.\n @exception  NumberFormatException  If the string cannot be parsed\n              as a <code>long</code>.\n"
12353,method,java/lang/Long/byteValue/," Returns the value of this <code>Long</code> as a\n <code>byte</code>.\n"
12354,method,java/lang/Long/shortValue/," Returns the value of this <code>Long</code> as a\n <code>short</code>.\n"
12355,method,java/lang/Long/intValue/," Returns the value of this <code>Long</code> as an\n <code>int</code>.\n"
12356,method,java/lang/Long/longValue/," Returns the value of this <code>Long</code> as a\n <code>long</code> value.\n"
12357,method,java/lang/Long/floatValue/," Returns the value of this <code>Long</code> as a\n <code>float</code>.\n"
12358,method,java/lang/Long/doubleValue/," Returns the value of this <code>Long</code> as a\n <code>double</code>.\n"
12359,method,java/lang/Long/toString/," Returns a <code>String</code> object representing this\n <code>Long</code>'s value.  The value is converted to signed\n decimal representation and returned as a string, exactly as if\n the <code>long</code> value were given as an argument to the\n {@link java.lang.Long#toString(long)} method.\n\n @return  a string representation of the value of this object in\n		base&nbsp;10.\n"
12360,method,java/lang/Long/hashCode/," Returns a hash code for this <code>Long</code>. The result is\n the exclusive OR of the two halves of the primitive\n <code>long</code> value held by this <code>Long</code>\n object. That is, the hashcode is the value of the expression:\n <blockquote><pre>\n (int)(this.longValue()^(this.longValue()&gt;&gt;&gt;32))\n </pre></blockquote>\n\n @return  a hash code value for this object.\n"
12362,method,java/lang/Long/getLong/String," Determines the <code>long</code> value of the system property\n with the specified name.\n <p>\n The first argument is treated as the name of a system property.\n System properties are accessible through the {@link\n java.lang.System#getProperty(java.lang.String)} method. The\n string value of this property is then interpreted as a\n <code>long</code> value and a <code>Long</code> object\n representing this value is returned.  Details of possible\n numeric formats can be found with the definition of\n <code>getProperty</code>.\n <p>\n If there is no property with the specified name, if the\n specified name is empty or <code>null</code>, or if the\n property does not have the correct numeric format, then\n <code>null</code> is returned.\n <p>\n In other words, this method returns a <code>Long</code> object equal to \n the value of:\n <blockquote><code>\n getLong(nm, null)\n </code></blockquote>\n\n @param   nm   property name.\n @return  the <code>Long</code> value of the property.\n @see     java.lang.System#getProperty(java.lang.String)\n @see     java.lang.System#getProperty(java.lang.String, java.lang.String)\n"
12365,method,java/lang/Long/compareTo/Long," Compares two <code>Long</code> objects numerically.\n\n @param   anotherLong   the <code>Long</code> to be compared.\n @return	the value <code>0</code> if this <code>Long</code> is\n 		equal to the argument <code>Long</code>; a value less than\n 		<code>0</code> if this <code>Long</code> is numerically less\n 		than the argument <code>Long</code>; and a value greater \n 		than <code>0</code> if this <code>Long</code> is numerically\n 		 greater than the argument <code>Long</code> (signed\n 		 comparison).\n @since   1.2\n"
12366,method,java/lang/Long/highestOneBit/long," Returns a <tt>long</tt> value with at most a single one-bit, in the\n position of the highest-order ("leftmost") one-bit in the specified\n <tt>long</tt> value.  Returns zero if the specified value has no\n one-bits in its two's complement binary representation, that is, if it\n is equal to zero.\n\n @return a <tt>long</tt> value with a single one-bit, in the position\n     of the highest-order one-bit in the specified value, or zero if\n     the specified value is itself equal to zero.\n @since 1.5\n"
12367,method,java/lang/Long/lowestOneBit/long," Returns a <tt>long</tt> value with at most a single one-bit, in the\n position of the lowest-order ("rightmost") one-bit in the specified\n <tt>long</tt> value.  Returns zero if the specified value has no\n one-bits in its two's complement binary representation, that is, if it\n is equal to zero.\n\n @return a <tt>long</tt> value with a single one-bit, in the position\n     of the lowest-order one-bit in the specified value, or zero if\n     the specified value is itself equal to zero.\n @since 1.5\n"
12369,method,java/lang/Long/numberOfTrailingZeros/long," Returns the number of zero bits following the lowest-order ("rightmost")\n one-bit in the two's complement binary representation of the specified\n <tt>long</tt> value.  Returns 64 if the specified value has no\n one-bits in its two's complement representation, in other words if it is\n equal to zero.\n\n @return the number of zero bits following the lowest-order ("rightmost")\n     one-bit in the two's complement binary representation of the\n     specified <tt>long</tt> value, or 64 if the value is equal\n     to zero.\n @since 1.5\n"
12370,method,java/lang/Long/bitCount/long," Returns the number of one-bits in the two's complement binary\n representation of the specified <tt>long</tt> value.  This function is\n sometimes referred to as the <i>population count</i>.\n\n @return the number of one-bits in the two's complement binary\n     representation of the specified <tt>long</tt> value.\n @since 1.5\n"
12373,method,java/lang/Long/reverse/long," Returns the value obtained by reversing the order of the bits in the\n two's complement binary representation of the specified <tt>long</tt>\n value.\n\n @return the value obtained by reversing order of the bits in the\n     specified <tt>long</tt> value.\n @since 1.5\n"
12374,method,java/lang/Long/signum/long," Returns the signum function of the specified <tt>long</tt> value.  (The\n return value is -1 if the specified value is negative; 0 if the\n specified value is zero; and 1 if the specified value is positive.)\n\n @return the signum function of the specified <tt>long</tt> value.\n @since 1.5\n"
12375,method,java/lang/Long/reverseBytes/long," Returns the value obtained by reversing the order of the bytes in the\n two's complement representation of the specified <tt>long</tt> value.\n\n @return the value obtained by reversing the bytes in the specified\n     <tt>long</tt> value.\n @since 1.5\n"
12376,method,java/lang/Long/Long/long," Constructs a newly allocated <code>Long</code> object that\n represents the specified <code>long</code> argument.\n\n @param   value   the value to be represented by the \n          <code>Long</code> object.\n"
12377,method,java/lang/Long/Long/String," Constructs a newly allocated <code>Long</code> object that\n represents the <code>long</code> value indicated by the\n <code>String</code> parameter. The string is converted to a\n <code>long</code> value in exactly the manner used by the\n <code>parseLong</code> method for radix 10.\n\n @param      s   the <code>String</code> to be converted to a \n		   <code>Long</code>.\n @exception  NumberFormatException  if the <code>String</code> does not\n               contain a parsable <code>long</code>.\n @see        java.lang.Long#parseLong(java.lang.String, int)\n"
12378,field,java/lang/Long/MIN_VALUE," A constant holding the minimum value a <code>long</code> can\n have, -2<sup>63</sup>.\n"
12379,field,java/lang/Long/MAX_VALUE," A constant holding the maximum value a <code>long</code> can\n have, 2<sup>63</sup>-1.\n"
12380,field,java/lang/Long/TYPE," The <code>Class</code> instance representing the primitive type\n <code>long</code>.\n\n @since   JDK1.1\n"
12381,field,java/lang/Long/SIZE," The number of bits used to represent a <tt>long</tt> value in two's\n complement binary form.\n\n @since 1.5\n"
12383,method,java/lang/LinkageError/LinkageError/," Constructs a <code>LinkageError</code> with no detail message. \n"
12384,method,java/lang/LinkageError/LinkageError/String," Constructs a <code>LinkageError</code> with the specified detail \n message. \n\n @param   s   the detail message.\n"
12385,interface,java/lang/Iterable,"Implementing this interface allows an object to be the target of\n  the "foreach" statement.\n @since 1.5\n"
12386,method,java/lang/Iterable/iterator/," Returns an iterator over a set of elements of type T.\n \n @return an Iterator.\n"
12388,method,java/lang/InterruptedException/InterruptedException/," Constructs an <code>InterruptedException</code> with no detail  message. \n"
12389,method,java/lang/InterruptedException/InterruptedException/String," Constructs an <code>InterruptedException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12391,method,java/lang/InternalError/InternalError/," Constructs an <code>InternalError</code> with no detail message. \n"
12392,method,java/lang/InternalError/InternalError/String," Constructs an <code>InternalError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12396,method,java/lang/Integer/toOctalString/int," Returns a string representation of the integer argument as an\n unsigned integer in base&nbsp;8.\n <p>\n The unsigned integer value is the argument plus 2<sup>32</sup>\n if the argument is negative; otherwise, it is equal to the\n argument.  This value is converted to a string of ASCII digits\n in octal (base&nbsp;8) with no extra leading <code>0</code>s.\n <p>\n If the unsigned magnitude is zero, it is represented by a\n single zero character <code>'0'</code>\n (<code>'&#92;u0030'</code>); otherwise, the first character of\n the representation of the unsigned magnitude will not be the\n zero character. The following characters are used as octal\n digits:\n <blockquote><pre>\n 01234567\n </pre></blockquote>\n These are the characters <code>'&#92;u0030'</code> through\n <code>'&#92;u0037'</code>.\n\n @param   i   an integer to be converted to a string.\n @return  the string representation of the unsigned integer value\n          represented by the argument in octal (base&nbsp;8).\n @since   JDK1.0.2\n"
12397,method,java/lang/Integer/toBinaryString/int," Returns a string representation of the integer argument as an\n unsigned integer in base&nbsp;2.\n <p>\n The unsigned integer value is the argument plus 2<sup>32</sup>\n if the argument is negative; otherwise it is equal to the\n argument.  This value is converted to a string of ASCII digits\n in binary (base&nbsp;2) with no extra leading <code>0</code>s.\n If the unsigned magnitude is zero, it is represented by a\n single zero character <code>'0'</code>\n (<code>'&#92;u0030'</code>); otherwise, the first character of\n the representation of the unsigned magnitude will not be the\n zero character. The characters <code>'0'</code>\n (<code>'&#92;u0030'</code>) and <code>'1'</code>\n (<code>'&#92;u0031'</code>) are used as binary digits.\n\n @param   i   an integer to be converted to a string.\n @return  the string representation of the unsigned integer value\n          represented by the argument in binary (base&nbsp;2).\n @since   JDK1.0.2\n"
12398,method,java/lang/Integer/toString/int," Returns a <code>String</code> object representing the\n specified integer. The argument is converted to signed decimal\n representation and returned as a string, exactly as if the\n argument and radix 10 were given as arguments to the {@link\n #toString(int, int)} method.\n\n @param   i   an integer to be converted.\n @return  a string representation of the argument in base&nbsp;10.\n"
12401,method,java/lang/Integer/valueOf/String;int," Returns an <code>Integer</code> object holding the value\n extracted from the specified <code>String</code> when parsed\n with the radix given by the second argument. The first argument\n is interpreted as representing a signed integer in the radix\n specified by the second argument, exactly as if the arguments\n were given to the {@link #parseInt(java.lang.String, int)}\n method. The result is an <code>Integer</code> object that\n represents the integer value specified by the string.\n <p>\n In other words, this method returns an <code>Integer</code>\n object equal to the value of:\n\n <blockquote><code>\n new Integer(Integer.parseInt(s, radix))  \n </code></blockquote>\n\n @param      s   the string to be parsed.\n @param      radix the radix to be used in interpreting <code>s</code>\n @return     an <code>Integer</code> object holding the value\n             represented by the string argument in the specified\n             radix.\n @exception NumberFormatException if the <code>String</code>\n 		  does not contain a parsable <code>int</code>.\n"
12402,method,java/lang/Integer/valueOf/String," Returns an <code>Integer</code> object holding the\n value of the specified <code>String</code>. The argument is\n interpreted as representing a signed decimal integer, exactly\n as if the argument were given to the {@link\n #parseInt(java.lang.String)} method. The result is an\n <code>Integer</code> object that represents the integer value\n specified by the string.\n <p>\n In other words, this method returns an <code>Integer</code>\n object equal to the value of:\n\n <blockquote><code>\n new Integer(Integer.parseInt(s))\n </code></blockquote>\n\n @param      s   the string to be parsed.\n @return     an <code>Integer</code> object holding the value\n             represented by the string argument.\n @exception  NumberFormatException  if the string cannot be parsed \n             as an integer.\n"
12404,method,java/lang/Integer/byteValue/," Returns the value of this <code>Integer</code> as a\n <code>byte</code>.\n"
12405,method,java/lang/Integer/shortValue/," Returns the value of this <code>Integer</code> as a\n <code>short</code>.\n"
12406,method,java/lang/Integer/intValue/," Returns the value of this <code>Integer</code> as an\n <code>int</code>.\n"
12407,method,java/lang/Integer/longValue/," Returns the value of this <code>Integer</code> as a\n <code>long</code>.\n"
12408,method,java/lang/Integer/floatValue/," Returns the value of this <code>Integer</code> as a\n <code>float</code>.\n"
12409,method,java/lang/Integer/doubleValue/," Returns the value of this <code>Integer</code> as a\n <code>double</code>.\n"
12410,method,java/lang/Integer/toString/," Returns a <code>String</code> object representing this\n <code>Integer</code>'s value. The value is converted to signed\n decimal representation and returned as a string, exactly as if\n the integer value were given as an argument to the {@link\n java.lang.Integer#toString(int)} method.\n\n @return  a string representation of the value of this object in\n          base&nbsp;10.\n"
12411,method,java/lang/Integer/hashCode/," Returns a hash code for this <code>Integer</code>.\n\n @return  a hash code value for this object, equal to the \n          primitive <code>int</code> value represented by this \n          <code>Integer</code> object. \n"
12413,method,java/lang/Integer/getInteger/String," Determines the integer value of the system property with the\n specified name.\n <p>\n The first argument is treated as the name of a system property. \n System properties are accessible through the \n {@link java.lang.System#getProperty(java.lang.String)} method. The \n string value of this property is then interpreted as an integer \n value and an <code>Integer</code> object representing this value is \n returned. Details of possible numeric formats can be found with \n the definition of <code>getProperty</code>. \n <p>\n If there is no property with the specified name, if the specified name\n is empty or <code>null</code>, or if the property does not have \n the correct numeric format, then <code>null</code> is returned.\n <p>\n In other words, this method returns an <code>Integer</code>\n object equal to the value of:\n\n <blockquote><code>\n getInteger(nm, null)\n </code></blockquote>\n\n @param   nm   property name.\n @return  the <code>Integer</code> value of the property.\n @see     java.lang.System#getProperty(java.lang.String)\n @see     java.lang.System#getProperty(java.lang.String, java.lang.String)\n"
12415,method,java/lang/Integer/getInteger/String;Integer," Returns the integer value of the system property with the\n specified name.  The first argument is treated as the name of a\n system property.  System properties are accessible through the\n {@link java.lang.System#getProperty(java.lang.String)} method.\n The string value of this property is then interpreted as an\n integer value, as per the <code>Integer.decode</code> method,\n and an <code>Integer</code> object representing this value is\n returned.\n <p>\n <ul><li>If the property value begins with the two ASCII characters \n         <code>0x</code> or the ASCII character <code>#</code>, not \n      followed by a minus sign, then the rest of it is parsed as a \n      hexadecimal integer exactly as by the method \n      {@link #valueOf(java.lang.String, int)} with radix 16. \n <li>If the property value begins with the ASCII character \n     <code>0</code> followed by another character, it is parsed as an \n     octal integer exactly as by the method \n     {@link #valueOf(java.lang.String, int)} with radix 8. \n <li>Otherwise, the property value is parsed as a decimal integer \n exactly as by the method {@link #valueOf(java.lang.String, int)} \n with radix 10. \n </ul><p>\n The second argument is the default value. The default value is\n returned if there is no property of the specified name, if the\n property does not have the correct numeric format, or if the\n specified name is empty or <code>null</code>.\n\n @param   nm   property name.\n @param   val   default value.\n @return  the <code>Integer</code> value of the property.\n @see     java.lang.System#getProperty(java.lang.String)\n @see java.lang.System#getProperty(java.lang.String, java.lang.String)\n @see java.lang.Integer#decode\n"
12417,method,java/lang/Integer/compareTo/Integer," Compares two <code>Integer</code> objects numerically.\n\n @param   anotherInteger   the <code>Integer</code> to be compared.\n @return	the value <code>0</code> if this <code>Integer</code> is\n 		equal to the argument <code>Integer</code>; a value less than\n 		<code>0</code> if this <code>Integer</code> is numerically less\n 		than the argument <code>Integer</code>; and a value greater \n 		than <code>0</code> if this <code>Integer</code> is numerically\n 		 greater than the argument <code>Integer</code> (signed\n 		 comparison).\n @since   1.2\n"
12418,method,java/lang/Integer/highestOneBit/int," Returns an <tt>int</tt> value with at most a single one-bit, in the\n position of the highest-order ("leftmost") one-bit in the specified\n <tt>int</tt> value.  Returns zero if the specified value has no\n one-bits in its two's complement binary representation, that is, if it\n is equal to zero.\n\n @return an <tt>int</tt> value with a single one-bit, in the position\n     of the highest-order one-bit in the specified value, or zero if\n     the specified value is itself equal to zero.\n @since 1.5\n"
12419,method,java/lang/Integer/lowestOneBit/int," Returns an <tt>int</tt> value with at most a single one-bit, in the\n position of the lowest-order ("rightmost") one-bit in the specified\n <tt>int</tt> value.  Returns zero if the specified value has no\n one-bits in its two's complement binary representation, that is, if it\n is equal to zero.\n\n @return an <tt>int</tt> value with a single one-bit, in the position\n     of the lowest-order one-bit in the specified value, or zero if\n     the specified value is itself equal to zero.\n @since 1.5\n"
12421,method,java/lang/Integer/numberOfTrailingZeros/int," Returns the number of zero bits following the lowest-order ("rightmost")\n one-bit in the two's complement binary representation of the specified\n <tt>int</tt> value.  Returns 32 if the specified value has no\n one-bits in its two's complement representation, in other words if it is\n equal to zero.\n\n @return the number of zero bits following the lowest-order ("rightmost")\n     one-bit in the two's complement binary representation of the\n     specified <tt>int</tt> value, or 32 if the value is equal\n     to zero.\n @since 1.5\n"
12422,method,java/lang/Integer/bitCount/int," Returns the number of one-bits in the two's complement binary\n representation of the specified <tt>int</tt> value.  This function is\n sometimes referred to as the <i>population count</i>.\n\n @return the number of one-bits in the two's complement binary\n     representation of the specified <tt>int</tt> value.\n @since 1.5\n"
12425,method,java/lang/Integer/reverse/int," Returns the value obtained by reversing the order of the bits in the\n two's complement binary representation of the specified <tt>int</tt>\n value.\n\n @return the value obtained by reversing order of the bits in the\n     specified <tt>int</tt> value.\n @since 1.5\n"
12426,method,java/lang/Integer/signum/int," Returns the signum function of the specified <tt>int</tt> value.  (The\n return value is -1 if the specified value is negative; 0 if the\n specified value is zero; and 1 if the specified value is positive.)\n\n @return the signum function of the specified <tt>int</tt> value.\n @since 1.5\n"
12427,method,java/lang/Integer/reverseBytes/int," Returns the value obtained by reversing the order of the bytes in the\n two's complement representation of the specified <tt>int</tt> value.\n\n @return the value obtained by reversing the bytes in the specified\n     <tt>int</tt> value.\n @since 1.5\n"
12428,method,java/lang/Integer/Integer/int," Constructs a newly allocated <code>Integer</code> object that\n represents the specified <code>int</code> value.\n\n @param   value   the value to be represented by the \n			<code>Integer</code> object.\n"
12429,method,java/lang/Integer/Integer/String," Constructs a newly allocated <code>Integer</code> object that\n represents the <code>int</code> value indicated by the\n <code>String</code> parameter. The string is converted to an\n <code>int</code> value in exactly the manner used by the\n <code>parseInt</code> method for radix 10.\n\n @param      s   the <code>String</code> to be converted to an\n                 <code>Integer</code>.\n @exception  NumberFormatException  if the <code>String</code> does not\n               contain a parsable integer.\n @see        java.lang.Integer#parseInt(java.lang.String, int)\n"
12430,field,java/lang/Integer/MIN_VALUE," A constant holding the minimum value an <code>int</code> can\n have, -2<sup>31</sup>.\n"
12431,field,java/lang/Integer/MAX_VALUE," A constant holding the maximum value an <code>int</code> can\n have, 2<sup>31</sup>-1.\n"
12432,field,java/lang/Integer/TYPE," The <code>Class</code> instance representing the primitive type\n <code>int</code>.\n\n @since   JDK1.1\n"
12433,field,java/lang/Integer/SIZE," The number of bits used to represent an <tt>int</tt> value in two's\n complement binary form.\n\n @since 1.5\n"
12434,class,java/lang/InstantiationException," Thrown when an application tries to create an instance of a class\n using the {@code newInstance} method in class\n {@code Class}, but the specified class object cannot be\n instantiated.  The instantiation can fail for a variety of\n reasons including but not limited to:\n\n <ul>\n <li> the class object represents an abstract class, an interface,\n      an array class, a primitive type, or {@code void}\n <li> the class has no nullary constructor\n</ul>\n\n @author  unascribed\n @version 1.20, 03/23/10\n @see     java.lang.Class#newInstance()\n @since   JDK1.0\n"
12435,method,java/lang/InstantiationException/InstantiationException/," Constructs an {@code InstantiationException} with no detail message.\n"
12436,method,java/lang/InstantiationException/InstantiationException/String," Constructs an {@code InstantiationException} with the \n specified detail message. \n\n @param   s   the detail message.\n"
12438,method,java/lang/InstantiationError/InstantiationError/," Constructs an <code>InstantiationError</code> with no detail  message.\n"
12439,method,java/lang/InstantiationError/InstantiationError/String," Constructs an <code>InstantiationError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12442,method,java/lang/InheritableThreadLocal/InheritableThreadLocal/,""
12444,method,java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException/," Constructs an <code>IndexOutOfBoundsException</code> with no \n detail message. \n"
12445,method,java/lang/IndexOutOfBoundsException/IndexOutOfBoundsException/String," Constructs an <code>IndexOutOfBoundsException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12446,class,java/lang/IncompatibleClassChangeError," Thrown when an incompatible class change has occurred to some class \n definition. The definition of some class, on which the currently \n executing method depends, has since changed. \n\n @author  unascribed\n @version 1.20, 03/23/10\n @since   JDK1.0\n"
12447,method,java/lang/IncompatibleClassChangeError/IncompatibleClassChangeError/," Constructs an <code>IncompatibleClassChangeError</code> with no \n detail message. \n"
12448,method,java/lang/IncompatibleClassChangeError/IncompatibleClassChangeError/String," Constructs an <code>IncompatibleClassChangeError</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12450,method,java/lang/IllegalThreadStateException/IllegalThreadStateException/," Constructs an <code>IllegalThreadStateException</code> with no \n detail message. \n"
12451,method,java/lang/IllegalThreadStateException/IllegalThreadStateException/String," Constructs an <code>IllegalThreadStateException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12453,method,java/lang/IllegalStateException/IllegalStateException/," Constructs an IllegalStateException with no detail message.\n A detail message is a String that describes this particular exception.\n"
12454,method,java/lang/IllegalStateException/IllegalStateException/String," Constructs an IllegalStateException with the specified detail\n message.  A detail message is a String that describes this particular\n exception.\n\n @param s the String that contains a detailed message\n"
12456,method,java/lang/IllegalStateException/IllegalStateException/Throwable," Constructs a new exception with the specified cause and a detail\n message of <tt>(cause==null ? null : cause.toString())</tt> (which\n typically contains the class and detail message of <tt>cause</tt>).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n @since  1.5\n"
12458,method,java/lang/IllegalMonitorStateException/IllegalMonitorStateException/," Constructs an <code>IllegalMonitorStateException</code> with no \n detail message. \n"
12459,method,java/lang/IllegalMonitorStateException/IllegalMonitorStateException/String," Constructs an <code>IllegalMonitorStateException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12461,method,java/lang/IllegalArgumentException/IllegalArgumentException/," Constructs an <code>IllegalArgumentException</code> with no \n detail message. \n"
12462,method,java/lang/IllegalArgumentException/IllegalArgumentException/String," Constructs an <code>IllegalArgumentException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12464,method,java/lang/IllegalArgumentException/IllegalArgumentException/Throwable," Constructs a new exception with the specified cause and a detail\n message of <tt>(cause==null ? null : cause.toString())</tt> (which\n typically contains the class and detail message of <tt>cause</tt>).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).  (A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n @since  1.5\n"
12466,method,java/lang/IllegalAccessException/IllegalAccessException/," Constructs an <code>IllegalAccessException</code> without a \n detail message. \n"
12467,method,java/lang/IllegalAccessException/IllegalAccessException/String," Constructs an <code>IllegalAccessException</code> with a detail message. \n\n @param   s   the detail message.\n"
12469,method,java/lang/IllegalAccessError/IllegalAccessError/," Constructs an <code>IllegalAccessError</code> with no detail message.\n"
12470,method,java/lang/IllegalAccessError/IllegalAccessError/String," Constructs an <code>IllegalAccessError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12476,method,java/lang/Float/parseFloat/String," Returns a new <code>float</code> initialized to the value\n represented by the specified <code>String</code>, as performed\n by the <code>valueOf</code> method of class <code>Float</code>.\n\n @param      s   the string to be parsed.\n @return the <code>float</code> value represented by the string\n         argument.\n @exception  NumberFormatException  if the string does not contain a\n               parsable <code>float</code>.\n @see        java.lang.Float#valueOf(String)\n @since 1.2\n"
12477,method,java/lang/Float/isNaN/float," Returns <code>true</code> if the specified number is a\n Not-a-Number (NaN) value, <code>false</code> otherwise.\n\n @param   v   the value to be tested.\n @return  <code>true</code> if the argument is NaN;\n          <code>false</code> otherwise.\n"
12478,method,java/lang/Float/isInfinite/float," Returns <code>true</code> if the specified number is infinitely\n large in magnitude, <code>false</code> otherwise.\n\n @param   v   the value to be tested.\n @return  <code>true</code> if the argument is positive infinity or\n          negative infinity; <code>false</code> otherwise.\n"
12479,method,java/lang/Float/isNaN/," Returns <code>true</code> if this <code>Float</code> value is a\n Not-a-Number (NaN), <code>false</code> otherwise.\n\n @return  <code>true</code> if the value represented by this object is\n          NaN; <code>false</code> otherwise.\n"
12480,method,java/lang/Float/isInfinite/," Returns <code>true</code> if this <code>Float</code> value is\n infinitely large in magnitude, <code>false</code> otherwise.\n\n @return  <code>true</code> if the value represented by this object is\n          positive infinity or negative infinity;\n          <code>false</code> otherwise.\n"
12481,method,java/lang/Float/toString/," Returns a string representation of this <code>Float</code> object.\n The primitive <code>float</code> value represented by this object\n is converted to a <code>String</code> exactly as if by the method\n <code>toString</code> of one argument.\n\n @return  a <code>String</code> representation of this object.\n @see java.lang.Float#toString(float)\n"
12482,method,java/lang/Float/byteValue/," Returns the value of this <code>Float</code> as a\n <code>byte</code> (by casting to a <code>byte</code>).\n\n @return  the <code>float</code> value represented by this object\n          converted to type <code>byte</code>\n"
12483,method,java/lang/Float/shortValue/," Returns the value of this <code>Float</code> as a\n <code>short</code> (by casting to a <code>short</code>).\n\n @return  the <code>float</code> value represented by this object\n          converted to type <code>short</code>\n @since JDK1.1\n"
12484,method,java/lang/Float/intValue/," Returns the value of this <code>Float</code> as an\n <code>int</code> (by casting to type <code>int</code>).\n\n @return  the <code>float</code> value represented by this object\n          converted to type <code>int</code>\n"
12485,method,java/lang/Float/longValue/," Returns value of this <code>Float</code> as a <code>long</code>\n (by casting to type <code>long</code>).\n\n @return  the <code>float</code> value represented by this object\n          converted to type <code>long</code>\n"
12486,method,java/lang/Float/floatValue/," Returns the <code>float</code> value of this <code>Float</code>\n object.\n\n @return the <code>float</code> value represented by this object \n"
12487,method,java/lang/Float/doubleValue/," Returns the <code>double</code> value of this\n <code>Float</code> object.\n \n @return the <code>float</code> value represented by this \n         object is converted to type <code>double</code> and the \n         result of the conversion is returned.  \n"
12488,method,java/lang/Float/hashCode/," Returns a hash code for this <code>Float</code> object. The\n result is the integer bit representation, exactly as produced\n by the method {@link #floatToIntBits(float)}, of the primitive\n <code>float</code> value represented by this <code>Float</code>\n object.\n\n @return a hash code value for this object.  \n"
12493,method,java/lang/Float/compareTo/Float," Compares two <code>Float</code> objects numerically.  There are\n two ways in which comparisons performed by this method differ\n from those performed by the Java language numerical comparison\n operators (<code>&lt;, &lt;=, ==, &gt;= &gt;</code>) when\n applied to primitive <code>float</code> values:\n <ul><li>\n		<code>Float.NaN</code> is considered by this method to\n		be equal to itself and greater than all other\n		<code>float</code> values\n		(including <code>Float.POSITIVE_INFINITY</code>).\n <li>\n		<code>0.0f</code> is considered by this method to be greater\n		than <code>-0.0f</code>.\n </ul>\n This ensures that the <i>natural ordering</i> of <tt>Float</tt>\n objects imposed by this method is <i>consistent with equals</i>.\n\n @param   anotherFloat   the <code>Float</code> to be compared.\n @return  the value <code>0</code> if <code>anotherFloat</code> is\n		numerically equal to this <code>Float</code>; a value\n		less than <code>0</code> if this <code>Float</code>\n		is numerically less than <code>anotherFloat</code>;\n		and a value greater than <code>0</code> if this\n		<code>Float</code> is numerically greater than\n		<code>anotherFloat</code>.\n		\n @since   1.2\n @see Comparable#compareTo(Object)\n"
12495,method,java/lang/Float/Float/float," Constructs a newly allocated <code>Float</code> object that\n represents the primitive <code>float</code> argument.\n\n @param   value   the value to be represented by the <code>Float</code>.\n"
12496,method,java/lang/Float/Float/double," Constructs a newly allocated <code>Float</code> object that\n represents the argument converted to type <code>float</code>.\n\n @param   value   the value to be represented by the <code>Float</code>.\n"
12497,method,java/lang/Float/Float/String," Constructs a newly allocated <code>Float</code> object that \n represents the floating-point value of type <code>float</code> \n represented by the string. The string is converted to a \n <code>float</code> value as if by the <code>valueOf</code> method. \n\n @param      s   a string to be converted to a <code>Float</code>.\n @exception  NumberFormatException  if the string does not contain a\n               parsable number.\n @see        java.lang.Float#valueOf(java.lang.String)\n"
12498,field,java/lang/Float/POSITIVE_INFINITY," A constant holding the positive infinity of type\n <code>float</code>. It is equal to the value returned by\n <code>Float.intBitsToFloat(0x7f800000)</code>.\n"
12499,field,java/lang/Float/NEGATIVE_INFINITY," A constant holding the negative infinity of type\n <code>float</code>. It is equal to the value returned by\n <code>Float.intBitsToFloat(0xff800000)</code>.\n"
12500,field,java/lang/Float/NaN,"\n A constant holding a Not-a-Number (NaN) value of type\n <code>float</code>.  It is equivalent to the value returned by\n <code>Float.intBitsToFloat(0x7fc00000)</code>.\n"
12501,field,java/lang/Float/MAX_VALUE," A constant holding the largest positive finite value of type\n <code>float</code>, (2-2<sup>-23</sup>)&middot;2<sup>127</sup>.\n It is equal to the hexadecimal floating-point literal\n <code>0x1.fffffeP+127f</code> and also equal to\n <code>Float.intBitsToFloat(0x7f7fffff)</code>.\n"
12502,field,java/lang/Float/MIN_NORMAL," A constant holding the smallest positive normal value of type\n {@code float}, 2<sup>-126</sup>.  It is equal to the\n hexadecimal floating-point literal {@code 0x1.0p-126f} and also\n equal to {@code Float.intBitsToFloat(0x00800000)}.\n\n @since 1.6\n"
12503,field,java/lang/Float/MIN_VALUE," A constant holding the smallest positive nonzero value of type\n <code>float</code>, 2<sup>-149</sup>. It is equal to the\n hexadecimal floating-point literal <code>0x0.000002P-126f</code>\n and also equal to <code>Float.intBitsToFloat(0x1)</code>.\n"
12506,field,java/lang/Float/SIZE," The number of bits used to represent a <tt>float</tt> value.\n\n @since 1.5\n"
12507,field,java/lang/Float/TYPE," The <code>Class</code> instance representing the primitive type\n <code>float</code>.\n\n @since JDK1.1 \n"
12511,method,java/lang/ExceptionInInitializerError/ExceptionInInitializerError/," Constructs an <code>ExceptionInInitializerError</code> with \n <code>null</code> as its detail message string and with no saved\n throwable object.\n A detail message is a String that describes this particular exception.\n"
12512,method,java/lang/ExceptionInInitializerError/ExceptionInInitializerError/Throwable," Constructs a new <code>ExceptionInInitializerError</code> class by \n saving a reference to the <code>Throwable</code> object thrown for \n later retrieval by the {@link #getException()} method. The detail \n message string is set to <code>null</code>.\n\n @param thrown The exception thrown\n"
12513,method,java/lang/ExceptionInInitializerError/ExceptionInInitializerError/String," Constructs an ExceptionInInitializerError with the specified detail \n message string.  A detail message is a String that describes this \n particular exception. The detail message string is saved for later \n retrieval by the {@link Throwable#getMessage()} method. There is no \n saved throwable object. \n\n\n @param s the detail message\n"
12518,method,java/lang/Exception/Exception/Throwable," Constructs a new exception with the specified cause and a detail\n message of <tt>(cause==null ? null : cause.toString())</tt> (which\n typically contains the class and detail message of <tt>cause</tt>).\n This constructor is useful for exceptions that are little more than\n wrappers for other throwables (for example, {@link\n java.security.PrivilegedActionException}).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method).  (A <tt>null</tt> value is\n         permitted, and indicates that the cause is nonexistent or\n         unknown.)\n @since  1.4\n"
12524,class,java/lang/EnumConstantNotPresentException," Thrown when an application tries to access an enum constant by name\n and the enum type contains no constant with the specified name.\n\n @author  Josh Bloch\n @since   1.5\n"
12525,method,java/lang/EnumConstantNotPresentException/enumType/," Returns the type of the missing enum constant.\n\n @return the type of the missing enum constant\n"
12526,method,java/lang/EnumConstantNotPresentException/constantName/," Returns the name of the missing enum constant.\n\n @return the name of the missing enum constant\n"
12527,method,java/lang/EnumConstantNotPresentException/EnumConstantNotPresentException/Class;String," Constructs an <tt>EnumConstantNotPresentException</tt> for the \n specified constant.\n\n @param enumType the type of the missing enum constant\n @param constantName the name of the missing enum constant\n"
12528,class,java/lang/Enum," This is the common base class of all Java language enumeration types.\n\n @author  Josh Bloch\n @author  Neal Gafter\n @version 1.17, 03/23/10\n @since   1.5\n"
12530,method,java/lang/Enum/ordinal/," Returns the ordinal of this enumeration constant (its position\n in its enum declaration, where the initial constant is assigned\n an ordinal of zero).\n \n Most programmers will have no use for this method.  It is\n designed for use by sophisticated enum-based data structures, such\n as {@link java.util.EnumSet} and {@link java.util.EnumMap}.\n\n @return the ordinal of this enumeration constant\n"
12532,method,java/lang/Enum/equals/Object," Returns true if the specified object is equal to this\n enum constant.\n\n @param other the object to be compared for equality with this object.\n @return  true if the specified object is equal to this\n          enum constant.\n"
12533,method,java/lang/Enum/hashCode/," Returns a hash code for this enum constant.\n\n @return a hash code for this enum constant.\n"
12538,method,java/lang/Enum/finalize/," enum classes cannot have finalize methods.\n"
12545,method,java/lang/Double/parseDouble/String," Returns a new <code>double</code> initialized to the value\n represented by the specified <code>String</code>, as performed\n by the <code>valueOf</code> method of class\n <code>Double</code>.\n\n @param      s   the string to be parsed.\n @return the <code>double</code> value represented by the string\n         argument.\n @exception NumberFormatException if the string does not contain\n            a parsable <code>double</code>.\n @see        java.lang.Double#valueOf(String)\n @since 1.2\n"
12546,method,java/lang/Double/isNaN/double," Returns <code>true</code> if the specified number is a\n Not-a-Number (NaN) value, <code>false</code> otherwise.\n\n @param   v   the value to be tested.\n @return  <code>true</code> if the value of the argument is NaN;\n          <code>false</code> otherwise.\n"
12547,method,java/lang/Double/isInfinite/double," Returns <code>true</code> if the specified number is infinitely\n large in magnitude, <code>false</code> otherwise.\n\n @param   v   the value to be tested.\n @return  <code>true</code> if the value of the argument is positive\n          infinity or negative infinity; <code>false</code> otherwise.\n"
12548,method,java/lang/Double/isNaN/," Returns <code>true</code> if this <code>Double</code> value is\n a Not-a-Number (NaN), <code>false</code> otherwise.\n\n @return  <code>true</code> if the value represented by this object is\n          NaN; <code>false</code> otherwise.\n"
12549,method,java/lang/Double/isInfinite/," Returns <code>true</code> if this <code>Double</code> value is\n infinitely large in magnitude, <code>false</code> otherwise.\n\n @return  <code>true</code> if the value represented by this object is\n          positive infinity or negative infinity;\n          <code>false</code> otherwise.\n"
12550,method,java/lang/Double/toString/," Returns a string representation of this <code>Double</code> object.\n The primitive <code>double</code> value represented by this\n object is converted to a string exactly as if by the method\n <code>toString</code> of one argument.\n\n @return  a <code>String</code> representation of this object.\n @see java.lang.Double#toString(double)\n"
12551,method,java/lang/Double/byteValue/," Returns the value of this <code>Double</code> as a <code>byte</code> (by\n casting to a <code>byte</code>).\n\n @return  the <code>double</code> value represented by this object\n          converted to type <code>byte</code>\n @since JDK1.1 \n"
12552,method,java/lang/Double/shortValue/," Returns the value of this <code>Double</code> as a\n <code>short</code> (by casting to a <code>short</code>).\n\n @return  the <code>double</code> value represented by this object\n          converted to type <code>short</code>\n @since JDK1.1 \n"
12553,method,java/lang/Double/intValue/," Returns the value of this <code>Double</code> as an\n <code>int</code> (by casting to type <code>int</code>).\n\n @return  the <code>double</code> value represented by this object\n          converted to type <code>int</code>\n"
12554,method,java/lang/Double/longValue/," Returns the value of this <code>Double</code> as a\n <code>long</code> (by casting to type <code>long</code>).\n\n @return  the <code>double</code> value represented by this object\n          converted to type <code>long</code>\n"
12555,method,java/lang/Double/floatValue/," Returns the <code>float</code> value of this\n <code>Double</code> object.\n\n @return  the <code>double</code> value represented by this object\n          converted to type <code>float</code>\n @since JDK1.0 \n"
12556,method,java/lang/Double/doubleValue/," Returns the <code>double</code> value of this\n <code>Double</code> object.\n\n @return the <code>double</code> value represented by this object\n"
12557,method,java/lang/Double/hashCode/," Returns a hash code for this <code>Double</code> object. The\n result is the exclusive OR of the two halves of the\n <code>long</code> integer bit representation, exactly as\n produced by the method {@link #doubleToLongBits(double)}, of\n the primitive <code>double</code> value represented by this\n <code>Double</code> object. That is, the hash code is the value\n of the expression:\n <blockquote><pre>\n (int)(v^(v&gt;&gt;&gt;32))\n </pre></blockquote>\n where <code>v</code> is defined by: \n <blockquote><pre>\n long v = Double.doubleToLongBits(this.doubleValue());\n </pre></blockquote>\n\n @return  a <code>hash code</code> value for this object.\n"
12562,method,java/lang/Double/compareTo/Double," Compares two <code>Double</code> objects numerically.  There\n are two ways in which comparisons performed by this method\n differ from those performed by the Java language numerical\n comparison operators (<code>&lt;, &lt;=, ==, &gt;= &gt;</code>)\n when applied to primitive <code>double</code> values:\n <ul><li>\n		<code>Double.NaN</code> is considered by this method\n		to be equal to itself and greater than all other\n		<code>double</code> values (including\n		<code>Double.POSITIVE_INFINITY</code>).\n <li>\n		<code>0.0d</code> is considered by this method to be greater\n		than <code>-0.0d</code>.\n </ul>\n This ensures that the <i>natural ordering</i> of\n <tt>Double</tt> objects imposed by this method is <i>consistent\n with equals</i>.\n\n @param   anotherDouble   the <code>Double</code> to be compared.\n @return  the value <code>0</code> if <code>anotherDouble</code> is\n		numerically equal to this <code>Double</code>; a value\n		less than <code>0</code> if this <code>Double</code>\n		is numerically less than <code>anotherDouble</code>;\n		and a value greater than <code>0</code> if this\n		<code>Double</code> is numerically greater than\n		<code>anotherDouble</code>.\n		\n @since   1.2\n"
12564,method,java/lang/Double/Double/double," Constructs a newly allocated <code>Double</code> object that\n represents the primitive <code>double</code> argument.\n\n @param   value   the value to be represented by the <code>Double</code>.\n"
12565,method,java/lang/Double/Double/String," Constructs a newly allocated <code>Double</code> object that\n represents the floating-point value of type <code>double</code>\n represented by the string. The string is converted to a\n <code>double</code> value as if by the <code>valueOf</code> method.\n\n @param      s   a string to be converted to a <code>Double</code>.\n @exception  NumberFormatException  if the string does not contain a\n               parsable number.\n @see        java.lang.Double#valueOf(java.lang.String)\n"
12566,field,java/lang/Double/POSITIVE_INFINITY," A constant holding the positive infinity of type\n <code>double</code>. It is equal to the value returned by\n <code>Double.longBitsToDouble(0x7ff0000000000000L)</code>.\n"
12567,field,java/lang/Double/NEGATIVE_INFINITY," A constant holding the negative infinity of type\n <code>double</code>. It is equal to the value returned by\n <code>Double.longBitsToDouble(0xfff0000000000000L)</code>.\n"
12568,field,java/lang/Double/NaN,"\n A constant holding a Not-a-Number (NaN) value of type\n <code>double</code>. It is equivalent to the value returned by\n <code>Double.longBitsToDouble(0x7ff8000000000000L)</code>.\n"
12569,field,java/lang/Double/MAX_VALUE," A constant holding the largest positive finite value of type\n <code>double</code>,\n (2-2<sup>-52</sup>)&middot;2<sup>1023</sup>.  It is equal to\n the hexadecimal floating-point literal\n <code>0x1.fffffffffffffP+1023</code> and also equal to\n <code>Double.longBitsToDouble(0x7fefffffffffffffL)</code>.\n"
12570,field,java/lang/Double/MIN_NORMAL," A constant holding the smallest positive normal value of type\n {@code double}, 2<sup>-1022</sup>.  It is equal to the\n hexadecimal floating-point literal {@code 0x1.0p-1022} and also\n equal to {@code Double.longBitsToDouble(0x0010000000000000L)}.\n\n @since 1.6\n"
12571,field,java/lang/Double/MIN_VALUE," A constant holding the smallest positive nonzero value of type\n <code>double</code>, 2<sup>-1074</sup>. It is equal to the\n hexadecimal floating-point literal\n <code>0x0.0000000000001P-1022</code> and also equal to\n <code>Double.longBitsToDouble(0x1L)</code>.\n"
12574,field,java/lang/Double/SIZE," The number of bits used to represent a <tt>double</tt> value.\n\n @since 1.5\n"
12575,field,java/lang/Double/TYPE," The <code>Class</code> instance representing the primitive type\n <code>double</code>.\n\n @since JDK1.1 \n"
12578,method,java/lang/Compiler/compileClass/Class," Compiles the specified class.\n\n @param   clazz   a class.\n @return  <code>true</code> if the compilation succeeded;\n          <code>false</code> if the compilation failed or no compiler\n          is available.\n @exception NullPointerException if <code>clazz</code> is \n          <code>null</code>.\n"
12579,method,java/lang/Compiler/compileClasses/String," Compiles all classes whose name matches the specified string.\n\n @param   string   the name of the classes to compile.\n @return  <code>true</code> if the compilation succeeded;\n          <code>false</code> if the compilation failed or no compiler\n          is available.\n @exception NullPointerException if <code>string</code> is \n          <code>null</code>.\n"
12581,method,java/lang/Compiler/enable/," Cause the Compiler to resume operation.\n"
12582,method,java/lang/Compiler/disable/," Cause the Compiler to cease operation.\n"
12587,method,java/lang/CloneNotSupportedException/CloneNotSupportedException/," Constructs a <code>CloneNotSupportedException</code> with no \n detail message. \n"
12588,method,java/lang/CloneNotSupportedException/CloneNotSupportedException/String," Constructs a <code>CloneNotSupportedException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12592,method,java/lang/ClassNotFoundException/ClassNotFoundException/," Constructs a <code>ClassNotFoundException</code> with no detail message.\n"
12593,method,java/lang/ClassNotFoundException/ClassNotFoundException/String," Constructs a <code>ClassNotFoundException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
12594,method,java/lang/ClassNotFoundException/ClassNotFoundException/String;Throwable," Constructs a <code>ClassNotFoundException</code> with the\n specified detail message and optional exception that was\n raised while loading the class.\n\n @param s the detail message\n @param ex the exception that was raised while loading the class\n @since 1.2\n"
12605,method,java/lang/ClassLoader/findLoadedClass/String," Returns the class with the given <a href="#name">binary name</a> if this\n loader has been recorded by the Java virtual machine as an initiating\n loader of a class with that <a href="#name">binary name</a>.  Otherwise\n <tt>null</tt> is returned.  </p>\n\n @param  name\n         The <a href="#name">binary name</a> of the class\n\n @return  The <tt>Class</tt> object, or <tt>null</tt> if the class has\n          not been loaded\n\n @since  1.1\n"
12611,method,java/lang/ClassLoader/getSystemResource/String," Find a resource of the specified name from the search path used to load\n classes.  This method locates the resource through the system class\n loader (see {@link #getSystemClassLoader()}).  </p>\n\n @param  name\n         The resource name\n\n @return  A {@link java.net.URL <tt>URL</tt>} object for reading the\n          resource, or <tt>null</tt> if the resource could not be found\n\n @since  1.1\n"
12613,method,java/lang/ClassLoader/getResourceAsStream/String," Returns an input stream for reading the specified resource.\n\n <p> The search order is described in the documentation for {@link\n #getResource(String)}.  </p>\n\n @param  name\n         The resource name\n\n @return  An input stream for reading the resource, or <tt>null</tt>\n          if the resource could not be found\n\n @since  1.1\n"
12614,method,java/lang/ClassLoader/getSystemResourceAsStream/String," Open for reading, a resource of the specified name from the search path\n used to load classes.  This method locates the resource through the\n system class loader (see {@link #getSystemClassLoader()}).  </p>\n\n @param  name\n         The resource name\n\n @return  An input stream for reading the resource, or <tt>null</tt>\n 	        if the resource could not be found\n\n @since  1.1\n"
12618,method,java/lang/ClassLoader/getPackage/String," Returns a <tt>Package</tt> that has been defined by this class loader\n or any of its ancestors.  </p>\n\n @param  name\n         The package name\n\n @return  The <tt>Package</tt> corresponding to the given name, or\n          <tt>null</tt> if not found\n\n @since  1.2\n"
12619,method,java/lang/ClassLoader/getPackages/," Returns all of the <tt>Packages</tt> defined by this class loader and\n its ancestors.  </p>\n\n @return  The array of <tt>Package</tt> objects defined by this\n          <tt>ClassLoader</tt>\n\n @since  1.2\n"
12624,method,java/lang/ClassLoader/clearAssertionStatus/," Sets the default assertion status for this class loader to\n <tt>false</tt> and discards any package defaults or class assertion\n status settings associated with the class loader.  This method is\n provided so that class loaders can be made to ignore any command line or\n persistent assertion status settings and "start with a clean slate."\n </p>\n\n @since  1.4\n"
12627,class,java/lang/ClassFormatError," Thrown when the Java Virtual Machine attempts to read a class \n file and determines that the file is malformed or otherwise cannot \n be interpreted as a class file. \n\n @author  unascribed\n @version 1.22, 03/23/10\n @since   JDK1.0\n"
12628,method,java/lang/ClassFormatError/ClassFormatError/," Constructs a <code>ClassFormatError</code> with no detail message. \n"
12629,method,java/lang/ClassFormatError/ClassFormatError/String," Constructs a <code>ClassFormatError</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12630,class,java/lang/ClassCircularityError," Thrown when a circularity has been detected while initializing a class.\n\n @author     unascribed\n @version    1.17, 03/23/10\n @since      JDK1.0\n"
12631,method,java/lang/ClassCircularityError/ClassCircularityError/," Constructs a <code>ClassCircularityError</code> with no detail  message.\n"
12632,method,java/lang/ClassCircularityError/ClassCircularityError/String," Constructs a <code>ClassCircularityError</code> with the \n specified detail message. \n\n @param      s   the detail message.\n"
12634,method,java/lang/ClassCastException/ClassCastException/," Constructs a <code>ClassCastException</code> with no detail message. \n"
12635,method,java/lang/ClassCastException/ClassCastException/String," Constructs a <code>ClassCastException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
12637,method,java/lang/Class/toString/," Converts the object to a string. The string representation is the\n string "class" or "interface", followed by a space, and then by the\n fully qualified name of the class in the format returned by\n <code>getName</code>.  If this <code>Class</code> object represents a\n primitive type, this method returns the name of the primitive type.  If\n this <code>Class</code> object represents void this method returns\n "void".\n\n @return a string representation of this class object.\n"
12643,method,java/lang/Class/isInterface/," Determines if the specified <code>Class</code> object represents an\n interface type.\n\n @return  <code>true</code> if this object represents an interface;\n          <code>false</code> otherwise.\n"
12644,method,java/lang/Class/isArray/," Determines if this <code>Class</code> object represents an array class.\n\n @return  <code>true</code> if this object represents an array class;\n          <code>false</code> otherwise.\n @since   JDK1.1\n"
12648,method,java/lang/Class/getName/," Returns the  name of the entity (class, interface, array class,\n primitive type, or void) represented by this <tt>Class</tt> object,\n as a <tt>String</tt>.\n \n <p> If this class object represents a reference type that is not an\n array type then the binary name of the class is returned, as specified\n by the Java Language Specification, Second Edition.\n\n <p> If this class object represents a primitive type or void, then the\n name returned is a <tt>String</tt> equal to the Java language\n keyword corresponding to the primitive type or void.\n \n <p> If this class object represents a class of arrays, then the internal\n form of the name consists of the name of the element type preceded by\n one or more '<tt>[</tt>' characters representing the depth of the array\n nesting.  The encoding of element type names is as follows:\n\n <blockquote><table summary="Element types and encodings">\n <tr><th> Element Type <th> &nbsp;&nbsp;&nbsp; <th> Encoding\n <tr><td> boolean      <td> &nbsp;&nbsp;&nbsp; <td align=center> Z\n <tr><td> byte         <td> &nbsp;&nbsp;&nbsp; <td align=center> B\n <tr><td> char         <td> &nbsp;&nbsp;&nbsp; <td align=center> C\n <tr><td> class or interface  \n                       <td> &nbsp;&nbsp;&nbsp; <td align=center> L<i>classname</i>;\n <tr><td> double       <td> &nbsp;&nbsp;&nbsp; <td align=center> D\n <tr><td> float        <td> &nbsp;&nbsp;&nbsp; <td align=center> F\n <tr><td> int          <td> &nbsp;&nbsp;&nbsp; <td align=center> I\n <tr><td> long         <td> &nbsp;&nbsp;&nbsp; <td align=center> J\n <tr><td> short        <td> &nbsp;&nbsp;&nbsp; <td align=center> S\n </table></blockquote>\n\n <p> The class or interface name <i>classname</i> is the binary name of\n the class specified above.\n\n <p> Examples:\n <blockquote><pre>\n String.class.getName()\n     returns "java.lang.String"\n byte.class.getName()\n     returns "byte"\n (new Object[3]).getClass().getName()\n     returns "[Ljava.lang.Object;"\n (new int[3][4][5][6][7][8][9]).getClass().getName()\n     returns "[[[[[[[I"\n </pre></blockquote>\n\n @return  the name of the class or interface\n          represented by this object.\n"
12650,method,java/lang/Class/getTypeParameters/," Returns an array of <tt>TypeVariable</tt> objects that represent the\n type variables declared by the generic declaration represented by this\n <tt>GenericDeclaration</tt> object, in declaration order.  Returns an\n array of length 0 if the underlying generic declaration declares no type\n variables.\n\n @return an array of <tt>TypeVariable</tt> objects that represent\n     the type variables declared by this generic declaration\n @throws GenericSignatureFormatError if the generic\n     signature of this generic declaration does not conform to\n     the format specified in the Java Virtual Machine Specification,\n     3rd edition\n @since 1.5\n"
12656,method,java/lang/Class/getComponentType/," Returns the <code>Class</code> representing the component type of an\n array.  If this class does not represent an array class this method\n returns null.\n\n @return the <code>Class</code> representing the component type of this\n class if this class is an array\n @see     java.lang.reflect.Array\n @since JDK1.1\n"
12658,method,java/lang/Class/getSigners/," Gets the signers of this class.\n\n @return  the signers of this class, or null if there are no signers.  In\n 		particular, this method returns null if this object represents\n 		a primitive type or void.\n @since 	JDK1.1\n"
12659,method,java/lang/Class/getEnclosingMethod/," If this <tt>Class</tt> object represents a local or anonymous\n class within a method, returns a {@link\n java.lang.reflect.Method Method} object representing the\n immediately enclosing method of the underlying class. Returns\n <tt>null</tt> otherwise.\n\n In particular, this method returns <tt>null</tt> if the underlying\n class is a local or anonymous class immediately enclosed by a type\n declaration, instance initializer or static initializer.\n\n @return the immediately enclosing method of the underlying class, if\n     that class is a local or anonymous class; otherwise <tt>null</tt>.\n @since 1.5\n"
12660,method,java/lang/Class/getEnclosingConstructor/," If this <tt>Class</tt> object represents a local or anonymous\n class within a constructor, returns a {@link\n java.lang.reflect.Constructor Constructor} object representing\n the immediately enclosing constructor of the underlying\n class. Returns <tt>null</tt> otherwise.  In particular, this\n method returns <tt>null</tt> if the underlying class is a local\n or anonymous class immediately enclosed by a type declaration,\n instance initializer or static initializer.\n\n @return the immediately enclosing constructor of the underlying class, if\n     that class is a local or anonymous class; otherwise <tt>null</tt>.\n @since 1.5\n"
12661,method,java/lang/Class/getDeclaringClass/," If the class or interface represented by this <code>Class</code> object\n is a member of another class, returns the <code>Class</code> object\n representing the class in which it was declared.  This method returns\n null if this class or interface is not a member of any other class.  If\n this <code>Class</code> object represents an array class, a primitive\n type, or void,then this method returns null.\n\n @return the declaring class for this class\n @since JDK1.1\n"
12662,method,java/lang/Class/getEnclosingClass/," Returns the immediately enclosing class of the underlying\n class.  If the underlying class is a top level class this\n method returns <tt>null</tt>.\n @return the immediately enclosing class of the underlying class\n @since 1.5\n"
12663,method,java/lang/Class/getSimpleName/," Returns the simple name of the underlying class as given in the\n source code. Returns an empty string if the underlying class is\n anonymous.\n\n <p>The simple name of an array is the simple name of the\n component type with "[]" appended.  In particular the simple\n name of an array whose component type is anonymous is "[]".\n\n @return the simple name of the underlying class\n @since 1.5\n"
12664,method,java/lang/Class/getCanonicalName/," Returns the canonical name of the underlying class as\n defined by the Java Language Specification.  Returns null if\n the underlying class does not have a canonical name (i.e., if\n it is a local or anonymous class or an array whose component\n type does not have a canonical name).\n @return the canonical name of the underlying class if it exists, and\n <tt>null</tt> otherwise.\n @since 1.5\n"
12687,method,java/lang/Class/getEnumConstants/," Returns the elements of this enum class or null if this\n Class object does not represent an enum type.\n\n @return an array containing the values comprising the enum class\n     represented by this Class object in the order they're\n     declared, or null if this Class object does not\n     represent an enum type\n @since 1.5\n"
12692,method,java/lang/Class/getAnnotations/," @since 1.5\n"
12693,method,java/lang/Class/getDeclaredAnnotations/," @since 1.5\n"
12696,method,java/lang/Character/charValue/," Returns the value of this <code>Character</code> object.\n @return  the primitive <code>char</code> value represented by\n          this object.\n"
12697,method,java/lang/Character/hashCode/," Returns a hash code for this <code>Character</code>.\n @return  a hash code value for this object.\n"
12699,method,java/lang/Character/toString/," Returns a <code>String</code> object representing this\n <code>Character</code>'s value.  The result is a string of\n length 1 whose sole component is the primitive\n <code>char</code> value represented by this\n <code>Character</code> object.\n\n @return  a string representation of this object.\n"
12700,method,java/lang/Character/toString/char," Returns a <code>String</code> object representing the\n specified <code>char</code>.  The result is a string of length\n 1 consisting solely of the specified <code>char</code>.\n\n @param c the <code>char</code> to be converted\n @return the string representation of the specified <code>char</code>\n @since 1.4\n"
12701,method,java/lang/Character/isValidCodePoint/int," Determines whether the specified code point is a valid Unicode\n code point value in the range of <code>0x0000</code> to\n <code>0x10FFFF</code> inclusive. This method is equivalent to\n the expression:\n\n <blockquote><pre>\n codePoint >= 0x0000 && codePoint <= 0x10FFFF\n </pre></blockquote>\n\n @param  codePoint the Unicode code point to be tested\n @return <code>true</code> if the specified code point value\n is a valid code point value;\n <code>false</code> otherwise.\n @since  1.5\n"
12705,method,java/lang/Character/isSurrogatePair/char;char," Determines whether the specified pair of <code>char</code>\n values is a valid surrogate pair. This method is equivalent to\n the expression:\n <blockquote><pre>\n isHighSurrogate(high) && isLowSurrogate(low)\n </pre></blockquote>\n\n @param  high the high-surrogate code value to be tested\n @param  low the low-surrogate code value to be tested\n @return <code>true</code> if the specified high and\n low-surrogate code values represent a valid surrogate pair;\n <code>false</code> otherwise.\n @since  1.5\n"
12708,method,java/lang/Character/codePointAt/CharSequence;int," Returns the code point at the given index of the\n <code>CharSequence</code>. If the <code>char</code> value at\n the given index in the <code>CharSequence</code> is in the\n high-surrogate range, the following index is less than the\n length of the <code>CharSequence</code>, and the\n <code>char</code> value at the following index is in the\n low-surrogate range, then the supplementary code point\n corresponding to this surrogate pair is returned. Otherwise,\n the <code>char</code> value at the given index is returned.\n\n @param seq a sequence of <code>char</code> values (Unicode code\n units)\n @param index the index to the <code>char</code> values (Unicode\n code units) in <code>seq</code> to be converted\n @return the Unicode code point at the given index\n @exception NullPointerException if <code>seq</code> is null.\n @exception IndexOutOfBoundsException if the value\n <code>index</code> is negative or not less than\n {@link CharSequence#length() seq.length()}.\n @since  1.5\n"
12709,method,java/lang/Character/codePointAt/char[];int," Returns the code point at the given index of the\n <code>char</code> array. If the <code>char</code> value at\n the given index in the <code>char</code> array is in the\n high-surrogate range, the following index is less than the\n length of the <code>char</code> array, and the\n <code>char</code> value at the following index is in the\n low-surrogate range, then the supplementary code point\n corresponding to this surrogate pair is returned. Otherwise,\n the <code>char</code> value at the given index is returned.\n\n @param a the <code>char</code> array\n @param index the index to the <code>char</code> values (Unicode\n code units) in the <code>char</code> array to be converted\n @return the Unicode code point at the given index\n @exception NullPointerException if <code>a</code> is null.\n @exception IndexOutOfBoundsException if the value\n <code>index</code> is negative or not less than\n the length of the <code>char</code> array.\n @since  1.5\n"
12714,method,java/lang/Character/toChars/int;char[];int," Converts the specified character (Unicode code point) to its\n UTF-16 representation. If the specified code point is a BMP\n (Basic Multilingual Plane or Plane 0) value, the same value is\n stored in <code>dst[dstIndex]</code>, and 1 is returned. If the\n specified code point is a supplementary character, its\n surrogate values are stored in <code>dst[dstIndex]</code>\n (high-surrogate) and <code>dst[dstIndex+1]</code>\n (low-surrogate), and 2 is returned.\n\n @param  codePoint the character (Unicode code point) to be converted.\n @param  dst an array of <code>char</code> in which the\n <code>codePoint</code>'s UTF-16 value is stored.\n @param dstIndex the start index into the <code>dst</code>\n array where the converted value is stored.\n @return 1 if the code point is a BMP code point, 2 if the\n code point is a supplementary code point.\n @exception IllegalArgumentException if the specified\n <code>codePoint</code> is not a valid Unicode code point.\n @exception NullPointerException if the specified <code>dst</code> is null.\n @exception IndexOutOfBoundsException if <code>dstIndex</code>\n is negative or not less than <code>dst.length</code>, or if\n <code>dst</code> at <code>dstIndex</code> doesn't have enough\n array element(s) to store the resulting <code>char</code>\n value(s). (If <code>dstIndex</code> is equal to\n <code>dst.length-1</code> and the specified\n <code>codePoint</code> is a supplementary character, the\n high-surrogate value is not stored in\n <code>dst[dstIndex]</code>.)\n @since  1.5\n"
12715,method,java/lang/Character/toChars/int," Converts the specified character (Unicode code point) to its\n UTF-16 representation stored in a <code>char</code> array. If\n the specified code point is a BMP (Basic Multilingual Plane or\n Plane 0) value, the resulting <code>char</code> array has\n the same value as <code>codePoint</code>. If the specified code\n point is a supplementary code point, the resulting\n <code>char</code> array has the corresponding surrogate pair.\n\n @param  codePoint a Unicode code point\n @return a <code>char</code> array having\n         <code>codePoint</code>'s UTF-16 representation.\n @exception IllegalArgumentException if the specified\n <code>codePoint</code> is not a valid Unicode code point.\n @since  1.5\n"
12717,method,java/lang/Character/codePointCount/char[];int;int," Returns the number of Unicode code points in a subarray of the\n <code>char</code> array argument. The <code>offset</code>\n argument is the index of the first <code>char</code> of the\n subarray and the <code>count</code> argument specifies the\n length of the subarray in <code>char</code>s. Unpaired\n surrogates within the subarray count as one code point each.\n\n @param a the <code>char</code> array\n @param offset the index of the first <code>char</code> in the\n given <code>char</code> array\n @param count the length of the subarray in <code>char</code>s\n @return the number of Unicode code points in the specified subarray\n @exception NullPointerException if <code>a</code> is null.\n @exception IndexOutOfBoundsException if <code>offset</code> or\n <code>count</code> is negative, or if <code>offset +\n count</code> is larger than the length of the given array.\n @since  1.5\n"
12719,method,java/lang/Character/offsetByCodePoints/char[];int;int;int;int," Returns the index within the given <code>char</code> subarray\n that is offset from the given <code>index</code> by\n <code>codePointOffset</code> code points. The\n <code>start</code> and <code>count</code> arguments specify a\n subarray of the <code>char</code> array. Unpaired surrogates\n within the text range given by <code>index</code> and\n <code>codePointOffset</code> count as one code point each.\n\n @param a the <code>char</code> array\n @param start the index of the first <code>char</code> of the\n subarray\n @param count the length of the subarray in <code>char</code>s\n @param index the index to be offset\n @param codePointOffset the offset in code points\n @return the index within the subarray\n @exception NullPointerException if <code>a</code> is null.\n @exception IndexOutOfBoundsException \n   if <code>start</code> or <code>count</code> is negative,\n   or if <code>start + count</code> is larger than the length of\n   the given array,\n   or if <code>index</code> is less than <code>start</code> or\n   larger then <code>start + count</code>,\n   or if <code>codePointOffset</code> is positive and the text range\n   starting with <code>index</code> and ending with <code>start\n   + count - 1</code> has fewer than <code>codePointOffset</code> code\n   points,\n   or if <code>codePointOffset</code> is negative and the text range\n   starting with <code>start</code> and ending with <code>index\n   - 1</code> has fewer than the absolute value of\n   <code>codePointOffset</code> code points.\n @since 1.5\n"
12721,method,java/lang/Character/isLowerCase/int," Determines if the specified character (Unicode code point) is a\n lowercase character.\n <p>\n A character is lowercase if its general category type, provided\n by {@link Character#getType getType(codePoint)}, is\n <code>LOWERCASE_LETTER</code>.\n <p>\n The following are examples of lowercase characters:\n <p><blockquote><pre>\n a b c d e f g h i j k l m n o p q r s t u v w x y z\n '&#92;u00DF' '&#92;u00E0' '&#92;u00E1' '&#92;u00E2' '&#92;u00E3' '&#92;u00E4' '&#92;u00E5' '&#92;u00E6' \n '&#92;u00E7' '&#92;u00E8' '&#92;u00E9' '&#92;u00EA' '&#92;u00EB' '&#92;u00EC' '&#92;u00ED' '&#92;u00EE'\n '&#92;u00EF' '&#92;u00F0' '&#92;u00F1' '&#92;u00F2' '&#92;u00F3' '&#92;u00F4' '&#92;u00F5' '&#92;u00F6'\n '&#92;u00F8' '&#92;u00F9' '&#92;u00FA' '&#92;u00FB' '&#92;u00FC' '&#92;u00FD' '&#92;u00FE' '&#92;u00FF'\n </pre></blockquote>\n <p> Many other Unicode characters are lowercase too.\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is lowercase;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isLowerCase(int)\n @see     java.lang.Character#isTitleCase(int)\n @see     java.lang.Character#toLowerCase(int)\n @see     java.lang.Character#getType(int)\n @since   1.5\n"
12723,method,java/lang/Character/isUpperCase/int," Determines if the specified character (Unicode code point) is an uppercase character.\n <p>\n A character is uppercase if its general category type, provided by\n {@link Character#getType(int) getType(codePoint)}, is <code>UPPERCASE_LETTER</code>.\n <p>\n The following are examples of uppercase characters:\n <p><blockquote><pre>\n A B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n '&#92;u00C0' '&#92;u00C1' '&#92;u00C2' '&#92;u00C3' '&#92;u00C4' '&#92;u00C5' '&#92;u00C6' '&#92;u00C7'\n '&#92;u00C8' '&#92;u00C9' '&#92;u00CA' '&#92;u00CB' '&#92;u00CC' '&#92;u00CD' '&#92;u00CE' '&#92;u00CF'\n '&#92;u00D0' '&#92;u00D1' '&#92;u00D2' '&#92;u00D3' '&#92;u00D4' '&#92;u00D5' '&#92;u00D6' '&#92;u00D8'\n '&#92;u00D9' '&#92;u00DA' '&#92;u00DB' '&#92;u00DC' '&#92;u00DD' '&#92;u00DE'\n </pre></blockquote>\n <p> Many other Unicode characters are uppercase too.<p>\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is uppercase;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isLowerCase(int)\n @see     java.lang.Character#isTitleCase(int)\n @see     java.lang.Character#toUpperCase(int)\n @see     java.lang.Character#getType(int)\n @since   1.5\n"
12725,method,java/lang/Character/isTitleCase/int," Determines if the specified character (Unicode code point) is a titlecase character.\n <p> \n A character is a titlecase character if its general\n category type, provided by {@link Character#getType(int) getType(codePoint)},\n is <code>TITLECASE_LETTER</code>.\n <p>\n Some characters look like pairs of Latin letters. For example, there\n is an uppercase letter that looks like "LJ" and has a corresponding\n lowercase letter that looks like "lj". A third form, which looks like "Lj",\n is the appropriate form to use when rendering a word in lowercase\n with initial capitals, as for a book title.\n <p>\n These are some of the Unicode characters for which this method returns\n <code>true</code>:\n <ul>\n <li><code>LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON</code>\n <li><code>LATIN CAPITAL LETTER L WITH SMALL LETTER J</code>\n <li><code>LATIN CAPITAL LETTER N WITH SMALL LETTER J</code>\n <li><code>LATIN CAPITAL LETTER D WITH SMALL LETTER Z</code>\n </ul>\n <p> Many other Unicode characters are titlecase too.<p>\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is titlecase;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isLowerCase(int)\n @see     java.lang.Character#isUpperCase(int)\n @see     java.lang.Character#toTitleCase(int)\n @see     java.lang.Character#getType(int)\n @since   1.5\n"
12729,method,java/lang/Character/isDefined/int," Determines if a character (Unicode code point) is defined in Unicode.\n <p>\n A character is defined if at least one of the following is true:\n <ul>\n <li>It has an entry in the UnicodeData file.\n <li>It has a value in a range defined by the UnicodeData file.\n </ul>\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character has a defined meaning\n          in Unicode; <code>false</code> otherwise.\n @see     java.lang.Character#isDigit(int)\n @see     java.lang.Character#isLetter(int)\n @see     java.lang.Character#isLetterOrDigit(int)\n @see     java.lang.Character#isLowerCase(int)\n @see     java.lang.Character#isTitleCase(int)\n @see     java.lang.Character#isUpperCase(int)\n @since   1.5\n"
12731,method,java/lang/Character/isLetter/int," Determines if the specified character (Unicode code point) is a letter.\n <p>\n A character is considered to be a letter if its general\n category type, provided by {@link Character#getType(int) getType(codePoint)},\n is any of the following:\n <ul>\n <li> <code>UPPERCASE_LETTER</code>\n <li> <code>LOWERCASE_LETTER</code>\n <li> <code>TITLECASE_LETTER</code>\n <li> <code>MODIFIER_LETTER</code>\n <li> <code>OTHER_LETTER</code>\n </ul>\n\n Not all letters have case. Many characters are\n letters but are neither uppercase nor lowercase nor titlecase.\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is a letter;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isDigit(int)\n @see     java.lang.Character#isJavaIdentifierStart(int)\n @see     java.lang.Character#isLetterOrDigit(int)\n @see     java.lang.Character#isLowerCase(int)\n @see     java.lang.Character#isTitleCase(int)\n @see     java.lang.Character#isUnicodeIdentifierStart(int)\n @see     java.lang.Character#isUpperCase(int)\n @since   1.5\n"
12733,method,java/lang/Character/isLetterOrDigit/int," Determines if the specified character (Unicode code point) is a letter or digit.\n <p>\n A character is considered to be a letter or digit if either\n {@link #isLetter(int) isLetter(codePoint)} or\n {@link #isDigit(int) isDigit(codePoint)} returns\n <code>true</code> for the character.\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is a letter or digit;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isDigit(int)\n @see     java.lang.Character#isJavaIdentifierPart(int)\n @see     java.lang.Character#isLetter(int)\n @see     java.lang.Character#isUnicodeIdentifierPart(int)\n @since   1.5\n"
12753,method,java/lang/Character/digit/int;int," Returns the numeric value of the specified character (Unicode\n code point) in the specified radix.\n \n <p>If the radix is not in the range <code>MIN_RADIX</code>&nbsp;&lt;=\n <code>radix</code>&nbsp;&lt;= <code>MAX_RADIX</code> or if the\n character is not a valid digit in the specified\n radix, <code>-1</code> is returned. A character is a valid digit\n if at least one of the following is true:\n <ul>\n <li>The method {@link #isDigit(int) isDigit(codePoint)} is <code>true</code> of the character\n     and the Unicode decimal digit value of the character (or its\n     single-character decomposition) is less than the specified radix.\n     In this case the decimal digit value is returned.\n <li>The character is one of the uppercase Latin letters\n     <code>'A'</code> through <code>'Z'</code> and its code is less than\n     <code>radix&nbsp;+ 'A'&nbsp;-&nbsp;10</code>.\n     In this case, <code>ch&nbsp;- 'A'&nbsp;+&nbsp;10</code>\n     is returned.\n <li>The character is one of the lowercase Latin letters\n     <code>'a'</code> through <code>'z'</code> and its code is less than\n     <code>radix&nbsp;+ 'a'&nbsp;-&nbsp;10</code>.\n     In this case, <code>ch&nbsp;- 'a'&nbsp;+&nbsp;10</code>\n     is returned.\n </ul>\n\n @param   codePoint the character (Unicode code point) to be converted.\n @param   radix   the radix.\n @return  the numeric value represented by the character in the\n          specified radix.\n @see     java.lang.Character#forDigit(int, int)\n @see     java.lang.Character#isDigit(int)\n @since   1.5\n"
12755,method,java/lang/Character/getNumericValue/int," Returns the <code>int</code> value that the specified \n character (Unicode code point) represents. For example, the character\n <code>'&#92;u216C'</code> (the Roman numeral fifty) will return\n an <code>int</code> with a value of 50.\n <p>\n The letters A-Z in their uppercase (<code>'&#92;u0041'</code> through\n <code>'&#92;u005A'</code>), lowercase\n (<code>'&#92;u0061'</code> through <code>'&#92;u007A'</code>), and\n full width variant (<code>'&#92;uFF21'</code> through\n <code>'&#92;uFF3A'</code> and <code>'&#92;uFF41'</code> through\n <code>'&#92;uFF5A'</code>) forms have numeric values from 10\n through 35. This is independent of the Unicode specification,\n which does not assign numeric values to these <code>char</code>\n values.\n <p>\n If the character does not have a numeric value, then -1 is returned.\n If the character has a numeric value that cannot be represented as a\n nonnegative integer (for example, a fractional value), then -2\n is returned.\n\n @param   codePoint the character (Unicode code point) to be converted.\n @return  the numeric value of the character, as a nonnegative <code>int</code>\n          value; -2 if the character has a numeric value that is not a\n          nonnegative integer; -1 if the character has no numeric value.\n @see     java.lang.Character#forDigit(int, int)\n @see     java.lang.Character#isDigit(int)\n @since   1.5\n"
12762,method,java/lang/Character/isISOControl/int," Determines if the referenced character (Unicode code point) is an ISO control\n character.  A character is considered to be an ISO control\n character if its code is in the range <code>'&#92;u0000'</code>\n through <code>'&#92;u001F'</code> or in the range\n <code>'&#92;u007F'</code> through <code>'&#92;u009F'</code>.\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  <code>true</code> if the character is an ISO control character;\n          <code>false</code> otherwise.\n @see     java.lang.Character#isSpaceChar(int)\n @see     java.lang.Character#isWhitespace(int)\n @since   1.5\n"
12764,method,java/lang/Character/getType/int," Returns a value indicating a character's general category.\n\n @param   codePoint the character (Unicode code point) to be tested.\n @return  a value of type <code>int</code> representing the \n          character's general category.\n @see     Character#COMBINING_SPACING_MARK COMBINING_SPACING_MARK\n @see     Character#CONNECTOR_PUNCTUATION CONNECTOR_PUNCTUATION\n @see     Character#CONTROL CONTROL\n @see     Character#CURRENCY_SYMBOL CURRENCY_SYMBOL\n @see     Character#DASH_PUNCTUATION DASH_PUNCTUATION\n @see     Character#DECIMAL_DIGIT_NUMBER DECIMAL_DIGIT_NUMBER\n @see     Character#ENCLOSING_MARK ENCLOSING_MARK\n @see     Character#END_PUNCTUATION END_PUNCTUATION\n @see     Character#FINAL_QUOTE_PUNCTUATION FINAL_QUOTE_PUNCTUATION\n @see     Character#FORMAT FORMAT\n @see     Character#INITIAL_QUOTE_PUNCTUATION INITIAL_QUOTE_PUNCTUATION\n @see     Character#LETTER_NUMBER LETTER_NUMBER\n @see     Character#LINE_SEPARATOR LINE_SEPARATOR\n @see     Character#LOWERCASE_LETTER LOWERCASE_LETTER\n @see     Character#MATH_SYMBOL MATH_SYMBOL\n @see     Character#MODIFIER_LETTER MODIFIER_LETTER\n @see     Character#MODIFIER_SYMBOL MODIFIER_SYMBOL\n @see     Character#NON_SPACING_MARK NON_SPACING_MARK\n @see     Character#OTHER_LETTER OTHER_LETTER\n @see     Character#OTHER_NUMBER OTHER_NUMBER\n @see     Character#OTHER_PUNCTUATION OTHER_PUNCTUATION\n @see     Character#OTHER_SYMBOL OTHER_SYMBOL\n @see     Character#PARAGRAPH_SEPARATOR PARAGRAPH_SEPARATOR\n @see     Character#PRIVATE_USE PRIVATE_USE\n @see     Character#SPACE_SEPARATOR SPACE_SEPARATOR\n @see     Character#START_PUNCTUATION START_PUNCTUATION\n @see     Character#SURROGATE SURROGATE\n @see     Character#TITLECASE_LETTER TITLECASE_LETTER\n @see     Character#UNASSIGNED UNASSIGNED\n @see     Character#UPPERCASE_LETTER UPPERCASE_LETTER\n @since   1.5\n"
12765,method,java/lang/Character/forDigit/int;int," Determines the character representation for a specific digit in\n the specified radix. If the value of <code>radix</code> is not a\n valid radix, or the value of <code>digit</code> is not a valid\n digit in the specified radix, the null character\n (<code>'&#92;u0000'</code>) is returned.\n <p>\n The <code>radix</code> argument is valid if it is greater than or\n equal to <code>MIN_RADIX</code> and less than or equal to\n <code>MAX_RADIX</code>. The <code>digit</code> argument is valid if\n <code>0&nbsp;&lt;=digit&nbsp;&lt;&nbsp;radix</code>.\n <p>\n If the digit is less than 10, then\n <code>'0'&nbsp;+ digit</code> is returned. Otherwise, the value\n <code>'a'&nbsp;+ digit&nbsp;-&nbsp;10</code> is returned.\n\n @param   digit   the number to convert to a character.\n @param   radix   the radix.\n @return  the <code>char</code> representation of the specified digit\n          in the specified radix.\n @see     java.lang.Character#MIN_RADIX\n @see     java.lang.Character#MAX_RADIX\n @see     java.lang.Character#digit(char, int)\n"
12767,method,java/lang/Character/getDirectionality/int," Returns the Unicode directionality property for the given\n character (Unicode code point).  Character directionality is\n used to calculate the visual ordering of text. The\n directionality value of undefined character is {@link\n #DIRECTIONALITY_UNDEFINED}.\n\n @param   codePoint the character (Unicode code point) for which\n          the directionality property is requested.\n @return the directionality property of the character.\n\n @see Character#DIRECTIONALITY_UNDEFINED DIRECTIONALITY_UNDEFINED\n @see Character#DIRECTIONALITY_LEFT_TO_RIGHT DIRECTIONALITY_LEFT_TO_RIGHT\n @see Character#DIRECTIONALITY_RIGHT_TO_LEFT DIRECTIONALITY_RIGHT_TO_LEFT\n @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC\n @see Character#DIRECTIONALITY_EUROPEAN_NUMBER DIRECTIONALITY_EUROPEAN_NUMBER\n @see Character#DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR\n @see Character#DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR\n @see Character#DIRECTIONALITY_ARABIC_NUMBER DIRECTIONALITY_ARABIC_NUMBER\n @see Character#DIRECTIONALITY_COMMON_NUMBER_SEPARATOR DIRECTIONALITY_COMMON_NUMBER_SEPARATOR\n @see Character#DIRECTIONALITY_NONSPACING_MARK DIRECTIONALITY_NONSPACING_MARK\n @see Character#DIRECTIONALITY_BOUNDARY_NEUTRAL DIRECTIONALITY_BOUNDARY_NEUTRAL\n @see Character#DIRECTIONALITY_PARAGRAPH_SEPARATOR DIRECTIONALITY_PARAGRAPH_SEPARATOR\n @see Character#DIRECTIONALITY_SEGMENT_SEPARATOR DIRECTIONALITY_SEGMENT_SEPARATOR\n @see Character#DIRECTIONALITY_WHITESPACE DIRECTIONALITY_WHITESPACE\n @see Character#DIRECTIONALITY_OTHER_NEUTRALS DIRECTIONALITY_OTHER_NEUTRALS\n @see Character#DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING\n @see Character#DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE\n @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING\n @see Character#DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE\n @see Character#DIRECTIONALITY_POP_DIRECTIONAL_FORMAT DIRECTIONALITY_POP_DIRECTIONAL_FORMAT\n @since    1.5\n"
12771,method,java/lang/Character/reverseBytes/char," Returns the value obtained by reversing the order of the bytes in the\n specified <tt>char</tt> value.\n\n @return the value obtained by reversing (or, equivalently, swapping)\n     the bytes in the specified <tt>char</tt> value.\n @since 1.5\n"
12772,method,java/lang/Character/Character/char," Constructs a newly allocated <code>Character</code> object that\n represents the specified <code>char</code> value.\n\n @param  value   the value to be represented by the \n                  <code>Character</code> object.\n"
12773,field,java/lang/Character/MIN_RADIX," The minimum radix available for conversion to and from strings.\n The constant value of this field is the smallest value permitted\n for the radix argument in radix-conversion methods such as the\n <code>digit</code> method, the <code>forDigit</code>\n method, and the <code>toString</code> method of class\n <code>Integer</code>.\n\n @see     java.lang.Character#digit(char, int)\n @see     java.lang.Character#forDigit(int, int)\n @see     java.lang.Integer#toString(int, int)\n @see     java.lang.Integer#valueOf(java.lang.String)\n"
12774,field,java/lang/Character/MAX_RADIX," The maximum radix available for conversion to and from strings.\n The constant value of this field is the largest value permitted\n for the radix argument in radix-conversion methods such as the\n <code>digit</code> method, the <code>forDigit</code>\n method, and the <code>toString</code> method of class\n <code>Integer</code>.\n\n @see     java.lang.Character#digit(char, int)\n @see     java.lang.Character#forDigit(int, int)\n @see     java.lang.Integer#toString(int, int)\n @see     java.lang.Integer#valueOf(java.lang.String)\n"
12775,field,java/lang/Character/MIN_VALUE," The constant value of this field is the smallest value of type\n <code>char</code>, <code>'&#92;u0000'</code>.\n\n @since   1.0.2\n"
12776,field,java/lang/Character/MAX_VALUE," The constant value of this field is the largest value of type\n <code>char</code>, <code>'&#92;uFFFF'</code>.\n\n @since   1.0.2\n"
12777,field,java/lang/Character/TYPE," The <code>Class</code> instance representing the primitive type\n <code>char</code>.\n\n @since   1.1\n"
12778,field,java/lang/Character/UNASSIGNED," General category "Cn" in the Unicode specification.\n @since   1.1\n"
12779,field,java/lang/Character/UPPERCASE_LETTER," General category "Lu" in the Unicode specification.\n @since   1.1\n"
12780,field,java/lang/Character/LOWERCASE_LETTER," General category "Ll" in the Unicode specification.\n @since   1.1\n"
12781,field,java/lang/Character/TITLECASE_LETTER," General category "Lt" in the Unicode specification.\n @since   1.1\n"
12782,field,java/lang/Character/MODIFIER_LETTER," General category "Lm" in the Unicode specification.\n @since   1.1\n"
12783,field,java/lang/Character/OTHER_LETTER," General category "Lo" in the Unicode specification.\n @since   1.1\n"
12784,field,java/lang/Character/NON_SPACING_MARK," General category "Mn" in the Unicode specification.\n @since   1.1\n"
12785,field,java/lang/Character/ENCLOSING_MARK," General category "Me" in the Unicode specification.\n @since   1.1\n"
12786,field,java/lang/Character/COMBINING_SPACING_MARK," General category "Mc" in the Unicode specification.\n @since   1.1\n"
12787,field,java/lang/Character/DECIMAL_DIGIT_NUMBER," General category "Nd" in the Unicode specification.\n @since   1.1\n"
12788,field,java/lang/Character/LETTER_NUMBER," General category "Nl" in the Unicode specification.\n @since   1.1\n"
12789,field,java/lang/Character/OTHER_NUMBER," General category "No" in the Unicode specification.\n @since   1.1\n"
12790,field,java/lang/Character/SPACE_SEPARATOR," General category "Zs" in the Unicode specification.\n @since   1.1\n"
12791,field,java/lang/Character/LINE_SEPARATOR," General category "Zl" in the Unicode specification.\n @since   1.1\n"
12792,field,java/lang/Character/PARAGRAPH_SEPARATOR," General category "Zp" in the Unicode specification.\n @since   1.1\n"
12793,field,java/lang/Character/CONTROL," General category "Cc" in the Unicode specification.\n @since   1.1\n"
12794,field,java/lang/Character/FORMAT," General category "Cf" in the Unicode specification.\n @since   1.1\n"
12795,field,java/lang/Character/PRIVATE_USE," General category "Co" in the Unicode specification.\n @since   1.1\n"
12796,field,java/lang/Character/SURROGATE," General category "Cs" in the Unicode specification.\n @since   1.1\n"
12797,field,java/lang/Character/DASH_PUNCTUATION," General category "Pd" in the Unicode specification.\n @since   1.1\n"
12798,field,java/lang/Character/START_PUNCTUATION," General category "Ps" in the Unicode specification.\n @since   1.1\n"
12799,field,java/lang/Character/END_PUNCTUATION," General category "Pe" in the Unicode specification.\n @since   1.1\n"
12800,field,java/lang/Character/CONNECTOR_PUNCTUATION," General category "Pc" in the Unicode specification.\n @since   1.1\n"
12801,field,java/lang/Character/OTHER_PUNCTUATION," General category "Po" in the Unicode specification.\n @since   1.1\n"
12802,field,java/lang/Character/MATH_SYMBOL," General category "Sm" in the Unicode specification.\n @since   1.1\n"
12803,field,java/lang/Character/CURRENCY_SYMBOL," General category "Sc" in the Unicode specification.\n @since   1.1\n"
12804,field,java/lang/Character/MODIFIER_SYMBOL," General category "Sk" in the Unicode specification.\n @since   1.1\n"
12805,field,java/lang/Character/OTHER_SYMBOL," General category "So" in the Unicode specification.\n @since   1.1\n"
12806,field,java/lang/Character/INITIAL_QUOTE_PUNCTUATION," General category "Pi" in the Unicode specification.\n @since   1.4\n"
12807,field,java/lang/Character/FINAL_QUOTE_PUNCTUATION," General category "Pf" in the Unicode specification.\n @since   1.4\n"
12808,field,java/lang/Character/DIRECTIONALITY_UNDEFINED," Undefined bidirectional character type. Undefined <code>char</code>\n values have undefined directionality in the Unicode specification.\n @since 1.4\n"
12812,field,java/lang/Character/DIRECTIONALITY_EUROPEAN_NUMBER," Weak bidirectional character type "EN" in the Unicode specification.\n @since 1.4\n"
12813,field,java/lang/Character/DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR," Weak bidirectional character type "ES" in the Unicode specification.\n @since 1.4\n"
12814,field,java/lang/Character/DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR," Weak bidirectional character type "ET" in the Unicode specification.\n @since 1.4\n"
12815,field,java/lang/Character/DIRECTIONALITY_ARABIC_NUMBER," Weak bidirectional character type "AN" in the Unicode specification.\n @since 1.4\n"
12816,field,java/lang/Character/DIRECTIONALITY_COMMON_NUMBER_SEPARATOR," Weak bidirectional character type "CS" in the Unicode specification.\n @since 1.4\n"
12817,field,java/lang/Character/DIRECTIONALITY_NONSPACING_MARK," Weak bidirectional character type "NSM" in the Unicode specification.\n @since 1.4\n"
12818,field,java/lang/Character/DIRECTIONALITY_BOUNDARY_NEUTRAL," Weak bidirectional character type "BN" in the Unicode specification.\n @since 1.4\n"
12819,field,java/lang/Character/DIRECTIONALITY_PARAGRAPH_SEPARATOR," Neutral bidirectional character type "B" in the Unicode specification.\n @since 1.4\n"
12820,field,java/lang/Character/DIRECTIONALITY_SEGMENT_SEPARATOR," Neutral bidirectional character type "S" in the Unicode specification.\n @since 1.4\n"
12821,field,java/lang/Character/DIRECTIONALITY_WHITESPACE," Neutral bidirectional character type "WS" in the Unicode specification.\n @since 1.4\n"
12822,field,java/lang/Character/DIRECTIONALITY_OTHER_NEUTRALS," Neutral bidirectional character type "ON" in the Unicode specification.\n @since 1.4\n"
12827,field,java/lang/Character/DIRECTIONALITY_POP_DIRECTIONAL_FORMAT," Weak bidirectional character type "PDF" in the Unicode specification.\n @since 1.4\n"
12828,field,java/lang/Character/MIN_HIGH_SURROGATE," The minimum value of a Unicode high-surrogate code unit in the\n UTF-16 encoding. A high-surrogate is also known as a\n <i>leading-surrogate</i>.\n\n @since 1.5\n"
12829,field,java/lang/Character/MAX_HIGH_SURROGATE," The maximum value of a Unicode high-surrogate code unit in the\n UTF-16 encoding. A high-surrogate is also known as a\n <i>leading-surrogate</i>.\n\n @since 1.5\n"
12830,field,java/lang/Character/MIN_LOW_SURROGATE," The minimum value of a Unicode low-surrogate code unit in the\n UTF-16 encoding. A low-surrogate is also known as a\n <i>trailing-surrogate</i>.\n\n @since 1.5\n"
12831,field,java/lang/Character/MAX_LOW_SURROGATE," The maximum value of a Unicode low-surrogate code unit in the\n UTF-16 encoding. A low-surrogate is also known as a\n <i>trailing-surrogate</i>.\n\n @since 1.5\n"
12832,field,java/lang/Character/MIN_SURROGATE," The minimum value of a Unicode surrogate code unit in the UTF-16 encoding.\n\n @since 1.5\n"
12833,field,java/lang/Character/MAX_SURROGATE," The maximum value of a Unicode surrogate code unit in the UTF-16 encoding.\n\n @since 1.5\n"
12834,field,java/lang/Character/MIN_SUPPLEMENTARY_CODE_POINT," The minimum value of a supplementary code point.\n\n @since 1.5\n"
12835,field,java/lang/Character/MIN_CODE_POINT," The minimum value of a Unicode code point.\n \n @since 1.5\n"
12836,field,java/lang/Character/MAX_CODE_POINT," The maximum value of a Unicode code point.\n\n @since 1.5\n"
12837,field,java/lang/Character/SIZE," The number of bits used to represent a <tt>char</tt> value in unsigned\n binary form.\n\n @since 1.5\n"
12841,method,java/lang/Character/Subset/toString/," Returns the name of this subset.\n"
12842,method,java/lang/Character/Subset/Character/Subset/String," Constructs a new <code>Subset</code> instance.\n\n @exception NullPointerException if name is <code>null</code>\n @param  name  The name of this subset\n"
12843,class,java/lang/Character/UnicodeBlock," A family of character subsets representing the character blocks in the\n Unicode specification. Character blocks generally define characters\n used for a specific script or purpose. A character is contained by\n at most one Unicode block.\n\n @since 1.2\n"
12845,method,java/lang/Character/UnicodeBlock/of/int," Returns the object representing the Unicode block\n containing the given character (Unicode code point), or\n <code>null</code> if the character is not a member of a\n defined block.\n\n @param   codePoint the character (Unicode code point) in question.\n @return  The <code>UnicodeBlock</code> instance representing the\n          Unicode block of which this character is a member, or\n          <code>null</code> if the character is not a member of any\n          Unicode block\n @exception IllegalArgumentException if the specified\n <code>codePoint</code> is an invalid Unicode code point.\n @see Character#isValidCodePoint(int)\n @since   1.5\n"
12846,method,java/lang/Character/UnicodeBlock/forName/String," Returns the UnicodeBlock with the given name. Block\n names are determined by The Unicode Standard. The file\n Blocks-&lt;version&gt;.txt defines blocks for a particular\n version of the standard. The {@link Character} class specifies\n the version of the standard that it supports.\n <p>\n This method accepts block names in the following forms:\n <ol>\n <li> Canonical block names as defined by the Unicode Standard.\n For example, the standard defines a "Basic Latin" block. Therefore, this\n method accepts "Basic Latin" as a valid block name. The documentation of \n each UnicodeBlock provides the canonical name.\n <li>Canonical block names with all spaces removed. For example, "BasicLatin"\n is a valid block name for the "Basic Latin" block.\n <li>The text representation of each constant UnicodeBlock identifier.\n For example, this method will return the {@link #BASIC_LATIN} block if\n provided with the "BASIC_LATIN" name. This form replaces all spaces and\n  hyphens in the canonical name with underscores.\n </ol>\n Finally, character case is ignored for all of the valid block name forms.\n For example, "BASIC_LATIN" and "basic_latin" are both valid block names.\n The en_US locale's case mapping rules are used to provide case-insensitive\n string comparisons for block name validation.\n <p>\n If the Unicode Standard changes block names, both the previous and\n current names will be accepted.\n\n @param blockName A <code>UnicodeBlock</code> name.\n @return The <code>UnicodeBlock</code> instance identified\n         by <code>blockName</code>\n @throws IllegalArgumentException if <code>blockName</code> is an\n         invalid name\n @throws NullPointerException if <code>blockName</code> is null\n @since 1.5\n"
12847,field,java/lang/Character/UnicodeBlock/BASIC_LATIN," Constant for the "Basic Latin" Unicode character block.\n @since 1.2\n"
12848,field,java/lang/Character/UnicodeBlock/LATIN_1_SUPPLEMENT," Constant for the "Latin-1 Supplement" Unicode character block.\n @since 1.2\n"
12851,field,java/lang/Character/UnicodeBlock/IPA_EXTENSIONS," Constant for the "IPA Extensions" Unicode character block.\n @since 1.2\n"
12852,field,java/lang/Character/UnicodeBlock/SPACING_MODIFIER_LETTERS," Constant for the "Spacing Modifier Letters" Unicode character block.\n @since 1.2\n"
12853,field,java/lang/Character/UnicodeBlock/COMBINING_DIACRITICAL_MARKS," Constant for the "Combining Diacritical Marks" Unicode character block.\n @since 1.2\n"
12854,field,java/lang/Character/UnicodeBlock/GREEK," Constant for the "Greek and Coptic" Unicode character block.\n <p>\n This block was previously known as the "Greek" block.\n\n @since 1.2\n"
12855,field,java/lang/Character/UnicodeBlock/CYRILLIC," Constant for the "Cyrillic" Unicode character block.\n @since 1.2\n"
12856,field,java/lang/Character/UnicodeBlock/ARMENIAN," Constant for the "Armenian" Unicode character block.\n @since 1.2\n"
12857,field,java/lang/Character/UnicodeBlock/HEBREW," Constant for the "Hebrew" Unicode character block.\n @since 1.2\n"
12858,field,java/lang/Character/UnicodeBlock/ARABIC," Constant for the "Arabic" Unicode character block.\n @since 1.2\n"
12859,field,java/lang/Character/UnicodeBlock/DEVANAGARI," Constant for the "Devanagari" Unicode character block.\n @since 1.2\n"
12860,field,java/lang/Character/UnicodeBlock/BENGALI," Constant for the "Bengali" Unicode character block.\n @since 1.2\n"
12861,field,java/lang/Character/UnicodeBlock/GURMUKHI," Constant for the "Gurmukhi" Unicode character block.\n @since 1.2\n"
12862,field,java/lang/Character/UnicodeBlock/GUJARATI," Constant for the "Gujarati" Unicode character block.\n @since 1.2\n"
12863,field,java/lang/Character/UnicodeBlock/ORIYA," Constant for the "Oriya" Unicode character block.\n @since 1.2\n"
12864,field,java/lang/Character/UnicodeBlock/TAMIL," Constant for the "Tamil" Unicode character block.\n @since 1.2\n"
12865,field,java/lang/Character/UnicodeBlock/TELUGU," Constant for the "Telugu" Unicode character block.\n @since 1.2\n"
12866,field,java/lang/Character/UnicodeBlock/KANNADA," Constant for the "Kannada" Unicode character block.\n @since 1.2\n"
12867,field,java/lang/Character/UnicodeBlock/MALAYALAM," Constant for the "Malayalam" Unicode character block.\n @since 1.2\n"
12868,field,java/lang/Character/UnicodeBlock/THAI," Constant for the "Thai" Unicode character block.\n @since 1.2\n"
12869,field,java/lang/Character/UnicodeBlock/LAO," Constant for the "Lao" Unicode character block.\n @since 1.2\n"
12870,field,java/lang/Character/UnicodeBlock/TIBETAN," Constant for the "Tibetan" Unicode character block.\n @since 1.2\n"
12871,field,java/lang/Character/UnicodeBlock/GEORGIAN," Constant for the "Georgian" Unicode character block.\n @since 1.2\n"
12872,field,java/lang/Character/UnicodeBlock/HANGUL_JAMO," Constant for the "Hangul Jamo" Unicode character block.\n @since 1.2\n"
12875,field,java/lang/Character/UnicodeBlock/GENERAL_PUNCTUATION," Constant for the "General Punctuation" Unicode character block.\n @since 1.2\n"
12877,field,java/lang/Character/UnicodeBlock/CURRENCY_SYMBOLS," Constant for the "Currency Symbols" Unicode character block.\n @since 1.2\n"
12878,field,java/lang/Character/UnicodeBlock/COMBINING_MARKS_FOR_SYMBOLS," Constant for the "Combining Diacritical Marks for Symbols" Unicode character block.\n <p>\n This block was previously known as "Combining Marks for Symbols".\n @since 1.2\n"
12879,field,java/lang/Character/UnicodeBlock/LETTERLIKE_SYMBOLS," Constant for the "Letterlike Symbols" Unicode character block.\n @since 1.2\n"
12880,field,java/lang/Character/UnicodeBlock/NUMBER_FORMS," Constant for the "Number Forms" Unicode character block.\n @since 1.2\n"
12881,field,java/lang/Character/UnicodeBlock/ARROWS," Constant for the "Arrows" Unicode character block.\n @since 1.2\n"
12882,field,java/lang/Character/UnicodeBlock/MATHEMATICAL_OPERATORS," Constant for the "Mathematical Operators" Unicode character block.\n @since 1.2\n"
12883,field,java/lang/Character/UnicodeBlock/MISCELLANEOUS_TECHNICAL," Constant for the "Miscellaneous Technical" Unicode character block.\n @since 1.2\n"
12884,field,java/lang/Character/UnicodeBlock/CONTROL_PICTURES," Constant for the "Control Pictures" Unicode character block.\n @since 1.2\n"
12885,field,java/lang/Character/UnicodeBlock/OPTICAL_CHARACTER_RECOGNITION," Constant for the "Optical Character Recognition" Unicode character block.\n @since 1.2\n"
12886,field,java/lang/Character/UnicodeBlock/ENCLOSED_ALPHANUMERICS," Constant for the "Enclosed Alphanumerics" Unicode character block.\n @since 1.2\n"
12887,field,java/lang/Character/UnicodeBlock/BOX_DRAWING," Constant for the "Box Drawing" Unicode character block.\n @since 1.2\n"
12888,field,java/lang/Character/UnicodeBlock/BLOCK_ELEMENTS," Constant for the "Block Elements" Unicode character block.\n @since 1.2\n"
12889,field,java/lang/Character/UnicodeBlock/GEOMETRIC_SHAPES," Constant for the "Geometric Shapes" Unicode character block.\n @since 1.2\n"
12890,field,java/lang/Character/UnicodeBlock/MISCELLANEOUS_SYMBOLS," Constant for the "Miscellaneous Symbols" Unicode character block.\n @since 1.2\n"
12891,field,java/lang/Character/UnicodeBlock/DINGBATS," Constant for the "Dingbats" Unicode character block.\n @since 1.2\n"
12892,field,java/lang/Character/UnicodeBlock/CJK_SYMBOLS_AND_PUNCTUATION," Constant for the "CJK Symbols and Punctuation" Unicode character block.\n @since 1.2\n"
12893,field,java/lang/Character/UnicodeBlock/HIRAGANA," Constant for the "Hiragana" Unicode character block.\n @since 1.2\n"
12894,field,java/lang/Character/UnicodeBlock/KATAKANA," Constant for the "Katakana" Unicode character block.\n @since 1.2\n"
12895,field,java/lang/Character/UnicodeBlock/BOPOMOFO," Constant for the "Bopomofo" Unicode character block.\n @since 1.2\n"
12896,field,java/lang/Character/UnicodeBlock/HANGUL_COMPATIBILITY_JAMO," Constant for the "Hangul Compatibility Jamo" Unicode character block.\n @since 1.2\n"
12897,field,java/lang/Character/UnicodeBlock/KANBUN," Constant for the "Kanbun" Unicode character block.\n @since 1.2\n"
12898,field,java/lang/Character/UnicodeBlock/ENCLOSED_CJK_LETTERS_AND_MONTHS," Constant for the "Enclosed CJK Letters and Months" Unicode character block.\n @since 1.2\n"
12899,field,java/lang/Character/UnicodeBlock/CJK_COMPATIBILITY," Constant for the "CJK Compatibility" Unicode character block.\n @since 1.2\n"
12900,field,java/lang/Character/UnicodeBlock/CJK_UNIFIED_IDEOGRAPHS," Constant for the "CJK Unified Ideographs" Unicode character block.\n @since 1.2\n"
12901,field,java/lang/Character/UnicodeBlock/HANGUL_SYLLABLES," Constant for the "Hangul Syllables" Unicode character block.\n @since 1.2\n"
12902,field,java/lang/Character/UnicodeBlock/PRIVATE_USE_AREA," Constant for the "Private Use Area" Unicode character block.\n @since 1.2\n"
12903,field,java/lang/Character/UnicodeBlock/CJK_COMPATIBILITY_IDEOGRAPHS," Constant for the "CJK Compatibility Ideographs" Unicode character block.\n @since 1.2\n"
12904,field,java/lang/Character/UnicodeBlock/ALPHABETIC_PRESENTATION_FORMS," Constant for the "Alphabetic Presentation Forms" Unicode character block.\n @since 1.2\n"
12905,field,java/lang/Character/UnicodeBlock/ARABIC_PRESENTATION_FORMS_A," Constant for the "Arabic Presentation Forms-A" Unicode character block.\n @since 1.2\n"
12906,field,java/lang/Character/UnicodeBlock/COMBINING_HALF_MARKS," Constant for the "Combining Half Marks" Unicode character block.\n @since 1.2\n"
12907,field,java/lang/Character/UnicodeBlock/CJK_COMPATIBILITY_FORMS," Constant for the "CJK Compatibility Forms" Unicode character block.\n @since 1.2\n"
12908,field,java/lang/Character/UnicodeBlock/SMALL_FORM_VARIANTS," Constant for the "Small Form Variants" Unicode character block.\n @since 1.2\n"
12909,field,java/lang/Character/UnicodeBlock/ARABIC_PRESENTATION_FORMS_B," Constant for the "Arabic Presentation Forms-B" Unicode character block.\n @since 1.2\n"
12910,field,java/lang/Character/UnicodeBlock/HALFWIDTH_AND_FULLWIDTH_FORMS," Constant for the "Halfwidth and Fullwidth Forms" Unicode character block.\n @since 1.2\n"
12911,field,java/lang/Character/UnicodeBlock/SPECIALS," Constant for the "Specials" Unicode character block.\n @since 1.2\n"
12912,field,java/lang/Character/UnicodeBlock/SURROGATES_AREA," @deprecated As of J2SE 5, use {@link #HIGH_SURROGATES},\n             {@link #HIGH_PRIVATE_USE_SURROGATES}, and\n             {@link #LOW_SURROGATES}. These new constants match \n             the block definitions of the Unicode Standard.\n             The {@link #of(char)} and {@link #of(int)} methods\n             return the new constants, not SURROGATES_AREA.\n"
12913,field,java/lang/Character/UnicodeBlock/SYRIAC," Constant for the "Syriac" Unicode character block.\n @since 1.4\n"
12914,field,java/lang/Character/UnicodeBlock/THAANA," Constant for the "Thaana" Unicode character block.\n @since 1.4\n"
12915,field,java/lang/Character/UnicodeBlock/SINHALA,"\n Constant for the "Sinhala" Unicode character block.\n @since 1.4\n"
12916,field,java/lang/Character/UnicodeBlock/MYANMAR," Constant for the "Myanmar" Unicode character block.\n @since 1.4\n"
12917,field,java/lang/Character/UnicodeBlock/ETHIOPIC," Constant for the "Ethiopic" Unicode character block.\n @since 1.4\n"
12918,field,java/lang/Character/UnicodeBlock/CHEROKEE," Constant for the "Cherokee" Unicode character block.\n @since 1.4\n"
12919,field,java/lang/Character/UnicodeBlock/UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS," Constant for the "Unified Canadian Aboriginal Syllabics" Unicode character block.\n @since 1.4\n"
12920,field,java/lang/Character/UnicodeBlock/OGHAM," Constant for the "Ogham" Unicode character block.\n @since 1.4\n"
12921,field,java/lang/Character/UnicodeBlock/RUNIC," Constant for the "Runic" Unicode character block.\n @since 1.4\n"
12922,field,java/lang/Character/UnicodeBlock/KHMER," Constant for the "Khmer" Unicode character block.\n @since 1.4\n"
12923,field,java/lang/Character/UnicodeBlock/MONGOLIAN," Constant for the "Mongolian" Unicode character block.\n @since 1.4\n"
12924,field,java/lang/Character/UnicodeBlock/BRAILLE_PATTERNS," Constant for the "Braille Patterns" Unicode character block.\n @since 1.4\n"
12925,field,java/lang/Character/UnicodeBlock/CJK_RADICALS_SUPPLEMENT," Constant for the "CJK Radicals Supplement" Unicode character block.\n @since 1.4\n"
12926,field,java/lang/Character/UnicodeBlock/KANGXI_RADICALS," Constant for the "Kangxi Radicals" Unicode character block.\n @since 1.4\n"
12927,field,java/lang/Character/UnicodeBlock/IDEOGRAPHIC_DESCRIPTION_CHARACTERS," Constant for the "Ideographic Description Characters" Unicode character block.\n @since 1.4\n"
12929,field,java/lang/Character/UnicodeBlock/CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A," Constant for the "CJK Unified Ideographs Extension A" Unicode character block.\n @since 1.4\n"
12930,field,java/lang/Character/UnicodeBlock/YI_SYLLABLES," Constant for the "Yi Syllables" Unicode character block.\n @since 1.4\n"
12931,field,java/lang/Character/UnicodeBlock/YI_RADICALS," Constant for the "Yi Radicals" Unicode character block.\n @since 1.4\n"
12932,field,java/lang/Character/UnicodeBlock/CYRILLIC_SUPPLEMENTARY," Constant for the "Cyrillic Supplementary" Unicode character block.\n @since 1.5\n"
12933,field,java/lang/Character/UnicodeBlock/TAGALOG," Constant for the "Tagalog" Unicode character block.\n @since 1.5\n"
12934,field,java/lang/Character/UnicodeBlock/HANUNOO," Constant for the "Hanunoo" Unicode character block.\n @since 1.5\n"
12935,field,java/lang/Character/UnicodeBlock/BUHID," Constant for the "Buhid" Unicode character block.\n @since 1.5\n"
12936,field,java/lang/Character/UnicodeBlock/TAGBANWA," Constant for the "Tagbanwa" Unicode character block.\n @since 1.5\n"
12937,field,java/lang/Character/UnicodeBlock/LIMBU," Constant for the "Limbu" Unicode character block.\n @since 1.5\n"
12938,field,java/lang/Character/UnicodeBlock/TAI_LE," Constant for the "Tai Le" Unicode character block.\n @since 1.5\n"
12939,field,java/lang/Character/UnicodeBlock/KHMER_SYMBOLS," Constant for the "Khmer Symbols" Unicode character block.\n @since 1.5\n"
12940,field,java/lang/Character/UnicodeBlock/PHONETIC_EXTENSIONS," Constant for the "Phonetic Extensions" Unicode character block.\n @since 1.5\n"
12941,field,java/lang/Character/UnicodeBlock/MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A," Constant for the "Miscellaneous Mathematical Symbols-A" Unicode character block.\n @since 1.5\n"
12942,field,java/lang/Character/UnicodeBlock/SUPPLEMENTAL_ARROWS_A," Constant for the "Supplemental Arrows-A" Unicode character block.\n @since 1.5\n"
12943,field,java/lang/Character/UnicodeBlock/SUPPLEMENTAL_ARROWS_B," Constant for the "Supplemental Arrows-B" Unicode character block.\n @since 1.5\n"
12944,field,java/lang/Character/UnicodeBlock/MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B," Constant for the "Miscellaneous Mathematical Symbols-B" Unicode character block.\n @since 1.5\n"
12945,field,java/lang/Character/UnicodeBlock/SUPPLEMENTAL_MATHEMATICAL_OPERATORS," Constant for the "Supplemental Mathematical Operators" Unicode character block.\n @since 1.5\n"
12946,field,java/lang/Character/UnicodeBlock/MISCELLANEOUS_SYMBOLS_AND_ARROWS," Constant for the "Miscellaneous Symbols and Arrows" Unicode character block.\n @since 1.5\n"
12947,field,java/lang/Character/UnicodeBlock/KATAKANA_PHONETIC_EXTENSIONS," Constant for the "Katakana Phonetic Extensions" Unicode character block.\n @since 1.5\n"
12948,field,java/lang/Character/UnicodeBlock/YIJING_HEXAGRAM_SYMBOLS," Constant for the "Yijing Hexagram Symbols" Unicode character block.\n @since 1.5\n"
12949,field,java/lang/Character/UnicodeBlock/VARIATION_SELECTORS," Constant for the "Variation Selectors" Unicode character block.\n @since 1.5\n"
12950,field,java/lang/Character/UnicodeBlock/LINEAR_B_SYLLABARY," Constant for the "Linear B Syllabary" Unicode character block.\n @since 1.5\n"
12951,field,java/lang/Character/UnicodeBlock/LINEAR_B_IDEOGRAMS," Constant for the "Linear B Ideograms" Unicode character block.\n @since 1.5\n"
12952,field,java/lang/Character/UnicodeBlock/AEGEAN_NUMBERS," Constant for the "Aegean Numbers" Unicode character block.\n @since 1.5\n"
12953,field,java/lang/Character/UnicodeBlock/OLD_ITALIC," Constant for the "Old Italic" Unicode character block.\n @since 1.5\n"
12954,field,java/lang/Character/UnicodeBlock/GOTHIC," Constant for the "Gothic" Unicode character block.\n @since 1.5\n"
12955,field,java/lang/Character/UnicodeBlock/UGARITIC," Constant for the "Ugaritic" Unicode character block.\n @since 1.5\n"
12956,field,java/lang/Character/UnicodeBlock/DESERET," Constant for the "Deseret" Unicode character block.\n @since 1.5\n"
12957,field,java/lang/Character/UnicodeBlock/SHAVIAN," Constant for the "Shavian" Unicode character block.\n @since 1.5\n"
12958,field,java/lang/Character/UnicodeBlock/OSMANYA," Constant for the "Osmanya" Unicode character block.\n @since 1.5\n"
12959,field,java/lang/Character/UnicodeBlock/CYPRIOT_SYLLABARY," Constant for the "Cypriot Syllabary" Unicode character block.\n @since 1.5\n"
12960,field,java/lang/Character/UnicodeBlock/BYZANTINE_MUSICAL_SYMBOLS," Constant for the "Byzantine Musical Symbols" Unicode character block.\n @since 1.5\n"
12961,field,java/lang/Character/UnicodeBlock/MUSICAL_SYMBOLS," Constant for the "Musical Symbols" Unicode character block.\n @since 1.5\n"
12962,field,java/lang/Character/UnicodeBlock/TAI_XUAN_JING_SYMBOLS," Constant for the "Tai Xuan Jing Symbols" Unicode character block.\n @since 1.5\n"
12963,field,java/lang/Character/UnicodeBlock/MATHEMATICAL_ALPHANUMERIC_SYMBOLS," Constant for the "Mathematical Alphanumeric Symbols" Unicode character block.\n @since 1.5\n"
12964,field,java/lang/Character/UnicodeBlock/CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B," Constant for the "CJK Unified Ideographs Extension B" Unicode character block.\n @since 1.5\n"
12965,field,java/lang/Character/UnicodeBlock/CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT," Constant for the "CJK Compatibility Ideographs Supplement" Unicode character block.\n @since 1.5\n"
12966,field,java/lang/Character/UnicodeBlock/TAGS," Constant for the "Tags" Unicode character block.\n @since 1.5\n"
12967,field,java/lang/Character/UnicodeBlock/VARIATION_SELECTORS_SUPPLEMENT," Constant for the "Variation Selectors Supplement" Unicode character block.\n @since 1.5\n"
12968,field,java/lang/Character/UnicodeBlock/SUPPLEMENTARY_PRIVATE_USE_AREA_A," Constant for the "Supplementary Private Use Area-A" Unicode character block.\n @since 1.5\n"
12969,field,java/lang/Character/UnicodeBlock/SUPPLEMENTARY_PRIVATE_USE_AREA_B," Constant for the "Supplementary Private Use Area-B" Unicode character block.\n @since 1.5\n"
12970,field,java/lang/Character/UnicodeBlock/HIGH_SURROGATES," Constant for the "High Surrogates" Unicode character block.\n This block represents codepoint values in the high surrogate\n range: 0xD800 through 0xDB7F\n\n @since 1.5\n"
12971,field,java/lang/Character/UnicodeBlock/HIGH_PRIVATE_USE_SURROGATES," Constant for the "High Private Use Surrogates" Unicode character block.\n This block represents codepoint values in the high surrogate\n range: 0xDB80 through 0xDBFF\n\n @since 1.5\n"
12972,field,java/lang/Character/UnicodeBlock/LOW_SURROGATES," Constant for the "Low Surrogates" Unicode character block.\n This block represents codepoint values in the high surrogate\n range: 0xDC00 through 0xDFFF\n\n @since 1.5\n"
12974,method,java/lang/CharSequence/length/," Returns the length of this character sequence.  The length is the number\n of 16-bit <code>char</code>s in the sequence.</p>\n\n @return  the number of <code>char</code>s in this sequence\n"
12975,method,java/lang/CharSequence/charAt/int," Returns the <code>char</code> value at the specified index.  An index ranges from zero\n to <tt>length() - 1</tt>.  The first <code>char</code> value of the sequence is at\n index zero, the next at index one, and so on, as for array\n indexing. </p>\n\n <p>If the <code>char</code> value specified by the index is a\n <a href="Character.html#unicode">surrogate</a>, the surrogate\n value is returned.\n\n @param   index   the index of the <code>char</code> value to be returned\n\n @return  the specified <code>char</code> value\n\n @throws  IndexOutOfBoundsException\n          if the <tt>index</tt> argument is negative or not less than\n          <tt>length()</tt>\n"
12976,method,java/lang/CharSequence/subSequence/int;int," Returns a new <code>CharSequence</code> that is a subsequence of this sequence.\n The subsequence starts with the <code>char</code> value at the specified index and\n ends with the <code>char</code> value at index <tt>end - 1</tt>.  The length\n (in <code>char</code>s) of the\n returned sequence is <tt>end - start</tt>, so if <tt>start == end</tt>\n then an empty sequence is returned. </p>\n \n @param   start   the start index, inclusive\n @param   end     the end index, exclusive\n\n @return  the specified subsequence\n\n @throws  IndexOutOfBoundsException\n          if <tt>start</tt> or <tt>end</tt> are negative,\n          if <tt>end</tt> is greater than <tt>length()</tt>,\n          or if <tt>start</tt> is greater than <tt>end</tt>\n"
12977,method,java/lang/CharSequence/toString/," Returns a string containing the characters in this sequence in the same\n order as this sequence.  The length of the string will be the length of\n this sequence. </p>\n\n @return  a string consisting of exactly this sequence of characters\n"
12983,method,java/lang/Byte/valueOf/String;int," Returns a <code>Byte</code> object holding the value\n extracted from the specified <code>String</code> when parsed\n with the radix given by the second argument. The first argument\n is interpreted as representing a signed <code>byte</code> in\n the radix specified by the second argument, exactly as if the\n argument were given to the {@link #parseByte(java.lang.String,\n int)} method. The result is a <code>Byte</code> object that\n represents the <code>byte</code> value specified by the string.\n <p> In other words, this method returns a <code>Byte</code> object\n equal to the value of:\n\n <blockquote><code>\n new Byte(Byte.parseByte(s, radix))\n </code></blockquote>\n\n @param s		the string to be parsed\n @param radix 	the radix to be used in interpreting <code>s</code>\n @return 		a <code>Byte</code> object holding the value \n 			represented by the string argument in the \n			specified radix.\n @exception	NumberFormatException If the <code>String</code> does \n			not contain a parsable <code>byte</code>.\n"
12984,method,java/lang/Byte/valueOf/String," Returns a <code>Byte</code> object holding the value\n given by the specified <code>String</code>. The argument is\n interpreted as representing a signed decimal <code>byte</code>,\n exactly as if the argument were given to the {@link\n #parseByte(java.lang.String)} method. The result is a\n <code>Byte</code> object that represents the <code>byte</code>\n value specified by the string.  <p> In other words, this method\n returns a <code>Byte</code> object equal to the value of:\n\n <blockquote><code>\n new Byte(Byte.parseByte(s))\n </code></blockquote>\n\n @param s		the string to be parsed\n @return 		a <code>Byte</code> object holding the value\n 			represented by the string argument\n @exception	NumberFormatException If the <code>String</code> does\n			not contain a parsable <code>byte</code>.\n"
12986,method,java/lang/Byte/byteValue/," Returns the value of this <code>Byte</code> as a\n <code>byte</code>.\n"
12987,method,java/lang/Byte/shortValue/," Returns the value of this <code>Byte</code> as a\n <code>short</code>.\n"
12988,method,java/lang/Byte/intValue/," Returns the value of this <code>Byte</code> as an\n <code>int</code>.\n"
12989,method,java/lang/Byte/longValue/," Returns the value of this <code>Byte</code> as a\n <code>long</code>.\n"
12990,method,java/lang/Byte/floatValue/," Returns the value of this <code>Byte</code> as a\n <code>float</code>.\n"
12991,method,java/lang/Byte/doubleValue/," Returns the value of this <code>Byte</code> as a\n <code>double</code>.\n"
12992,method,java/lang/Byte/toString/," Returns a <code>String</code> object representing this\n <code>Byte</code>'s value.  The value is converted to signed\n decimal representation and returned as a string, exactly as if\n the <code>byte</code> value were given as an argument to the\n {@link java.lang.Byte#toString(byte)} method.\n\n @return  a string representation of the value of this object in\n          base&nbsp;10.\n"
12993,method,java/lang/Byte/hashCode/," Returns a hash code for this <code>Byte</code>.\n"
12995,method,java/lang/Byte/compareTo/Byte," Compares two <code>Byte</code> objects numerically.\n\n @param   anotherByte   the <code>Byte</code> to be compared.\n @return	the value <code>0</code> if this <code>Byte</code> is\n 		equal to the argument <code>Byte</code>; a value less than\n 		<code>0</code> if this <code>Byte</code> is numerically less\n 		than the argument <code>Byte</code>; and a value greater than\n 		 <code>0</code> if this <code>Byte</code> is numerically\n 		 greater than the argument <code>Byte</code> (signed\n 		 comparison).\n @since   1.2\n"
12996,method,java/lang/Byte/Byte/byte," Constructs a newly allocated <code>Byte</code> object that\n represents the specified <code>byte</code> value.\n\n @param value	the value to be represented by the \n			<code>Byte</code>.\n"
12997,method,java/lang/Byte/Byte/String," Constructs a newly allocated <code>Byte</code> object that\n represents the <code>byte</code> value indicated by the\n <code>String</code> parameter. The string is converted to a\n <code>byte</code> value in exactly the manner used by the\n <code>parseByte</code> method for radix 10.\n\n @param s		the <code>String</code> to be converted to a \n			<code>Byte</code>\n @exception	NumberFormatException If the <code>String</code> \n			does not contain a parsable <code>byte</code>.\n @see        java.lang.Byte#parseByte(java.lang.String, int)\n"
12998,field,java/lang/Byte/MIN_VALUE," A constant holding the minimum value a <code>byte</code> can\n have, -2<sup>7</sup>.\n"
12999,field,java/lang/Byte/MAX_VALUE," A constant holding the maximum value a <code>byte</code> can\n have, 2<sup>7</sup>-1.\n"
13000,field,java/lang/Byte/TYPE," The <code>Class</code> instance representing the primitive type\n <code>byte</code>.\n"
13001,field,java/lang/Byte/SIZE," The number of bits used to represent a <tt>byte</tt> value in two's\n complement binary form.\n\n @since 1.5\n"
13003,method,java/lang/Boolean/parseBoolean/String," Parses the string argument as a boolean.  The <code>boolean</code> \n returned represents the value <code>true</code> if the string argument \n is not <code>null</code> and is equal, ignoring case, to the string \n {@code "true"}. <p>\n Example: {@code Boolean.parseBoolean("True")} returns <tt>true</tt>.<br>\n Example: {@code Boolean.parseBoolean("yes")} returns <tt>false</tt>.\n\n @param      s   the <code>String</code> containing the boolean\n                 representation to be parsed\n @return     the boolean represented by the string argument\n @since 1.5\n"
13004,method,java/lang/Boolean/booleanValue/," Returns the value of this <tt>Boolean</tt> object as a boolean \n primitive.\n\n @return  the primitive <code>boolean</code> value of this object.\n"
13006,method,java/lang/Boolean/valueOf/String," Returns a <code>Boolean</code> with a value represented by the\n specified string.  The <code>Boolean</code> returned represents a\n true value if the string argument is not <code>null</code>\n and is equal, ignoring case, to the string {@code "true"}.\n\n @param   s   a string.\n @return  the <code>Boolean</code> value represented by the string.\n"
13007,method,java/lang/Boolean/toString/boolean," Returns a <tt>String</tt> object representing the specified\n boolean.  If the specified boolean is <code>true</code>, then\n the string {@code "true"} will be returned, otherwise the\n string {@code "false"} will be returned.\n\n @param b	the boolean to be converted\n @return the string representation of the specified <code>boolean</code>\n @since 1.4\n"
13008,method,java/lang/Boolean/toString/," Returns a <tt>String</tt> object representing this Boolean's\n value.  If this object represents the value <code>true</code>,\n a string equal to {@code "true"} is returned. Otherwise, a\n string equal to {@code "false"} is returned.\n\n @return  a string representation of this object. \n"
13009,method,java/lang/Boolean/hashCode/," Returns a hash code for this <tt>Boolean</tt> object.\n\n @return  the integer <tt>1231</tt> if this object represents \n <tt>true</tt>; returns the integer <tt>1237</tt> if this \n object represents <tt>false</tt>. \n"
13012,method,java/lang/Boolean/compareTo/Boolean," Compares this <tt>Boolean</tt> instance with another.\n\n @param   b the <tt>Boolean</tt> instance to be compared\n @return  zero if this object represents the same boolean value as the\n          argument; a positive value if this object represents true\n          and the argument represents false; and a negative value if\n          this object represents false and the argument represents true\n @throws  NullPointerException if the argument is <tt>null</tt>\n @see     Comparable\n @since  1.5\n"
13014,method,java/lang/Boolean/Boolean/String," Allocates a <code>Boolean</code> object representing the value \n <code>true</code> if the string argument is not <code>null</code> \n and is equal, ignoring case, to the string {@code "true"}. \n Otherwise, allocate a <code>Boolean</code> object representing the \n value <code>false</code>. Examples:<p>\n {@code new Boolean("True")} produces a <tt>Boolean</tt> object \n that represents <tt>true</tt>.<br>\n {@code new Boolean("yes")} produces a <tt>Boolean</tt> object \n that represents <tt>false</tt>.\n\n @param   s   the string to be converted to a <code>Boolean</code>.\n"
13015,field,java/lang/Boolean/TRUE,"\n The <code>Boolean</code> object corresponding to the primitive \n value <code>true</code>. \n"
13016,field,java/lang/Boolean/FALSE,"\n The <code>Boolean</code> object corresponding to the primitive \n value <code>false</code>. \n"
13017,field,java/lang/Boolean/TYPE," The Class object representing the primitive type boolean.\n\n @since   JDK1.1\n"
13019,method,java/lang/AssertionError/AssertionError/," Constructs an AssertionError with no detail message.\n"
13021,method,java/lang/AssertionError/AssertionError/boolean," Constructs an AssertionError with its detail message derived\n from the specified <code>boolean</code>, which is converted to\n a string as defined in <i>The Java Language Specification,\n Second Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13022,method,java/lang/AssertionError/AssertionError/char," Constructs an AssertionError with its detail message derived\n from the specified <code>char</code>, which is converted to a\n string as defined in <i>The Java Language Specification, Second\n Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13023,method,java/lang/AssertionError/AssertionError/int," Constructs an AssertionError with its detail message derived\n from the specified <code>int</code>, which is converted to a\n string as defined in <i>The Java Language Specification, Second\n Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13024,method,java/lang/AssertionError/AssertionError/long," Constructs an AssertionError with its detail message derived\n from the specified <code>long</code>, which is converted to a\n string as defined in <i>The Java Language Specification, Second\n Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13025,method,java/lang/AssertionError/AssertionError/float," Constructs an AssertionError with its detail message derived\n from the specified <code>float</code>, which is converted to a\n string as defined in <i>The Java Language Specification, Second\n Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13026,method,java/lang/AssertionError/AssertionError/double," Constructs an AssertionError with its detail message derived\n from the specified <code>double</code>, which is converted to a\n string as defined in <i>The Java Language Specification, Second\n Edition</i>, Section 15.18.1.1.\n\n @param detailMessage value to be used in constructing detail message\n"
13027,class,java/lang/ArrayStoreException," Thrown to indicate that an attempt has been made to store the \n wrong type of object into an array of objects. For example, the \n following code generates an <code>ArrayStoreException</code>: \n <p><blockquote><pre>\n     Object x[] = new String[3];\n     x[0] = new Integer(0);\n </pre></blockquote>\n\n @author  unascribed\n @version 1.13, 03/23/10\n @since   JDK1.0\n"
13028,method,java/lang/ArrayStoreException/ArrayStoreException/," Constructs an <code>ArrayStoreException</code> with no detail message. \n"
13029,method,java/lang/ArrayStoreException/ArrayStoreException/String," Constructs an <code>ArrayStoreException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
13030,class,java/lang/ArrayIndexOutOfBoundsException," Thrown to indicate that an array has been accessed with an \n illegal index. The index is either negative or greater than or \n equal to the size of the array. \n\n @author  unascribed\n @version 1.23, 03/23/10\n @since   JDK1.0\n"
13031,method,java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException/," Constructs an <code>ArrayIndexOutOfBoundsException</code> with no \n detail message. \n"
13032,method,java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException/int," Constructs a new <code>ArrayIndexOutOfBoundsException</code> \n class with an argument indicating the illegal index. \n\n @param   index   the illegal index.\n"
13033,method,java/lang/ArrayIndexOutOfBoundsException/ArrayIndexOutOfBoundsException/String," Constructs an <code>ArrayIndexOutOfBoundsException</code> class \n with the specified detail message. \n\n @param   s   the detail message.\n"
13035,method,java/lang/ArithmeticException/ArithmeticException/," Constructs an <code>ArithmeticException</code> with no detail \n message. \n"
13036,method,java/lang/ArithmeticException/ArithmeticException/String," Constructs an <code>ArithmeticException</code> with the specified \n detail message. \n\n @param   s   the detail message.\n"
13042,method,java/lang/AbstractMethodError/AbstractMethodError/," Constructs an <code>AbstractMethodError</code> with no detail  message.\n"
13043,method,java/lang/AbstractMethodError/AbstractMethodError/String," Constructs an <code>AbstractMethodError</code> with the specified\n detail message.\n\n @param   s   the detail message.\n"
13045,method,java/lang/ref/WeakReference/WeakReference/Object," Creates a new weak reference that refers to the given object.  The new\n reference is not registered with any queue.\n\n @param referent object the new weak reference will refer to\n"
13048,method,java/lang/ref/SoftReference/get/," Returns this reference object's referent.  If this reference object has\n been cleared, either by the program or by the garbage collector, then\n this method returns <code>null</code>.\n\n @return   The object to which this reference refers, or\n           <code>null</code> if this reference object has been cleared\n"
13049,method,java/lang/ref/SoftReference/SoftReference/Object," Creates a new soft reference that refers to the given object.  The new\n reference is not registered with any queue.\n\n @param referent object the new soft reference will refer to\n"
13052,method,java/lang/ref/ReferenceQueue/poll/," Polls this queue to see if a reference object is available.  If one is\n available without further delay then it is removed from the queue and\n returned.  Otherwise this method immediately returns <tt>null</tt>.\n\n @return  A reference object, if one was immediately available,\n          otherwise <code>null</code>\n"
13054,method,java/lang/ref/ReferenceQueue/remove/," Removes the next reference object in this queue, blocking until one\n becomes available.\n\n @return A reference object, blocking until one becomes available\n @throws  InterruptedException  If the wait is interrupted\n"
13055,method,java/lang/ref/ReferenceQueue/ReferenceQueue/," Constructs a new reference-object queue.\n"
13057,method,java/lang/ref/Reference/get/," Returns this reference object's referent.  If this reference object has\n been cleared, either by the program or by the garbage collector, then\n this method returns <code>null</code>.\n\n @return	 The object to which this reference refers, or\n		 <code>null</code> if this reference object has been cleared\n"
13062,method,java/lang/ref/PhantomReference/get/," Returns this reference object's referent.  Because the referent of a\n phantom reference is always inaccessible, this method always returns\n <code>null</code>.\n\n @return  <code>null</code>\n"
13065,method,java/lang/annotation/Target/value/,""
13066,class,java/lang/annotation/RetentionPolicy," Annotation retention policy.  The constants of this enumerated type\n describe the various policies for retaining annotations.  They are used\n in conjunction with the {@link Retention} meta-annotation type to specify\n how long annotations are to be retained.\n\n @author  Joshua Bloch\n @since 1.5\n"
13067,method,java/lang/annotation/RetentionPolicy/values/,""
13068,method,java/lang/annotation/RetentionPolicy/valueOf/String,""
13069,field,java/lang/annotation/RetentionPolicy/SOURCE," Annotations are to be discarded by the compiler.\n"
13070,field,java/lang/annotation/RetentionPolicy/CLASS," Annotations are to be recorded in the class file by the compiler\n but need not be retained by the VM at run time.  This is the default\n behavior.\n"
13073,method,java/lang/annotation/Retention/value/,""
13076,method,java/lang/annotation/IncompleteAnnotationException/annotationType/," Returns the Class object for the annotation type with the\n missing element.\n\n @return the Class object for the annotation type with the\n     missing element\n"
13077,method,java/lang/annotation/IncompleteAnnotationException/elementName/," Returns the name of the missing element.\n\n @return the name of the missing element\n"
13078,method,java/lang/annotation/IncompleteAnnotationException/IncompleteAnnotationException/Class;String," Constructs an IncompleteAnnotationException to indicate that\n the named element was missing from the specified annotation type.\n\n @param annotationType the Class object for the annotation type\n @param elementName the name of the missing element\n"
13079,class,java/lang/annotation/ElementType," A program element type.  The constants of this enumerated type\n provide a simple classification of the declared elements in a\n Java program.\n\n <p>These constants are used with the {@link Target} meta-annotation type\n to specify where it is legal to use an annotation type.\n\n @author  Joshua Bloch\n @since 1.5\n"
13080,method,java/lang/annotation/ElementType/values/,""
13081,method,java/lang/annotation/ElementType/valueOf/String,""
13082,field,java/lang/annotation/ElementType/TYPE,"Class, interface (including annotation type), or enum declaration "
13083,field,java/lang/annotation/ElementType/FIELD,"Field declaration (includes enum constants) "
13084,field,java/lang/annotation/ElementType/METHOD,"Method declaration "
13085,field,java/lang/annotation/ElementType/PARAMETER,"Parameter declaration "
13086,field,java/lang/annotation/ElementType/CONSTRUCTOR,"Constructor declaration "
13087,field,java/lang/annotation/ElementType/LOCAL_VARIABLE,"Local variable declaration "
13088,field,java/lang/annotation/ElementType/ANNOTATION_TYPE,"Annotation type declaration "
13089,field,java/lang/annotation/ElementType/PACKAGE,"Package declaration "
13092,method,java/lang/annotation/AnnotationTypeMismatchException/element/," Returns the <tt>Method</tt> object for the incorrectly typed element.\n\n @return the <tt>Method</tt> object for the incorrectly typed element\n"
13095,class,java/lang/annotation/AnnotationFormatError," Thrown when the annotation parser attempts to read an annotation\n from a class file and determines that the annotation is malformed.\n\n @author  Josh Bloch\n @since   1.5\n"
13096,method,java/lang/annotation/AnnotationFormatError/AnnotationFormatError/String," Constructs a new <tt>AnnotationFormatError</tt> with the specified\n detail message. \n\n @param   message   the detail message.\n"
13098,method,java/lang/annotation/AnnotationFormatError/AnnotationFormatError/Throwable," Constructs a new <tt>AnnotationFormatError</tt> with the specified\n cause and a detail message of\n <tt>(cause == null ? null : cause.toString())</tt> (which\n typically contains the class and detail message of <tt>cause</tt>).\n\n @param  cause the cause (A <tt>null</tt> value is permitted, and\n     indicates that the cause is nonexistent or unknown.)\n"
13103,method,java/lang/annotation/Annotation/annotationType/," Returns the annotation type of this annotation.\n"
13110,method,java/lang/reflect/UndeclaredThrowableException/UndeclaredThrowableException/Throwable," Constructs an <code>UndeclaredThrowableException</code> with the\n specified <code>Throwable</code>.\n\n @param	undeclaredThrowable the undeclared checked exception\n		that was thrown\n"
13111,method,java/lang/reflect/UndeclaredThrowableException/UndeclaredThrowableException/Throwable;String," Constructs an <code>UndeclaredThrowableException</code> with the\n specified <code>Throwable</code> and a detail message.\n\n @param	undeclaredThrowable the undeclared checked exception\n		that was thrown\n @param	s the detail message\n"
13114,method,java/lang/reflect/TypeVariable/getGenericDeclaration/," Returns the <tt>GenericDeclaration</tt> object representing the \n generic declaration declared this type variable.\n\n @return the generic declaration declared for this type variable.\n\n @since 1.5\n"
13115,method,java/lang/reflect/TypeVariable/getName/," Returns the name of this type variable, as it occurs in the source code.\n\n @return the name of this type variable, as it appears in the source code\n"
13118,method,java/lang/reflect/ReflectPermission/ReflectPermission/String," Constructs a ReflectPermission with the specified name.\n\n @param name the name of the ReflectPermission\n\n @throws NullPointerException if <code>name</code> is <code>null</code>.\n @throws IllegalArgumentException if <code>name</code> is empty.\n"
13129,method,java/lang/reflect/ParameterizedType/getRawType/," Returns the <tt>Type</tt> object representing the class or interface\n that declared this type.\n\n @return the <tt>Type</tt> object representing the class or interface\n     that declared this type\n @since 1.5\n"
13130,method,java/lang/reflect/ParameterizedType/getOwnerType/," Returns a <tt>Type</tt> object representing the type that this type\n is a member of.  For example, if this type is {@code O<T>.I<S>},\n return a representation of {@code O<T>}.\n\n <p>If this type is a top-level type, <tt>null</tt> is returned.\n\n @return a <tt>Type</tt> object representing the type that \n     this type is a member of. If this type is a top-level type, \n     <tt>null</tt> is returned\n @throws <tt>TypeNotPresentException</tt> if the owner type\n     refers to a non-existent type declaration\n @throws <tt>MalformedParameterizedTypeException</tt> if the owner type\n     refers to a parameterized type that cannot be instantiated \n     for any reason\n @since 1.5\n"
13131,class,java/lang/reflect/Modifier," The Modifier class provides <code>static</code> methods and\n constants to decode class and member access modifiers.  The sets of\n modifiers are represented as integers with distinct bit positions\n representing different modifiers.  The values for the constants\n representing the modifiers are taken from <a\n href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/VMSpecTOC.doc.html"><i>The\n Java</i><sup><small>TM</small></sup> <i>Virtual Machine Specification, Second\n edition</i></a> tables \n <a href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#75734">4.1</a>,\n <a href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#88358">4.4</a>,\n <a href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#75568">4.5</a>, and \n <a href="http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html#88478">4.7</a>.\n\n @see Class#getModifiers()\n @see Member#getModifiers()\n\n @author Nakul Saraiya\n @author Kenneth Russell\n"
13132,method,java/lang/reflect/Modifier/isPublic/int," Return <tt>true</tt> if the integer argument includes the\n <tt>public</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>public</tt> modifier; <tt>false</tt> otherwise.\n"
13133,method,java/lang/reflect/Modifier/isPrivate/int," Return <tt>true</tt> if the integer argument includes the\n <tt>private</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>private</tt> modifier; <tt>false</tt> otherwise.\n"
13134,method,java/lang/reflect/Modifier/isProtected/int," Return <tt>true</tt> if the integer argument includes the\n <tt>protected</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>protected</tt> modifier; <tt>false</tt> otherwise.\n"
13135,method,java/lang/reflect/Modifier/isStatic/int," Return <tt>true</tt> if the integer argument includes the\n <tt>static</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>static</tt> modifier; <tt>false</tt> otherwise.\n"
13136,method,java/lang/reflect/Modifier/isFinal/int," Return <tt>true</tt> if the integer argument includes the\n <tt>final</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>final</tt> modifier; <tt>false</tt> otherwise.\n"
13138,method,java/lang/reflect/Modifier/isVolatile/int," Return <tt>true</tt> if the integer argument includes the\n <tt>volatile</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>volatile</tt> modifier; <tt>false</tt> otherwise.\n"
13139,method,java/lang/reflect/Modifier/isTransient/int," Return <tt>true</tt> if the integer argument includes the\n <tt>transient</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>transient</tt> modifier; <tt>false</tt> otherwise.\n"
13140,method,java/lang/reflect/Modifier/isNative/int," Return <tt>true</tt> if the integer argument includes the\n <tt>native</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>native</tt> modifier; <tt>false</tt> otherwise.\n"
13141,method,java/lang/reflect/Modifier/isInterface/int," Return <tt>true</tt> if the integer argument includes the\n <tt>interface</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>interface</tt> modifier; <tt>false</tt> otherwise.\n"
13142,method,java/lang/reflect/Modifier/isAbstract/int," Return <tt>true</tt> if the integer argument includes the\n <tt>abstract</tt> modifier, <tt>false</tt> otherwise.\n\n @param 	mod a set of modifiers\n @return <tt>true</tt> if <code>mod</code> includes the\n <tt>abstract</tt> modifier; <tt>false</tt> otherwise.\n"
13145,method,java/lang/reflect/Modifier/Modifier/,""
13146,field,java/lang/reflect/Modifier/PUBLIC," The <code>int</code> value representing the <code>public</code> \n modifier.\n"
13147,field,java/lang/reflect/Modifier/PRIVATE," The <code>int</code> value representing the <code>private</code> \n modifier.\n"
13148,field,java/lang/reflect/Modifier/PROTECTED," The <code>int</code> value representing the <code>protected</code> \n modifier.\n"
13149,field,java/lang/reflect/Modifier/STATIC," The <code>int</code> value representing the <code>static</code> \n modifier.\n"
13150,field,java/lang/reflect/Modifier/FINAL," The <code>int</code> value representing the <code>final</code> \n modifier.\n"
13152,field,java/lang/reflect/Modifier/VOLATILE," The <code>int</code> value representing the <code>volatile</code> \n modifier.\n"
13153,field,java/lang/reflect/Modifier/TRANSIENT," The <code>int</code> value representing the <code>transient</code> \n modifier.\n"
13154,field,java/lang/reflect/Modifier/NATIVE," The <code>int</code> value representing the <code>native</code> \n modifier.\n"
13155,field,java/lang/reflect/Modifier/INTERFACE," The <code>int</code> value representing the <code>interface</code> \n modifier.\n"
13156,field,java/lang/reflect/Modifier/ABSTRACT," The <code>int</code> value representing the <code>abstract</code> \n modifier.\n"
13159,method,java/lang/reflect/Method/getDeclaringClass/," Returns the <code>Class</code> object representing the class or interface\n that declares the method represented by this <code>Method</code> object.\n"
13160,method,java/lang/reflect/Method/getName/," Returns the name of the method represented by this <code>Method</code> \n object, as a <code>String</code>.\n"
13162,method,java/lang/reflect/Method/getTypeParameters/," Returns an array of <tt>TypeVariable</tt> objects that represent the\n type variables declared by the generic declaration represented by this\n <tt>GenericDeclaration</tt> object, in declaration order.  Returns an\n array of length 0 if the underlying generic declaration declares no type\n variables.\n\n @return an array of <tt>TypeVariable</tt> objects that represent\n     the type variables declared by this generic declaration\n @throws GenericSignatureFormatError if the generic\n     signature of this generic declaration does not conform to\n     the format specified in the Java Virtual Machine Specification,\n     3rd edition\n @since 1.5\n"
13163,method,java/lang/reflect/Method/getReturnType/," Returns a <code>Class</code> object that represents the formal return type\n of the method represented by this <code>Method</code> object.\n \n @return the return type for the method this object represents\n"
13165,method,java/lang/reflect/Method/getParameterTypes/," Returns an array of <code>Class</code> objects that represent the formal\n parameter types, in declaration order, of the method\n represented by this <code>Method</code> object.  Returns an array of length\n 0 if the underlying method takes no parameters.\n \n @return the parameter types for the method this object\n represents\n"
13167,method,java/lang/reflect/Method/getExceptionTypes/," Returns an array of <code>Class</code> objects that represent \n the types of the exceptions declared to be thrown\n by the underlying method\n represented by this <code>Method</code> object.  Returns an array of length\n 0 if the method declares no exceptions in its <code>throws</code> clause.\n \n @return the exception types declared as being thrown by the\n method this object represents\n"
13169,method,java/lang/reflect/Method/equals/Object," Compares this <code>Method</code> against the specified object.  Returns\n true if the objects are the same.  Two <code>Methods</code> are the same if\n they were declared by the same class and have the same name\n and formal parameter types and return type.\n"
13170,method,java/lang/reflect/Method/hashCode/," Returns a hashcode for this <code>Method</code>.  The hashcode is computed\n as the exclusive-or of the hashcodes for the underlying\n method's declaring class name and the method's name.\n"
13178,method,java/lang/reflect/Method/getDeclaredAnnotations/," @since 1.5\n"
13179,method,java/lang/reflect/Method/getDefaultValue/," Returns the default value for the annotation member represented by\n this <tt>Method</tt> instance.  If the member is of a primitive type,\n an instance of the corresponding wrapper type is returned. Returns\n null if no default is associated with the member, or if the method\n instance does not represent a declared member of an annotation type.\n\n @return the default value for the annotation member represented\n     by this <tt>Method</tt> instance.\n @throws TypeNotPresentException if the annotation is of type\n     {@link Class} and no definition can be found for the\n     default class value.\n @since  1.5\n"
13181,interface,java/lang/reflect/Member," Member is an interface that reflects identifying information about\n a single member (a field or a method) or a constructor.\n\n @see	java.lang.Class\n @see	Field\n @see	Method\n @see	Constructor\n\n @author Nakul Saraiya\n"
13182,method,java/lang/reflect/Member/getDeclaringClass/," Returns the Class object representing the class or interface\n that declares the member or constructor represented by this Member.\n\n @return an object representing the declaring class of the\n underlying member\n"
13183,method,java/lang/reflect/Member/getName/," Returns the simple name of the underlying member or constructor\n represented by this Member.\n \n @return the simple name of the underlying member\n"
13188,class,java/lang/reflect/MalformedParameterizedTypeException," Thrown when a semantically malformed parameterized type is\n encountered by a reflective method that needs to instantiate it.\n For example, if the number of type arguments to a parameterized type\n is wrong.\n\n @since 1.5\n"
13189,method,java/lang/reflect/MalformedParameterizedTypeException/MalformedParameterizedTypeException/,""
13191,method,java/lang/reflect/InvocationTargetException/getTargetException/," Get the thrown target exception.\n\n <p>This method predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @return the thrown target exception (cause of this exception).\n"
13198,class,java/lang/reflect/GenericSignatureFormatError," Thrown when a syntactically malformed signature attribute is\n encountered by a reflective method that needs to interpret the\n generic signature information for a type, method or constructor.\n\n @since 1.5\n"
13199,method,java/lang/reflect/GenericSignatureFormatError/GenericSignatureFormatError/,""
13200,interface,java/lang/reflect/GenericDeclaration," A common interface for all entities that declare type variables.\n\n @since 1.5\n"
13201,method,java/lang/reflect/GenericDeclaration/getTypeParameters/," Returns an array of <tt>TypeVariable</tt> objects that\n represent the type variables declared by the generic\n declaration represented by this <tt>GenericDeclaration</tt>\n object, in declaration order.  Returns an array of length 0 if\n the underlying generic declaration declares no type variables.\n\n @return an array of <tt>TypeVariable</tt> objects that represent\n     the type variables declared by this generic declaration\n @throws GenericSignatureFormatError if the generic\n     signature of this generic declaration does not conform to\n     the format specified in the Java Virtual Machine Specification,\n     3rd edition\n"
13202,interface,java/lang/reflect/GenericArrayType," <tt>GenericArrayType</tt> represents an array type whose component\n type is either a parameterized type or a type variable.\n @since 1.5\n"
13203,method,java/lang/reflect/GenericArrayType/getGenericComponentType/," Returns a <tt>Type</tt> object representing the component type\n of this array. This method creates the component type of the\n array.  See the declaration of {@link\n java.lang.reflect.ParameterizedType ParameterizedType} for the\n semantics of the creation process for parameterized types and\n see {@link java.lang.reflect.TypeVariable TypeVariable} for the\n creation process for type variables.\n\n @return  a <tt>Type</tt> object representing the component type\n     of this array\n @throws TypeNotPresentException if the underlying array type's\n     component type refers to a non-existent type declaration\n @throws MalformedParameterizedTypeException if  the\n     underlying array type's component type refers to a\n     parameterized type that cannot be instantiated for any reason\n"
13205,method,java/lang/reflect/Field/getDeclaringClass/," Returns the <code>Class</code> object representing the class or interface\n that declares the field represented by this <code>Field</code> object.\n"
13206,method,java/lang/reflect/Field/getName/," Returns the name of the field represented by this <code>Field</code> object.\n"
13210,method,java/lang/reflect/Field/getType/," Returns a <code>Class</code> object that identifies the\n declared type for the field represented by this\n <code>Field</code> object.\n\n @return a <code>Class</code> object identifying the declared\n type of the field represented by this object\n"
13212,method,java/lang/reflect/Field/equals/Object," Compares this <code>Field</code> against the specified object.  Returns\n true if the objects are the same.  Two <code>Field</code> objects are the same if\n they were declared by the same class and have the same name\n and type.\n"
13213,method,java/lang/reflect/Field/hashCode/," Returns a hashcode for this <code>Field</code>.  This is computed as the\n exclusive-or of the hashcodes for the underlying field's\n declaring class name and its name.\n"
13215,method,java/lang/reflect/Field/toGenericString/," Returns a string describing this <code>Field</code>, including\n its generic type.  The format is the access modifiers for the\n field, if any, followed by the generic field type, followed by\n a space, followed by the fully-qualified name of the class\n declaring the field, followed by a period, followed by the name\n of the field.\n\n <p>The modifiers are placed in canonical order as specified by\n "The Java Language Specification".  This is <tt>public</tt>,\n <tt>protected</tt> or <tt>private</tt> first, and then other\n modifiers in the following order: <tt>static</tt>, <tt>final</tt>,\n <tt>transient</tt>, <tt>volatile</tt>.\n\n @return a string describing this <code>Field</code>, including\n its generic type\n\n @since 1.5\n"
13235,method,java/lang/reflect/Field/getDeclaredAnnotations/," @since 1.5\n"
13236,class,java/lang/reflect/Constructor," <code>Constructor</code> provides information about, and access to, a single\n constructor for a class.\n\n <p><code>Constructor</code> permits widening conversions to occur when matching the\n actual parameters to newInstance() with the underlying\n constructor's formal parameters, but throws an\n <code>IllegalArgumentException</code> if a narrowing conversion would occur.\n\n @param <T> the class in which the constructor is declared\n \n @see Member\n @see java.lang.Class\n @see java.lang.Class#getConstructors()\n @see java.lang.Class#getConstructor(Class[])\n @see java.lang.Class#getDeclaredConstructors()\n\n @author	Kenneth Russell\n @author	Nakul Saraiya\n"
13237,method,java/lang/reflect/Constructor/getDeclaringClass/," Returns the <code>Class</code> object representing the class that declares\n the constructor represented by this <code>Constructor</code> object.\n"
13238,method,java/lang/reflect/Constructor/getName/," Returns the name of this constructor, as a string.  This is\n always the same as the simple name of the constructor's declaring\n class.\n"
13240,method,java/lang/reflect/Constructor/getTypeParameters/," Returns an array of <tt>TypeVariable</tt> objects that represent the\n type variables declared by the generic declaration represented by this\n <tt>GenericDeclaration</tt> object, in declaration order.  Returns an\n array of length 0 if the underlying generic declaration declares no type\n variables.\n\n @return an array of <tt>TypeVariable</tt> objects that represent\n     the type variables declared by this generic declaration\n @throws GenericSignatureFormatError if the generic\n     signature of this generic declaration does not conform to\n     the format specified in the Java Virtual Machine Specification,\n     3rd edition\n @since 1.5\n"
13241,method,java/lang/reflect/Constructor/getParameterTypes/," Returns an array of <code>Class</code> objects that represent the formal\n parameter types, in declaration order, of the constructor\n represented by this <code>Constructor</code> object.  Returns an array of\n length 0 if the underlying constructor takes no parameters.\n\n @return the parameter types for the constructor this object\n represents\n"
13243,method,java/lang/reflect/Constructor/getExceptionTypes/," Returns an array of <code>Class</code> objects that represent the types\n of exceptions declared to be thrown by the underlying constructor\n represented by this <code>Constructor</code> object.  Returns an array of\n length 0 if the constructor declares no exceptions in its <code>throws</code> clause.\n\n @return the exception types declared as being thrown by the\n constructor this object represents\n"
13245,method,java/lang/reflect/Constructor/equals/Object," Compares this <code>Constructor</code> against the specified object.\n Returns true if the objects are the same.  Two <code>Constructor</code> objects are\n the same if they were declared by the same class and have the\n same formal parameter types.\n"
13246,method,java/lang/reflect/Constructor/hashCode/," Returns a hashcode for this <code>Constructor</code>. The hashcode is\n the same as the hashcode for the underlying constructor's\n declaring class name.\n"
13253,method,java/lang/reflect/Constructor/getDeclaredAnnotations/," @since 1.5\n"
13255,class,java/lang/reflect/Array," The <code>Array</code> class provides static methods to dynamically create and\n access Java arrays.\n\n <p><code>Array</code> permits widening conversions to occur during a get or set\n operation, but throws an <code>IllegalArgumentException</code> if a narrowing\n conversion would occur.\n\n @author Nakul Saraiya\n"
13258,method,java/lang/reflect/Array/getLength/Object," Returns the length of the specified array object, as an <code>int</code>.\n\n @param array the array\n @return the length of the array\n @exception IllegalArgumentException if the object argument is not\n an array\n"
13259,method,java/lang/reflect/Array/get/Object;int," Returns the value of the indexed component in the specified\n array object.  The value is automatically wrapped in an object\n if it has a primitive type.\n\n @param array the array\n @param index the index\n @return the (possibly wrapped) value of the indexed component in\n the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n"
13260,method,java/lang/reflect/Array/getBoolean/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>boolean</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13261,method,java/lang/reflect/Array/getByte/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>byte</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13262,method,java/lang/reflect/Array/getChar/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>char</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13263,method,java/lang/reflect/Array/getShort/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>short</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13264,method,java/lang/reflect/Array/getInt/Object;int," Returns the value of the indexed component in the specified\n array object, as an <code>int</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13265,method,java/lang/reflect/Array/getLong/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>long</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13266,method,java/lang/reflect/Array/getFloat/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>float</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13267,method,java/lang/reflect/Array/getDouble/Object;int," Returns the value of the indexed component in the specified\n array object, as a <code>double</code>.\n\n @param array the array\n @param index the index\n @return the value of the indexed component in the specified array\n @exception NullPointerException If the specified object is null\n @exception IllegalArgumentException If the specified object is not\n an array, or if the indexed element cannot be converted to the\n return type by an identity or widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to the\n length of the specified array\n @see Array#get\n"
13268,method,java/lang/reflect/Array/set/Object;int;Object," Sets the value of the indexed component of the specified array\n object to the specified new value.  The new value is first\n automatically unwrapped if the array has a primitive component\n type.\n @param array the array\n @param index the index into the array\n @param value the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the array component type is primitive and\n an unwrapping conversion fails\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n"
13269,method,java/lang/reflect/Array/setBoolean/Object;int;boolean," Sets the value of the indexed component of the specified array\n object to the specified <code>boolean</code> value.\n @param array the array\n @param index the index into the array\n @param z the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13270,method,java/lang/reflect/Array/setByte/Object;int;byte," Sets the value of the indexed component of the specified array\n object to the specified <code>byte</code> value.\n @param array the array\n @param index the index into the array\n @param b the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13271,method,java/lang/reflect/Array/setChar/Object;int;char," Sets the value of the indexed component of the specified array\n object to the specified <code>char</code> value.\n @param array the array\n @param index the index into the array\n @param c the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13272,method,java/lang/reflect/Array/setShort/Object;int;short," Sets the value of the indexed component of the specified array\n object to the specified <code>short</code> value.\n @param array the array\n @param index the index into the array\n @param s the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13273,method,java/lang/reflect/Array/setInt/Object;int;int," Sets the value of the indexed component of the specified array\n object to the specified <code>int</code> value.\n @param array the array\n @param index the index into the array\n @param i the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13274,method,java/lang/reflect/Array/setLong/Object;int;long," Sets the value of the indexed component of the specified array\n object to the specified <code>long</code> value.\n @param array the array\n @param index the index into the array\n @param l the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13275,method,java/lang/reflect/Array/setFloat/Object;int;float," Sets the value of the indexed component of the specified array\n object to the specified <code>float</code> value.\n @param array the array\n @param index the index into the array\n @param f the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13276,method,java/lang/reflect/Array/setDouble/Object;int;double," Sets the value of the indexed component of the specified array\n object to the specified <code>double</code> value.\n @param array the array\n @param index the index into the array\n @param d the new value of the indexed component\n @exception NullPointerException If the specified object argument\n is null\n @exception IllegalArgumentException If the specified object argument\n is not an array, or if the specified value cannot be converted\n to the underlying array's component type by an identity or a\n primitive widening conversion\n @exception ArrayIndexOutOfBoundsException If the specified <code>index</code> \n argument is negative, or if it is greater than or equal to\n the length of the specified array\n @see Array#set\n"
13278,method,java/lang/reflect/AnnotatedElement/isAnnotationPresent/Class," Returns true if an annotation for the specified type\n is present on this element, else false.  This method\n is designed primarily for convenient access to marker annotations.\n\n @param annotationClass the Class object corresponding to the\n        annotation type\n @return true if an annotation for the specified annotation\n     type is present on this element, else false\n @throws NullPointerException if the given annotation class is null\n @since 1.5\n"
13279,method,java/lang/reflect/AnnotatedElement/getAnnotation/Class," Returns this element's annotation for the specified type if\n such an annotation is present, else null.\n\n @param annotationClass the Class object corresponding to the \n        annotation type\n @return this element's annotation for the specified annotation type if\n     present on this element, else null\n @throws NullPointerException if the given annotation class is null\n @since 1.5\n"
13285,method,java/lang/reflect/AccessibleObject/isAccessible/," Get the value of the <tt>accessible</tt> flag for this object.\n\n @return the value of the object's <tt>accessible</tt> flag\n"
13288,method,java/lang/reflect/AccessibleObject/getAnnotations/," @since 1.5\n"
13289,method,java/lang/reflect/AccessibleObject/getDeclaredAnnotations/," @since 1.5\n"
13291,class,java/lang/instrument/UnmodifiableClassException," Thrown by an implementation of\n {@link java.lang.instrument.Instrumentation#redefineClasses Instrumentation.redefineClasses}\n when one of the specified classes cannot be modified.\n\n @see     java.lang.instrument.Instrumentation#redefineClasses\n @since   1.5\n"
13292,method,java/lang/instrument/UnmodifiableClassException/UnmodifiableClassException/," Constructs an <code>UnmodifiableClassException</code> with no \n detail message. \n"
13293,method,java/lang/instrument/UnmodifiableClassException/UnmodifiableClassException/String," Constructs an <code>UnmodifiableClassException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
13296,method,java/lang/instrument/Instrumentation/addTransformer/ClassFileTransformer," Registers the supplied transformer. \n <P>\n Same as <code>addTransformer(transformer, false)</code>.\n\n @param transformer          the transformer to register\n @throws java.lang.NullPointerException if passed a <code>null</code> transformer\n @see    #addTransformer(ClassFileTransformer,boolean)\n"
13303,method,java/lang/instrument/Instrumentation/getAllLoadedClasses/," Returns an array of all classes currently loaded by the JVM.\n\n @return an array containing all the classes loaded by the JVM, zero-length if there are none\n"
13304,method,java/lang/instrument/Instrumentation/getInitiatedClasses/ClassLoader," Returns an array of all classes for which <code>loader</code> is an initiating loader.\n If the supplied loader is <code>null</code>, classes initiated by the bootstrap class\n loader are returned.\n\n @param loader          the loader whose initiated class list will be returned\n @return an array containing all the classes for which loader is an initiating loader, \n          zero-length if there are none\n"
13311,method,java/lang/instrument/IllegalClassFormatException/IllegalClassFormatException/," Constructs an <code>IllegalClassFormatException</code> with no \n detail message. \n"
13312,method,java/lang/instrument/IllegalClassFormatException/IllegalClassFormatException/String," Constructs an <code>IllegalClassFormatException</code> with the \n specified detail message. \n\n @param   s   the detail message.\n"
13315,class,java/lang/instrument/ClassDefinition," This class serves as a parameter block to the <code>Instrumentation.redefineClasses</code> method.\n Serves to bind the <code>Class</code> that needs redefining together with the new class file bytes.\n\n @see     java.lang.instrument.Instrumentation#redefineClasses\n @since   1.5\n"
13316,method,java/lang/instrument/ClassDefinition/getDefinitionClass/," Returns the class.\n\n @return    the <code>Class</code> object referred to.\n"
13317,method,java/lang/instrument/ClassDefinition/getDefinitionClassFile/," Returns the array of bytes that contains the new class file.\n\n @return    the class file bytes.\n"
13318,method,java/lang/instrument/ClassDefinition/ClassDefinition/Class;byte[],"  Creates a new <code>ClassDefinition</code> binding using the supplied\n  class and class file bytes. Does not copy the supplied buffer, just captures a reference to it.\n\n @param theClass the <code>Class</code> that needs redefining\n @param theClassFile the new class file bytes\n\n @throws java.lang.NullPointerException if the supplied class or array is <code>null</code>.\n"
13343,method,java/lang/management/ThreadMXBean/isObjectMonitorUsageSupported/," Tests if the Java virtual machine supports monitoring of\n object monitor usage.\n\n @return\n   <tt>true</tt>\n     if the Java virtual machine supports monitoring of\n     object monitor usage;\n   <tt>false</tt> otherwise.\n\n @see #dumpAllThreads\n @since 1.6\n"
13367,method,java/lang/management/RuntimeMXBean/getName/," Returns the name representing the running Java virtual machine.\n The returned name string can be any arbitrary string and  \n a Java virtual machine implementation can choose \n to embed platform-specific useful information in the \n returned name string.  Each running virtual machine could have\n a different name.\n \n @return the name representing the running Java virtual machine.\n"
13368,method,java/lang/management/RuntimeMXBean/getVmName/," Returns the Java virtual machine implementation name. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.name")}.\n\n @return the Java virtual machine implementation name.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13369,method,java/lang/management/RuntimeMXBean/getVmVendor/," Returns the Java virtual machine implementation vendor. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.vendor")}.\n\n @return the Java virtual machine implementation vendor.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13370,method,java/lang/management/RuntimeMXBean/getVmVersion/," Returns the Java virtual machine implementation version. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.version")}.\n\n @return the Java virtual machine implementation version.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13371,method,java/lang/management/RuntimeMXBean/getSpecName/," Returns the Java virtual machine specification name. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.specification.name")}.\n\n @return the Java virtual machine specification name.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13372,method,java/lang/management/RuntimeMXBean/getSpecVendor/," Returns the Java virtual machine specification vendor. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.specification.vendor")}.\n\n @return the Java virtual machine specification vendor.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13373,method,java/lang/management/RuntimeMXBean/getSpecVersion/," Returns the Java virtual machine specification version. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.vm.specification.version")}.\n\n @return the Java virtual machine specification version.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13374,method,java/lang/management/RuntimeMXBean/getManagementSpecVersion/," Returns the version of the specification for the management interface\n implemented by the running Java virtual machine.\n\n @return the version of the specification for the management interface\n implemented by the running Java virtual machine.\n"
13375,method,java/lang/management/RuntimeMXBean/getClassPath/," Returns the Java class path that is used by the system class loader \n to search for class files.\n This method is equivalent to {@link System#getProperty \n System.getProperty("java.class.path")}.\n\n <p> Multiple paths in the Java class path are separated by the \n path separator character of the platform of the Java virtual machine\n being monitored.\n\n @return the Java class path.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13376,method,java/lang/management/RuntimeMXBean/getLibraryPath/," Returns the Java library path. \n This method is equivalent to {@link System#getProperty \n System.getProperty("java.library.path")}.\n\n <p> Multiple paths in the Java library path are separated by the \n path separator character of the platform of the Java virtual machine\n being monitored.\n\n @return the Java library path.\n\n @throws  java.lang.SecurityException \n     if a security manager exists and its \n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13377,method,java/lang/management/RuntimeMXBean/isBootClassPathSupported/," Tests if the Java virtual machine supports the boot class path\n mechanism used by the bootstrap class loader to search for class \n files.\n\n @return <tt>true</tt> if the Java virtual machine supports the \n class path mechanism; <tt>false</tt> otherwise.\n"
13380,method,java/lang/management/RuntimeMXBean/getUptime/," Returns the uptime of the Java virtual machine in milliseconds.\n\n @return uptime of the Java virtual machine in milliseconds.\n"
13381,method,java/lang/management/RuntimeMXBean/getStartTime/," Returns the start time of the Java virtual machine in milliseconds.\n This method returns the approximate time when the Java virtual \n machine started. \n\n @return start time of the Java virtual machine in milliseconds.\n\n"
13384,method,java/lang/management/OperatingSystemMXBean/getName/," Returns the operating system name. \n This method is equivalent to <tt>System.getProperty("os.name")</tt>.\n\n @return the operating system name.\n\n @throws  java.lang.SecurityException\n     if a security manager exists and its\n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13385,method,java/lang/management/OperatingSystemMXBean/getArch/," Returns the operating system architecture. \n This method is equivalent to <tt>System.getProperty("os.arch")</tt>.\n\n @return the operating system architecture.\n\n @throws  java.lang.SecurityException\n     if a security manager exists and its\n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13386,method,java/lang/management/OperatingSystemMXBean/getVersion/," Returns the operating system version. \n This method is equivalent to <tt>System.getProperty("os.version")</tt>.\n\n @return the operating system version.\n\n @throws  java.lang.SecurityException\n     if a security manager exists and its\n     <code>checkPropertiesAccess</code> method doesn't allow access\n     to this system property.\n @see java.lang.SecurityManager#checkPropertyAccess(java.lang.String)\n @see java.lang.System#getProperty\n"
13395,method,java/lang/management/MemoryUsage/getInit/," Returns the amount of memory in bytes that the Java virtual machine\n initially requests from the operating system for memory management.\n This method returns <tt>-1</tt> if the initial memory size is undefined.\n\n @return the initial size of memory in bytes;\n <tt>-1</tt> if undefined.\n"
13396,method,java/lang/management/MemoryUsage/getUsed/,"\n Returns the amount of used memory in bytes.\n\n @return the amount of used memory in bytes.\n\n"
13397,method,java/lang/management/MemoryUsage/getCommitted/,"\n Returns the amount of memory in bytes that is committed for\n the Java virtual machine to use.  This amount of memory is\n guaranteed for the Java virtual machine to use. \n\n @return the amount of committed memory in bytes.\n\n"
13399,method,java/lang/management/MemoryUsage/toString/," Returns a descriptive representation of this memory usage.\n"
13401,method,java/lang/management/MemoryUsage/MemoryUsage/long;long;long;long," Constructs a <tt>MemoryUsage</tt> object.\n\n @param init      the initial amount of memory in bytes that\n                  the Java virtual machine allocates;\n                  or <tt>-1</tt> if undefined.\n @param used      the amount of used memory in bytes.\n @param committed the amount of committed memory in bytes.\n @param max       the maximum amount of memory in bytes that\n                  can be used; or <tt>-1</tt> if undefined.\n\n @throws IllegalArgumentException if\n <ul>\n <li> the value of <tt>init</tt> or <tt>max</tt> is negative\n      but not <tt>-1</tt>; or</li>\n <li> the value of <tt>used</tt> or <tt>committed</tt> is negative;\n      or</li>\n <li> <tt>used</tt> is greater than the value of <tt>committed</tt>;\n      or</li>\n <li> <tt>committed</tt> is greater than the value of <tt>max</tt> \n      <tt>max</tt> if defined.</li>\n </ul>\n"
13402,class,java/lang/management/MemoryType," Types of {@link MemoryPoolMXBean memory pools}.\n\n @author  Mandy Chung\n @version 1.9, 03/23/10\n @since   1.5\n"
13403,method,java/lang/management/MemoryType/values/,""
13404,method,java/lang/management/MemoryType/valueOf/String,""
13405,method,java/lang/management/MemoryType/toString/," Returns the string representation of this <tt>MemoryType</tt>.\n @return the string representation of this <tt>MemoryType</tt>.\n"
13406,field,java/lang/management/MemoryType/HEAP," Heap memory type.\n <p>\n The Java virtual machine has a <i>heap</i>\n that is the runtime data area from which\n memory for all class instances and arrays are allocated.  \n"
13409,method,java/lang/management/MemoryPoolMXBean/getName/," Returns the name representing this memory pool.\n\n @return the name of this memory pool.\n"
13410,method,java/lang/management/MemoryPoolMXBean/getType/," Returns the type of this memory pool.\n\n <p>\n <b>MBeanServer access</b>:<br>\n The mapped type of <tt>MemoryType</tt> is <tt>String</tt>\n and the value is the name of the <tt>MemoryType</tt>.\n\n @return the type of this memory pool.\n"
13412,method,java/lang/management/MemoryPoolMXBean/getPeakUsage/," Returns the peak memory usage of this memory pool since the\n Java virtual machine was started or since the peak was reset.\n This method returns <tt>null</tt>\n if this memory pool is not valid (i.e. no longer exists).\n\n <p>\n <b>MBeanServer access</b>:<br>\n The mapped type of <tt>MemoryUsage</tt> is\n <tt>CompositeData</tt> with attributes as specified in\n {@link MemoryUsage#from MemoryUsage}.\n\n @return a {@link MemoryUsage} object representing the peak\n memory usage; or <tt>null</tt> if this pool is not valid.\n\n"
13415,method,java/lang/management/MemoryPoolMXBean/getMemoryManagerNames/," Returns the name of memory managers that manages this memory pool.\n Each memory pool will be managed by at least one memory manager.\n\n @return an array of <tt>String</tt> objects, each is the name of\n a memory manager managing this memory pool.\n"
13416,method,java/lang/management/MemoryPoolMXBean/getUsageThreshold/," Returns the usage threshold value of this memory pool in bytes.\n Each memory pool has a platform-dependent default threshold value.\n The current usage threshold can be changed via the\n {@link #setUsageThreshold setUsageThreshold} method.\n\n @return the usage threshold value of this memory pool in bytes.\n\n @throws UnsupportedOperationException if this memory pool\n         does not support a usage threshold.\n\n @see #isUsageThresholdSupported\n"
13418,method,java/lang/management/MemoryPoolMXBean/isUsageThresholdExceeded/," Tests if the memory usage of this memory pool\n reaches or exceeds its usage threshold value.\n\n @return <tt>true</tt> if the memory usage of\n this memory pool reaches or exceeds the threshold value;\n <tt>false</tt> otherwise.\n\n @throws UnsupportedOperationException if this memory pool\n         does not support a usage threshold.\n"
13419,method,java/lang/management/MemoryPoolMXBean/getUsageThresholdCount/," Returns the number of times that the memory usage has crossed\n the usage threshold.\n\n @return the number of times that the memory usage \n has crossed its usage threshold value.\n\n @throws UnsupportedOperationException if this memory pool\n does not support a usage threshold.\n"
13420,method,java/lang/management/MemoryPoolMXBean/isUsageThresholdSupported/," Tests if this memory pool supports usage threshold.\n\n @return <tt>true</tt> if this memory pool supports usage threshold; \n <tt>false</tt> otherwise.\n"
13421,method,java/lang/management/MemoryPoolMXBean/getCollectionUsageThreshold/," Returns the collection usage threshold value of this memory pool \n in bytes.  The default value is zero. The collection usage \n threshold can be changed via the \n {@link #setCollectionUsageThreshold setCollectionUsageThreshold} method.\n \n @return the collection usage threshold of this memory pool in bytes.\n\n @throws UnsupportedOperationException if this memory pool\n         does not support a collection usage threshold.\n\n @see #isCollectionUsageThresholdSupported\n"
13424,method,java/lang/management/MemoryPoolMXBean/getCollectionUsageThresholdCount/," Returns the number of times that the Java virtual machine\n has detected that the memory usage has reached or \n exceeded the collection usage threshold.\n\n @return the number of times that the memory \n usage has reached or exceeded the collection usage threshold.\n\n @throws UnsupportedOperationException if this memory pool\n         does not support a collection usage threshold.\n\n @see #isCollectionUsageThresholdSupported\n"
13426,method,java/lang/management/MemoryPoolMXBean/isCollectionUsageThresholdSupported/," Tests if this memory pool supports a collection usage threshold.\n\n @return <tt>true</tt> if this memory pool supports the\n collection usage threshold; <tt>false</tt> otherwise.\n"
13428,method,java/lang/management/MemoryNotificationInfo/getPoolName/," Returns the name of the memory pool that triggers this notification.\n The memory pool usage has crossed a threshold.\n\n @return the name of the memory pool that triggers this notification.\n"
13429,method,java/lang/management/MemoryNotificationInfo/getUsage/," Returns the memory usage of the memory pool\n when this notification was constructed.\n\n @return the memory usage of the memory pool  \n when this notification was constructed.\n"
13430,method,java/lang/management/MemoryNotificationInfo/getCount/," Returns the number of times that the memory usage has crossed \n a threshold when the notification was constructed.\n For usage threshold notifications, this count will be the \n {@link MemoryPoolMXBean#getUsageThresholdCount threshold\n count}.  For collection threshold notifications, \n this count will be the\n {@link MemoryPoolMXBean#getCollectionUsageThresholdCount\n collection usage threshold count}.\n\n @return the number of times that the memory usage has crossed \n a threshold when the notification was constructed.\n"
13432,method,java/lang/management/MemoryNotificationInfo/MemoryNotificationInfo/String;MemoryUsage;long," Constructs a <tt>MemoryNotificationInfo</tt> object.\n\n @param poolName The name of the memory pool which triggers this notification.\n @param usage Memory usage of the memory pool.\n @param count The threshold crossing count.\n"
13433,field,java/lang/management/MemoryNotificationInfo/MEMORY_THRESHOLD_EXCEEDED," Notification type denoting that \n the memory usage of a memory pool has\n reached or exceeded its\n <a href="MemoryPoolMXBean.html#UsageThreshold"> usage threshold</a> value.\n This notification is emitted by {@link MemoryMXBean}.\n Subsequent crossing of the usage threshold value does not cause\n further notification until the memory usage has returned\n to become less than the usage threshold value.\n The value of this notification type is \n <tt>java.management.memory.threshold.exceeded</tt>.\n"
13436,method,java/lang/management/MemoryManagerMXBean/getName/," Returns the name representing this memory manager.\n\n @return the name of this memory manager.\n"
13438,method,java/lang/management/MemoryManagerMXBean/getMemoryPoolNames/," Returns the name of memory pools that this memory manager manages.\n\n @return an array of <tt>String</tt> objects, each is \n the name of a memory pool that this memory manager manages.\n"
13440,method,java/lang/management/MemoryMXBean/getObjectPendingFinalizationCount/,"\n Returns the approximate number of objects for which \n finalization is pending.\n\n @return the approximate number objects for which finalization\n is pending.\n"
13443,method,java/lang/management/MemoryMXBean/isVerbose/," Tests if verbose output for the memory system is enabled.\n\n @return <tt>true</tt> if verbose output for the memory \n system is enabled; <tt>false</tt> otherwise.\n"
13450,method,java/lang/management/ManagementFactory/getClassLoadingMXBean/," Returns the managed bean for the class loading system of \n the Java virtual machine.\n\n @return a {@link ClassLoadingMXBean} object for \n the Java virtual machine.\n"
13451,method,java/lang/management/ManagementFactory/getMemoryMXBean/," Returns the managed bean for the memory system of \n the Java virtual machine.\n\n @return a {@link MemoryMXBean} object for the Java virtual machine.\n"
13453,method,java/lang/management/ManagementFactory/getRuntimeMXBean/," Returns the managed bean for the runtime system of \n the Java virtual machine.\n\n @return a {@link RuntimeMXBean} object for the Java virtual machine.\n\n"
13454,method,java/lang/management/ManagementFactory/getCompilationMXBean/," Returns the managed bean for the compilation system of \n the Java virtual machine.  This method returns <tt>null</tt>\n if the Java virtual machine has no compilation system.\n\n @return a {@link CompilationMXBean} object for the Java virtual \n   machine or <tt>null</tt> if the Java virtual machine has \n   no compilation system. \n"
13455,method,java/lang/management/ManagementFactory/getOperatingSystemMXBean/," Returns the managed bean for the operating system on which\n the Java virtual machine is running.\n\n @return an {@link OperatingSystemMXBean} object for \n the Java virtual machine.\n"
13461,field,java/lang/management/ManagementFactory/CLASS_LOADING_MXBEAN_NAME," String representation of the\n <tt>ObjectName</tt> for the {@link ClassLoadingMXBean}.\n"
13462,field,java/lang/management/ManagementFactory/COMPILATION_MXBEAN_NAME," String representation of the\n <tt>ObjectName</tt> for the {@link CompilationMXBean}.\n"
13463,field,java/lang/management/ManagementFactory/MEMORY_MXBEAN_NAME," String representation of the\n <tt>ObjectName</tt> for the {@link MemoryMXBean}.\n"
13464,field,java/lang/management/ManagementFactory/OPERATING_SYSTEM_MXBEAN_NAME," String representation of the\n <tt>ObjectName</tt> for the {@link OperatingSystemMXBean}.\n"
13465,field,java/lang/management/ManagementFactory/RUNTIME_MXBEAN_NAME," String representation of the\n <tt>ObjectName</tt> for the {@link RuntimeMXBean}.\n"
13467,field,java/lang/management/ManagementFactory/GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE," The domain name and the type key property in \n the <tt>ObjectName</tt> for a {@link GarbageCollectorMXBean}.\n The unique <tt>ObjectName</tt> for a <tt>GarbageCollectorMXBean</tt>\n can be formed by appending this string with \n "<tt>,name=</tt><i>collector's name</i>".\n"
13468,field,java/lang/management/ManagementFactory/MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE," The domain name and the type key property in \n the <tt>ObjectName</tt> for a {@link MemoryManagerMXBean}. \n The unique <tt>ObjectName</tt> for a <tt>MemoryManagerMXBean</tt>\n can be formed by appending this string with\n "<tt>,name=</tt><i>manager's name</i>".\n"
13469,field,java/lang/management/ManagementFactory/MEMORY_POOL_MXBEAN_DOMAIN_TYPE," The domain name and the type key property in \n the <tt>ObjectName</tt> for a {@link MemoryPoolMXBean}. \n The unique <tt>ObjectName</tt> for a <tt>MemoryPoolMXBean</tt>\n can be formed by appending this string with\n <tt>,name=</tt><i>pool's name</i>.\n"
13476,method,java/lang/management/GarbageCollectorMXBean/getCollectionCount/," Returns the total number of collections that have occurred.\n This method returns <tt>-1</tt> if the collection count is undefined for \n this collector.\n\n @return the total number of collections that have occurred.\n"
13479,method,java/lang/management/CompilationMXBean/getName/,"\n Returns the name of the Just-in-time (JIT) compiler. \n\n @return the name of the JIT compiler.\n"
13480,method,java/lang/management/CompilationMXBean/isCompilationTimeMonitoringSupported/," Tests if the Java virtual machine supports the monitoring of\n compilation time. \n\n @return <tt>true</tt> if the monitoring of compilation time is  \n supported ; <tt>false</tt> otherwise.\n"
13483,method,java/lang/management/ClassLoadingMXBean/getTotalLoadedClassCount/,"\n Returns the total number of classes that have been loaded since\n the Java virtual machine has started execution.\n\n @return the total number of classes loaded.\n\n"
13484,method,java/lang/management/ClassLoadingMXBean/getLoadedClassCount/,"\n Returns the number of classes that are currently loaded in the \n Java virtual machine.\n\n @return the number of currently loaded classes.\n"
13485,method,java/lang/management/ClassLoadingMXBean/getUnloadedClassCount/,"\n Returns the total number of classes unloaded since the Java virtual machine\n has started execution.\n\n @return the total number of unloaded classes.\n"
13486,method,java/lang/management/ClassLoadingMXBean/isVerbose/," Tests if the verbose output for the class loading system is enabled.\n\n @return <tt>true</tt> if the verbose output for the class loading\n system is enabled; <tt>false</tt> otherwise.\n"
13488,class,java/text/StringCharacterIterator," <code>StringCharacterIterator</code> implements the\n <code>CharacterIterater</code> protocol for a <code>String</code>.\n The <code>StringCharacterIterator</code> class iterates over the\n entire <code>String</code>.\n\n @see CharacterIterator\n"
13490,method,java/text/StringCharacterIterator/first/," Implements CharacterIterator.first() for String.\n @see CharacterIterator#first\n"
13491,method,java/text/StringCharacterIterator/last/," Implements CharacterIterator.last() for String.\n @see CharacterIterator#last\n"
13492,method,java/text/StringCharacterIterator/setIndex/int," Implements CharacterIterator.setIndex() for String.\n @see CharacterIterator#setIndex\n"
13493,method,java/text/StringCharacterIterator/current/," Implements CharacterIterator.current() for String.\n @see CharacterIterator#current\n"
13494,method,java/text/StringCharacterIterator/next/," Implements CharacterIterator.next() for String.\n @see CharacterIterator#next\n"
13495,method,java/text/StringCharacterIterator/previous/," Implements CharacterIterator.previous() for String.\n @see CharacterIterator#previous\n"
13496,method,java/text/StringCharacterIterator/getBeginIndex/," Implements CharacterIterator.getBeginIndex() for String.\n @see CharacterIterator#getBeginIndex\n"
13497,method,java/text/StringCharacterIterator/getEndIndex/," Implements CharacterIterator.getEndIndex() for String.\n @see CharacterIterator#getEndIndex\n"
13498,method,java/text/StringCharacterIterator/getIndex/," Implements CharacterIterator.getIndex() for String.\n @see CharacterIterator#getIndex\n"
13499,method,java/text/StringCharacterIterator/equals/Object," Compares the equality of two StringCharacterIterator objects.\n @param obj the StringCharacterIterator object to be compared with.\n @return true if the given obj is the same as this\n StringCharacterIterator object; false otherwise.\n"
13500,method,java/text/StringCharacterIterator/hashCode/," Computes a hashcode for this iterator.\n @return A hash code\n"
13501,method,java/text/StringCharacterIterator/clone/," Creates a copy of this iterator.\n @return A copy of this\n"
13502,method,java/text/StringCharacterIterator/StringCharacterIterator/String," Constructs an iterator with an initial index of 0.\n"
13503,method,java/text/StringCharacterIterator/StringCharacterIterator/String;int," Constructs an iterator with the specified initial index.\n\n @param  text   The String to be iterated over\n @param  pos    Initial iterator position\n"
13504,method,java/text/StringCharacterIterator/StringCharacterIterator/String;int;int;int," Constructs an iterator over the given range of the given string, with the\n index set at the specified position.\n\n @param  text   The String to be iterated over\n @param  begin  Index of the first character\n @param  end    Index of the character following the last character\n @param  pos    Initial iterator position\n"
13506,method,java/text/SimpleDateFormat/set2DigitYearStart/Date," Sets the 100-year period 2-digit years will be interpreted as being in\n to begin on the date the user specifies.\n\n @param startDate During parsing, two digit years will be placed in the range\n <code>startDate</code> to <code>startDate + 100 years</code>.\n @see #get2DigitYearStart\n @since 1.2\n"
13507,method,java/text/SimpleDateFormat/get2DigitYearStart/," Returns the beginning date of the 100-year period 2-digit years are interpreted\n as being within.\n\n @return the start of the 100-year period into which two digit years are\n parsed\n @see #set2DigitYearStart\n @since 1.2\n"
13509,method,java/text/SimpleDateFormat/formatToCharacterIterator/Object," Formats an Object producing an <code>AttributedCharacterIterator</code>.\n You can use the returned <code>AttributedCharacterIterator</code>\n to build the resulting String, as well as to determine information\n about the resulting String.\n <p>\n Each attribute key of the AttributedCharacterIterator will be of type\n <code>DateFormat.Field</code>, with the corresponding attribute value\n being the same as the attribute key.\n\n @exception NullPointerException if obj is null.\n @exception IllegalArgumentException if the Format cannot format the\n            given object, or if the Format's pattern string is invalid.\n @param obj The object to format\n @return AttributedCharacterIterator describing the formatted value.\n @since 1.4\n"
13511,method,java/text/SimpleDateFormat/toPattern/," Returns a pattern string describing this date format.\n\n @return a pattern string describing this date format.\n"
13512,method,java/text/SimpleDateFormat/toLocalizedPattern/," Returns a localized pattern string describing this date format.\n\n @return a localized pattern string describing this date format.\n"
13513,method,java/text/SimpleDateFormat/applyPattern/String," Applies the given pattern string to this date format.\n\n @param pattern the new date and time pattern for this date format\n @exception NullPointerException if the given pattern is null\n @exception IllegalArgumentException if the given pattern is invalid\n"
13514,method,java/text/SimpleDateFormat/applyLocalizedPattern/String," Applies the given localized pattern string to this date format.\n\n @param pattern a String to be mapped to the new date and time format\n        pattern for this format\n @exception NullPointerException if the given pattern is null\n @exception IllegalArgumentException if the given pattern is invalid\n"
13515,method,java/text/SimpleDateFormat/getDateFormatSymbols/," Gets a copy of the date and time format symbols of this date format.\n\n @return the date and time format symbols of this date format\n @see #setDateFormatSymbols\n"
13516,method,java/text/SimpleDateFormat/setDateFormatSymbols/DateFormatSymbols," Sets the date and time format symbols of this date format.\n\n @param newFormatSymbols the new date and time format symbols\n @exception NullPointerException if the given newFormatSymbols is null\n @see #getDateFormatSymbols\n"
13517,method,java/text/SimpleDateFormat/clone/," Creates a copy of this <code>SimpleDateFormat</code>. This also\n clones the format's date format symbols.\n\n @return a clone of this <code>SimpleDateFormat</code>\n"
13518,method,java/text/SimpleDateFormat/hashCode/," Returns the hash code value for this <code>SimpleDateFormat</code> object.\n\n @return the hash code value for this <code>SimpleDateFormat</code> object.\n"
13519,method,java/text/SimpleDateFormat/equals/Object," Compares the given object with this <code>SimpleDateFormat</code> for\n equality.\n\n @return true if the given object is equal to this\n <code>SimpleDateFormat</code>\n"
13523,method,java/text/SimpleDateFormat/SimpleDateFormat/String;DateFormatSymbols," Constructs a <code>SimpleDateFormat</code> using the given pattern and\n date format symbols.\n\n @param pattern the pattern describing the date and time format\n @param formatSymbols the date format symbols to be used for formatting\n @exception NullPointerException if the given pattern or formatSymbols is null\n @exception IllegalArgumentException if the given pattern is invalid\n"
13525,method,java/text/RuleBasedCollator/getRules/," Gets the table-based rules for the collation object.\n @return returns the collation rules that the table collation object\n was created from.\n"
13526,method,java/text/RuleBasedCollator/getCollationElementIterator/String," Return a CollationElementIterator for the given String.\n @see java.text.CollationElementIterator\n"
13527,method,java/text/RuleBasedCollator/getCollationElementIterator/CharacterIterator," Return a CollationElementIterator for the given String.\n @see java.text.CollationElementIterator\n @since 1.2\n"
13531,method,java/text/RuleBasedCollator/equals/Object," Compares the equality of two collation objects.\n @param obj the table-based collation object to be compared with this.\n @return true if the current table-based collation object is the same\n as the table-based collation object obj; false otherwise.\n"
13532,method,java/text/RuleBasedCollator/hashCode/," Generates the hash code for the table-based collation object\n"
13533,method,java/text/RuleBasedCollator/RuleBasedCollator/String," RuleBasedCollator constructor.  This takes the table rules and builds\n a collation table out of them.  Please see RuleBasedCollator class\n description for more details on the collation rule syntax.\n @see java.util.Locale\n @param rules the collation rules to build the collation table from.\n @exception ParseException A format exception\n will be thrown if the build process of the rules fails. For\n example, build rule "a < ? < d" will cause the constructor to\n throw the ParseException because the '?' is not quoted.\n"
13535,method,java/text/ParsePosition/getIndex/," Retrieve the current parse position.  On input to a parse method, this\n is the index of the character at which parsing will begin; on output, it\n is the index of the character following the last character parsed.\n"
13536,method,java/text/ParsePosition/setIndex/int," Set the current parse position.\n"
13540,method,java/text/ParsePosition/hashCode/," Returns a hash code for this ParsePosition.\n @return a hash code value for this object\n"
13541,method,java/text/ParsePosition/toString/," Return a string representation of this ParsePosition.\n @return  a string representation of this object\n"
13542,method,java/text/ParsePosition/ParsePosition/int," Create a new ParsePosition with the given initial index.\n"
13549,method,java/text/NumberFormat/format/double," Specialization of format.\n @exception        ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY\n @see java.text.Format#format\n"
13550,method,java/text/NumberFormat/format/long," Specialization of format.\n @exception        ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY\n @see java.text.Format#format\n"
13551,method,java/text/NumberFormat/format/double;StringBuffer;FieldPosition," Specialization of format.\n @exception        ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY\n @see java.text.Format#format\n"
13552,method,java/text/NumberFormat/format/long;StringBuffer;FieldPosition," Specialization of format.\n @exception        ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY\n @see java.text.Format#format\n"
13559,method,java/text/NumberFormat/getNumberInstance/," Returns a general-purpose number format for the current default locale.\n"
13560,method,java/text/NumberFormat/getNumberInstance/Locale," Returns a general-purpose number format for the specified locale.\n"
13563,method,java/text/NumberFormat/getCurrencyInstance/," Returns a currency format for the current default locale.\n"
13564,method,java/text/NumberFormat/getCurrencyInstance/Locale," Returns a currency format for the specified locale.\n"
13565,method,java/text/NumberFormat/getPercentInstance/," Returns a percentage format for the current default locale.\n"
13566,method,java/text/NumberFormat/getPercentInstance/Locale," Returns a percentage format for the specified locale.\n"
13571,method,java/text/NumberFormat/isGroupingUsed/," Returns true if grouping is used in this format. For example, in the\n English locale, with grouping on, the number 1234567 might be formatted\n as "1,234,567". The grouping separator as well as the size of each group\n is locale dependant and is determined by sub-classes of NumberFormat.\n @see #setGroupingUsed\n"
13572,method,java/text/NumberFormat/setGroupingUsed/boolean," Set whether or not grouping will be used in this format.\n @see #isGroupingUsed\n"
13573,method,java/text/NumberFormat/getMaximumIntegerDigits/," Returns the maximum number of digits allowed in the integer portion of a\n number.\n @see #setMaximumIntegerDigits\n"
13575,method,java/text/NumberFormat/getMinimumIntegerDigits/," Returns the minimum number of digits allowed in the integer portion of a\n number.\n @see #setMinimumIntegerDigits\n"
13577,method,java/text/NumberFormat/getMaximumFractionDigits/," Returns the maximum number of digits allowed in the fraction portion of a\n number.\n @see #setMaximumFractionDigits\n"
13579,method,java/text/NumberFormat/getMinimumFractionDigits/," Returns the minimum number of digits allowed in the fraction portion of a\n number.\n @see #setMinimumFractionDigits\n"
13582,method,java/text/NumberFormat/setCurrency/Currency," Sets the currency used by this number format when formatting\n currency values. This does not update the minimum or maximum\n number of fraction digits used by the number format.\n <p>\n The default implementation throws\n <code>UnsupportedOperationException</code>.\n\n @param currency the new currency to be used by this number format\n @exception UnsupportedOperationException if the number format class\n doesn't implement currency formatting\n @exception NullPointerException if <code>currency</code> is null\n @since 1.4\n"
13588,class,java/text/NumberFormat/Field," Defines constants that are used as attribute keys in the\n <code>AttributedCharacterIterator</code> returned\n from <code>NumberFormat.formatToCharacterIterator</code> and as\n field identifiers in <code>FieldPosition</code>.\n\n @since 1.4\n"
13589,method,java/text/NumberFormat/Field/readResolve/," Resolves instances being deserialized to the predefined constants.\n\n @throws InvalidObjectException if the constant could not be resolved.\n @return resolved NumberFormat.Field constant\n"
13590,method,java/text/NumberFormat/Field/NumberFormat/Field/String," Creates a Field instance with the specified\n name.\n\n @param name Name of the attribute\n"
13591,field,java/text/NumberFormat/Field/INTEGER," Constant identifying the integer field.\n"
13592,field,java/text/NumberFormat/Field/FRACTION," Constant identifying the fraction field.\n"
13593,field,java/text/NumberFormat/Field/EXPONENT," Constant identifying the exponent field.\n"
13594,field,java/text/NumberFormat/Field/DECIMAL_SEPARATOR," Constant identifying the decimal separator field.\n"
13595,field,java/text/NumberFormat/Field/SIGN," Constant identifying the sign field.\n"
13596,field,java/text/NumberFormat/Field/GROUPING_SEPARATOR," Constant identifying the grouping separator field.\n"
13597,field,java/text/NumberFormat/Field/EXPONENT_SYMBOL," Constant identifying the exponent symbol field.\n"
13598,field,java/text/NumberFormat/Field/PERCENT," Constant identifying the percent field.\n"
13599,field,java/text/NumberFormat/Field/PERMILLE," Constant identifying the permille field.\n"
13600,field,java/text/NumberFormat/Field/CURRENCY," Constant identifying the currency field.\n"
13601,field,java/text/NumberFormat/Field/EXPONENT_SIGN," Constant identifying the exponent sign field.\n"
13603,method,java/text/Normalizer/normalize/CharSequence;Form," Normalize a sequence of char values.\n The sequence will be normalized according to the specified normalization\n from.\n @param src        The sequence of char values to normalize.\n @param form       The normalization form; one of\n                   {@link java.text.Normalizer.Form#NFC},\n                   {@link java.text.Normalizer.Form#NFD},\n                   {@link java.text.Normalizer.Form#NFKC},\n                   {@link java.text.Normalizer.Form#NFKD}\n @return The normalized String\n @throws NullPointerException If <code>src</code> or <code>form</code>\n is null.\n"
13604,method,java/text/Normalizer/isNormalized/CharSequence;Form," Determines if the given sequence of char values is normalized.\n @param src        The sequence of char values to be checked.\n @param form       The normalization form; one of\n                   {@link java.text.Normalizer.Form#NFC},\n                   {@link java.text.Normalizer.Form#NFD},\n                   {@link java.text.Normalizer.Form#NFKC},\n                   {@link java.text.Normalizer.Form#NFKD}\n @return true if the sequence of char values is normalized;\n false otherwise.\n @throws NullPointerException If <code>src</code> or <code>form</code>\n is null.\n"
13605,class,java/text/Normalizer/Form," This enum provides constants of the four Unicode normalization forms\n that are described in\n <a href="http://www.unicode.org/unicode/reports/tr15/tr15-23.html">\n Unicode Standard Annex #15 &mdash; Unicode Normalization Forms</a>\n and two methods to access them.\n\n @since 1.6\n"
13606,method,java/text/Normalizer/Form/values/,""
13607,method,java/text/Normalizer/Form/valueOf/String,""
13608,field,java/text/Normalizer/Form/NFD," Canonical decomposition.\n"
13609,field,java/text/Normalizer/Form/NFC," Canonical decomposition, followed by canonical composition.\n"
13610,field,java/text/Normalizer/Form/NFKD,"\n Compatibility decomposition.\n"
13611,field,java/text/Normalizer/Form/NFKC," Compatibility decomposition, followed by canonical composition.\n"
13614,method,java/text/MessageFormat/getLocale/," Gets the locale that's used when creating or comparing subformats.\n\n @return the locale used when creating or comparing subformats\n"
13615,method,java/text/MessageFormat/applyPattern/String," Sets the pattern used by this message format.\n The method parses the pattern and creates a list of subformats\n for the format elements contained in it.\n Patterns and their interpretation are specified in the\n <a href="#patterns">class description</a>.\n \n @param pattern the pattern for this message format\n @exception IllegalArgumentException if the pattern is invalid\n"
13619,method,java/text/MessageFormat/setFormatByArgumentIndex/int;Format," Sets the format to use for the format elements within the\n previously set pattern string that use the given argument\n index.\n The argument index is part of the format element definition and\n represents an index into the <code>arguments</code> array passed\n to the <code>format</code> methods or the result array returned\n by the <code>parse</code> methods.\n <p>\n If the argument index is used for more than one format element\n in the pattern string, then the new format is used for all such\n format elements. If the argument index is not used for any format\n element in the pattern string, then the new format is ignored.\n\n @param argumentIndex the argument index for which to use the new format\n @param newFormat the new format to use\n @since 1.4\n"
13621,method,java/text/MessageFormat/getFormatsByArgumentIndex/," Gets the formats used for the values passed into\n <code>format</code> methods or returned from <code>parse</code>\n methods. The indices of elements in the returned array\n correspond to the argument indices used in the previously set\n pattern string.\n The order of formats in the returned array thus corresponds to\n the order of elements in the <code>arguments</code> array passed\n to the <code>format</code> methods or the result array returned\n by the <code>parse</code> methods.\n <p>\n If an argument index is used for more than one format element\n in the pattern string, then the format used for the last such\n format element is returned in the array. If an argument index\n is not used for any format element in the pattern string, then\n null is returned in the array.\n\n @return the formats used for the arguments within the pattern\n @since 1.4\n"
13624,method,java/text/MessageFormat/format/String;Object[]," Creates a MessageFormat with the given pattern and uses it\n to format the given arguments. This is equivalent to\n <blockquote>\n     <code>(new {@link #MessageFormat(String) MessageFormat}(pattern)).{@link #format(java.lang.Object[], java.lang.StringBuffer, java.text.FieldPosition) format}(arguments, new StringBuffer(), null).toString()</code>\n </blockquote>\n\n @exception IllegalArgumentException if the pattern is invalid,\n            or if an argument in the <code>arguments</code> array\n            is not of the type expected by the format element(s)\n            that use it.\n"
13630,method,java/text/MessageFormat/clone/," Creates and returns a copy of this object.\n\n @return a clone of this instance.\n"
13632,method,java/text/MessageFormat/hashCode/," Generates a hash code for the message format object.\n"
13633,method,java/text/MessageFormat/MessageFormat/String," Constructs a MessageFormat for the default locale and the\n specified pattern.\n The constructor first sets the locale, then parses the pattern and\n creates a list of subformats for the format elements contained in it.\n Patterns and their interpretation are specified in the\n <a href="#patterns">class description</a>.\n\n @param pattern the pattern for this message format\n @exception IllegalArgumentException if the pattern is invalid\n"
13634,method,java/text/MessageFormat/MessageFormat/String;Locale," Constructs a MessageFormat for the specified locale and\n pattern.\n The constructor first sets the locale, then parses the pattern and\n creates a list of subformats for the format elements contained in it.\n Patterns and their interpretation are specified in the\n <a href="#patterns">class description</a>.\n\n @param pattern the pattern for this message format\n @param locale the locale for this message format\n @exception IllegalArgumentException if the pattern is invalid\n @since 1.4\n"
13635,class,java/text/MessageFormat/Field," Defines constants that are used as attribute keys in the\n <code>AttributedCharacterIterator</code> returned\n from <code>MessageFormat.formatToCharacterIterator</code>.\n\n @since 1.4\n"
13636,method,java/text/MessageFormat/Field/readResolve/," Resolves instances being deserialized to the predefined constants.\n\n @throws InvalidObjectException if the constant could not be\n         resolved.\n @return resolved MessageFormat.Field constant\n"
13637,method,java/text/MessageFormat/Field/MessageFormat/Field/String," Creates a Field with the specified name.\n\n @param name Name of the attribute\n"
13638,field,java/text/MessageFormat/Field/ARGUMENT," Constant identifying a portion of a message that was generated\n from an argument passed into <code>formatToCharacterIterator</code>.\n The value associated with the key will be an <code>Integer</code>\n indicating the index in the <code>arguments</code> array of the\n argument from which the text was generated.\n"
13640,method,java/text/Format/format/Object," Formats an object to produce a string. This is equivalent to\n <blockquote>\n {@link #format(Object, StringBuffer, FieldPosition) format}<code>(obj,\n         new StringBuffer(), new FieldPosition(0)).toString();</code>\n </blockquote>\n\n @param obj    The object to format\n @return       Formatted string.\n @exception IllegalArgumentException if the Format cannot format the given\n            object\n"
13641,method,java/text/Format/format/Object;StringBuffer;FieldPosition," Formats an object and appends the resulting text to a given string\n buffer.\n If the <code>pos</code> argument identifies a field used by the format,\n then its indices are set to the beginning and end of the first such\n field encountered.\n\n @param obj    The object to format\n @param toAppendTo    where the text is to be appended\n @param pos    A <code>FieldPosition</code> identifying a field\n               in the formatted text\n @return       the string buffer passed in as <code>toAppendTo</code>,\n               with formatted text appended\n @exception NullPointerException if <code>toAppendTo</code> or\n            <code>pos</code> is null\n @exception IllegalArgumentException if the Format cannot format the given\n            object\n"
13645,method,java/text/Format/clone/," Creates and returns a copy of this object.\n\n @return a clone of this instance.\n"
13647,class,java/text/Format/Field," Defines constants that are used as attribute keys in the\n <code>AttributedCharacterIterator</code> returned\n from <code>Format.formatToCharacterIterator</code> and as\n field identifiers in <code>FieldPosition</code>.\n\n @since 1.4\n"
13648,method,java/text/Format/Field/Format/Field/String," Creates a Field with the specified name.\n\n @param name Name of the attribute\n"
13651,method,java/text/FieldPosition/getField/," Retrieves the field identifier.\n"
13652,method,java/text/FieldPosition/getBeginIndex/," Retrieves the index of the first character in the requested field.\n"
13653,method,java/text/FieldPosition/getEndIndex/," Retrieves the index of the character following the last character in the\n requested field.\n"
13657,method,java/text/FieldPosition/hashCode/," Returns a hash code for this FieldPosition.\n @return a hash code value for this object\n"
13658,method,java/text/FieldPosition/toString/," Return a string representation of this FieldPosition.\n @return  a string representation of this object\n"
13662,class,java/text/DecimalFormatSymbols," This class represents the set of symbols (such as the decimal separator,\n the grouping separator, and so on) needed by <code>DecimalFormat</code>\n to format numbers. <code>DecimalFormat</code> creates for itself an instance of\n <code>DecimalFormatSymbols</code> from its locale data.  If you need to change any\n of these symbols, you can get the <code>DecimalFormatSymbols</code> object from\n your <code>DecimalFormat</code> and modify it.\n\n @see          java.util.Locale\n @see          DecimalFormat\n @version      1.47, 03/23/10\n @author       Mark Davis\n @author       Alan Liu\n"
13664,method,java/text/DecimalFormatSymbols/getInstance/," Gets the <code>DecimalFormatSymbols</code> instance for the default \n locale.  This method provides access to <code>DecimalFormatSymbols</code>\n instances for locales supported by the Java runtime itself as well \n as for those supported by installed \n {@link java.text.spi.DecimalFormatSymbolsProvider \n DecimalFormatSymbolsProvider} implementations.\n @return a <code>DecimalFormatSymbols</code> instance.\n @since 1.6\n"
13666,method,java/text/DecimalFormatSymbols/getZeroDigit/," Gets the character used for zero. Different for Arabic, etc.\n"
13667,method,java/text/DecimalFormatSymbols/setZeroDigit/char," Sets the character used for zero. Different for Arabic, etc.\n"
13668,method,java/text/DecimalFormatSymbols/getGroupingSeparator/," Gets the character used for thousands separator. Different for French, etc.\n"
13669,method,java/text/DecimalFormatSymbols/setGroupingSeparator/char," Sets the character used for thousands separator. Different for French, etc.\n"
13670,method,java/text/DecimalFormatSymbols/getDecimalSeparator/," Gets the character used for decimal sign. Different for French, etc.\n"
13671,method,java/text/DecimalFormatSymbols/setDecimalSeparator/char," Sets the character used for decimal sign. Different for French, etc.\n"
13672,method,java/text/DecimalFormatSymbols/getPerMill/," Gets the character used for per mille sign. Different for Arabic, etc.\n"
13673,method,java/text/DecimalFormatSymbols/setPerMill/char," Sets the character used for per mille sign. Different for Arabic, etc.\n"
13674,method,java/text/DecimalFormatSymbols/getPercent/," Gets the character used for percent sign. Different for Arabic, etc.\n"
13675,method,java/text/DecimalFormatSymbols/setPercent/char," Sets the character used for percent sign. Different for Arabic, etc.\n"
13676,method,java/text/DecimalFormatSymbols/getDigit/," Gets the character used for a digit in a pattern.\n"
13677,method,java/text/DecimalFormatSymbols/setDigit/char," Sets the character used for a digit in a pattern.\n"
13678,method,java/text/DecimalFormatSymbols/getPatternSeparator/," Gets the character used to separate positive and negative subpatterns\n in a pattern.\n"
13679,method,java/text/DecimalFormatSymbols/setPatternSeparator/char," Sets the character used to separate positive and negative subpatterns\n in a pattern.\n"
13680,method,java/text/DecimalFormatSymbols/getInfinity/," Gets the string used to represent infinity. Almost always left\n unchanged.\n"
13681,method,java/text/DecimalFormatSymbols/setInfinity/String," Sets the string used to represent infinity. Almost always left\n unchanged.\n"
13682,method,java/text/DecimalFormatSymbols/getNaN/," Gets the string used to represent "not a number". Almost always left\n unchanged.\n"
13683,method,java/text/DecimalFormatSymbols/setNaN/String," Sets the string used to represent "not a number". Almost always left\n unchanged.\n"
13684,method,java/text/DecimalFormatSymbols/getMinusSign/," Gets the character used to represent minus sign. If no explicit\n negative format is specified, one is formed by prefixing\n minusSign to the positive format.\n"
13685,method,java/text/DecimalFormatSymbols/setMinusSign/char," Sets the character used to represent minus sign. If no explicit\n negative format is specified, one is formed by prefixing\n minusSign to the positive format.\n"
13686,method,java/text/DecimalFormatSymbols/getCurrencySymbol/," Returns the currency symbol for the currency of these\n DecimalFormatSymbols in their locale.\n @since 1.2\n"
13687,method,java/text/DecimalFormatSymbols/setCurrencySymbol/String," Sets the currency symbol for the currency of these\n DecimalFormatSymbols in their locale.\n @since 1.2\n"
13688,method,java/text/DecimalFormatSymbols/getInternationalCurrencySymbol/," Returns the ISO 4217 currency code of the currency of these\n DecimalFormatSymbols.\n @since 1.2\n"
13689,method,java/text/DecimalFormatSymbols/setInternationalCurrencySymbol/String," Sets the ISO 4217 currency code of the currency of these\n DecimalFormatSymbols.\n If the currency code is valid (as defined by\n {@link java.util.Currency#getInstance(java.lang.String) Currency.getInstance}),\n this also sets the currency attribute to the corresponding Currency\n instance and the currency symbol attribute to the currency's symbol\n in the DecimalFormatSymbols' locale. If the currency code is not valid,\n then the currency attribute is set to null and the currency symbol\n attribute is not modified.\n\n @see #setCurrency\n @see #setCurrencySymbol\n @since 1.2\n"
13691,method,java/text/DecimalFormatSymbols/setCurrency/Currency," Sets the currency of these DecimalFormatSymbols.\n This also sets the currency symbol attribute to the currency's symbol\n in the DecimalFormatSymbols' locale, and the international currency\n symbol attribute to the currency's ISO 4217 currency code.\n\n @param currency the new currency to be used\n @exception NullPointerException if <code>currency</code> is null\n @since 1.4\n @see #setCurrencySymbol\n @see #setInternationalCurrencySymbol\n"
13692,method,java/text/DecimalFormatSymbols/getMonetaryDecimalSeparator/," Returns the monetary decimal separator.\n @since 1.2\n"
13693,method,java/text/DecimalFormatSymbols/setMonetaryDecimalSeparator/char," Sets the monetary decimal separator.\n @since 1.2\n"
13694,method,java/text/DecimalFormatSymbols/getExponentSeparator/," Returns the string used to separate the mantissa from the exponent.\n Examples: "x10^" for 1.23x10^4, "E" for 1.23E4.\n\n @return the exponent separator string\n @see #setExponentSeparator(java.lang.String)\n @since 1.6\n"
13695,method,java/text/DecimalFormatSymbols/setExponentSeparator/String," Sets the string used to separate the mantissa from the exponent.\n Examples: "x10^" for 1.23x10^4, "E" for 1.23E4.\n\n @param exp the exponent separator string\n @exception NullPointerException if <code>exp</code> is null\n @see #getExponentSeparator()\n @since 1.6\n"
13705,method,java/text/DecimalFormat/formatToCharacterIterator/Object," Formats an Object producing an <code>AttributedCharacterIterator</code>.\n You can use the returned <code>AttributedCharacterIterator</code>\n to build the resulting String, as well as to determine information\n about the resulting String.\n <p>\n Each attribute key of the AttributedCharacterIterator will be of type\n <code>NumberFormat.Field</code>, with the attribute value being the\n same as the attribute key.\n\n @exception NullPointerException if obj is null.\n @exception IllegalArgumentException when the Format cannot format the\n            given object.\n @exception        ArithmeticException if rounding is needed with rounding\n                   mode being set to RoundingMode.UNNECESSARY\n @param obj The object to format\n @return AttributedCharacterIterator describing the formatted value.\n @since 1.4\n"
13709,method,java/text/DecimalFormat/getPositivePrefix/," Get the positive prefix.\n <P>Examples: +123, $123, sFr123\n"
13710,method,java/text/DecimalFormat/setPositivePrefix/String," Set the positive prefix.\n <P>Examples: +123, $123, sFr123\n"
13711,method,java/text/DecimalFormat/getNegativePrefix/," Get the negative prefix.\n <P>Examples: -123, ($123) (with negative suffix), sFr-123\n"
13712,method,java/text/DecimalFormat/setNegativePrefix/String," Set the negative prefix.\n <P>Examples: -123, ($123) (with negative suffix), sFr-123\n"
13713,method,java/text/DecimalFormat/getPositiveSuffix/," Get the positive suffix.\n <P>Example: 123%\n"
13714,method,java/text/DecimalFormat/setPositiveSuffix/String," Set the positive suffix.\n <P>Example: 123%\n"
13715,method,java/text/DecimalFormat/getNegativeSuffix/," Get the negative suffix.\n <P>Examples: -123%, ($123) (with positive suffixes)\n"
13716,method,java/text/DecimalFormat/setNegativeSuffix/String," Set the negative suffix.\n <P>Examples: 123%\n"
13717,method,java/text/DecimalFormat/getMultiplier/," Gets the multiplier for use in percent, per mille, and similar\n formats.\n\n @see #setMultiplier(int)\n"
13718,method,java/text/DecimalFormat/setMultiplier/int," Sets the multiplier for use in percent, per mille, and similar\n formats.\n For a percent format, set the multiplier to 100 and the suffixes to\n have '%' (for Arabic, use the Arabic percent sign).\n For a per mille format, set the multiplier to 1000 and the suffixes to\n have '&#92;u2030'.\n\n <P>Example: with multiplier 100, 1.23 is formatted as "123", and\n "123" is parsed into 1.23.\n\n @see #getMultiplier\n"
13721,method,java/text/DecimalFormat/isDecimalSeparatorAlwaysShown/," Allows you to get the behavior of the decimal separator with integers.\n (The decimal separator will always appear with decimals.)\n <P>Example: Decimal ON: 12345 -> 12345.; OFF: 12345 -> 12345\n"
13722,method,java/text/DecimalFormat/setDecimalSeparatorAlwaysShown/boolean," Allows you to set the behavior of the decimal separator with integers.\n (The decimal separator will always appear with decimals.)\n <P>Example: Decimal ON: 12345 -> 12345.; OFF: 12345 -> 12345\n"
13723,method,java/text/DecimalFormat/isParseBigDecimal/," Returns whether the {@link #parse(java.lang.String, java.text.ParsePosition)}\n method returns <code>BigDecimal</code>. The default value is false.\n @see #setParseBigDecimal\n @since 1.5\n"
13724,method,java/text/DecimalFormat/setParseBigDecimal/boolean," Sets whether the {@link #parse(java.lang.String, java.text.ParsePosition)}\n method returns <code>BigDecimal</code>. \n @see #isParseBigDecimal\n @since 1.5\n"
13728,method,java/text/DecimalFormat/toPattern/," Synthesizes a pattern string that represents the current state\n of this Format object.\n @see #applyPattern\n"
13729,method,java/text/DecimalFormat/toLocalizedPattern/," Synthesizes a localized pattern string that represents the current\n state of this Format object.\n @see #applyPattern\n"
13732,method,java/text/DecimalFormat/setMaximumIntegerDigits/int," Sets the maximum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 309 is used. Negative input values are replaced with 0.\n @see NumberFormat#setMaximumIntegerDigits\n"
13733,method,java/text/DecimalFormat/setMinimumIntegerDigits/int," Sets the minimum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 309 is used. Negative input values are replaced with 0.\n @see NumberFormat#setMinimumIntegerDigits\n"
13734,method,java/text/DecimalFormat/setMaximumFractionDigits/int," Sets the maximum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 340 is used. Negative input values are replaced with 0.\n @see NumberFormat#setMaximumFractionDigits\n"
13735,method,java/text/DecimalFormat/setMinimumFractionDigits/int," Sets the minimum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of <code>newValue</code> and\n 340 is used. Negative input values are replaced with 0.\n @see NumberFormat#setMinimumFractionDigits\n"
13736,method,java/text/DecimalFormat/getMaximumIntegerDigits/," Gets the maximum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 309 is used.\n @see #setMaximumIntegerDigits\n"
13737,method,java/text/DecimalFormat/getMinimumIntegerDigits/," Gets the minimum number of digits allowed in the integer portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 309 is used.\n @see #setMinimumIntegerDigits\n"
13738,method,java/text/DecimalFormat/getMaximumFractionDigits/," Gets the maximum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 340 is used.\n @see #setMaximumFractionDigits\n"
13739,method,java/text/DecimalFormat/getMinimumFractionDigits/," Gets the minimum number of digits allowed in the fraction portion of a\n number.\n For formatting numbers other than <code>BigInteger</code> and\n <code>BigDecimal</code> objects, the lower of the return value and\n 340 is used.\n @see #setMinimumFractionDigits\n"
13742,method,java/text/DecimalFormat/getRoundingMode/," Gets the {@link java.math.RoundingMode} used in this DecimalFormat.\n\n @return The <code>RoundingMode</code> used for this DecimalFormat.\n @see #setRoundingMode(RoundingMode)\n @since 1.6\n"
13743,method,java/text/DecimalFormat/setRoundingMode/RoundingMode," Sets the {@link java.math.RoundingMode} used in this DecimalFormat.\n\n @param roundingMode The <code>RoundingMode</code> to be used\n @see #getRoundingMode()\n @exception NullPointerException if <code>roundingMode</code> is null.\n @since 1.6\n"
13744,method,java/text/DecimalFormat/DecimalFormat/," Creates a DecimalFormat using the default pattern and symbols\n for the default locale. This is a convenient way to obtain a\n DecimalFormat when internationalization is not the main concern.\n <p>\n To obtain standard formats for a given locale, use the factory methods\n on NumberFormat such as getNumberInstance. These factories will\n return the most appropriate sub-class of NumberFormat for a given\n locale.\n\n @see java.text.NumberFormat#getInstance\n @see java.text.NumberFormat#getNumberInstance\n @see java.text.NumberFormat#getCurrencyInstance\n @see java.text.NumberFormat#getPercentInstance\n"
13745,method,java/text/DecimalFormat/DecimalFormat/String," Creates a DecimalFormat using the given pattern and the symbols\n for the default locale. This is a convenient way to obtain a\n DecimalFormat when internationalization is not the main concern.\n <p>\n To obtain standard formats for a given locale, use the factory methods\n on NumberFormat such as getNumberInstance. These factories will\n return the most appropriate sub-class of NumberFormat for a given\n locale.\n\n @param pattern A non-localized pattern string.\n @exception NullPointerException if <code>pattern</code> is null\n @exception IllegalArgumentException if the given pattern is invalid.\n @see java.text.NumberFormat#getInstance\n @see java.text.NumberFormat#getNumberInstance\n @see java.text.NumberFormat#getCurrencyInstance\n @see java.text.NumberFormat#getPercentInstance\n"
13749,method,java/text/DateFormatSymbols/getInstance/," Gets the <code>DateFormatSymbols</code> instance for the default \n locale.  This method provides access to <code>DateFormatSymbols</code>\n instances for locales supported by the Java runtime itself as well \n as for those supported by installed \n {@link java.text.spi.DateFormatSymbolsProvider DateFormatSymbolsProvider} \n implementations.\n @return a <code>DateFormatSymbols</code> instance.\n @since 1.6\n"
13750,method,java/text/DateFormatSymbols/getInstance/Locale," Gets the <code>DateFormatSymbols</code> instance for the specified \n locale.  This method provides access to <code>DateFormatSymbols</code>\n instances for locales supported by the Java runtime itself as well \n as for those supported by installed \n {@link java.text.spi.DateFormatSymbolsProvider DateFormatSymbolsProvider} \n implementations.\n @param locale the given locale.\n @return a <code>DateFormatSymbols</code> instance.\n @exception NullPointerException if <code>locale</code> is null\n @since 1.6\n"
13751,method,java/text/DateFormatSymbols/getEras/," Gets era strings. For example: "AD" and "BC".\n @return the era strings.\n"
13752,method,java/text/DateFormatSymbols/setEras/String[]," Sets era strings. For example: "AD" and "BC".\n @param newEras the new era strings.\n"
13753,method,java/text/DateFormatSymbols/getMonths/," Gets month strings. For example: "January", "February", etc.\n @return the month strings.\n"
13754,method,java/text/DateFormatSymbols/setMonths/String[]," Sets month strings. For example: "January", "February", etc.\n @param newMonths the new month strings.\n"
13755,method,java/text/DateFormatSymbols/getShortMonths/," Gets short month strings. For example: "Jan", "Feb", etc.\n @return the short month strings.\n"
13756,method,java/text/DateFormatSymbols/setShortMonths/String[]," Sets short month strings. For example: "Jan", "Feb", etc.\n @param newShortMonths the new short month strings.\n"
13757,method,java/text/DateFormatSymbols/getWeekdays/," Gets weekday strings. For example: "Sunday", "Monday", etc.\n @return the weekday strings. Use <code>Calendar.SUNDAY</code>,\n <code>Calendar.MONDAY</code>, etc. to index the result array.\n"
13759,method,java/text/DateFormatSymbols/getShortWeekdays/," Gets short weekday strings. For example: "Sun", "Mon", etc.\n @return the short weekday strings. Use <code>Calendar.SUNDAY</code>,\n <code>Calendar.MONDAY</code>, etc. to index the result array.\n"
13761,method,java/text/DateFormatSymbols/getAmPmStrings/," Gets ampm strings. For example: "AM" and "PM".\n @return the ampm strings.\n"
13762,method,java/text/DateFormatSymbols/setAmPmStrings/String[]," Sets ampm strings. For example: "AM" and "PM".\n @param newAmpms the new ampm strings.\n"
13765,method,java/text/DateFormatSymbols/getLocalPatternChars/," Gets localized date-time pattern characters. For example: 'u', 't', etc.\n @return the localized date-time pattern characters.\n"
13766,method,java/text/DateFormatSymbols/setLocalPatternChars/String," Sets localized date-time pattern characters. For example: 'u', 't', etc.\n @param newLocalPatternChars the new localized date-time\n pattern characters.\n"
13775,method,java/text/DateFormat/format/Date," Formats a Date into a date/time string.\n @param date the time value to be formatted into a time string.\n @return the formatted time string.\n"
13779,method,java/text/DateFormat/getTimeInstance/," Gets the time formatter with the default formatting style\n for the default locale.\n @return a time formatter.\n"
13780,method,java/text/DateFormat/getTimeInstance/int," Gets the time formatter with the given formatting style\n for the default locale.\n @param style the given formatting style. For example,\n SHORT for "h:mm a" in the US locale.\n @return a time formatter.\n"
13781,method,java/text/DateFormat/getTimeInstance/int;Locale," Gets the time formatter with the given formatting style\n for the given locale.\n @param style the given formatting style. For example,\n SHORT for "h:mm a" in the US locale.\n @param aLocale the given locale.\n @return a time formatter.\n"
13782,method,java/text/DateFormat/getDateInstance/," Gets the date formatter with the default formatting style\n for the default locale.\n @return a date formatter.\n"
13783,method,java/text/DateFormat/getDateInstance/int," Gets the date formatter with the given formatting style\n for the default locale.\n @param style the given formatting style. For example,\n SHORT for "M/d/yy" in the US locale.\n @return a date formatter.\n"
13784,method,java/text/DateFormat/getDateInstance/int;Locale," Gets the date formatter with the given formatting style\n for the given locale.\n @param style the given formatting style. For example,\n SHORT for "M/d/yy" in the US locale.\n @param aLocale the given locale.\n @return a date formatter.\n"
13785,method,java/text/DateFormat/getDateTimeInstance/," Gets the date/time formatter with the default formatting style\n for the default locale.\n @return a date/time formatter.\n"
13786,method,java/text/DateFormat/getDateTimeInstance/int;int," Gets the date/time formatter with the given date and time\n formatting styles for the default locale.\n @param dateStyle the given date formatting style. For example,\n SHORT for "M/d/yy" in the US locale.\n @param timeStyle the given time formatting style. For example,\n SHORT for "h:mm a" in the US locale.\n @return a date/time formatter.\n"
13787,method,java/text/DateFormat/getDateTimeInstance/int;int;Locale," Gets the date/time formatter with the given formatting styles\n for the given locale.\n @param dateStyle the given date formatting style.\n @param timeStyle the given time formatting style.\n @param aLocale the given locale.\n @return a date/time formatter.\n"
13788,method,java/text/DateFormat/getInstance/," Get a default date/time formatter that uses the SHORT style for both the\n date and the time.\n"
13790,method,java/text/DateFormat/setCalendar/Calendar," Set the calendar to be used by this date format.  Initially, the default\n calendar for the specified or default locale is used.\n @param newCalendar the new Calendar to be used by the date format\n"
13791,method,java/text/DateFormat/getCalendar/," Gets the calendar associated with this date/time formatter.\n @return the calendar associated with this date/time formatter.\n"
13792,method,java/text/DateFormat/setNumberFormat/NumberFormat," Allows you to set the number formatter.\n @param newNumberFormat the given new NumberFormat.\n"
13793,method,java/text/DateFormat/getNumberFormat/," Gets the number formatter which this date/time formatter uses to\n format and parse a time.\n @return the number formatter which this date/time formatter uses.\n"
13794,method,java/text/DateFormat/setTimeZone/TimeZone," Sets the time zone for the calendar of this DateFormat object.\n @param zone the given new time zone.\n"
13795,method,java/text/DateFormat/getTimeZone/," Gets the time zone.\n @return the time zone associated with the calendar of DateFormat.\n"
13797,method,java/text/DateFormat/isLenient/," Tell whether date/time parsing is to be lenient.\n"
13801,method,java/text/DateFormat/DateFormat/," Create a new date format.\n"
13804,field,java/text/DateFormat/ERA_FIELD," Useful constant for ERA field alignment.\n Used in FieldPosition of date/time formatting.\n"
13805,field,java/text/DateFormat/YEAR_FIELD," Useful constant for YEAR field alignment.\n Used in FieldPosition of date/time formatting.\n"
13806,field,java/text/DateFormat/MONTH_FIELD," Useful constant for MONTH field alignment.\n Used in FieldPosition of date/time formatting.\n"
13807,field,java/text/DateFormat/DATE_FIELD," Useful constant for DATE field alignment.\n Used in FieldPosition of date/time formatting.\n"
13808,field,java/text/DateFormat/HOUR_OF_DAY1_FIELD," Useful constant for one-based HOUR_OF_DAY field alignment.\n Used in FieldPosition of date/time formatting.\n HOUR_OF_DAY1_FIELD is used for the one-based 24-hour clock.\n For example, 23:59 + 01:00 results in 24:59.\n"
13809,field,java/text/DateFormat/HOUR_OF_DAY0_FIELD," Useful constant for zero-based HOUR_OF_DAY field alignment.\n Used in FieldPosition of date/time formatting.\n HOUR_OF_DAY0_FIELD is used for the zero-based 24-hour clock.\n For example, 23:59 + 01:00 results in 00:59.\n"
13810,field,java/text/DateFormat/MINUTE_FIELD," Useful constant for MINUTE field alignment.\n Used in FieldPosition of date/time formatting.\n"
13811,field,java/text/DateFormat/SECOND_FIELD," Useful constant for SECOND field alignment.\n Used in FieldPosition of date/time formatting.\n"
13812,field,java/text/DateFormat/MILLISECOND_FIELD," Useful constant for MILLISECOND field alignment.\n Used in FieldPosition of date/time formatting.\n"
13813,field,java/text/DateFormat/DAY_OF_WEEK_FIELD," Useful constant for DAY_OF_WEEK field alignment.\n Used in FieldPosition of date/time formatting.\n"
13814,field,java/text/DateFormat/DAY_OF_YEAR_FIELD," Useful constant for DAY_OF_YEAR field alignment.\n Used in FieldPosition of date/time formatting.\n"
13815,field,java/text/DateFormat/DAY_OF_WEEK_IN_MONTH_FIELD," Useful constant for DAY_OF_WEEK_IN_MONTH field alignment.\n Used in FieldPosition of date/time formatting.\n"
13816,field,java/text/DateFormat/WEEK_OF_YEAR_FIELD," Useful constant for WEEK_OF_YEAR field alignment.\n Used in FieldPosition of date/time formatting.\n"
13817,field,java/text/DateFormat/WEEK_OF_MONTH_FIELD," Useful constant for WEEK_OF_MONTH field alignment.\n Used in FieldPosition of date/time formatting.\n"
13818,field,java/text/DateFormat/AM_PM_FIELD," Useful constant for AM_PM field alignment.\n Used in FieldPosition of date/time formatting.\n"
13819,field,java/text/DateFormat/HOUR1_FIELD," Useful constant for one-based HOUR field alignment.\n Used in FieldPosition of date/time formatting.\n HOUR1_FIELD is used for the one-based 12-hour clock.\n For example, 11:30 PM + 1 hour results in 12:30 AM.\n"
13820,field,java/text/DateFormat/HOUR0_FIELD," Useful constant for zero-based HOUR field alignment.\n Used in FieldPosition of date/time formatting.\n HOUR0_FIELD is used for the zero-based 12-hour clock.\n For example, 11:30 PM + 1 hour results in 00:30 AM.\n"
13821,field,java/text/DateFormat/TIMEZONE_FIELD," Useful constant for TIMEZONE field alignment.\n Used in FieldPosition of date/time formatting.\n"
13822,field,java/text/DateFormat/FULL," Constant for full style pattern.\n"
13823,field,java/text/DateFormat/LONG," Constant for long style pattern.\n"
13824,field,java/text/DateFormat/MEDIUM," Constant for medium style pattern.\n"
13825,field,java/text/DateFormat/SHORT," Constant for short style pattern.\n"
13826,field,java/text/DateFormat/DEFAULT," Constant for default style pattern.  Its value is MEDIUM.\n"
13829,method,java/text/DateFormat/Field/getCalendarField/," Returns the <code>Calendar</code> field associated with this\n attribute. For example, if this represents the hours field of\n a <code>Calendar</code>, this would return\n <code>Calendar.HOUR</code>. If there is no corresponding\n <code>Calendar</code> constant, this will return -1.\n\n @return Calendar constant for this field\n @see java.util.Calendar\n"
13830,method,java/text/DateFormat/Field/readResolve/," Resolves instances being deserialized to the predefined constants.\n\n @throws InvalidObjectException if the constant could not be\n         resolved.\n @return resolved DateFormat.Field constant\n"
13832,field,java/text/DateFormat/Field/ERA," Constant identifying the era field.\n"
13833,field,java/text/DateFormat/Field/YEAR," Constant identifying the year field.\n"
13834,field,java/text/DateFormat/Field/MONTH," Constant identifying the month field.\n"
13835,field,java/text/DateFormat/Field/DAY_OF_MONTH," Constant identifying the day of month field.\n"
13836,field,java/text/DateFormat/Field/HOUR_OF_DAY1," Constant identifying the hour of day field, where the legal values\n are 1 to 24.\n"
13837,field,java/text/DateFormat/Field/HOUR_OF_DAY0," Constant identifying the hour of day field, where the legal values\n are 0 to 23.\n"
13838,field,java/text/DateFormat/Field/MINUTE," Constant identifying the minute field.\n"
13839,field,java/text/DateFormat/Field/SECOND," Constant identifying the second field.\n"
13840,field,java/text/DateFormat/Field/MILLISECOND," Constant identifying the millisecond field.\n"
13841,field,java/text/DateFormat/Field/DAY_OF_WEEK," Constant identifying the day of week field.\n"
13842,field,java/text/DateFormat/Field/DAY_OF_YEAR," Constant identifying the day of year field.\n"
13843,field,java/text/DateFormat/Field/DAY_OF_WEEK_IN_MONTH," Constant identifying the day of week field.\n"
13844,field,java/text/DateFormat/Field/WEEK_OF_YEAR," Constant identifying the week of year field.\n"
13845,field,java/text/DateFormat/Field/WEEK_OF_MONTH," Constant identifying the week of month field.\n"
13846,field,java/text/DateFormat/Field/AM_PM," Constant identifying the time of day indicator\n (e.g. "a.m." or "p.m.") field.\n"
13847,field,java/text/DateFormat/Field/HOUR1," Constant identifying the hour field, where the legal values are\n 1 to 12.\n"
13848,field,java/text/DateFormat/Field/HOUR0," Constant identifying the hour field, where the legal values are\n 0 to 11.\n"
13849,field,java/text/DateFormat/Field/TIME_ZONE," Constant identifying the time zone field.\n"
13851,method,java/text/Collator/getInstance/," Gets the Collator for the current default locale.\n The default locale is determined by java.util.Locale.getDefault.\n @return the Collator for the default locale.(for example, en_US)\n @see java.util.Locale#getDefault\n"
13854,method,java/text/Collator/compare/Object;Object," Compares its two arguments for order.  Returns a negative integer,\n zero, or a positive integer as the first argument is less than, equal\n to, or greater than the second.\n <p>\n This implementation merely returns\n  <code> compare((String)o1, (String)o2) </code>.\n \n @return a negative integer, zero, or a positive integer as the\n         first argument is less than, equal to, or greater than the\n         second. \n @exception ClassCastException the arguments cannot be cast to Strings.\n @see java.util.Comparator\n @since   1.2\n"
13856,method,java/text/Collator/equals/String;String," Convenience method for comparing the equality of two strings based on\n this Collator's collation rules.\n @param source the source string to be compared with.\n @param target the target string to be compared with.\n @return true if the strings are equal according to the collation\n rules.  false, otherwise.\n @see java.text.Collator#compare\n"
13857,method,java/text/Collator/getStrength/," Returns this Collator's strength property.  The strength property determines\n the minimum level of difference considered significant during comparison.\n See the Collator class description for an example of use.\n @return this Collator's current strength property.\n @see java.text.Collator#setStrength\n @see java.text.Collator#PRIMARY\n @see java.text.Collator#SECONDARY\n @see java.text.Collator#TERTIARY\n @see java.text.Collator#IDENTICAL\n"
13858,method,java/text/Collator/setStrength/int," Sets this Collator's strength property.  The strength property determines\n the minimum level of difference considered significant during comparison.\n See the Collator class description for an example of use.\n @param newStrength  the new strength value.\n @see java.text.Collator#getStrength\n @see java.text.Collator#PRIMARY\n @see java.text.Collator#SECONDARY\n @see java.text.Collator#TERTIARY\n @see java.text.Collator#IDENTICAL\n @exception  IllegalArgumentException If the new strength value is not one of\n PRIMARY, SECONDARY, TERTIARY or IDENTICAL.\n"
13860,method,java/text/Collator/setDecomposition/int," Set the decomposition mode of this Collator. See getDecomposition\n for a description of decomposition mode.\n @param decompositionMode  the new decomposition mode.\n @see java.text.Collator#getDecomposition\n @see java.text.Collator#NO_DECOMPOSITION\n @see java.text.Collator#CANONICAL_DECOMPOSITION\n @see java.text.Collator#FULL_DECOMPOSITION\n @exception IllegalArgumentException If the given value is not a valid decomposition\n mode.\n"
13863,method,java/text/Collator/equals/Object," Compares the equality of two Collators.\n @param that the Collator to be compared with this.\n @return true if this Collator is the same as that Collator;\n false otherwise.\n"
13864,method,java/text/Collator/hashCode/," Generates the hash code for this Collator.\n"
13875,method,java/text/CollationKey/getSourceString/," Returns the String that this CollationKey represents.\n"
13876,method,java/text/CollationKey/toByteArray/," Converts the CollationKey to a sequence of bits. If two CollationKeys\n could be legitimately compared, then one could compare the byte arrays\n for each of those keys to obtain the same result.  Byte arrays are\n organized most significant byte first.\n"
13877,method,java/text/CollationKey/CollationKey/String," CollationKey constructor.\n\n @param source - the source string.\n @exception NullPointerException if <code>source</code> is null.\n @since 1.6\n"
13882,method,java/text/CollationElementIterator/primaryOrder/int," Return the primary component of a collation element.\n @param order the collation element\n @return the element's primary component\n"
13883,method,java/text/CollationElementIterator/secondaryOrder/int," Return the secondary component of a collation element.\n @param order the collation element\n @return the element's secondary component\n"
13884,method,java/text/CollationElementIterator/tertiaryOrder/int," Return the tertiary component of a collation element.\n @param order the collation element\n @return the element's tertiary component\n"
13887,method,java/text/CollationElementIterator/getMaxExpansion/int," Return the maximum length of any expansion sequences that end\n with the specified comparison order.\n @param order a collation order returned by previous or next.\n @return the maximum length of any expansion sequences ending\n         with the specified order.\n @since 1.2\n"
13888,method,java/text/CollationElementIterator/setText/String," Set a new string over which to iterate.\n\n @param source  the new source text\n @since 1.2\n"
13889,method,java/text/CollationElementIterator/setText/CharacterIterator," Set a new string over which to iterate.\n\n @param source  the new source text.\n @since 1.2\n"
13890,field,java/text/CollationElementIterator/NULLORDER," Null order which indicates the end of string is reached by the\n cursor.\n"
13892,method,java/text/ChoiceFormat/applyPattern/String," Sets the pattern.\n @param newPattern See the class description.\n"
13893,method,java/text/ChoiceFormat/toPattern/," Gets the pattern.\n"
13895,method,java/text/ChoiceFormat/getLimits/," Get the limits passed in the constructor.\n @return the limits.\n"
13896,method,java/text/ChoiceFormat/getFormats/," Get the formats passed in the constructor.\n @return the formats.\n"
13898,method,java/text/ChoiceFormat/format/double;StringBuffer;FieldPosition," Returns pattern with formatted double.\n @param number number to be formatted & substituted.\n @param toAppendTo where text is appended.\n @param status ignore no useful status is returned.\n"
13900,method,java/text/ChoiceFormat/nextDouble/double," Finds the least double greater than d.\n If NaN, returns same value.\n <p>Used to make half-open intervals.\n @see #previousDouble\n"
13901,method,java/text/ChoiceFormat/previousDouble/double," Finds the greatest double less than d.\n If NaN, returns same value.\n @see #nextDouble\n"
13903,method,java/text/ChoiceFormat/hashCode/," Generates a hash code for the message format object.\n"
13905,method,java/text/ChoiceFormat/nextDouble/double;boolean," Finds the least double greater than d (if positive == true),\n or the greatest double less than d (if positive == false).\n If NaN, returns same value.\n\n Does not affect floating-point flags,\n provided these member functions do not:\n          Double.longBitsToDouble(long)\n          Double.doubleToLongBits(double)\n          Double.isNaN(double)\n"
13906,method,java/text/ChoiceFormat/ChoiceFormat/String," Constructs with limits and corresponding formats based on the pattern.\n @see #applyPattern\n"
13907,method,java/text/ChoiceFormat/ChoiceFormat/double[];String[]," Constructs with the limits and the corresponding formats.\n @see #setChoices\n"
13909,method,java/text/CharacterIterator/first/," Sets the position to getBeginIndex() and returns the character at that\n position.\n @return the first character in the text, or DONE if the text is empty\n @see #getBeginIndex()\n"
13910,method,java/text/CharacterIterator/last/," Sets the position to getEndIndex()-1 (getEndIndex() if the text is empty)\n and returns the character at that position.\n @return the last character in the text, or DONE if the text is empty\n @see #getEndIndex()\n"
13911,method,java/text/CharacterIterator/current/," Gets the character at the current position (as returned by getIndex()).\n @return the character at the current position or DONE if the current\n position is off the end of the text.\n @see #getIndex()\n"
13912,method,java/text/CharacterIterator/next/," Increments the iterator's index by one and returns the character\n at the new index.  If the resulting index is greater or equal\n to getEndIndex(), the current index is reset to getEndIndex() and\n a value of DONE is returned.\n @return the character at the new position or DONE if the new\n position is off the end of the text range.\n"
13913,method,java/text/CharacterIterator/previous/," Decrements the iterator's index by one and returns the character\n at the new index. If the current index is getBeginIndex(), the index\n remains at getBeginIndex() and a value of DONE is returned.\n @return the character at the new position or DONE if the current\n position is equal to getBeginIndex().\n"
13914,method,java/text/CharacterIterator/setIndex/int," Sets the position to the specified position in the text and returns that\n character.\n @param position the position within the text.  Valid values range from\n getBeginIndex() to getEndIndex().  An IllegalArgumentException is thrown\n if an invalid value is supplied.\n @return the character at the specified position or DONE if the specified position is equal to getEndIndex()\n"
13915,method,java/text/CharacterIterator/getBeginIndex/," Returns the start index of the text.\n @return the index at which the text begins.\n"
13917,method,java/text/CharacterIterator/getIndex/," Returns the current index.\n @return the current index.\n"
13918,method,java/text/CharacterIterator/clone/," Create a copy of this iterator\n @return A copy of this\n"
13921,method,java/text/BreakIterator/clone/," Create a copy of this iterator\n @return A copy of this\n"
13922,method,java/text/BreakIterator/first/," Returns the first boundary. The iterator's current position is set\n to the first text boundary.\n @return The character index of the first text boundary.\n"
13923,method,java/text/BreakIterator/last/," Returns the last boundary. The iterator's current position is set\n to the last text boundary.\n @return The character index of the last text boundary.\n"
13925,method,java/text/BreakIterator/next/," Returns the boundary following the current boundary. If the current boundary\n is the last text boundary, it returns <code>BreakIterator.DONE</code> and \n the iterator's current position is unchanged. Otherwise, the iterator's \n current position is set to the boundary following the current boundary. \n @return The character index of the next text boundary or \n <code>BreakIterator.DONE</code> if the current boundary is the last text \n boundary.  \n Equivalent to next(1).\n @see #next(int)\n"
13926,method,java/text/BreakIterator/previous/," Returns the boundary preceding the current boundary. If the current boundary\n is the first text boundary, it returns <code>BreakIterator.DONE</code> and \n the iterator's current position is unchanged. Otherwise, the iterator's \n current position is set to the boundary preceding the current boundary.\n @return The character index of the previous text boundary or \n <code>BreakIterator.DONE</code> if the current boundary is the first text \n boundary.\n"
13929,method,java/text/BreakIterator/isBoundary/int," Returns true if the specified character offset is a text boundary.\n @param offset the character offset to check.\n @return <code>true</code> if "offset" is a boundary position, \n <code>false</code> otherwise.\n @since 1.2\n"
13930,method,java/text/BreakIterator/current/," Returns character index of the text boundary that was most \n recently returned by next(), next(int), previous(), first(), last(), \n following(int) or preceding(int). If any of these methods returns \n <code>BreakIterator.DONE</code> because either first or last text boundary \n has been reached, it returns the first or last text boundary depending on \n which one is reached. \n @return The text boundary returned from the above methods, first or last\n text boundary.\n @see #next()\n @see #next(int)\n @see #previous()\n @see #first() \n @see #last()\n @see #following(int)\n @see #preceding(int)\n"
13931,method,java/text/BreakIterator/getText/," Get the text being scanned\n @return the text being scanned\n"
13932,method,java/text/BreakIterator/setText/String," Set a new text string to be scanned.  The current scan\n position is reset to first().\n @param newText new text to scan.\n"
13933,method,java/text/BreakIterator/setText/CharacterIterator," Set a new text for scanning.  The current scan\n position is reset to first().\n @param newText new text to scan.\n"
13934,method,java/text/BreakIterator/getWordInstance/," Returns a new <code>BreakIterator</code> instance\n for <a href="#word">word breaks</a>\n for the {@linkplain Locale#getDefault() default locale}.\n @return A break iterator for word breaks\n"
13936,method,java/text/BreakIterator/getLineInstance/," Returns a new <code>BreakIterator</code> instance\n for <a href="#line">line breaks</a>\n for the {@linkplain Locale#getDefault() default locale}.\n @return A break iterator for line breaks\n"
13938,method,java/text/BreakIterator/getCharacterInstance/," Returns a new <code>BreakIterator</code> instance\n for <a href="#character">character breaks</a>\n for the {@linkplain Locale#getDefault() default locale}.\n @return A break iterator for character breaks\n"
13940,method,java/text/BreakIterator/getSentenceInstance/," Returns a new <code>BreakIterator</code> instance\n for <a href="#sentence">sentence breaks</a>\n for the {@linkplain Locale#getDefault() default locale}.\n @return A break iterator for sentence breaks\n"
13943,method,java/text/BreakIterator/BreakIterator/," Constructor. BreakIterator is stateless and has no default behavior.\n"
13944,field,java/text/BreakIterator/DONE," DONE is returned by previous(), next(), next(int), preceding(int) \n and following(int) when either the first or last text boundary has been \n reached.\n"
13948,method,java/text/Bidi/isLeftToRight/," Return true if the line is all left-to-right text and the base direction is left-to-right.\n @return true if the line is all left-to-right text and the base direction is left-to-right\n"
13949,method,java/text/Bidi/isRightToLeft/," Return true if the line is all right-to-left text, and the base direction is right-to-left.\n @return true if the line is all right-to-left text, and the base direction is right-to-left\n"
13950,method,java/text/Bidi/getLength/," Return the length of text in the line.\n @return the length of text in the line\n"
13951,method,java/text/Bidi/baseIsLeftToRight/," Return true if the base direction is left-to-right.\n @return true if the base direction is left-to-right\n"
13952,method,java/text/Bidi/getBaseLevel/,"\n Return the base level (0 if left-to-right, 1 if right-to-left).\n @return the base level\n"
13953,method,java/text/Bidi/getLevelAt/int," Return the resolved level of the character at offset.  If offset is <0 or >=\n the length of the line, return the base direction level.\n @param offset the index of the character for which to return the level\n @return the resolved level of the character at offset \n"
13954,method,java/text/Bidi/getRunCount/," Return the number of level runs.\n @return the number of level runs\n"
13961,method,java/text/Bidi/Bidi/String;int," Create Bidi from the given paragraph of text and base direction.\n @param paragraph a paragraph of text\n @param flags a collection of flags that control the algorithm.  The\n algorithm understands the flags DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT,\n DIRECTION_DEFAULT_LEFT_TO_RIGHT, and DIRECTION_DEFAULT_RIGHT_TO_LEFT.\n Other values are reserved.\n"
13964,field,java/text/Bidi/DIRECTION_LEFT_TO_RIGHT,"Constant indicating base direction is left-to-right. "
13965,field,java/text/Bidi/DIRECTION_RIGHT_TO_LEFT,"Constant indicating base direction is right-to-left. "
13971,method,java/text/AttributedString/addAttributes/Map;int;int," Adds a set of attributes to a subrange of the string.\n @param attributes The attributes to be added to the string.\n @param beginIndex Index of the first character of the range.\n @param endIndex Index of the character following the last\n character of the range.\n @exception NullPointerException if <code>attributes</code> is null.\n @exception IllegalArgumentException if beginIndex is less then\n 0, endIndex is greater than the length of the string, or\n beginIndex and endIndex together don't define a non-empty\n subrange of the string and the attributes parameter is not an\n empty Map.\n"
13972,method,java/text/AttributedString/getIterator/," Creates an AttributedCharacterIterator instance that provides access to the entire contents of\n this string.\n\n @return An iterator providing access to the text and its attributes.\n"
13975,method,java/text/AttributedString/AttributedString/String," Constructs an AttributedString instance with the given text.\n @param text The text for this attributed string.\n @exception NullPointerException if <code>text</code> is null.\n"
13976,method,java/text/AttributedString/AttributedString/String;Map," Constructs an AttributedString instance with the given text and attributes.\n @param text The text for this attributed string.\n @param attributes The attributes that apply to the entire string.\n @exception NullPointerException if <code>text</code> or\n            <code>attributes</code> is null.\n @exception IllegalArgumentException if the text has length 0\n and the attributes parameter is not an empty Map (attributes\n cannot be applied to a 0-length range).\n"
13977,method,java/text/AttributedString/AttributedString/AttributedCharacterIterator," Constructs an AttributedString instance with the given attributed\n text represented by AttributedCharacterIterator.\n @param text The text for this attributed string.\n @exception NullPointerException if <code>text</code> is null.\n"
13981,method,java/text/AttributedCharacterIterator/getRunStart/," Returns the index of the first character of the run\n with respect to all attributes containing the current character.\n"
13982,method,java/text/AttributedCharacterIterator/getRunStart/Attribute," Returns the index of the first character of the run\n with respect to the given attribute containing the current character.\n"
13983,method,java/text/AttributedCharacterIterator/getRunStart/Set," Returns the index of the first character of the run\n with respect to the given attributes containing the current character.\n"
13984,method,java/text/AttributedCharacterIterator/getRunLimit/," Returns the index of the first character following the run\n with respect to all attributes containing the current character.\n"
13985,method,java/text/AttributedCharacterIterator/getRunLimit/Attribute," Returns the index of the first character following the run\n with respect to the given attribute containing the current character.\n"
13986,method,java/text/AttributedCharacterIterator/getRunLimit/Set," Returns the index of the first character following the run\n with respect to the given attributes containing the current character.\n"
13987,method,java/text/AttributedCharacterIterator/getAttributes/," Returns a map with the attributes defined on the current\n character.\n"
13988,method,java/text/AttributedCharacterIterator/getAttribute/Attribute," Returns the value of the named attribute for the current character.\n Returns null if the attribute is not defined.\n @param attribute the key of the attribute whose value is requested.\n"
13989,method,java/text/AttributedCharacterIterator/getAllAttributeKeys/," Returns the keys of all attributes defined on the\n iterator's text range. The set is empty if no\n attributes are defined.\n"
13990,class,java/text/AttributedCharacterIterator/Attribute," Defines attribute keys that are used to identify text attributes. These\n keys are used in AttributedCharacterIterator and AttributedString.\n @see AttributedCharacterIterator\n @see AttributedString\n @since 1.2\n"
13992,method,java/text/AttributedCharacterIterator/Attribute/hashCode/," Returns a hash code value for the object. This version is identical to\n the one in Object, but is also final.\n"
13993,method,java/text/AttributedCharacterIterator/Attribute/toString/," Returns a string representation of the object. This version returns the\n concatenation of class name, "(", a name identifying the attribute and ")".\n"
13994,method,java/text/AttributedCharacterIterator/Attribute/getName/," Returns the name of the attribute.\n"
13995,method,java/text/AttributedCharacterIterator/Attribute/readResolve/," Resolves instances being deserialized to the predefined constants.\n"
13996,method,java/text/AttributedCharacterIterator/Attribute/AttributedCharacterIterator/Attribute/String," Constructs an Attribute with the given name.\n"
13997,field,java/text/AttributedCharacterIterator/Attribute/LANGUAGE," Attribute key for the language of some text.\n <p> Values are instances of Locale.\n @see java.util.Locale\n"
13999,field,java/text/AttributedCharacterIterator/Attribute/INPUT_METHOD_SEGMENT," Attribute key for input method segments. Input methods often break\n up text into segments, which usually correspond to words.\n <p>Values are instances of Annotation holding a null reference.\n @see Annotation\n"
14002,method,java/text/Annotation/toString/," Returns the String representation of this Annotation.\n"
14004,class,java/text/spi/NumberFormatProvider," An abstract class for service providers that\n provide concrete implementations of the \n {@link java.text.NumberFormat NumberFormat} class.\n\n @since        1.6\n @version      @(#)NumberFormatProvider.java	1.3 10/03/23\n"
14010,class,java/text/spi/DecimalFormatSymbolsProvider," An abstract class for service providers that\n provide instances of the \n {@link java.text.DecimalFormatSymbols DecimalFormatSymbols} class.\n\n @since        1.6 \n @version      @(#)DecimalFormatSymbolsProvider.java	1.3 10/03/23\n"
14013,class,java/text/spi/DateFormatSymbolsProvider," An abstract class for service providers that\n provide instances of the \n {@link java.text.DateFormatSymbols DateFormatSymbols} class.\n\n @since        1.6 \n @version      @(#)DateFormatSymbolsProvider.java	1.3 10/03/23\n"
14016,class,java/text/spi/DateFormatProvider," An abstract class for service providers that\n provide concrete implementations of the \n {@link java.text.DateFormat DateFormat} class.\n\n @since        1.6 \n @version      @(#)DateFormatProvider.java	1.3 10/03/23\n"
14021,class,java/text/spi/CollatorProvider," An abstract class for service providers that\n provide concrete implementations of the \n {@link java.text.Collator Collator} class.\n\n @since        1.6 \n @version      @(#)CollatorProvider.java	1.3 10/03/23\n"
14024,class,java/text/spi/BreakIteratorProvider," An abstract class for service providers that\n provide concrete implementations of the \n {@link java.text.BreakIterator BreakIterator} class.\n\n @since        1.6 \n @version      @(#)BreakIteratorProvider.java	1.3 10/03/23\n"
14034,field,java/sql/Types/BIT," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>BIT</code>.\n"
14035,field,java/sql/Types/TINYINT," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>TINYINT</code>.\n"
14036,field,java/sql/Types/SMALLINT," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>SMALLINT</code>.\n"
14037,field,java/sql/Types/INTEGER," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>INTEGER</code>.\n"
14038,field,java/sql/Types/BIGINT," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>BIGINT</code>.\n"
14039,field,java/sql/Types/FLOAT," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>FLOAT</code>.\n"
14040,field,java/sql/Types/REAL," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>REAL</code>.\n"
14041,field,java/sql/Types/DOUBLE," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>DOUBLE</code>.\n"
14042,field,java/sql/Types/NUMERIC," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>NUMERIC</code>.\n"
14043,field,java/sql/Types/DECIMAL," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>DECIMAL</code>.\n"
14044,field,java/sql/Types/CHAR," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>CHAR</code>.\n"
14045,field,java/sql/Types/VARCHAR," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>VARCHAR</code>.\n"
14046,field,java/sql/Types/LONGVARCHAR," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>LONGVARCHAR</code>.\n"
14047,field,java/sql/Types/DATE," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>DATE</code>.\n"
14048,field,java/sql/Types/TIME," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>TIME</code>.\n"
14049,field,java/sql/Types/TIMESTAMP," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>TIMESTAMP</code>.\n"
14050,field,java/sql/Types/BINARY," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>BINARY</code>.\n"
14051,field,java/sql/Types/VARBINARY," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>VARBINARY</code>.\n"
14052,field,java/sql/Types/LONGVARBINARY," <P>The constant in the Java programming language, sometimes referred\n to as a type code, that identifies the generic SQL type \n <code>LONGVARBINARY</code>.\n"
14053,field,java/sql/Types/NULL," <P>The constant in the Java programming language\n that identifies the generic SQL value \n <code>NULL</code>.\n"
14054,field,java/sql/Types/OTHER," The constant in the Java programming language that indicates\n that the SQL type is database-specific and\n gets mapped to a Java object that can be accessed via\n the methods <code>getObject</code> and <code>setObject</code>.\n"
14055,field,java/sql/Types/JAVA_OBJECT," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>JAVA_OBJECT</code>.\n @since 1.2\n"
14056,field,java/sql/Types/DISTINCT," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>DISTINCT</code>.\n @since 1.2\n"
14057,field,java/sql/Types/STRUCT," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>STRUCT</code>.\n @since 1.2\n"
14058,field,java/sql/Types/ARRAY," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>ARRAY</code>.\n @since 1.2\n"
14059,field,java/sql/Types/BLOB," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>BLOB</code>.\n @since 1.2\n"
14060,field,java/sql/Types/CLOB," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>CLOB</code>.\n @since 1.2\n"
14061,field,java/sql/Types/REF," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type\n <code>REF</code>.\n @since 1.2\n"
14062,field,java/sql/Types/DATALINK," The constant in the Java programming language, somtimes referred to\n as a type code, that identifies the generic SQL type <code>DATALINK</code>.\n\n @since 1.4\n"
14063,field,java/sql/Types/BOOLEAN," The constant in the Java programming language, somtimes referred to\n as a type code, that identifies the generic SQL type <code>BOOLEAN</code>.\n\n @since 1.4\n"
14064,field,java/sql/Types/ROWID," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>ROWID</code>\n \n @since 1.6\n\n"
14065,field,java/sql/Types/NCHAR," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>NCHAR</code>\n\n @since 1.6\n"
14066,field,java/sql/Types/NVARCHAR," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>NVARCHAR</code>.\n\n @since 1.6\n"
14067,field,java/sql/Types/LONGNVARCHAR," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>LONGNVARCHAR</code>.\n\n @since 1.6\n"
14068,field,java/sql/Types/NCLOB," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>NCLOB</code>.\n\n @since 1.6\n"
14069,field,java/sql/Types/SQLXML," The constant in the Java programming language, sometimes referred to\n as a type code, that identifies the generic SQL type <code>XML</code>.\n\n @since 1.6 \n"
14072,method,java/sql/Timestamp/getTime/," Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT\n represented by this <code>Timestamp</code> object.\n\n @return  the number of milliseconds since January 1, 1970, 00:00:00 GMT\n          represented by this date.\n @see #setTime\n"
14074,method,java/sql/Timestamp/toString/," Formats a timestamp in JDBC timestamp escape format.\n         <code>yyyy-mm-dd hh:mm:ss.fffffffff</code>,\n where <code>ffffffffff</code> indicates nanoseconds.\n <P>\n @return a <code>String</code> object in\n           <code>yyyy-mm-dd hh:mm:ss.fffffffff</code> format\n"
14075,method,java/sql/Timestamp/getNanos/," Gets this <code>Timestamp</code> object's <code>nanos</code> value.\n\n @return this <code>Timestamp</code> object's fractional seconds component\n @see #setNanos\n"
14076,method,java/sql/Timestamp/setNanos/int," Sets this <code>Timestamp</code> object's <code>nanos</code> field\n to the given value.\n\n @param n the new fractional seconds component\n @exception java.lang.IllegalArgumentException if the given argument\n            is greater than 999999999 or less than 0\n @see #getNanos\n"
14077,method,java/sql/Timestamp/equals/Timestamp," Tests to see if this <code>Timestamp</code> object is\n equal to the given <code>Timestamp</code> object.\n\n @param ts the <code>Timestamp</code> value to compare with\n @return <code>true</code> if the given <code>Timestamp</code>\n         object is equal to this <code>Timestamp</code> object;\n         <code>false</code> otherwise\n"
14079,method,java/sql/Timestamp/before/Timestamp," Indicates whether this <code>Timestamp</code> object is\n earlier than the given <code>Timestamp</code> object.\n\n @param ts the <code>Timestamp</code> value to compare with\n @return <code>true</code> if this <code>Timestamp</code> object is earlier;\n        <code>false</code> otherwise\n"
14080,method,java/sql/Timestamp/after/Timestamp," Indicates whether this <code>Timestamp</code> object is\n later than the given <code>Timestamp</code> object.\n\n @param ts the <code>Timestamp</code> value to compare with\n @return <code>true</code> if this <code>Timestamp</code> object is later;\n        <code>false</code> otherwise\n"
14083,method,java/sql/Timestamp/Timestamp/int;int;int;int;int;int;int," Constructs a <code>Timestamp</code> object initialized\n with the given values.\n\n @param year the year minus 1900\n @param month 0 to 11 \n @param date 1 to 31\n @param hour 0 to 23\n @param minute 0 to 59\n @param second 0 to 59\n @param nano 0 to 999,999,999\n @deprecated instead use the constructor <code>Timestamp(long millis)</code>\n @exception IllegalArgumentException if the nano argument is out of bounds\n"
14087,method,java/sql/Time/valueOf/String," Converts a string in JDBC time escape format to a <code>Time</code> value.\n\n @param s time in format "hh:mm:ss"\n @return a corresponding <code>Time</code> object\n"
14088,method,java/sql/Time/toString/," Formats a time in JDBC time escape format.  \n\n @return a <code>String</code> in hh:mm:ss format\n"
14096,method,java/sql/Time/Time/int;int;int," Constructs a <code>Time</code> object initialized with the \n given values for the hour, minute, and second.\n The driver sets the date components to January 1, 1970.\n Any method that attempts to access the date components of a\n <code>Time</code> object will throw a\n <code>java.lang.IllegalArgumentException</code>.\n <P>\n The result is undefined if a given argument is out of bounds.\n\n @param hour 0 to 23\n @param minute 0 to 59\n @param second 0 to 59\n\n @deprecated Use the constructor that takes a milliseconds value\n             in place of this constructor\n"
14146,field,java/sql/Statement/SUCCESS_NO_INFO," The constant indicating that a batch statement executed successfully\n but that no count of the number of rows it affected is available.\n\n @since 1.4\n"
14151,method,java/sql/Savepoint/getSavepointId/," Retrieves the generated ID for the savepoint that this \n <code>Savepoint</code> object represents.\n @return the numeric ID of this savepoint\n @exception SQLException if this is a named savepoint\n @since 1.4\n"
14152,method,java/sql/Savepoint/getSavepointName/," Retrieves the name of the savepoint that this <code>Savepoint</code>\n object represents.\n @return the name of this savepoint\n @exception SQLException if this is an un-named savepoint\n @since 1.4\n"
14165,method,java/sql/SQLWarning/setNextWarning/SQLWarning," Adds a <code>SQLWarning</code> object to the end of the chain.\n\n @param w the new end of the <code>SQLException</code> chain\n @see #getNextWarning\n"
14333,method,java/sql/SQLException/getSQLState/," Retrieves the SQLState for this <code>SQLException</code> object.\n\n @return the SQLState value\n"
14335,method,java/sql/SQLException/getNextException/," Retrieves the exception chained to this \n <code>SQLException</code> object by setNextException(SQLException ex).\n\n @return the next <code>SQLException</code> object in the chain; \n         <code>null</code> if there are none\n @see #setNextException\n"
14336,method,java/sql/SQLException/setNextException/SQLException," Adds an <code>SQLException</code> object to the end of the chain.\n\n @param ex the new exception that will be added to the end of\n            the <code>SQLException</code> chain\n @see #getNextException\n"
14337,method,java/sql/SQLException/iterator/," Returns an iterator over the chained SQLExceptions.  The iterator will\n be used to iterate over each SQLException and its underlying cause \n (if any).\n\n @return an iterator over the chained SQLExceptions and causes in the proper \n order\n\n @since 1.6\n"
14360,method,java/sql/SQLClientInfoException/getFailedProperties/," Returns the list of client info properties that could not be set.  The \n keys in the Map  contain the names of the client info \n properties that could not be set and the values contain one of the \n reason codes defined in <code>ClientInfoStatus</code>\n <p>\n \n @return Map list containing the client info properties that could\n not be set\n <p>\n @since 1.6\n"
14370,class,java/sql/RowIdLifetime," Enumeration for RowId life-time values.\n\n @since 1.6\n"
14371,method,java/sql/RowIdLifetime/values/,""
14372,method,java/sql/RowIdLifetime/valueOf/String,""
14373,field,java/sql/RowIdLifetime/ROWID_UNSUPPORTED," Indicates that this data source does not support the ROWID type.\n"
14374,field,java/sql/RowIdLifetime/ROWID_VALID_OTHER," Indicates that the lifetime of a RowId from this data source is indeterminate;\n but not one of ROWID_VALID_TRANSACTION, ROWID_VALID_SESSION, or,  \n ROWID_VALID_FOREVER.\n"
14375,field,java/sql/RowIdLifetime/ROWID_VALID_SESSION," Indicates that the lifetime of a RowId from this data source is at least the \n containing session. \n"
14376,field,java/sql/RowIdLifetime/ROWID_VALID_TRANSACTION," Indicates that the lifetime of a RowId from this data source is at least the \n containing transaction. \n"
14377,field,java/sql/RowIdLifetime/ROWID_VALID_FOREVER," Indicates that the lifetime of a RowId from this data source is, effectively, \n unlimited. \n"
14380,method,java/sql/RowId/getBytes/,"\n Returns an array of bytes representing the value of the SQL <code>ROWID</code>\n designated by this <code>java.sql.RowId</code> object.\n \n @return an array of bytes, whose length is determined by the driver supplying\n     the connection, representing the value of the ROWID designated by this\n     java.sql.RowId object.  \n"
14381,method,java/sql/RowId/toString/," Returns a String representing the value of the SQL ROWID designated by this\n <code>java.sql.RowId</code> object.\n <p>\nLike <code>java.sql.Date.toString()</code>\n returns the contents of its DATE as the <code>String</code> "2004-03-17" \n rather than as  DATE literal in SQL (which would have been the <code>String</code>\n DATE "2004-03-17"), toString() \n returns the contents of its ROWID in a form specific to the driver supplying \n the connection, and possibly not as a <code>ROWID</code> literal. \n \n @return a String whose format is determined by the driver supplying the \n     connection, representing the value of the <code>ROWID</code> designated\n     by this <code>java.sql.RowId</code>  object. \n"
14382,method,java/sql/RowId/hashCode/," Returns a hash code value of this <code>RowId</code> object.\n\n @return a hash code for the <code>RowId</code>\n"
14383,interface,java/sql/ResultSetMetaData," An object that can be used to get information about the types \n and properties of the columns in a <code>ResultSet</code> object.\n The following code fragment creates the <code>ResultSet</code> object rs,\n creates the <code>ResultSetMetaData</code> object rsmd, and uses rsmd\n to find out how many columns rs has and whether the first column in rs\n can be used in a <code>WHERE</code> clause.\n <PRE>\n\n     ResultSet rs = stmt.executeQuery("SELECT a, b, c FROM TABLE2");\n     ResultSetMetaData rsmd = rs.getMetaData();\n     int numberOfColumns = rsmd.getColumnCount();\n     boolean b = rsmd.isSearchable(1);\n\n </PRE>\n"
14405,field,java/sql/ResultSetMetaData/columnNoNulls," The constant indicating that a\n column does not allow <code>NULL</code> values.\n"
14406,field,java/sql/ResultSetMetaData/columnNullable," The constant indicating that a\n column allows <code>NULL</code> values.\n"
14407,field,java/sql/ResultSetMetaData/columnNullableUnknown," The constant indicating that the\n nullability of a column's values is unknown.\n"
14600,field,java/sql/ResultSet/TYPE_SCROLL_INSENSITIVE," The constant indicating the type for a <code>ResultSet</code> object\n that is scrollable but generally not sensitive to changes to the data\n that underlies the <code>ResultSet</code>.\n @since 1.2\n"
14601,field,java/sql/ResultSet/TYPE_SCROLL_SENSITIVE," The constant indicating the type for a <code>ResultSet</code> object\n that is scrollable and generally sensitive to changes to the data\n that underlies the <code>ResultSet</code>.\n @since 1.2\n"
14604,field,java/sql/ResultSet/HOLD_CURSORS_OVER_COMMIT," The constant indicating that open <code>ResultSet</code> objects with this\n holdability will remain open when the current transaction is commited.\n \n @since 1.4\n"
14605,field,java/sql/ResultSet/CLOSE_CURSORS_AT_COMMIT," The constant indicating that open <code>ResultSet</code> objects with this\n holdability will be closed when the current transaction is commited.\n\n @since 1.4\n"
14677,field,java/sql/ParameterMetaData/parameterNoNulls," The constant indicating that a\n parameter will not allow <code>NULL</code> values.\n"
14678,field,java/sql/ParameterMetaData/parameterNullable," The constant indicating that a\n parameter will allow <code>NULL</code> values.\n"
14679,field,java/sql/ParameterMetaData/parameterNullableUnknown," The constant indicating that the\n nullability of a parameter is unknown.\n"
14680,field,java/sql/ParameterMetaData/parameterModeUnknown," The constant indicating that the mode of the parameter is unknown.\n"
14681,field,java/sql/ParameterMetaData/parameterModeIn," The constant indicating that the parameter's mode is IN.\n"
14682,field,java/sql/ParameterMetaData/parameterModeInOut," The constant indicating that the parameter's mode is INOUT.\n"
14683,field,java/sql/ParameterMetaData/parameterModeOut," The constant indicating that the parameter's mode is  OUT.\n"
14687,field,java/sql/DriverPropertyInfo/name," The name of the property.\n"
14702,method,java/sql/DriverManager/setLoginTimeout/int," Sets the maximum time in seconds that a driver will wait\n while attempting to connect to a database.  \n\n @param seconds the login time limit in seconds; zero means there is no limit\n @see #getLoginTimeout\n"
14703,method,java/sql/DriverManager/getLoginTimeout/," Gets the maximum time in seconds that a driver can wait\n when attempting to log in to a database.\n\n @return the driver login time limit in seconds\n @see #setLoginTimeout\n"
14705,method,java/sql/DriverManager/getLogStream/," Retrieves the logging/tracing PrintStream that is used by the <code>DriverManager</code>\n and all drivers.\n\n @return the logging/tracing PrintStream; if disabled, is <code>null</code>\n @deprecated\n @see #setLogStream\n"
14706,method,java/sql/DriverManager/println/String," Prints a message to the current JDBC log stream.\n\n @param message a log or tracing message\n"
14716,method,java/sql/Date/valueOf/String," Converts a string in JDBC date escape format to\n a <code>Date</code> value.\n\n @param s a <code>String</code> object representing a date in \n        in the format "yyyy-mm-dd"\n @return a <code>java.sql.Date</code> object representing the\n         given date\n @throws IllegalArgumentException if the date given is not in the\n         JDBC date escape format (yyyy-mm-dd)\n"
14717,method,java/sql/Date/toString/," Formats a date in the date escape format yyyy-mm-dd.  \n <P>\n @return a String in yyyy-mm-dd format\n"
14740,method,java/sql/DatabaseMetaData/getDriverMajorVersion/," Retrieves this JDBC driver's major version number.\n\n @return JDBC driver major version\n"
14741,method,java/sql/DatabaseMetaData/getDriverMinorVersion/," Retrieves this JDBC driver's minor version number.\n\n @return JDBC driver minor version number\n"
14899,field,java/sql/DatabaseMetaData/procedureResultUnknown," Indicates that it is not known whether the procedure returns\n a result.\n <P>\n A possible value for column <code>PROCEDURE_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getProcedures</code>.\n"
14900,field,java/sql/DatabaseMetaData/procedureNoResult," Indicates that the procedure does not return a result.\n <P>\n A possible value for column <code>PROCEDURE_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getProcedures</code>.\n"
14901,field,java/sql/DatabaseMetaData/procedureReturnsResult," Indicates that the procedure returns a result.\n <P>\n A possible value for column <code>PROCEDURE_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getProcedures</code>.\n"
14902,field,java/sql/DatabaseMetaData/procedureColumnUnknown," Indicates that type of the column is unknown.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14903,field,java/sql/DatabaseMetaData/procedureColumnIn," Indicates that the column stores IN parameters.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14904,field,java/sql/DatabaseMetaData/procedureColumnInOut," Indicates that the column stores INOUT parameters.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14905,field,java/sql/DatabaseMetaData/procedureColumnOut," Indicates that the column stores OUT parameters.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14906,field,java/sql/DatabaseMetaData/procedureColumnReturn," Indicates that the column stores return values.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14907,field,java/sql/DatabaseMetaData/procedureColumnResult," Indicates that the column stores results.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getProcedureColumns</code>.\n"
14908,field,java/sql/DatabaseMetaData/procedureNoNulls," Indicates that <code>NULL</code> values are not allowed.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getProcedureColumns</code>.\n"
14909,field,java/sql/DatabaseMetaData/procedureNullable," Indicates that <code>NULL</code> values are allowed.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getProcedureColumns</code>.\n"
14910,field,java/sql/DatabaseMetaData/procedureNullableUnknown," Indicates that whether <code>NULL</code> values are allowed\n is unknown.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getProcedureColumns</code>.\n"
14911,field,java/sql/DatabaseMetaData/columnNoNulls," Indicates that the column might not allow <code>NULL</code> values.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> returned by the method\n <code>getColumns</code>.\n"
14912,field,java/sql/DatabaseMetaData/columnNullable," Indicates that the column definitely allows <code>NULL</code> values.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> returned by the method\n <code>getColumns</code>.\n"
14913,field,java/sql/DatabaseMetaData/columnNullableUnknown," Indicates that the nullability of columns is unknown.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> returned by the method\n <code>getColumns</code>.\n"
14921,field,java/sql/DatabaseMetaData/versionColumnNotPseudo," Indicates that this version column is NOT a pseudo column.\n <P>\n A possible value for the column\n <code>PSEUDO_COLUMN</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getVersionColumns</code>.\n"
14922,field,java/sql/DatabaseMetaData/versionColumnPseudo," Indicates that this version column is a pseudo column.\n <P>\n A possible value for the column\n <code>PSEUDO_COLUMN</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getVersionColumns</code>.\n"
14923,field,java/sql/DatabaseMetaData/importedKeyCascade," For the column <code>UPDATE_RULE</code>,\n indicates that\n when the primary key is updated, the foreign key (imported key)\n is changed to agree with it.\n For the column <code>DELETE_RULE</code>,\n it indicates that\n when the primary key is deleted, rows that imported that key\n are deleted.\n <P>\n A possible value for the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code> in the\n <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14925,field,java/sql/DatabaseMetaData/importedKeySetNull," For the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code>, indicates that\n when the primary key is updated or deleted, the foreign key (imported key)\n is changed to <code>NULL</code>.\n <P>\n A possible value for the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code> in the\n <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14926,field,java/sql/DatabaseMetaData/importedKeyNoAction," For the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code>, indicates that\n if the primary key has been imported, it cannot be updated or deleted.\n <P>\n A possible value for the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code> in the\n <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14927,field,java/sql/DatabaseMetaData/importedKeySetDefault," For the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code>, indicates that\n if the primary key is updated or deleted, the foreign key (imported key)\n is set to the default value.\n <P>\n A possible value for the columns <code>UPDATE_RULE</code>\n and <code>DELETE_RULE</code> in the\n <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14928,field,java/sql/DatabaseMetaData/importedKeyInitiallyDeferred," Indicates deferrability.  See SQL-92 for a definition.\n <P>\n A possible value for the column <code>DEFERRABILITY</code>\n in the <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14929,field,java/sql/DatabaseMetaData/importedKeyInitiallyImmediate," Indicates deferrability.  See SQL-92 for a definition.\n <P>\n A possible value for the column <code>DEFERRABILITY</code>\n in the <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14930,field,java/sql/DatabaseMetaData/importedKeyNotDeferrable," Indicates deferrability.  See SQL-92 for a definition.\n <P>\n A possible value for the column <code>DEFERRABILITY</code>\n in the <code>ResultSet</code> objects returned by the methods\n <code>getImportedKeys</code>,  <code>getExportedKeys</code>,\n and <code>getCrossReference</code>.\n"
14931,field,java/sql/DatabaseMetaData/typeNoNulls," Indicates that a <code>NULL</code> value is NOT allowed for this\n data type.\n <P>\n A possible value for column <code>NULLABLE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getTypeInfo</code>.\n"
14932,field,java/sql/DatabaseMetaData/typeNullable," Indicates that a <code>NULL</code> value is allowed for this\n data type.\n <P>\n A possible value for column <code>NULLABLE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getTypeInfo</code>.\n"
14933,field,java/sql/DatabaseMetaData/typeNullableUnknown," Indicates that it is not known whether a <code>NULL</code> value \n is allowed for this data type.\n <P>\n A possible value for column <code>NULLABLE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getTypeInfo</code>.\n"
14934,field,java/sql/DatabaseMetaData/typePredNone," Indicates that <code>WHERE</code> search clauses are not supported\n for this type.\n <P>\n A possible value for column <code>SEARCHABLE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getTypeInfo</code>.\n"
14937,field,java/sql/DatabaseMetaData/typeSearchable," Indicates that all <code>WHERE</code> search clauses can be \n based on this type.\n <P>\n A possible value for column <code>SEARCHABLE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getTypeInfo</code>.\n"
14938,field,java/sql/DatabaseMetaData/tableIndexStatistic," Indicates that this column contains table statistics that\n are returned in conjunction with a table's index descriptions.\n <P>\n A possible value for column <code>TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getIndexInfo</code>.\n"
14939,field,java/sql/DatabaseMetaData/tableIndexClustered," Indicates that this table index is a clustered index.\n <P>\n A possible value for column <code>TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getIndexInfo</code>.\n"
14940,field,java/sql/DatabaseMetaData/tableIndexHashed," Indicates that this table index is a hashed index.\n <P>\n A possible value for column <code>TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getIndexInfo</code>.\n"
14941,field,java/sql/DatabaseMetaData/tableIndexOther," Indicates that this table index is not a clustered\n index, a hashed index, or table statistics;\n it is something other than these.\n <P>\n A possible value for column <code>TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getIndexInfo</code>.\n"
14942,field,java/sql/DatabaseMetaData/attributeNoNulls," Indicates that <code>NULL</code> values might not be allowed.\n <P>\n A possible value for the column\n <code>NULLABLE</code> in the <code>ResultSet</code> object\n returned by the method <code>getAttributes</code>.\n"
14943,field,java/sql/DatabaseMetaData/attributeNullable," Indicates that <code>NULL</code> values are definitely allowed.\n <P>\n A possible value for the column <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getAttributes</code>.\n"
14944,field,java/sql/DatabaseMetaData/attributeNullableUnknown," Indicates that whether <code>NULL</code> values are allowed is not\n known. \n <P>\n A possible value for the column <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getAttributes</code>.\n"
14945,field,java/sql/DatabaseMetaData/sqlStateXOpen,"  A possible return value for the method \n <code>DatabaseMetaData.getSQLStateType</code> which is used to indicate\n whether the value returned by the method \n <code>SQLException.getSQLState</code> is an \n X/Open (now know as Open Group) SQL CLI SQLSTATE value.\n <P>\n @since 1.4\n"
14946,field,java/sql/DatabaseMetaData/sqlStateSQL,"  A possible return value for the method \n <code>DatabaseMetaData.getSQLStateType</code> which is used to indicate\n whether the value returned by the method \n <code>SQLException.getSQLState</code> is an SQLSTATE value.\n <P>\n @since 1.6\n"
14948,field,java/sql/DatabaseMetaData/functionColumnUnknown," Indicates that type of the parameter or column is unknown.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.\n"
14949,field,java/sql/DatabaseMetaData/functionColumnIn," Indicates that the parameter or column is an IN parameter.\n <P>\n  A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.\n @since 1.6\n"
14950,field,java/sql/DatabaseMetaData/functionColumnInOut," Indicates that the parameter or column is an INOUT parameter.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.     \n @since 1.6\n"
14951,field,java/sql/DatabaseMetaData/functionColumnOut," Indicates that the parameter or column is an OUT parameter.\n <P>\n A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.\n @since 1.6\n"
14952,field,java/sql/DatabaseMetaData/functionReturn," Indicates that the parameter or column is a return value.\n <P>\n  A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.     \n @since 1.6\n"
14953,field,java/sql/DatabaseMetaData/functionColumnResult," Indicates that the parameter or column is a column in a result set.\n <P>\n  A possible value for the column\n <code>COLUMN_TYPE</code>\n in the <code>ResultSet</code> \n returned by the method <code>getFunctionColumns</code>.     \n @since 1.6\n"
14954,field,java/sql/DatabaseMetaData/functionNoNulls," Indicates that <code>NULL</code> values are not allowed.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getFunctionColumns</code>.     \n @since 1.6\n"
14955,field,java/sql/DatabaseMetaData/functionNullable," Indicates that <code>NULL</code> values are allowed.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getFunctionColumns</code>.     \n @since 1.6\n"
14956,field,java/sql/DatabaseMetaData/functionNullableUnknown," Indicates that whether <code>NULL</code> values are allowed\n is unknown.\n <P>\n A possible value for the column\n <code>NULLABLE</code>\n in the <code>ResultSet</code> object\n returned by the method <code>getFunctionColumns</code>.    \n @since 1.6\n"
14957,field,java/sql/DatabaseMetaData/functionResultUnknown," Indicates that it is not known whether the function returns\n a result or a table.\n <P>\n A possible value for column <code>FUNCTION_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getFunctions</code>.\n @since 1.6\n"
14958,field,java/sql/DatabaseMetaData/functionNoTable," Indicates that the function  does not return a table.\n <P>\n A possible value for column <code>FUNCTION_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getFunctions</code>.\n @since 1.6\n"
14959,field,java/sql/DatabaseMetaData/functionReturnsTable," Indicates that the function  returns a table.\n <P>\n A possible value for column <code>FUNCTION_TYPE</code> in the\n <code>ResultSet</code> object returned by the method\n <code>getFunctions</code>.\n @since 1.6\n"
14962,method,java/sql/DataTruncation/getParameter/," Indicates whether the value truncated was a parameter value or\n a column value.\n\n @return <code>true</code> if the value truncated was a parameter;\n         <code>false</code> if it was a column value\n"
14963,method,java/sql/DataTruncation/getRead/," Indicates whether or not the value was truncated on a read.\n\n @return <code>true</code> if the value was truncated when read from\n         the database; <code>false</code> if the data was truncated on a write\n"
15016,field,java/sql/Connection/TRANSACTION_NONE," A constant indicating that transactions are not supported. \n"
15019,field,java/sql/Connection/TRANSACTION_REPEATABLE_READ," A constant indicating that\n dirty reads and non-repeatable reads are prevented; phantom\n reads can occur.  This level prohibits a transaction from\n reading a row with uncommitted changes in it, and it also\n prohibits the situation where one transaction reads a row,\n a second transaction alters the row, and the first transaction\n rereads the row, getting different values the second time\n (a "non-repeatable read").\n"
15034,method,java/sql/Clob/getCharacterStream/long;long," Returns a <code>Reader</code> object that contains a partial <code>Clob</code> value, starting\n with the character specified by pos, which is length characters in length.\n\n @param pos the offset to the first character of the partial value to\n be retrieved.  The first character in the Clob is at position 1.\n @param length the length in characters of the partial value to be retrieved.\n @return <code>Reader</code> through which the partial <code>Clob</code> value can be read.\n @throws SQLException if pos is less than 1 or if pos is greater than the number of\n characters in the <code>Clob</code> or if pos + length is greater than the number of\n characters in the <code>Clob</code>\n\n @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method\n @since 1.6\n"
15036,method,java/sql/ClientInfoStatus/values/,""
15037,method,java/sql/ClientInfoStatus/valueOf/String,""
15038,field,java/sql/ClientInfoStatus/REASON_UNKNOWN," The client info property could not be set for some unknown reason\n @since 1.6\n"
15039,field,java/sql/ClientInfoStatus/REASON_UNKNOWN_PROPERTY," The client info property name specified was not a recognized property\n name.\n @since 1.6\n"
15040,field,java/sql/ClientInfoStatus/REASON_VALUE_INVALID," The value specified for the client info property was not valid.\n @since 1.6\n"
15041,field,java/sql/ClientInfoStatus/REASON_VALUE_TRUNCATED," The value specified for the client info property was too large. \n @since 1.6\n"
15165,method,java/sql/Blob/getBinaryStream/long;long," Returns an <code>InputStream</code> object that contains a partial <code>Blob</code> value, \n starting  with the byte specified by pos, which is length bytes in length.\n\n @param pos the offset to the first byte of the partial value to be retrieved.\n  The first byte in the <code>Blob</code> is at position 1\n @param length the length in bytes of the partial value to be retrieved\n @return <code>InputStream</code> through which the partial <code>Blob</code> value can be read.\n @throws SQLException if pos is less than 1 or if pos is greater than the number of bytes\n in the <code>Blob</code> or if pos + length is greater than the number of bytes \n in the <code>Blob</code>\n\n @exception SQLFeatureNotSupportedException if the JDBC driver does not support\n this method\n @since 1.6\n"
15190,interface,java/applet/AudioClip," The <code>AudioClip</code> interface is a simple abstraction for\n playing a sound clip. Multiple <code>AudioClip</code> items can be\n playing at the same time, and the resulting sound is mixed\n together to produce a composite.\n\n @author 	Arthur van Hoff\n @version     1.20, 03/23/10\n @since       JDK1.0\n"
15192,method,java/applet/AudioClip/loop/," Starts playing this audio clip in a loop.\n"
15193,method,java/applet/AudioClip/stop/," Stops playing this audio clip.\n"
15196,method,java/applet/AppletStub/getDocumentBase/," Gets the URL of the document in which the applet is embedded.\n For example, suppose an applet is contained\n within the document:\n <blockquote><pre>\n    http://java.sun.com/products/jdk/1.2/index.html\n </pre></blockquote>\n The document base is:\n <blockquote><pre>\n    http://java.sun.com/products/jdk/1.2/index.html\n </pre></blockquote>\n\n @return  the {@link java.net.URL} of the document that contains the\n          applet.\n @see     java.applet.AppletStub#getCodeBase()\n"
15197,method,java/applet/AppletStub/getCodeBase/," Gets the base URL. This is the URL of the directory which contains the applet.\n\n @return  the base {@link java.net.URL} of\n          the directory which contains the applet.\n @see     java.applet.AppletStub#getDocumentBase()\n"
15199,method,java/applet/AppletStub/getAppletContext/," Returns the applet's context.\n\n @return  the applet's context.\n"
15201,interface,java/applet/AppletContext," This interface corresponds to an applet's environment: the\n document containing the applet and the other applets in the same\n document.\n <p>\n The methods in this interface can be used by an applet to obtain\n information about its environment.\n\n @author 	Arthur van Hoff\n @version     1.36, 03/23/10\n @since       JDK1.0\n"
15202,method,java/applet/AppletContext/getAudioClip/URL," Creates an audio clip.\n\n @param   url   an absolute URL giving the location of the audio clip.\n @return  the audio clip at the specified URL.\n"
15204,method,java/applet/AppletContext/getApplet/String," Finds and returns the applet in the document represented by this\n applet context with the given name. The name can be set in the\n HTML tag by setting the <code>name</code> attribute.\n\n @param   name   an applet name.\n @return  the applet with the given name, or <code>null</code> if\n          not found.\n"
15205,method,java/applet/AppletContext/getApplets/," Finds all the applets in the document represented by this applet\n context.\n\n @return  an enumeration of all applets in the document represented by\n          this applet context.\n"
15207,method,java/applet/AppletContext/showDocument/URL;String," Requests that the browser or applet viewer show the Web page\n indicated by the <code>url</code> argument. The\n <code>target</code> argument indicates in which HTML frame the\n document is to be displayed.\n The target argument is interpreted as follows:\n <p>\n <center><table border="3" summary="Target arguments and their descriptions">\n <tr><th>Target Argument</th><th>Description</th></tr>\n <tr><td><code>"_self"</code>  <td>Show in the window and frame that\n                                   contain the applet.</tr>\n <tr><td><code>"_parent"</code><td>Show in the applet's parent frame. If\n                                   the applet's frame has no parent frame,\n                                   acts the same as "_self".</tr>\n <tr><td><code>"_top"</code>   <td>Show in the top-level frame of the applet's\n                                   window. If the applet's frame is the\n                                   top-level frame, acts the same as "_self".</tr>\n <tr><td><code>"_blank"</code> <td>Show in a new, unnamed\n                                   top-level window.</tr>\n <tr><td><i>name</i><td>Show in the frame or window named <i>name</i>. If\n                        a target named <i>name</i> does not already exist, a\n                        new top-level window with the specified name is created,\n                        and the document is shown there.</tr>\n </table> </center>\n <p>\n An applet viewer or browser is free to ignore <code>showDocument</code>.\n\n @param   url   an absolute URL giving the location of the document.\n @param   target   a <code>String</code> indicating where to display\n                   the page.\n"
15208,method,java/applet/AppletContext/showStatus/String," Requests that the argument string be displayed in the\n "status window". Many browsers and applet viewers\n provide such a window, where the application can inform users of\n its current state.\n\n @param   status   a string to display in the status window.\n"
15209,method,java/applet/AppletContext/setStream/String;InputStream," Associates the specified stream with the specified key in this\n applet context. If the applet context previously contained a mapping \n for this key, the old value is replaced. \n <p>\n For security reasons, mapping of streams and keys exists for each \n codebase. In other words, applet from one codebase cannot access \n the streams created by an applet from a different codebase\n <p>\n @param key key with which the specified value is to be associated.\n @param stream stream to be associated with the specified key. If this\n               parameter is <code>null</code>, the specified key is removed \n               in this applet context.\n @throws <code>IOException</code> if the stream size exceeds a certain\n         size limit. Size limit is decided by the implementor of this\n         interface.\n @since 1.4\n"
15210,method,java/applet/AppletContext/getStream/String," Returns the stream to which specified key is associated within this \n applet context. Returns <tt>null</tt> if the applet context contains \n no stream for this key.  \n <p>\n For security reasons, mapping of streams and keys exists for each \n codebase. In other words, applet from one codebase cannot access \n the streams created by an applet from a different codebase\n <p>\n @return the stream to which this applet context maps the key\n @param key key whose associated stream is to be returned.\n @since 1.4\n"
15211,method,java/applet/AppletContext/getStreamKeys/," Finds all the keys of the streams in this applet context.\n <p>\n For security reasons, mapping of streams and keys exists for each \n codebase. In other words, applet from one codebase cannot access \n the streams created by an applet from a different codebase\n <p>\n @return  an Iterator of all the names of the streams in this applet \n          context.\n @since 1.4\n"
15215,method,java/applet/Applet/getDocumentBase/," Gets the URL of the document in which this applet is embedded. \n For example, suppose an applet is contained\n within the document:\n <blockquote><pre>\n    http://java.sun.com/products/jdk/1.2/index.html\n </pre></blockquote>\n The document base is:\n <blockquote><pre>\n    http://java.sun.com/products/jdk/1.2/index.html\n </pre></blockquote>\n\n @return  the {@link java.net.URL} of the document that contains this\n          applet.\n @see     java.applet.Applet#getCodeBase()\n"
15216,method,java/applet/Applet/getCodeBase/," Gets the base URL. This is the URL of the directory which contains this applet.  \n\n @return  the base {@link java.net.URL} of\n          the directory which contains this applet.\n @see     java.applet.Applet#getDocumentBase()\n"
15218,method,java/applet/Applet/getAppletContext/," Determines this applet's context, which allows the applet to\n query and affect the environment in which it runs.\n <p>\n This environment of an applet represents the document that\n contains the applet.\n\n @return  the applet's context.\n"
15219,method,java/applet/Applet/resize/int;int," Requests that this applet be resized.\n\n @param   width    the new requested width for the applet.\n @param   height   the new requested height for the applet.\n"
15220,method,java/applet/Applet/resize/Dimension," Requests that this applet be resized.\n\n @param   d   an object giving the new width and height.\n"
15221,method,java/applet/Applet/showStatus/String," Requests that the argument string be displayed in the\n "status window". Many browsers and applet viewers\n provide such a window, where the application can inform users of\n its current state.\n\n @param   msg   a string to display in the status window.\n"
15224,method,java/applet/Applet/newAudioClip/URL," Get an audio clip from the given URL.\n\n @param url points to the audio clip\n @return the audio clip at the specified URL.\n\n @since       1.2\n"
15225,method,java/applet/Applet/getAudioClip/URL," Returns the <code>AudioClip</code> object specified by the\n <code>URL</code> argument.\n <p>\n This method always returns immediately, whether or not the audio\n clip exists. When this applet attempts to play the audio clip, the\n data will be loaded.\n\n @param   url  an absolute URL giving the location of the audio clip.\n @return  the audio clip at the specified URL.\n @see     java.applet.AudioClip\n"
15226,method,java/applet/Applet/getAudioClip/URL;String," Returns the <code>AudioClip</code> object specified by the\n <code>URL</code> and <code>name</code> arguments.\n <p>\n This method always returns immediately, whether or not the audio\n clip exists. When this applet attempts to play the audio clip, the\n data will be loaded.\n\n @param   url    an absolute URL giving the base location of the\n                 audio clip.\n @param   name   the location of the audio clip, relative to the\n                 <code>url</code> argument.\n @return  the audio clip at the specified URL.\n @see     java.applet.AudioClip\n"
15228,method,java/applet/Applet/getLocale/," Gets the locale of the applet. It allows the applet \n to maintain its own locale separated from the locale\n of the browser or appletviewer.\n\n @return  the locale of the applet; if no locale has\n          been set, the default locale is returned.\n @since   JDK1.1\n"
15230,method,java/applet/Applet/play/URL," Plays the audio clip at the specified absolute URL. Nothing\n happens if the audio clip cannot be found.\n\n @param   url   an absolute URL giving the location of the audio clip.\n"
15231,method,java/applet/Applet/play/URL;String," Plays the audio clip given the URL and a specifier that is\n relative to it. Nothing happens if the audio clip cannot be found.\n\n @param   url    an absolute URL giving the base location of the\n                 audio clip.\n @param   name   the location of the audio clip, relative to the\n                 <code>url</code> argument.\n"
15238,class,java/applet/Applet/AccessibleApplet," This class implements accessibility support for the \n <code>Applet</code> class.  It provides an implementation of the \n Java Accessibility API appropriate to applet user-interface elements.\n @since 1.3\n"
15239,method,java/applet/Applet/AccessibleApplet/getAccessibleRole/," Get the role of this object.\n\n @return an instance of AccessibleRole describing the role of the\n object\n"
15240,method,java/applet/Applet/AccessibleApplet/getAccessibleStateSet/," Get the state of this object.\n\n @return an instance of AccessibleStateSet containing the current\n state set of the object\n @see AccessibleState\n"
15241,method,java/applet/Applet/AccessibleApplet/Applet/AccessibleApplet/,""
15243,method,java/net/UnknownServiceException/UnknownServiceException/," Constructs a new <code>UnknownServiceException</code> with no \n detail message. \n"
15244,method,java/net/UnknownServiceException/UnknownServiceException/String," Constructs a new <code>UnknownServiceException</code> with the \n specified detail message. \n\n @param   msg   the detail message.\n"
15245,class,java/net/UnknownHostException," Thrown to indicate that the IP address of a host could not be determined.\n\n @author  Jonathan Payne \n @version 1.17, 03/23/10\n @since   JDK1.0\n"
15246,method,java/net/UnknownHostException/UnknownHostException/String," Constructs a new <code>UnknownHostException</code> with the \n specified detail message. \n\n @param   host   the detail message.\n"
15247,method,java/net/UnknownHostException/UnknownHostException/," Constructs a new <code>UnknownHostException</code> with no detail \n message. \n"
15248,interface,java/net/URLStreamHandlerFactory," This interface defines a factory for <code>URL</code> stream\n protocol handlers.\n <p>\n It is used by the <code>URL</code> class to create a\n <code>URLStreamHandler</code> for a specific protocol.\n\n @author  Arthur van Hoff\n @version 1.20, 03/23/10\n @see     java.net.URL\n @see     java.net.URLStreamHandler\n @since   JDK1.0\n"
15249,method,java/net/URLStreamHandlerFactory/createURLStreamHandler/String," Creates a new <code>URLStreamHandler</code> instance with the specified\n protocol.\n\n @param   protocol   the protocol ("<code>ftp</code>",\n                     "<code>http</code>", "<code>nntp</code>", etc.).\n @return  a <code>URLStreamHandler</code> for the specific protocol.\n @see     java.net.URLStreamHandler\n"
15258,method,java/net/URLStreamHandler/getHostAddress/URL," Get the IP address of our host. An empty host field or a DNS failure\n will result in a null return.\n\n @param u a URL object\n @return an <code>InetAddress</code> representing the host\n IP address.\n @since 1.3\n"
15260,method,java/net/URLStreamHandler/toExternalForm/URL," Converts a <code>URL</code> of a specific protocol to a\n <code>String</code>.\n\n @param   u   the URL.\n @return  a string representation of the <code>URL</code> argument.\n"
15263,method,java/net/URLStreamHandler/URLStreamHandler/,""
15270,method,java/net/URLDecoder/URLDecoder/,""
15272,method,java/net/URLConnection/getFileNameMap/," Loads filename map (a mimetable) from a data file. It will\n first try to load the user-specific table, defined\n by &quot;content.types.user.table&quot; property. If that fails,\n it tries to load the default built-in table at \n lib/content-types.properties under java home.\n\n @return the FileNameMap\n @since 1.2\n @see #setFileNameMap(java.net.FileNameMap)\n"
15276,method,java/net/URLConnection/getConnectTimeout/," Returns setting for connect timeout.\n <p>\n 0 return implies that the option is disabled\n (i.e., timeout of infinity).\n\n @return an <code>int</code> that indicates the connect timeout\n         value in milliseconds\n @see #setConnectTimeout(int)\n @see #connect()\n @since 1.5\n"
15278,method,java/net/URLConnection/getReadTimeout/," Returns setting for read timeout. 0 return implies that the\n option is disabled (i.e., timeout of infinity).\n\n @return an <code>int</code> that indicates the read timeout\n         value in milliseconds\n\n @see #setReadTimeout(int)\n @see InputStream#read()\n @since 1.5\n"
15279,method,java/net/URLConnection/getURL/," Returns the value of this <code>URLConnection</code>'s <code>URL</code>\n field.\n\n @return  the value of this <code>URLConnection</code>'s <code>URL</code>\n          field.\n @see     java.net.URLConnection#url\n"
15280,method,java/net/URLConnection/getContentLength/," Returns the value of the <code>content-length</code> header field.\n\n @return  the content length of the resource that this connection's URL\n          references, or <code>-1</code> if the content length is\n          not known.\n"
15281,method,java/net/URLConnection/getContentType/," Returns the value of the <code>content-type</code> header field.\n\n @return  the content type of the resource that the URL references,\n          or <code>null</code> if not known.\n @see     java.net.URLConnection#getHeaderField(java.lang.String)\n"
15282,method,java/net/URLConnection/getContentEncoding/," Returns the value of the <code>content-encoding</code> header field.\n\n @return  the content encoding of the resource that the URL references,\n          or <code>null</code> if not known.\n @see     java.net.URLConnection#getHeaderField(java.lang.String)\n"
15283,method,java/net/URLConnection/getExpiration/," Returns the value of the <code>expires</code> header field. \n\n @return  the expiration date of the resource that this URL references,\n          or 0 if not known. The value is the number of milliseconds since\n          January 1, 1970 GMT.\n @see     java.net.URLConnection#getHeaderField(java.lang.String)\n"
15284,method,java/net/URLConnection/getDate/," Returns the value of the <code>date</code> header field. \n\n @return  the sending date of the resource that the URL references,\n          or <code>0</code> if not known. The value returned is the\n          number of milliseconds since January 1, 1970 GMT.\n @see     java.net.URLConnection#getHeaderField(java.lang.String)\n"
15285,method,java/net/URLConnection/getLastModified/," Returns the value of the <code>last-modified</code> header field. \n The result is the number of milliseconds since January 1, 1970 GMT.\n\n @return  the date the resource referenced by this\n          <code>URLConnection</code> was last modified, or 0 if not known.\n @see     java.net.URLConnection#getHeaderField(java.lang.String)\n"
15287,method,java/net/URLConnection/getHeaderFields/," Returns an unmodifiable Map of the header fields.\n The Map keys are Strings that represent the\n response-header field names. Each Map value is an\n unmodifiable List of Strings that represents \n the corresponding field values.\n\n @return a Map of header fields\n @since 1.4\n"
15290,method,java/net/URLConnection/getHeaderFieldKey/int," Returns the key for the <code>n</code><sup>th</sup> header field.\n It returns <code>null</code> if there are fewer than <code>n+1</code> fields. \n\n @param   n   an index, where n>=0\n @return  the key for the <code>n</code><sup>th</sup> header field,\n          or <code>null</code> if there are fewer than <code>n+1</code>\n		fields.\n"
15291,method,java/net/URLConnection/getHeaderField/int," Returns the value for the <code>n</code><sup>th</sup> header field. \n It returns <code>null</code> if there are fewer than\n <code>n+1</code>fields. \n <p>\n This method can be used in conjunction with the \n {@link #getHeaderFieldKey(int) getHeaderFieldKey} method to iterate through all \n the headers in the message. \n\n @param   n   an index, where n>=0\n @return  the value of the <code>n</code><sup>th</sup> header field\n		or <code>null</code> if there are fewer than <code>n+1</code> fields\n @see     java.net.URLConnection#getHeaderFieldKey(int)\n"
15297,method,java/net/URLConnection/toString/," Returns a <code>String</code> representation of this URL connection.\n\n @return  a string representation of this <code>URLConnection</code>.\n"
15298,method,java/net/URLConnection/setDoInput/boolean," Sets the value of the <code>doInput</code> field for this \n <code>URLConnection</code> to the specified value. \n <p>\n A URL connection can be used for input and/or output.  Set the DoInput\n flag to true if you intend to use the URL connection for input,\n false if not.  The default is true.\n\n @param   doinput   the new value.\n @throws IllegalStateException if already connected\n @see     java.net.URLConnection#doInput\n @see #getDoInput()\n"
15299,method,java/net/URLConnection/getDoInput/," Returns the value of this <code>URLConnection</code>'s\n <code>doInput</code> flag.\n\n @return  the value of this <code>URLConnection</code>'s\n          <code>doInput</code> flag.\n @see     #setDoInput(boolean)\n"
15300,method,java/net/URLConnection/setDoOutput/boolean," Sets the value of the <code>doOutput</code> field for this \n <code>URLConnection</code> to the specified value. \n <p>\n A URL connection can be used for input and/or output.  Set the DoOutput\n flag to true if you intend to use the URL connection for output,\n false if not.  The default is false.\n\n @param   dooutput   the new value.\n @throws IllegalStateException if already connected\n @see #getDoOutput()\n"
15301,method,java/net/URLConnection/getDoOutput/," Returns the value of this <code>URLConnection</code>'s\n <code>doOutput</code> flag.\n\n @return  the value of this <code>URLConnection</code>'s\n          <code>doOutput</code> flag.\n @see     #setDoOutput(boolean)\n"
15302,method,java/net/URLConnection/setAllowUserInteraction/boolean," Set the value of the <code>allowUserInteraction</code> field of \n this <code>URLConnection</code>. \n\n @param   allowuserinteraction   the new value.\n @throws IllegalStateException if already connected\n @see     #getAllowUserInteraction()\n"
15303,method,java/net/URLConnection/getAllowUserInteraction/," Returns the value of the <code>allowUserInteraction</code> field for\n this object.\n\n @return  the value of the <code>allowUserInteraction</code> field for\n          this object.\n @see     #setAllowUserInteraction(boolean)\n"
15304,method,java/net/URLConnection/setDefaultAllowUserInteraction/boolean," Sets the default value of the \n <code>allowUserInteraction</code> field for all future \n <code>URLConnection</code> objects to the specified value. \n\n @param   defaultallowuserinteraction   the new value.\n @see     #getDefaultAllowUserInteraction()\n"
15305,method,java/net/URLConnection/getDefaultAllowUserInteraction/," Returns the default value of the <code>allowUserInteraction</code>\n field.\n <p>\n Ths default is "sticky", being a part of the static state of all\n URLConnections.  This flag applies to the next, and all following\n URLConnections that are created.\n\n @return  the default value of the <code>allowUserInteraction</code>\n          field.\n @see     #setDefaultAllowUserInteraction(boolean)\n"
15306,method,java/net/URLConnection/setUseCaches/boolean," Sets the value of the <code>useCaches</code> field of this \n <code>URLConnection</code> to the specified value. \n <p>\n Some protocols do caching of documents.  Occasionally, it is important\n to be able to "tunnel through" and ignore the caches (e.g., the\n "reload" button in a browser).  If the UseCaches flag on a connection\n is true, the connection is allowed to use whatever caches it can.\n  If false, caches are to be ignored.\n  The default value comes from DefaultUseCaches, which defaults to\n true.\n\n @param usecaches a <code>boolean</code> indicating whether \n or not to allow caching\n @throws IllegalStateException if already connected\n @see #getUseCaches()\n"
15307,method,java/net/URLConnection/getUseCaches/," Returns the value of this <code>URLConnection</code>'s\n <code>useCaches</code> field.\n\n @return  the value of this <code>URLConnection</code>'s\n          <code>useCaches</code> field.\n @see #setUseCaches(boolean)\n"
15308,method,java/net/URLConnection/setIfModifiedSince/long," Sets the value of the <code>ifModifiedSince</code> field of \n this <code>URLConnection</code> to the specified value.\n\n @param   ifmodifiedsince   the new value.\n @throws IllegalStateException if already connected\n @see     #getIfModifiedSince()\n"
15309,method,java/net/URLConnection/getIfModifiedSince/," Returns the value of this object's <code>ifModifiedSince</code> field.\n\n @return  the value of this object's <code>ifModifiedSince</code> field.\n @see #setIfModifiedSince(long)\n"
15310,method,java/net/URLConnection/getDefaultUseCaches/," Returns the default value of a <code>URLConnection</code>'s\n <code>useCaches</code> flag.\n <p>\n Ths default is "sticky", being a part of the static state of all\n URLConnections.  This flag applies to the next, and all following\n URLConnections that are created.\n\n @return  the default value of a <code>URLConnection</code>'s\n          <code>useCaches</code> flag.\n @see     #setDefaultUseCaches(boolean)\n"
15311,method,java/net/URLConnection/setDefaultUseCaches/boolean," Sets the default value of the <code>useCaches</code> field to the \n specified value. \n\n @param   defaultusecaches   the new value.\n @see     #getDefaultUseCaches()\n"
15314,method,java/net/URLConnection/getRequestProperty/String," Returns the value of the named general request property for this\n connection.\n\n @param key the keyword by which the request is known (e.g., "accept").\n @return  the value of the named general request property for this\n           connection. If key is null, then null is returned.\n @throws IllegalStateException if already connected\n @see #setRequestProperty(java.lang.String, java.lang.String)\n"
15315,method,java/net/URLConnection/getRequestProperties/," Returns an unmodifiable Map of general request\n properties for this connection. The Map keys\n are Strings that represent the request-header\n field names. Each Map value is a unmodifiable List \n of Strings that represents the corresponding \n field values.\n\n @return  a Map of the general request properties for this connection.\n @throws IllegalStateException if already connected\n @since 1.4\n"
15321,method,java/net/URLConnection/URLConnection/URL," Constructs a URL connection to the specified URL. A connection to \n the object referenced by the URL is not created. \n\n @param   url   the specified URL.\n"
15322,field,java/net/URLConnection/url," The URL represents the remote object on the World Wide Web to \n which this connection is opened. \n <p>\n The value of this field can be accessed by the \n <code>getURL</code> method. \n <p>\n The default value of this variable is the value of the URL \n argument in the <code>URLConnection</code> constructor. \n\n @see     java.net.URLConnection#getURL()\n @see     java.net.URLConnection#url\n"
15323,field,java/net/URLConnection/doInput," This variable is set by the <code>setDoInput</code> method. Its \n value is returned by the <code>getDoInput</code> method. \n <p>\n A URL connection can be used for input and/or output. Setting the \n <code>doInput</code> flag to <code>true</code> indicates that \n the application intends to read data from the URL connection. \n <p>\n The default value of this field is <code>true</code>. \n\n @see     java.net.URLConnection#getDoInput()\n @see     java.net.URLConnection#setDoInput(boolean)\n"
15324,field,java/net/URLConnection/doOutput," This variable is set by the <code>setDoOutput</code> method. Its \n value is returned by the <code>getDoOutput</code> method. \n <p>\n A URL connection can be used for input and/or output. Setting the \n <code>doOutput</code> flag to <code>true</code> indicates \n that the application intends to write data to the URL connection. \n <p>\n The default value of this field is <code>false</code>. \n\n @see     java.net.URLConnection#getDoOutput()\n @see     java.net.URLConnection#setDoOutput(boolean)\n"
15328,field,java/net/URLConnection/connected," If <code>false</code>, this connection object has not created a \n communications link to the specified URL. If <code>true</code>, \n the communications link has been established. \n"
15330,method,java/net/URLClassLoader/addURL/URL," Appends the specified URL to the list of URLs to search for\n classes and resources.\n\n @param url the URL to be added to the search path of URLs\n"
15331,method,java/net/URLClassLoader/getURLs/," Returns the search path of URLs for loading classes and resources.\n This includes the original list of URLs specified to the constructor,\n along with any URLs subsequently appended by the addURL() method.\n @return the search path of URLs for loading classes and resources.\n"
15332,method,java/net/URLClassLoader/findClass/String," Finds and loads the class with the specified name from the URL search\n path. Any URLs referring to JAR files are loaded and opened as needed\n until the class is found.\n\n @param name the name of the class\n @return the resulting class\n @exception ClassNotFoundException if the class could not be found\n"
15334,method,java/net/URLClassLoader/findResource/String," Finds the resource with the specified name on the URL search path.\n\n @param name the name of the resource\n @return a <code>URL</code> for the resource, or <code>null</code> \n if the resource could not be found.\n"
15335,method,java/net/URLClassLoader/findResources/String," Returns an Enumeration of URLs representing all of the resources\n on the URL search path having the specified name.\n\n @param name the resource name\n @exception IOException if an I/O exception occurs\n @return an <code>Enumeration</code> of <code>URL</code>s\n"
15345,method,java/net/URL/getQuery/," Gets the query part of this <code>URL</code>.\n\n @return  the query part of this <code>URL</code>, \n or <CODE>null</CODE> if one does not exist\n @since 1.3\n"
15346,method,java/net/URL/getPath/," Gets the path part of this <code>URL</code>.\n\n @return  the path part of this <code>URL</code>, or an\n empty string if one does not exist\n @since 1.3\n"
15347,method,java/net/URL/getUserInfo/," Gets the userInfo part of this <code>URL</code>.\n\n @return  the userInfo part of this <code>URL</code>, or \n <CODE>null</CODE> if one does not exist\n @since 1.3\n"
15348,method,java/net/URL/getAuthority/," Gets the authority part of this <code>URL</code>.\n\n @return  the authority part of this <code>URL</code>\n @since 1.3\n"
15349,method,java/net/URL/getPort/," Gets the port number of this <code>URL</code>.\n\n @return  the port number, or -1 if the port is not set\n"
15350,method,java/net/URL/getDefaultPort/," Gets the default port number of the protocol associated\n with this <code>URL</code>. If the URL scheme or the URLStreamHandler\n for the URL do not define a default port number,\n then -1 is returned.\n\n @return  the port number\n @since 1.4\n"
15351,method,java/net/URL/getProtocol/," Gets the protocol name of this <code>URL</code>.\n\n @return  the protocol of this <code>URL</code>.\n"
15352,method,java/net/URL/getHost/," Gets the host name of this <code>URL</code>, if applicable.\n The format of the host conforms to RFC 2732, i.e. for a\n literal IPv6 address, this method will return the IPv6 address\n enclosed in square brackets (<tt>'['</tt> and <tt>']'</tt>).\n\n @return  the host name of this <code>URL</code>.\n"
15353,method,java/net/URL/getFile/," Gets the file name of this <code>URL</code>.\n The returned file portion will be\n the same as <CODE>getPath()</CODE>, plus the concatenation of\n the value of <CODE>getQuery()</CODE>, if any. If there is \n no query portion, this method and <CODE>getPath()</CODE> will\n return identical results.\n\n @return  the file name of this <code>URL</code>,\n or an empty string if one does not exist\n"
15354,method,java/net/URL/getRef/," Gets the anchor (also known as the "reference") of this\n <code>URL</code>.\n\n @return  the anchor (also known as the "reference") of this\n          <code>URL</code>, or <CODE>null</CODE> if one does not exist\n"
15356,method,java/net/URL/hashCode/," Creates an integer suitable for hash table indexing.<p>\n \n The hash code is based upon all the URL components relevant for URL\n comparison. As such, this operation is a blocking operation.<p>\n\n @return  a hash code for this <code>URL</code>.\n"
15357,method,java/net/URL/sameFile/URL," Compares two URLs, excluding the fragment component.<p>\n\n Returns <code>true</code> if this <code>URL</code> and the\n <code>other</code> argument are equal without taking the\n fragment component into consideration.\n\n @param   other   the <code>URL</code> to compare against.\n @return  <code>true</code> if they reference the same remote object;\n          <code>false</code> otherwise.\n"
15363,method,java/net/URL/openStream/," Opens a connection to this <code>URL</code> and returns an\n <code>InputStream</code> for reading from that connection. This\n method is a shorthand for:\n <blockquote><pre>\n     openConnection().getInputStream()\n </pre></blockquote>\n\n @return     an input stream for reading from the URL connection.\n @exception  IOException  if an I/O exception occurs.\n @see        java.net.URL#openConnection()\n @see        java.net.URLConnection#getInputStream()\n"
15364,method,java/net/URL/getContent/," Gets the contents of this URL. This method is a shorthand for:\n <blockquote><pre>\n     openConnection().getContent()\n </pre></blockquote>\n\n @return     the contents of this URL.\n @exception  IOException  if an I/O exception occurs.\n @see        java.net.URLConnection#getContent()\n"
15365,method,java/net/URL/getContent/Class[]," Gets the contents of this URL. This method is a shorthand for:\n <blockquote><pre>\n     openConnection().getContent(Class[])\n </pre></blockquote>\n\n @param classes an array of Java types\n @return     the content object of this URL that is the first match of\n               the types specified in the classes array.\n               null if none of the requested types are supported.\n @exception  IOException  if an I/O exception occurs.\n @see        java.net.URLConnection#getContent(Class[])\n @since 1.3\n"
15372,method,java/net/URL/URL/URL;String;URLStreamHandler," Creates a URL by parsing the given spec with the specified handler\n within a specified context. If the handler is null, the parsing\n occurs as with the two argument constructor.\n\n @param      context   the context in which to parse the specification.\n @param      spec      the <code>String</code> to parse as a URL.\n @param	   handler   the stream handler for the URL.\n @exception  MalformedURLException  if no protocol is specified, or an\n               unknown protocol is found.\n @exception  SecurityException\n        if a security manager exists and its\n        <code>checkPermission</code> method doesn't allow\n        specifying a stream handler.\n @see        java.net.URL#URL(java.lang.String, java.lang.String,\n			int, java.lang.String)\n @see        java.net.URLStreamHandler\n @see        java.net.URLStreamHandler#parseURL(java.net.URL,\n			java.lang.String, int, int)\n"
15373,class,java/net/URISyntaxException," Checked exception thrown to indicate that a string could not be parsed as a\n URI reference.\n\n @author Mark Reinhold\n @version 1.8, 10/03/23\n @see URI\n @since 1.4\n"
15374,method,java/net/URISyntaxException/getInput/," Returns the input string.\n\n @return  The input string\n"
15375,method,java/net/URISyntaxException/getReason/," Returns a string explaining why the input string could not be parsed.\n\n @return  The reason string\n"
15383,method,java/net/URI/normalize/," Normalizes this URI's path.\n\n <p> If this URI is opaque, or if its path is already in normal form,\n then this URI is returned.  Otherwise a new URI is constructed that is\n identical to this URI except that its path is computed by normalizing\n this URI's path in a manner consistent with <a\n href="http://www.ietf.org/rfc/rfc2396.txt">RFC&nbsp;2396</a>,\n section&nbsp;5.2, step&nbsp;6, sub-steps&nbsp;c through&nbsp;f; that is:\n </p>\n\n <ol>\n\n   <li><p> All <tt>"."</tt> segments are removed. </p></li>\n\n   <li><p> If a <tt>".."</tt> segment is preceded by a non-<tt>".."</tt>\n   segment then both of these segments are removed.  This step is\n   repeated until it is no longer applicable. </p></li>\n\n   <li><p> If the path is relative, and if its first segment contains a\n   colon character (<tt>':'</tt>), then a <tt>"."</tt> segment is\n   prepended.  This prevents a relative URI with a path such as\n   <tt>"a:b/c/d"</tt> from later being re-parsed as an opaque URI with a\n   scheme of <tt>"a"</tt> and a scheme-specific part of <tt>"b/c/d"</tt>.\n   <b><i>(Deviation from RFC&nbsp;2396)</i></b> </p></li>\n\n </ol>\n\n <p> A normalized path will begin with one or more <tt>".."</tt> segments\n if there were insufficient non-<tt>".."</tt> segments preceding them to\n allow their removal.  A normalized path will begin with a <tt>"."</tt>\n segment if one was inserted by step 3 above.  Otherwise, a normalized\n path will not contain any <tt>"."</tt> or <tt>".."</tt> segments. </p>\n\n @return  A URI equivalent to this URI,\n          but whose path is in normal form\n"
15386,method,java/net/URI/relativize/URI," Relativizes the given URI against this URI.\n\n <p> The relativization of the given URI against this URI is computed as\n follows: </p>\n\n <ol>\n\n   <li><p> If either this URI or the given URI are opaque, or if the\n   scheme and authority components of the two URIs are not identical, or\n   if the path of this URI is not a prefix of the path of the given URI,\n   then the given URI is returned. </p></li>\n\n   <li><p> Otherwise a new relative hierarchical URI is constructed with\n   query and fragment components taken from the given URI and with a path\n   component computed by removing this URI's path from the beginning of\n   the given URI's path. </p></li>\n\n </ol>\n\n @param  uri  The URI to be relativized against this URI\n @return The resulting URI\n\n @throws  NullPointerException\n          If <tt>uri</tt> is <tt>null</tt>\n"
15394,method,java/net/URI/getAuthority/," Returns the decoded authority component of this URI.\n\n <p> The string returned by this method is equal to that returned by the\n {@link #getRawAuthority() getRawAuthority} method except that all\n sequences of escaped octets are <a href="#decode">decoded</a>.  </p>\n\n @return  The decoded authority component of this URI,\n          or <tt>null</tt> if the authority is undefined\n"
15396,method,java/net/URI/getUserInfo/," Returns the decoded user-information component of this URI.\n\n <p> The string returned by this method is equal to that returned by the\n {@link #getRawUserInfo() getRawUserInfo} method except that all\n sequences of escaped octets are <a href="#decode">decoded</a>.  </p>\n\n @return  The decoded user-information component of this URI,\n          or <tt>null</tt> if the user information is undefined\n"
15398,method,java/net/URI/getPort/," Returns the port number of this URI.\n\n <p> The port component of a URI, if defined, is a non-negative\n integer. </p>\n\n @return  The port component of this URI,\n          or <tt>-1</tt> if the port is undefined\n"
15400,method,java/net/URI/getPath/," Returns the decoded path component of this URI.\n\n <p> The string returned by this method is equal to that returned by the\n {@link #getRawPath() getRawPath} method except that all sequences of\n escaped octets are <a href="#decode">decoded</a>.  </p>\n\n @return  The decoded path component of this URI,\n          or <tt>null</tt> if the path is undefined\n"
15402,method,java/net/URI/getQuery/," Returns the decoded query component of this URI.\n\n <p> The string returned by this method is equal to that returned by the\n {@link #getRawQuery() getRawQuery} method except that all sequences of\n escaped octets are <a href="#decode">decoded</a>.  </p>\n\n @return  The decoded query component of this URI,\n          or <tt>null</tt> if the query is undefined\n"
15404,method,java/net/URI/getFragment/," Returns the decoded fragment component of this URI.\n\n <p> The string returned by this method is equal to that returned by the\n {@link #getRawFragment() getRawFragment} method except that all\n sequences of escaped octets are <a href="#decode">decoded</a>.  </p>\n\n @return  The decoded fragment component of this URI,\n          or <tt>null</tt> if the fragment is undefined\n"
15406,method,java/net/URI/hashCode/," Returns a hash-code value for this URI.  The hash code is based upon all\n of the URI's components, and satisfies the general contract of the\n {@link java.lang.Object#hashCode() Object.hashCode} method.\n\n @return  A hash-code value for this URI\n"
15415,class,java/net/SocketTimeoutException," Signals that a timeout has occurred on a socket read or accept.\n\n @since   1.4\n"
15416,method,java/net/SocketTimeoutException/SocketTimeoutException/String," Constructs a new SocketTimeoutException with a detail \n message.\n @param msg the detail message\n"
15417,method,java/net/SocketTimeoutException/SocketTimeoutException/," Construct a new SocketTimeoutException with no detailed message.\n"
15421,method,java/net/SocketPermission/hashCode/," Returns the hash code value for this object.\n\n @return a hash code value for this object.\n"
15422,method,java/net/SocketPermission/getActions/," Returns the canonical string representation of the actions.\n Always returns present actions in the following order: \n connect, listen, accept, resolve.  \n\n @return the canonical string representation of the actions.\n"
15427,method,java/net/SocketOptions/getOption/int," Fetch the value of an option.\n Binary options will return java.lang.Boolean(true)\n if enabled, java.lang.Boolean(false) if disabled, e.g.:\n <BR><PRE>\n SocketImpl s;\n ...\n Boolean noDelay = (Boolean)(s.getOption(TCP_NODELAY));\n if (noDelay.booleanValue()) {\n     // true if TCP_NODELAY is enabled...\n ...\n }\n </PRE>\n <P>\n For options that take a particular type as a parameter,\n getOption(int) will return the paramter's value, else\n it will return java.lang.Boolean(false):\n <PRE>\n Object o = s.getOption(SO_LINGER);\n if (o instanceof Integer) {\n     System.out.print("Linger time is " + ((Integer)o).intValue());\n } else {\n   // the true type of o is java.lang.Boolean(false);\n }\n </PRE>\n\n @param optID an <code>int</code> identifying the option to fetch\n @return the value of the option\n @throws SocketException if the socket is closed\n @throws SocketException if <I>optID</I> is unknown along the\n         protocol stack (including the SocketImpl)\n @see #setOption(int, java.lang.Object)\n"
15432,field,java/net/SocketOptions/IP_MULTICAST_IF,"Set which outgoing interface on which to send multicast packets.\n Useful on hosts with multiple network interfaces, where applications\n want to use other than the system default.  Takes/returns an InetAddress.\n <P>\n Valid for Multicast: DatagramSocketImpl\n <P>\n @see MulticastSocket#setInterface(InetAddress)\n @see MulticastSocket#getInterface()\n"
15434,field,java/net/SocketOptions/IP_MULTICAST_LOOP,"\n This option enables or disables local loopback of multicast datagrams.\n This option is enabled by default for Multicast Sockets.\n @since 1.4\n"
15435,field,java/net/SocketOptions/IP_TOS,"\n This option sets the type-of-service or traffic class field \n in the IP header for a TCP or UDP socket.\n @since 1.4\n"
15441,field,java/net/SocketOptions/SO_OOBINLINE," When the OOBINLINE option is set, any TCP urgent data received on\n the socket will be received through the socket input stream.\n When the option is disabled (which is the default) urgent data\n is silently discarded.\n\n @see Socket#setOOBInline\n @see Socket#getOOBInline\n"
15442,interface,java/net/SocketImplFactory," This interface defines a factory for socket implementations. It\n is used by the classes <code>Socket</code> and\n <code>ServerSocket</code> to create actual socket\n implementations.\n\n @author  Arthur van Hoff\n @version 1.20, 03/23/10\n @see     java.net.Socket\n @see     java.net.ServerSocket\n @since   JDK1.0\n"
15443,method,java/net/SocketImplFactory/createSocketImpl/," Creates a new <code>SocketImpl</code> instance.\n\n @return  a new instance of <code>SocketImpl</code>.\n @see     java.net.SocketImpl\n"
15458,method,java/net/SocketImpl/getFileDescriptor/," Returns the value of this socket's <code>fd</code> field.\n\n @return  the value of this socket's <code>fd</code> field.\n @see     java.net.SocketImpl#fd\n"
15459,method,java/net/SocketImpl/getInetAddress/," Returns the value of this socket's <code>address</code> field.\n\n @return  the value of this socket's <code>address</code> field.\n @see     java.net.SocketImpl#address\n"
15460,method,java/net/SocketImpl/getPort/," Returns the value of this socket's <code>port</code> field.\n\n @return  the value of this socket's <code>port</code> field.\n @see     java.net.SocketImpl#port\n"
15463,method,java/net/SocketImpl/getLocalPort/," Returns the value of this socket's <code>localport</code> field.\n\n @return  the value of this socket's <code>localport</code> field.\n @see     java.net.SocketImpl#localport\n"
15464,method,java/net/SocketImpl/toString/," Returns the address and port of this socket as a <code>String</code>.\n\n @return  a string representation of this socket.\n"
15466,method,java/net/SocketImpl/SocketImpl/,""
15467,field,java/net/SocketImpl/fd," The file descriptor object for this socket. \n"
15468,field,java/net/SocketImpl/address," The IP address of the remote end of this socket. \n"
15469,field,java/net/SocketImpl/port," The port number on the remote host to which this socket is connected. \n"
15470,field,java/net/SocketImpl/localport," The local port number to which this socket is connected. \n"
15472,method,java/net/SocketException/SocketException/String," Constructs a new <code>SocketException</code> with the \n specified detail message. \n\n @param msg the detail message.\n"
15473,method,java/net/SocketException/SocketException/," Constructs a new <code>SocketException</code> with no detail message.\n"
15475,method,java/net/SocketAddress/SocketAddress/,""
15480,method,java/net/Socket/getInetAddress/," Returns the address to which the socket is connected.\n\n @return  the remote IP address to which this socket is connected,\n		or <code>null</code> if the socket is not connected.\n"
15481,method,java/net/Socket/getLocalAddress/," Gets the local address to which the socket is bound.\n\n @return the local address to which the socket is bound or \n	       <code>InetAddress.anyLocalAddress()</code>\n	       if the socket is not bound yet.\n @since   JDK1.1\n"
15482,method,java/net/Socket/getPort/," Returns the remote port to which this socket is connected.\n\n @return  the remote port number to which this socket is connected, or\n	        0 if the socket is not connected yet.\n"
15483,method,java/net/Socket/getLocalPort/," Returns the local port to which this socket is bound.\n\n @return  the local port number to which this socket is bound or -1\n	        if the socket is not bound yet.\n"
15484,method,java/net/Socket/getRemoteSocketAddress/," Returns the address of the endpoint this socket is connected to, or\n <code>null</code> if it is unconnected.\n @return a <code>SocketAddress</code> reprensenting the remote endpoint of this\n	       socket, or <code>null</code> if it is not connected yet.\n @see #getInetAddress()\n @see #getPort()\n @see #connect(SocketAddress, int)\n @see #connect(SocketAddress)\n @since 1.4\n"
15485,method,java/net/Socket/getLocalSocketAddress/," Returns the address of the endpoint this socket is bound to, or\n <code>null</code> if it is not bound yet.\n\n @return a <code>SocketAddress</code> representing the local endpoint of this\n	       socket, or <code>null</code> if it is not bound yet.\n @see #getLocalAddress()\n @see #getLocalPort()\n @see #bind(SocketAddress)\n @since 1.4\n"
15511,method,java/net/Socket/toString/," Converts this socket to a <code>String</code>.\n\n @return  a string representation of this socket.\n"
15512,method,java/net/Socket/isConnected/," Returns the connection state of the socket.\n\n @return true if the socket successfuly connected to a server\n @since 1.4\n"
15513,method,java/net/Socket/isBound/," Returns the binding state of the socket.\n\n @return true if the socket successfuly bound to an address\n @since 1.4\n @see #bind\n"
15514,method,java/net/Socket/isClosed/," Returns the closed state of the socket.\n\n @return true if the socket has been closed\n @since 1.4\n @see #close\n"
15515,method,java/net/Socket/isInputShutdown/," Returns whether the read-half of the socket connection is closed.\n\n @return true if the input of the socket has been shutdown\n @since 1.4\n @see #shutdownInput\n"
15516,method,java/net/Socket/isOutputShutdown/," Returns whether the write-half of the socket connection is closed.\n\n @return true if the output of the socket has been shutdown\n @since 1.4\n @see #shutdownOutput\n"
15519,method,java/net/Socket/Socket/," Creates an unconnected socket, with the\n system-default type of SocketImpl.\n\n @since   JDK1.1\n @revised 1.4\n"
15528,class,java/net/ServerSocket," This class implements server sockets. A server socket waits for \n requests to come in over the network. It performs some operation \n based on that request, and then possibly returns a result to the requester.\n <p>\n The actual work of the server socket is performed by an instance \n of the <code>SocketImpl</code> class. An application can \n change the socket factory that creates the socket \n implementation to configure itself to create sockets \n appropriate to the local firewall. \n\n @author  unascribed\n @version 1.92, 03/23/10\n @see     java.net.SocketImpl\n @see     java.net.ServerSocket#setSocketFactory(java.net.SocketImplFactory)\n @see     java.nio.channels.ServerSocketChannel\n @since   JDK1.0\n"
15531,method,java/net/ServerSocket/getInetAddress/," Returns the local address of this server socket.\n\n @return  the address to which this socket is bound,\n          or <code>null</code> if the socket is unbound.\n"
15532,method,java/net/ServerSocket/getLocalPort/," Returns the port on which this socket is listening.\n\n @return  the port number to which this socket is listening or\n	        -1 if the socket is not bound yet.\n"
15533,method,java/net/ServerSocket/getLocalSocketAddress/," Returns the address of the endpoint this socket is bound to, or\n <code>null</code> if it is not bound yet.\n\n @return a <code>SocketAddress</code> representing the local endpoint of this\n	       socket, or <code>null</code> if it is not bound yet.\n @see #getInetAddress()\n @see #getLocalPort()\n @see #bind(SocketAddress)\n @since 1.4\n"
15538,method,java/net/ServerSocket/isBound/," Returns the binding state of the ServerSocket.\n\n @return true if the ServerSocket succesfuly bound to an address\n @since 1.4\n"
15539,method,java/net/ServerSocket/isClosed/," Returns the closed state of the ServerSocket.\n\n @return true if the socket has been closed\n @since 1.4\n"
15544,method,java/net/ServerSocket/toString/," Returns the implementation address and implementation port of \n this socket as a <code>String</code>.\n\n @return  a string representation of this socket.\n"
15553,class,java/net/SecureCacheResponse," Represents a cache response originally retrieved through secure\n means, such as TLS.\n\n @since 1.5\n"
15554,method,java/net/SecureCacheResponse/getCipherSuite/," Returns the cipher suite in use on the original connection that\n retrieved the network resource.\n\n @return a string representing the cipher suite\n"
15557,method,java/net/SecureCacheResponse/getPeerPrincipal/," Returns the server's principal which was established as part of\n defining the session during the original connection that\n retrieved the network resource.\n\n @return the server's principal. Returns an X500Principal of the\n end-entity certiticate for X509-based cipher suites, and\n KerberosPrincipal for Kerberos cipher suites.\n\n @throws SSLPeerUnverifiedException if the peer was not verified.\n\n @see #getServerCertificateChain()\n @see #getLocalPrincipal()\n"
15558,method,java/net/SecureCacheResponse/getLocalPrincipal/," Returns the principal that was sent to the server during\n handshaking in the original connection that retrieved the\n network resource.\n\n @return the principal sent to the server. Returns an X500Principal\n of the end-entity certificate for X509-based cipher suites, and\n KerberosPrincipal for Kerberos cipher suites. If no principal was\n sent, then null is returned.\n\n @see #getLocalCertificateChain()\n @see #getPeerPrincipal()\n"
15559,method,java/net/SecureCacheResponse/SecureCacheResponse/,""
15561,method,java/net/ResponseCache/getDefault/," Gets the system-wide response cache.\n\n @throws  SecurityException\n          If a security manager has been installed and it denies\n {@link NetPermission}<tt>("getResponseCache")</tt>\n\n @see #setDefault(ResponseCache)\n @return the system-wide <code>ResponseCache</code>\n @since 1.5\n"
15565,method,java/net/ResponseCache/ResponseCache/,""
15567,method,java/net/ProxySelector/getDefault/," Gets the system-wide proxy selector.\n\n @throws  SecurityException\n          If a security manager has been installed and it denies\n {@link NetPermission}<tt>("getProxySelector")</tt>\n @see #setDefault(ProxySelector)\n @return the system-wide <code>ProxySelector</code> \n @since 1.5\n"
15571,method,java/net/ProxySelector/ProxySelector/,""
15572,class,java/net/Proxy," This class represents a proxy setting, typically a type (http, socks) and\n a socket address. \n A <code>Proxy</code> is an immutable object.\n\n @version 1.3, 08/09/03\n @see     java.net.ProxySelector\n @author Yingxian Wang\n @author Jean-Christophe Collet\n @since   1.5\n"
15573,method,java/net/Proxy/type/," Returns the proxy type.\n\n @return a Type representing the proxy type \n"
15574,method,java/net/Proxy/address/," Returns the socket address of the proxy, or \n <code>null</code> if its a direct connection.\n\n @return a <code>SocketAddress</code> representing the socket end\n         point of the proxy\n"
15577,method,java/net/Proxy/hashCode/," Returns a hashcode for this Proxy.\n\n @return  a hash code value for this Proxy.\n"
15579,field,java/net/Proxy/NO_PROXY," A proxy setting that represents a <code>DIRECT</code> connection,\n basically telling the protocol handler not to use any proxying.\n Used, for instance, to create sockets bypassing any other global\n proxy settings (like SOCKS):\n <P>\n <code>Socket s = new Socket(Proxy.NO_PROXY);</code><br>\n <P>\n"
15580,class,java/net/Proxy/Type," Represents the proxy type.\n\n @since 1.5\n"
15581,method,java/net/Proxy/Type/values/,""
15582,method,java/net/Proxy/Type/valueOf/String,""
15583,field,java/net/Proxy/Type/DIRECT," Represents a direct connection, or the absence of a proxy.\n"
15584,field,java/net/Proxy/Type/HTTP," Represents proxy for high level protocols such as HTTP or FTP.\n"
15585,field,java/net/Proxy/Type/SOCKS," Represents a SOCKS (V4 or V5) proxy.\n"
15587,method,java/net/ProtocolException/ProtocolException/String," Constructs a new <code>ProtocolException</code> with the \n specified detail message. \n\n @param   host   the detail message.\n"
15588,method,java/net/ProtocolException/ProtocolException/," Constructs a new <code>ProtocolException</code> with no detail message.\n"
15589,class,java/net/PortUnreachableException," Signals that an ICMP Port Unreachable message has been\n received on a connected datagram.\n\n @since   1.4\n"
15590,method,java/net/PortUnreachableException/PortUnreachableException/String," Constructs a new <code>PortUnreachableException</code> with a \n detail message.\n @param msg the detail message\n"
15591,method,java/net/PortUnreachableException/PortUnreachableException/," Construct a new <code>PortUnreachableException</code> with no \n detailed message.\n"
15592,class,java/net/PasswordAuthentication," The class PasswordAuthentication is a data holder that is used by\n Authenticator.  It is simply a repository for a user name and a password.\n\n @see java.net.Authenticator\n @see java.net.Authenticator#getPasswordAuthentication()\n\n @author  Bill Foote\n @version 1.17, 03/23/10\n @since   1.2\n"
15593,method,java/net/PasswordAuthentication/getUserName/," Returns the user name.\n\n @return the user name\n"
15598,method,java/net/NoRouteToHostException/NoRouteToHostException/," Construct a new NoRouteToHostException with no detailed message.\n"
15599,class,java/net/NetworkInterface," This class represents a Network Interface made up of a name, \n and a list of IP addresses assigned to this interface.\n It is used to identify the local interface on which a multicast group\n is joined. \n\n Interfaces are normally known by names such as "le0".\n\n @since 1.4\n"
15600,method,java/net/NetworkInterface/getName/," Get the name of this network interface.\n\n @return the name of this network interface\n"
15603,method,java/net/NetworkInterface/getSubInterfaces/," Get an Enumeration with all the subinterfaces (also known as virtual\n interfaces) attached to this network interface.\n <p>\n For instance eth0:1 will be a subinterface to eth0.\n\n @return an Enumeration object with all of the subinterfaces\n of this network interface\n @since 1.6\n"
15604,method,java/net/NetworkInterface/getParent/," Returns the parent NetworkInterface of this interface if this is\n a subinterface, or <code>null</code> if it is a physical\n (non virtual) interface or has no parent.\n\n @return The <code>NetworkInterface</code> this interface is attached to.\n @since 1.6\n"
15605,method,java/net/NetworkInterface/getDisplayName/," Get the display name of this network interface.\n A display name is a human readable String describing the network\n device.\n\n @return the display name of this network interface, \n         or null if no display name is available.\n"
15617,method,java/net/NetworkInterface/hashCode/,""
15618,method,java/net/NetworkInterface/toString/,""
15625,method,java/net/MulticastSocket/getTTL/," Get the default time-to-live for multicast packets sent out on\n the socket.\n\n @exception IOException if an I/O exception occurs\n while getting the default time-to-live value\n @return the default time-to-live value\n @deprecated use the getTimeToLive method instead, which returns\n an <b>int</b> instead of a <b>byte</b>.\n @see #setTTL(byte)\n"
15626,method,java/net/MulticastSocket/getTimeToLive/," Get the default time-to-live for multicast packets sent out on\n the socket.\n @exception IOException if an I/O exception occurs while\n getting the default time-to-live value\n @return the default time-to-live value\n @see #setTimeToLive(int)\n"
15641,class,java/net/MalformedURLException," Thrown to indicate that a malformed URL has occurred. Either no \n legal protocol could be found in a specification string or the \n string could not be parsed. \n\n @author  Arthur van Hoff\n @version 1.18, 03/23/10\n @since   JDK1.0\n"
15642,method,java/net/MalformedURLException/MalformedURLException/," Constructs a <code>MalformedURLException</code> with no detail message.\n"
15643,method,java/net/MalformedURLException/MalformedURLException/String," Constructs a <code>MalformedURLException</code> with the \n specified detail message. \n\n @param   msg   the detail message.\n"
15645,method,java/net/JarURLConnection/getJarFileURL/," Returns the URL for the Jar file for this connection.\n\n @return the URL for the Jar file for this connection.\n"
15646,method,java/net/JarURLConnection/getEntryName/,"\n Return the entry name for this connection. This method\n returns null if the JAR file URL corresponding to this\n connection points to a JAR file and not a JAR file entry.\n\n @return the entry name for this connection, if any.  \n"
15647,method,java/net/JarURLConnection/getJarFile/,"\n Return the JAR file for this connection. \n\n @return the JAR file for this connection. If the connection is\n a connection to an entry of a JAR file, the JAR file object is\n returned\n\n @exception IOException if an IOException occurs while trying to\n connect to the JAR file for this connection.\n\n @see #connect\n"
15648,method,java/net/JarURLConnection/getManifest/," Returns the Manifest for this connection, or null if none.\n\n @return the manifest object corresponding to the JAR file object\n for this connection.\n\n @exception IOException if getting the JAR file for this\n connection causes an IOException to be trown.\n\n @see #getJarFile\n"
15649,method,java/net/JarURLConnection/getJarEntry/,"\n Return the JAR entry object for this connection, if any. This\n method returns null if the JAR file URL corresponding to this\n connection points to a JAR file and not a JAR file entry.\n\n @return the JAR entry object for this connection, or null if\n the JAR URL for this connection points to a JAR file.\n\n @exception IOException if getting the JAR file for this\n connection causes an IOException to be trown.\n\n @see #getJarFile\n @see #getJarEntry\n"
15650,method,java/net/JarURLConnection/getAttributes/," Return the Attributes object for this connection if the URL\n for it points to a JAR file entry, null otherwise.\n \n @return the Attributes object for this connection if the URL\n for it points to a JAR file entry, null otherwise.  \n\n @exception IOException if getting the JAR entry causes an\n IOException to be thrown.\n\n @see #getJarEntry\n"
15651,method,java/net/JarURLConnection/getMainAttributes/,"\n Returns the main Attributes for the JAR file for this\n connection.\n\n @return the main Attributes for the JAR file for this\n connection.\n\n @exception IOException if getting the manifest causes an\n IOException to be thrown.\n\n @see #getJarFile\n @see #getManifest \n"
15653,method,java/net/JarURLConnection/JarURLConnection/URL," Creates the new JarURLConnection to the specified URL.\n @param url the URL \n @throws MalformedURLException if no legal protocol \n could be found in a specification string or the \n string could not be parsed. \n"
15655,class,java/net/InterfaceAddress," This class represents a Network Interface address. In short it's an\n IP address, a subnet mask and a broadcast address when the address is\n an IPv4 one. An IP address and a network prefix length in the case\n of IPv6 address.\n\n @see java.net.NetworkInterface\n @since 1.6\n"
15656,method,java/net/InterfaceAddress/getAddress/," Returns an <code>InetAddress</code> for this address.\n\n @return the <code>InetAddress</code> for this address.\n"
15658,method,java/net/InterfaceAddress/getNetworkPrefixLength/," Returns the network prefix length for this address. This is also known\n as the subnet mask in the context of IPv4 addresses.\n Typical IPv4 values would be 8 (255.0.0.0), 16 (255.255.0.0)\n or 24 (255.255.255.0). <p>\n Typical IPv6 values would be 128 (::1/128) or 10 (fe80::203:baff:fe27:1243/10)\n\n @return a <code>short</code> representing the prefix length for the\n	       subnet of that address.\n"
15660,method,java/net/InterfaceAddress/hashCode/," Returns a hashcode for this Interface address.\n\n @return  a hash code value for this Interface address.\n"
15661,method,java/net/InterfaceAddress/toString/," Converts this Interface address to a <code>String</code>. The \n string returned is of the form: InetAddress / prefix length [ broadcast address ].\n\n @return  a string representation of this Interface address.\n"
15664,method,java/net/InetSocketAddress/getPort/," Gets the port number.\n\n @return the port number.\n"
15665,method,java/net/InetSocketAddress/getAddress/," \n Gets the <code>InetAddress</code>.\n\n @return the InetAdress or <code>null</code> if it is unresolved.\n"
15666,method,java/net/InetSocketAddress/getHostName/," Gets the <code>hostname</code>.\n\n @return	the hostname part of the address.\n"
15667,method,java/net/InetSocketAddress/isUnresolved/," Checks whether the address has been resolved or not.\n\n @return <code>true</code> if the hostname couldn't be resolved into\n		an <code>InetAddress</code>.\n"
15670,method,java/net/InetSocketAddress/hashCode/," Returns a hashcode for this socket address.\n\n @return  a hash code value for this socket address.\n"
15675,method,java/net/InetAddress/isMulticastAddress/," Utility routine to check if the InetAddress is an\n IP multicast address.\n @return a <code>boolean</code> indicating if the InetAddress is \n an IP multicast address\n @since   JDK1.1\n"
15676,method,java/net/InetAddress/isAnyLocalAddress/," Utility routine to check if the InetAddress in a wildcard address.\n @return a <code>boolean</code> indicating if the Inetaddress is\n         a wildcard address.\n @since 1.4\n"
15677,method,java/net/InetAddress/isLoopbackAddress/," Utility routine to check if the InetAddress is a loopback address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a loopback address; or false otherwise.\n @since 1.4\n"
15678,method,java/net/InetAddress/isLinkLocalAddress/," Utility routine to check if the InetAddress is an link local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a link local address; or false if address is not a link local unicast address.\n @since 1.4\n"
15679,method,java/net/InetAddress/isSiteLocalAddress/," Utility routine to check if the InetAddress is a site local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a site local address; or false if address is not a site local unicast address.\n @since 1.4\n"
15680,method,java/net/InetAddress/isMCGlobal/," Utility routine to check if the multicast address has global scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of global scope, false if it is not \n         of global scope or it is not a multicast address\n @since 1.4\n"
15681,method,java/net/InetAddress/isMCNodeLocal/," Utility routine to check if the multicast address has node scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of node-local scope, false if it is not \n         of node-local scope or it is not a multicast address\n @since 1.4\n"
15682,method,java/net/InetAddress/isMCLinkLocal/," Utility routine to check if the multicast address has link scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of link-local scope, false if it is not \n         of link-local scope or it is not a multicast address\n @since 1.4\n"
15683,method,java/net/InetAddress/isMCSiteLocal/," Utility routine to check if the multicast address has site scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of site-local scope, false if it is not \n         of site-local scope or it is not a multicast address\n @since 1.4\n"
15684,method,java/net/InetAddress/isMCOrgLocal/," Utility routine to check if the multicast address has organization scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of organization-local scope, \n         false if it is not of organization-local scope \n         or it is not a multicast address\n @since 1.4\n"
15689,method,java/net/InetAddress/getAddress/," Returns the raw IP address of this <code>InetAddress</code>\n object. The result is in network byte order: the highest order\n byte of the address is in <code>getAddress()[0]</code>.\n\n @return  the raw IP address of this object.\n"
15690,method,java/net/InetAddress/getHostAddress/," Returns the IP address string in textual presentation.\n\n @return  the raw IP address in a string format.\n @since   JDK1.0.2\n"
15691,method,java/net/InetAddress/hashCode/," Returns a hashcode for this IP address.\n\n @return  a hash code value for this IP address.\n"
15693,method,java/net/InetAddress/toString/," Converts this IP address to a <code>String</code>. The \n string returned is of the form: hostname / literal IP \n address.\n\n If the host name is unresolved, no reverse name service loopup\n is performed. The hostname part will be represented by an empty string.\n\n @return  a string representation of this IP address.\n"
15701,method,java/net/Inet6Address/getByAddress/String;byte[];int," Create an Inet6Address in the exact manner of {@link InetAddress#getByAddress(String,byte[])}\n except that the IPv6 scope_id is set to the given numeric value.\n The scope_id is not checked to determine if it corresponds to any interface on the system.\n See <a href="Inet6Address.html#scoped">here</a> for a description of IPv6\n scoped addresses.\n\n @param host the specified host\n @param addr the raw IP address in network byte order\n @param scope_id the numeric scope_id for the address.\n @return  an Inet6Address object created from the raw IP address.\n @exception  UnknownHostException  if IP address is of illegal length.\n\n @since 1.5\n"
15702,method,java/net/Inet6Address/isMulticastAddress/," Utility routine to check if the InetAddress is an IP multicast\n address. 11111111 at the start of the address identifies the\n address as being a multicast address.\n\n @return a <code>boolean</code> indicating if the InetAddress is\n an IP multicast address\n @since JDK1.1\n"
15703,method,java/net/Inet6Address/isAnyLocalAddress/," Utility routine to check if the InetAddress in a wildcard address.\n @return a <code>boolean</code> indicating if the Inetaddress is\n         a wildcard address.\n @since 1.4\n"
15704,method,java/net/Inet6Address/isLoopbackAddress/," Utility routine to check if the InetAddress is a loopback address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a loopback address; or false otherwise.\n @since 1.4\n"
15705,method,java/net/Inet6Address/isLinkLocalAddress/," Utility routine to check if the InetAddress is an link local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a link local address; or false if address is not a link local unicast address.\n @since 1.4\n"
15706,method,java/net/Inet6Address/isSiteLocalAddress/," Utility routine to check if the InetAddress is a site local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a site local address; or false if address is not a site local unicast address.\n @since 1.4\n"
15707,method,java/net/Inet6Address/isMCGlobal/," Utility routine to check if the multicast address has global scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of global scope, false if it is not \n         of global scope or it is not a multicast address\n @since 1.4\n"
15708,method,java/net/Inet6Address/isMCNodeLocal/," Utility routine to check if the multicast address has node scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of node-local scope, false if it is not \n         of node-local scope or it is not a multicast address\n @since 1.4\n"
15709,method,java/net/Inet6Address/isMCLinkLocal/," Utility routine to check if the multicast address has link scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of link-local scope, false if it is not \n         of link-local scope or it is not a multicast address\n @since 1.4\n"
15710,method,java/net/Inet6Address/isMCSiteLocal/," Utility routine to check if the multicast address has site scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of site-local scope, false if it is not \n         of site-local scope or it is not a multicast address\n @since 1.4\n"
15711,method,java/net/Inet6Address/isMCOrgLocal/," Utility routine to check if the multicast address has organization scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of organization-local scope, \n         false if it is not of organization-local scope \n         or it is not a multicast address\n @since 1.4\n"
15712,method,java/net/Inet6Address/getAddress/," Returns the raw IP address of this <code>InetAddress</code>\n object. The result is in network byte order: the highest order\n byte of the address is in <code>getAddress()[0]</code>.\n\n @return  the raw IP address of this object.\n"
15713,method,java/net/Inet6Address/getScopeId/," Returns the numeric scopeId, if this instance is associated with\n an interface. If no scoped_id is set, the returned value is zero.\n\n @return the scopeId, or zero if not set.\n @since 1.5\n"
15714,method,java/net/Inet6Address/getScopedInterface/," Returns the scoped interface, if this instance was created with\n with a scoped interface.\n\n @return the scoped interface, or null if not set.\n @since 1.5\n"
15715,method,java/net/Inet6Address/getHostAddress/," Returns the IP address string in textual presentation. If the instance was created \n specifying a scope identifier then the scope id is appended to the IP address preceded by \n a "%" (per-cent) character. This can be either a numeric value or a string, depending on which\n was used to createthe instance.\n\n @return  the raw IP address in a string format.\n"
15716,method,java/net/Inet6Address/hashCode/," Returns a hashcode for this IP address.\n\n @return  a hash code value for this IP address.\n"
15718,method,java/net/Inet6Address/isIPv4CompatibleAddress/," Utility routine to check if the InetAddress is an\n IPv4 compatible IPv6 address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n an IPv4 compatible IPv6 address; or false if address is IPv4 address.\n @since 1.4\n"
15720,method,java/net/Inet4Address/isMulticastAddress/," Utility routine to check if the InetAddress is an\n IP multicast address. IP multicast address is a Class D\n address i.e first four bits of the address are 1110.\n @return a <code>boolean</code> indicating if the InetAddress is \n an IP multicast address\n @since   JDK1.1\n"
15721,method,java/net/Inet4Address/isAnyLocalAddress/," Utility routine to check if the InetAddress in a wildcard address.\n @return a <code>boolean</code> indicating if the Inetaddress is\n         a wildcard address.\n @since 1.4\n"
15722,method,java/net/Inet4Address/isLoopbackAddress/,""
15723,method,java/net/Inet4Address/isLinkLocalAddress/," Utility routine to check if the InetAddress is an link local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a link local address; or false if address is not a link local unicast address.\n @since 1.4\n"
15724,method,java/net/Inet4Address/isSiteLocalAddress/," Utility routine to check if the InetAddress is a site local address. \n\n @return a <code>boolean</code> indicating if the InetAddress is \n a site local address; or false if address is not a site local unicast address.\n @since 1.4\n"
15725,method,java/net/Inet4Address/isMCGlobal/," Utility routine to check if the multicast address has global scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of global scope, false if it is not \n         of global scope or it is not a multicast address\n @since 1.4\n"
15726,method,java/net/Inet4Address/isMCNodeLocal/," Utility routine to check if the multicast address has node scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of node-local scope, false if it is not \n         of node-local scope or it is not a multicast address\n @since 1.4\n"
15727,method,java/net/Inet4Address/isMCLinkLocal/," Utility routine to check if the multicast address has link scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of link-local scope, false if it is not \n         of link-local scope or it is not a multicast address\n @since 1.4\n"
15728,method,java/net/Inet4Address/isMCSiteLocal/," Utility routine to check if the multicast address has site scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of site-local scope, false if it is not \n         of site-local scope or it is not a multicast address\n @since 1.4\n"
15729,method,java/net/Inet4Address/isMCOrgLocal/," Utility routine to check if the multicast address has organization scope.\n\n @return a <code>boolean</code> indicating if the address has \n         is a multicast address of organization-local scope, \n         false if it is not of organization-local scope \n         or it is not a multicast address\n @since 1.4\n"
15730,method,java/net/Inet4Address/getAddress/," Returns the raw IP address of this <code>InetAddress</code>\n object. The result is in network byte order: the highest order\n byte of the address is in <code>getAddress()[0]</code>.\n\n @return  the raw IP address of this object.\n"
15731,method,java/net/Inet4Address/getHostAddress/," Returns the IP address string in textual presentation form.\n\n @return  the raw IP address in a string format.\n @since   JDK1.0.2\n"
15732,method,java/net/Inet4Address/hashCode/," Returns a hashcode for this IP address.\n\n @return  a hash code value for this IP address.\n"
15739,field,java/net/IDN/ALLOW_UNASSIGNED," Flag to allow processing of unassigned code points\n"
15740,field,java/net/IDN/USE_STD3_ASCII_RULES," Flag to turn on the check against STD-3 ASCII rules\n"
15749,method,java/net/HttpURLConnection/getInstanceFollowRedirects/," Returns the value of this <code>HttpURLConnection</code>'s\n <code>instanceFollowRedirects</code> field.\n\n @return  the value of this <code>HttpURLConnection</code>'s\n          <code>instanceFollowRedirects</code> field.\n @see     java.net.HttpURLConnection#instanceFollowRedirects\n @see #setInstanceFollowRedirects(boolean)\n @since 1.3\n"
15751,method,java/net/HttpURLConnection/getRequestMethod/," Get the request method.\n @return the HTTP request method\n @see #setRequestMethod(java.lang.String)\n"
15754,method,java/net/HttpURLConnection/getHeaderFieldDate/String;long,""
15756,method,java/net/HttpURLConnection/usingProxy/," Indicates if the connection is going through a proxy.\n @return a boolean indicating if the connection is\n using a proxy.\n"
15757,method,java/net/HttpURLConnection/getPermission/,""
15759,method,java/net/HttpURLConnection/HttpURLConnection/URL," Constructor for the HttpURLConnection.\n @param u the URL\n"
15760,field,java/net/HttpURLConnection/method," The HTTP method (GET,POST,PUT,etc.). \n"
15761,field,java/net/HttpURLConnection/chunkLength,"\n The chunk-length when using chunked encoding streaming mode for output.\n A value of <code>-1</code> means chunked encoding is disabled for output.\n @since 1.5\n"
15762,field,java/net/HttpURLConnection/fixedContentLength," The fixed content-length when using fixed-length streaming mode.\n A value of <code>-1</code> means fixed-length streaming mode is disabled\n for output.\n @since 1.5\n"
15764,field,java/net/HttpURLConnection/responseMessage," The HTTP response message.\n"
15765,field,java/net/HttpURLConnection/instanceFollowRedirects," If <code>true</code>, the protocol will automatically follow redirects.\n If <code>false</code>, the protocol will not automatically follow \n redirects.\n <p>\n This field is set by the <code>setInstanceFollowRedirects</code> \n method. Its value is returned by the <code>getInstanceFollowRedirects</code> \n method.\n <p>\n Its default value is based on the value of the static followRedirects \n at HttpURLConnection construction time.\n\n @see     java.net.HttpURLConnection#setInstanceFollowRedirects(boolean)\n @see     java.net.HttpURLConnection#getInstanceFollowRedirects()\n @see     java.net.HttpURLConnection#setFollowRedirects(boolean)\n"
15766,field,java/net/HttpURLConnection/HTTP_OK," HTTP Status-Code 200: OK.\n"
15767,field,java/net/HttpURLConnection/HTTP_CREATED," HTTP Status-Code 201: Created.\n"
15768,field,java/net/HttpURLConnection/HTTP_ACCEPTED," HTTP Status-Code 202: Accepted.\n"
15769,field,java/net/HttpURLConnection/HTTP_NOT_AUTHORITATIVE," HTTP Status-Code 203: Non-Authoritative Information.\n"
15770,field,java/net/HttpURLConnection/HTTP_NO_CONTENT," HTTP Status-Code 204: No Content.\n"
15771,field,java/net/HttpURLConnection/HTTP_RESET," HTTP Status-Code 205: Reset Content.\n"
15772,field,java/net/HttpURLConnection/HTTP_PARTIAL," HTTP Status-Code 206: Partial Content.\n"
15773,field,java/net/HttpURLConnection/HTTP_MULT_CHOICE," HTTP Status-Code 300: Multiple Choices.\n"
15774,field,java/net/HttpURLConnection/HTTP_MOVED_PERM," HTTP Status-Code 301: Moved Permanently.\n"
15775,field,java/net/HttpURLConnection/HTTP_MOVED_TEMP," HTTP Status-Code 302: Temporary Redirect.\n"
15776,field,java/net/HttpURLConnection/HTTP_SEE_OTHER," HTTP Status-Code 303: See Other.\n"
15777,field,java/net/HttpURLConnection/HTTP_NOT_MODIFIED," HTTP Status-Code 304: Not Modified.\n"
15778,field,java/net/HttpURLConnection/HTTP_USE_PROXY," HTTP Status-Code 305: Use Proxy.\n"
15779,field,java/net/HttpURLConnection/HTTP_BAD_REQUEST," HTTP Status-Code 400: Bad Request.\n"
15780,field,java/net/HttpURLConnection/HTTP_UNAUTHORIZED," HTTP Status-Code 401: Unauthorized.\n"
15782,field,java/net/HttpURLConnection/HTTP_FORBIDDEN," HTTP Status-Code 403: Forbidden.\n"
15783,field,java/net/HttpURLConnection/HTTP_NOT_FOUND," HTTP Status-Code 404: Not Found.\n"
15784,field,java/net/HttpURLConnection/HTTP_BAD_METHOD," HTTP Status-Code 405: Method Not Allowed.\n"
15785,field,java/net/HttpURLConnection/HTTP_NOT_ACCEPTABLE," HTTP Status-Code 406: Not Acceptable.\n"
15787,field,java/net/HttpURLConnection/HTTP_CLIENT_TIMEOUT," HTTP Status-Code 408: Request Time-Out.\n"
15788,field,java/net/HttpURLConnection/HTTP_CONFLICT," HTTP Status-Code 409: Conflict.\n"
15789,field,java/net/HttpURLConnection/HTTP_GONE," HTTP Status-Code 410: Gone.\n"
15791,field,java/net/HttpURLConnection/HTTP_PRECON_FAILED," HTTP Status-Code 412: Precondition Failed.\n"
15792,field,java/net/HttpURLConnection/HTTP_ENTITY_TOO_LARGE," HTTP Status-Code 413: Request Entity Too Large.\n"
15793,field,java/net/HttpURLConnection/HTTP_REQ_TOO_LONG," HTTP Status-Code 414: Request-URI Too Large.\n"
15794,field,java/net/HttpURLConnection/HTTP_UNSUPPORTED_TYPE," HTTP Status-Code 415: Unsupported Media Type.\n"
15797,field,java/net/HttpURLConnection/HTTP_NOT_IMPLEMENTED,"\n HTTP Status-Code 501: Not Implemented.\n"
15798,field,java/net/HttpURLConnection/HTTP_BAD_GATEWAY," HTTP Status-Code 502: Bad Gateway.\n"
15799,field,java/net/HttpURLConnection/HTTP_UNAVAILABLE," HTTP Status-Code 503: Service Unavailable.\n"
15800,field,java/net/HttpURLConnection/HTTP_GATEWAY_TIMEOUT," HTTP Status-Code 504: Gateway Timeout.\n"
15801,field,java/net/HttpURLConnection/HTTP_VERSION," HTTP Status-Code 505: HTTP Version Not Supported.\n"
15802,class,java/net/HttpRetryException," Thrown to indicate that a HTTP request needs to be retried\n but cannot be retried automatically, due to streaming mode\n being enabled.\n\n @author  Michael McMahon\n @version 1.3, 03/23/10\n @since   1.5\n"
15803,method,java/net/HttpRetryException/responseCode/," Returns the http response code\n\n @return  The http response code.\n"
15804,method,java/net/HttpRetryException/getReason/," Returns a string explaining why the http request could\n not be retried.\n\n @return  The reason string\n"
15806,method,java/net/HttpRetryException/HttpRetryException/String;int," Constructs a new <code>HttpRetryException</code> from the \n specified response code and exception detail message\n\n @param   detail   the detail message.\n @param   code   the HTTP response code from server.\n"
15807,method,java/net/HttpRetryException/HttpRetryException/String;int;String," Constructs a new <code>HttpRetryException</code> with detail message\n responseCode and the contents of the Location response header field.\n\n @param   detail   the detail message.\n @param   code   the HTTP response code from server.\n @param   location   the URL to be redirected to\n"
15810,method,java/net/HttpCookie/hasExpired/," Reports whether this http cookie has expired or not.\n\n @return  <tt>true</tt> to indicate this http cookie has expired;\n          otherwise, <tt>false</tt>\n"
15811,method,java/net/HttpCookie/setComment/String,"\n Specifies a comment that describes a cookie's purpose.\n The comment is useful if the browser presents the cookie\n to the user. Comments\n are not supported by Netscape Version 0 cookies.\n\n @param purpose           a <code>String</code> specifying the comment\n                          to display to the user\n\n @see #getComment\n\n"
15812,method,java/net/HttpCookie/getComment/," Returns the comment describing the purpose of this cookie, or\n <code>null</code> if the cookie has no comment.\n\n @return                  a <code>String</code> containing the comment,\n                          or <code>null</code> if none\n\n @see #setComment\n\n"
15814,method,java/net/HttpCookie/getCommentURL/," Returns the comment url describing the purpose of this cookie, or\n <code>null</code> if the cookie has no comment url.\n\n @return                  a <code>String</code> containing the comment url,\n                          or <code>null</code> if none\n\n @see #setCommentURL\n\n"
15816,method,java/net/HttpCookie/getDiscard/," Return the discard attribute of the cookie\n\n @return  a <tt>boolean</tt> to represent this cookie's discard attribute\n\n @see #setDiscard\n"
15818,method,java/net/HttpCookie/getPortlist/," Return the port list attribute of the cookie\n\n @return  a <tt>String</tt> contains the port list\n          or <tt>null</tt> if none\n @see #setPortlist\n"
15820,method,java/net/HttpCookie/getDomain/," Returns the domain name set for this cookie. The form of\n the domain name is set by RFC 2965.\n\n @return                  a <code>String</code> containing the domain name\n\n @see #setDomain\n\n"
15822,method,java/net/HttpCookie/getMaxAge/," Returns the maximum age of the cookie, specified in seconds.\n By default, <code>-1</code> indicating the cookie will persist\n until browser shutdown.\n\n\n @return                  an integer specifying the maximum age of the\n                          cookie in seconds\n\n\n @see #setMaxAge\n\n"
15824,method,java/net/HttpCookie/getPath/," Returns the path on the server\n to which the browser returns this cookie. The\n cookie is visible to all subpaths on the server.\n\n\n @return          a <code>String</code> specifying a path that contains\n                  a servlet name, for example, <i>/catalog</i>\n\n @see #setPath\n\n"
15829,method,java/net/HttpCookie/getValue/," Returns the value of the cookie.\n\n @return                  a <code>String</code> containing the cookie's\n                          present value\n\n @see #setValue\n\n"
15830,method,java/net/HttpCookie/getVersion/," Returns the version of the protocol this cookie complies\n with. Version 1 complies with RFC 2965/2109,\n and version 0 complies with the original\n cookie specification drafted by Netscape. Cookies provided\n by a browser use and identify the browser's cookie version.\n\n\n @return                  0 if the cookie complies with the\n                          original Netscape specification; 1\n                          if the cookie complies with RFC 2965/2109\n\n @see #setVersion\n\n"
15832,method,java/net/HttpCookie/domainMatches/String;String," The utility method to check whether a host name is in a domain\n or not.\n\n <p>This concept is described in the cookie specification.\n To understand the concept, some terminologies need to be defined first:\n <blockquote>\n effective host name = hostname if host name contains dot<br>\n &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or = hostname.local if not\n </blockquote>\n <p>Host A's name domain-matches host B's if:\n <blockquote><ul>\n   <li>their host name strings string-compare equal; or</li>\n   <li>A is a HDN string and has the form NB, where N is a non-empty\n   name string, B has the form .B', and B' is a HDN string.  (So,\n   x.y.com domain-matches .Y.com but not Y.com.)</li>\n </ul></blockquote>\n\n <p>A host isn't in a domain (RFC 2965 sec. 3.3.2) if:\n <blockquote><ul>\n   <li>The value for the Domain attribute contains no embedded dots,\n   and the value is not .local.</li>\n   <li>The effective host name that derives from the request-host does\n   not domain-match the Domain attribute.</li>\n   <li>The request-host is a HDN (not IP address) and has the form HD,\n   where D is the value of the Domain attribute, and H is a string\n   that contains one or more dots.</li>\n </ul></blockquote>\n\n <p>Examples:\n <blockquote><ul>\n   <li>A Set-Cookie2 from request-host y.x.foo.com for Domain=.foo.com\n   would be rejected, because H is y.x and contains a dot.</li>\n   <li>A Set-Cookie2 from request-host x.foo.com for Domain=.foo.com\n   would be accepted.</li>\n   <li>A Set-Cookie2 with Domain=.com or Domain=.com., will always be\n   rejected, because there is no embedded dot.</li>\n   <li>A Set-Cookie2 with Domain=ajax.com will be accepted, and the\n   value for Domain will be taken to be .ajax.com, because a dot\n   gets prepended to the value.</li>\n   <li>A Set-Cookie2 from request-host example for Domain=.local will\n   be accepted, because the effective host name for the request-\n   host is example.local, and example.local domain-matches .local.</li>\n </ul></blockquote>\n\n @param domain    the domain name to check host name with\n @param host      the host name in question\n @return          <tt>true</tt> if they domain-matches; <tt>false</tt> if not\n"
15833,method,java/net/HttpCookie/toString/," Constructs a cookie header string representation of this cookie,\n which is in the format defined by corresponding cookie specification,\n but without the leading "Cookie:" token.\n\n @return  a string form of the cookie. The string has the defined format\n"
15835,method,java/net/HttpCookie/hashCode/," Return hash code of this http cookie. The result is the sum of\n hash code value of three significant components of this cookie:\n name, domain, and path.\n That is, the hash code is the value of the expression:\n <blockquote>\n getName().toLowerCase().hashCode()<br>\n + getDomain().toLowerCase().hashCode()<br>\n + getPath().hashCode()\n </blockquote>\n\n @return          this http cookie's hash code\n"
15836,method,java/net/HttpCookie/clone/," Create and return a copy of this object.\n\n @return          a clone of this http cookie\n"
15839,method,java/net/FileNameMap/getContentTypeFor/String," Gets the MIME type for the specified file name.\n @param fileName the specified file name\n @return a <code>String</code> indicating the MIME\n type for the specified file name.\n"
15840,interface,java/net/DatagramSocketImplFactory," This interface defines a factory for datagram socket implementations. It\n is used by the classes <code>DatagramSocket</code> to create actual socket\n implementations.\n\n @author  Yingxian Wang\n @version %I %E\n @see     java.net.DatagramSocket\n @since   1.3\n"
15841,method,java/net/DatagramSocketImplFactory/createDatagramSocketImpl/," Creates a new <code>DatagramSocketImpl</code> instance.\n\n @return  a new instance of <code>DatagramSocketImpl</code>.\n @see     java.net.DatagramSocketImpl\n"
15842,class,java/net/DatagramSocketImpl," Abstract datagram and multicast socket implementation base class.\n @author Pavani Diwanji\n @since  JDK1.1\n"
15847,method,java/net/DatagramSocketImpl/disconnect/," Disconnects a datagram socket from its remote destination. \n @since 1.4\n"
15851,method,java/net/DatagramSocketImpl/setTTL/byte," Set the TTL (time-to-live) option.\n @param ttl a byte specifying the TTL value\n\n @deprecated use setTimeToLive instead.\n @exception IOException if an I/O exception occurs while setting\n the time-to-live option.\n @see #getTTL()\n"
15852,method,java/net/DatagramSocketImpl/getTTL/," Retrieve the TTL (time-to-live) option.\n\n @exception IOException if an I/O exception occurs\n while retrieving the time-to-live option\n @deprecated use getTimeToLive instead.\n @return a byte representing the TTL value\n @see #setTTL(byte)\n"
15853,method,java/net/DatagramSocketImpl/setTimeToLive/int," Set the TTL (time-to-live) option.\n @param ttl an <tt>int</tt> specifying the time-to-live value\n @exception IOException if an I/O exception occurs\n while setting the time-to-live option.\n @see #getTimeToLive()\n"
15854,method,java/net/DatagramSocketImpl/getTimeToLive/," Retrieve the TTL (time-to-live) option.\n @exception IOException if an I/O exception occurs\n while retrieving the time-to-live option\n @return an <tt>int</tt> representing the time-to-live value\n @see #setTimeToLive(int)\n"
15855,method,java/net/DatagramSocketImpl/join/InetAddress," Join the multicast group.\n @param inetaddr multicast address to join.\n @exception IOException if an I/O exception occurs\n while joining the multicast group.\n"
15856,method,java/net/DatagramSocketImpl/leave/InetAddress," Leave the multicast group.\n @param inetaddr multicast address to leave.\n @exception IOException if an I/O exception occurs\n while leaving the multicast group.\n"
15857,method,java/net/DatagramSocketImpl/joinGroup/SocketAddress;NetworkInterface," Join the multicast group.\n @param mcastaddr address to join.\n @param netIf specifies the local interface to receive multicast\n        datagram packets\n @throws IOException if an I/O exception occurs while joining\n the multicast group\n @since 1.4\n"
15858,method,java/net/DatagramSocketImpl/leaveGroup/SocketAddress;NetworkInterface," Leave the multicast group.\n @param mcastaddr address to leave.\n @param netIf specified the local interface to leave the group at\n @throws IOException if an I/O exception occurs while leaving\n the multicast group\n @since 1.4\n"
15859,method,java/net/DatagramSocketImpl/close/," Close the socket.\n"
15860,method,java/net/DatagramSocketImpl/getLocalPort/," Gets the local port.\n @return an <tt>int</tt> representing the local port value\n"
15861,method,java/net/DatagramSocketImpl/getFileDescriptor/," Gets the datagram socket file descriptor.\n @return a <tt>FileDescriptor</tt> object representing the datagram socket\n file descriptor\n"
15862,method,java/net/DatagramSocketImpl/DatagramSocketImpl/,""
15863,field,java/net/DatagramSocketImpl/localPort," The local port number.\n"
15864,field,java/net/DatagramSocketImpl/fd," The file descriptor object.\n"
15869,method,java/net/DatagramSocket/disconnect/,"\n Disconnects the socket. This does nothing if the socket is not\n connected.\n\n @see #connect\n"
15870,method,java/net/DatagramSocket/isBound/," Returns the binding state of the socket.\n\n @return true if the socket succesfuly bound to an address\n @since 1.4\n"
15871,method,java/net/DatagramSocket/isConnected/," Returns the connection state of the socket.\n\n @return true if the socket succesfuly connected to a server\n @since 1.4\n"
15872,method,java/net/DatagramSocket/getInetAddress/," Returns the address to which this socket is connected. Returns null\n if the socket is not connected.\n\n @return the address to which this socket is connected.\n"
15873,method,java/net/DatagramSocket/getPort/," Returns the port for this socket. Returns -1 if the socket is not\n connected.\n\n @return the port to which this socket is connected.\n"
15874,method,java/net/DatagramSocket/getRemoteSocketAddress/," Returns the address of the endpoint this socket is connected to, or\n <code>null</code> if it is unconnected.\n @return a <code>SocketAddress</code> representing the remote\n         endpoint of this socket, or <code>null</code> if it is\n         not connected yet.\n @see #getInetAddress()\n @see #getPort()\n @see #connect(SocketAddress)\n @since 1.4\n"
15875,method,java/net/DatagramSocket/getLocalSocketAddress/," Returns the address of the endpoint this socket is bound to, or\n <code>null</code> if it is not bound yet.\n\n @return a <code>SocketAddress</code> representing the local endpoint of this\n	       socket, or <code>null</code> if it is not bound yet.\n @see #getLocalAddress()\n @see #getLocalPort()\n @see #bind(SocketAddress)\n @since 1.4\n"
15879,method,java/net/DatagramSocket/getLocalPort/," Returns the port number on the local host to which this socket is bound.\n\n @return  the port number on the local host to which this socket is bound.\n"
15893,method,java/net/DatagramSocket/isClosed/," Returns whether the socket is closed or not.\n\n @return true if the socket has been closed\n @since 1.4\n"
15901,class,java/net/DatagramPacket," This class represents a datagram packet. \n <p>\n Datagram packets are used to implement a connectionless packet \n delivery service. Each message is routed from one machine to \n another based solely on information contained within that packet. \n Multiple packets sent from one machine to another might be routed \n differently, and might arrive in any order. Packet delivery is\n not guaranteed.\n\n @author  Pavani Diwanji\n @author  Benjamin Renaud\n @version 1.47, 03/23/10\n @since   JDK1.0\n"
15902,method,java/net/DatagramPacket/getAddress/," Returns the IP address of the machine to which this datagram is being\n sent or from which the datagram was received.\n\n @return  the IP address of the machine to which this datagram is being\n          sent or from which the datagram was received.\n @see     java.net.InetAddress\n @see #setAddress(java.net.InetAddress)\n"
15903,method,java/net/DatagramPacket/getPort/," Returns the port number on the remote host to which this datagram is\n being sent or from which the datagram was received.\n\n @return  the port number on the remote host to which this datagram is\n          being sent or from which the datagram was received.\n @see #setPort(int)\n"
15904,method,java/net/DatagramPacket/getData/," Returns the data buffer. The data received or the data to be sent\n starts from the <code>offset</code> in the buffer, \n and runs for <code>length</code> long.\n\n @return  the buffer used to receive or  send data\n @see #setData(byte[], int, int)\n"
15905,method,java/net/DatagramPacket/getOffset/," Returns the offset of the data to be sent or the offset of the\n data received.\n\n @return  the offset of the data to be sent or the offset of the\n          data received.\n\n @since 1.2\n"
15906,method,java/net/DatagramPacket/getLength/," Returns the length of the data to be sent or the length of the\n data received.\n\n @return  the length of the data to be sent or the length of the\n          data received.\n @see #setLength(int)\n"
15907,method,java/net/DatagramPacket/setData/byte[];int;int,"\n Set the data buffer for this packet. This sets the\n data, length and offset of the packet.\n\n @param buf the buffer to set for this packet\n\n @param offset the offset into the data\n\n @param length the length of the data \n       and/or the length of the buffer used to receive data\n\n @exception NullPointerException if the argument is null\n\n @see #getData\n @see #getOffset\n @see #getLength\n\n @since 1.2\n"
15908,method,java/net/DatagramPacket/setAddress/InetAddress," Sets the IP address of the machine to which this datagram\n is being sent.\n @param iaddr the <code>InetAddress</code>\n @since   JDK1.1\n @see #getAddress()\n"
15909,method,java/net/DatagramPacket/setPort/int," Sets the port number on the remote host to which this datagram\n is being sent.\n @param iport the port number\n @since   JDK1.1\n @see #getPort()\n"
15911,method,java/net/DatagramPacket/getSocketAddress/," Gets the SocketAddress (usually IP address + port number) of the remote\n host that this packet is being sent to or is coming from.\n\n @return the <code>SocketAddress</code>\n @since 1.4\n @see #setSocketAddress\n"
15912,method,java/net/DatagramPacket/setData/byte[],"\n Set the data buffer for this packet. With the offset of \n this DatagramPacket set to 0, and the length set to\n the length of <code>buf</code>.\n\n @param buf the buffer to set for this packet.\n\n @exception NullPointerException if the argument is null.\n\n @see #getLength\n @see #getData\n\n @since JDK1.1 \n"
15923,method,java/net/CookieStore/getCookies/," Get all not-expired cookies in cookie store.\n\n @return          an immutable list of http cookies;\n                  return empty list if there's no http cookie in store\n"
15924,method,java/net/CookieStore/getURIs/," Get all URIs which identify the cookies in this cookie store.\n\n @return          an immutable list of URIs;\n                  return empty list if no cookie in this cookie store\n                  is associated with an URI\n"
15925,method,java/net/CookieStore/remove/URI;HttpCookie," Remove a cookie from store.\n\n @param uri       the uri this cookie associated with.\n                  if <tt>null</tt>, the cookie to be removed is not associated\n                  with an URI when added; if not <tt>null</tt>, the cookie\n                  to be removed is associated with the given URI when added.\n @param cookie    the cookie to remove\n\n @return          <tt>true</tt> if this store contained the specified cookie\n\n @throws NullPointerException if <tt>cookie</tt> is <tt>null</tt>\n"
15929,field,java/net/CookiePolicy/ACCEPT_ALL," One pre-defined policy which accepts all cookies.\n"
15930,field,java/net/CookiePolicy/ACCEPT_NONE," One pre-defined policy which accepts no cookies.\n"
15934,method,java/net/CookieManager/getCookieStore/," To retrieve current cookie store.\n\n @return  the cookie store currently used by cookie manager.\n"
15935,method,java/net/CookieManager/get/URI;Map,""
15936,method,java/net/CookieManager/put/URI;Map,""
15937,method,java/net/CookieManager/CookieManager/," Create a new cookie manager.\n\n <p>This constructor will create new cookie manager with default\n cookie store and accept policy. The effect is same as\n <tt>CookieManager(null, null)</tt>.\n"
15940,method,java/net/CookieHandler/getDefault/," Gets the system-wide cookie handler.\n\n @return the system-wide cookie handler; A null return means\n        there is no system-wide cookie handler currently set.\n @throws SecurityException\n       If a security manager has been installed and it denies\n {@link NetPermission}<tt>("getCookieHandler")</tt>\n @see #setDefault(CookieHandler)\n"
15944,method,java/net/CookieHandler/CookieHandler/,""
15950,method,java/net/ContentHandler/ContentHandler/,""
15953,method,java/net/ConnectException/ConnectException/," Construct a new ConnectException with no detailed message.\n"
15954,class,java/net/CacheResponse," Represent channels for retrieving resources from the\n ResponseCache. Instances of such a class provide an\n InputStream that returns the entity body, and also a\n getHeaders() method which returns the associated response headers.\n\n @version 1.1, 03/09/22\n @author Yingxian Wang\n @since 1.5\n"
15957,method,java/net/CacheResponse/CacheResponse/,""
15960,method,java/net/CacheRequest/abort/," Aborts the attempt to cache the response. If an IOException is\n encountered while reading the response or writing to the cache,\n the current cache store operation will be abandoned.\n"
15961,method,java/net/CacheRequest/CacheRequest/,""
15964,method,java/net/BindException/BindException/," Construct a new BindException with no detailed message.\n"
15970,method,java/net/Authenticator/getRequestingHost/," Gets the <code>hostname</code> of the\n site or proxy requesting authentication, or <code>null</code>\n if not available.\n \n @return the hostname of the connection requiring authentication, or null\n		if it's not available.\n @since 1.4\n"
15971,method,java/net/Authenticator/getRequestingSite/," Gets the <code>InetAddress</code> of the\n site requesting authorization, or <code>null</code>\n if not available.\n \n @return the InetAddress of the site requesting authorization, or null\n		if it's not available.\n"
15972,method,java/net/Authenticator/getRequestingPort/," Gets the port number for the requested connection.\n @return an <code>int</code> indicating the \n port for the requested connection.\n"
15973,method,java/net/Authenticator/getRequestingProtocol/," Give the protocol that's requesting the connection.  Often this\n will be based on a URL, but in a future JDK it could be, for\n example, "SOCKS" for a password-protected SOCKS5 firewall.\n\n @return the protcol, optionally followed by "/version", where\n		version is a version number.\n\n @see java.net.URL#getProtocol()\n"
15974,method,java/net/Authenticator/getRequestingPrompt/," Gets the prompt string given by the requestor.\n\n @return the prompt string given by the requestor (realm for\n		http requests)\n"
15975,method,java/net/Authenticator/getRequestingScheme/," Gets the scheme of the requestor (the HTTP scheme\n for an HTTP firewall, for example).\n\n @return the scheme of the requestor\n	      \n"
15977,method,java/net/Authenticator/getRequestingURL/," Returns the URL that resulted in this\n request for authentication.\n\n @since 1.5\n\n @return the requesting URL\n	      \n"
15978,method,java/net/Authenticator/getRequestorType/," Returns whether the requestor is a Proxy or a Server.\n\n @since 1.5\n\n @return the authentication type of the requestor\n	      \n"
15979,method,java/net/Authenticator/Authenticator/,""
15980,class,java/net/Authenticator/RequestorType," The type of the entity requesting authentication.\n\n @since 1.5\n"
15981,method,java/net/Authenticator/RequestorType/values/,""
15982,method,java/net/Authenticator/RequestorType/valueOf/String,""
15983,field,java/net/Authenticator/RequestorType/PROXY," Entity requesting authentication is a HTTP proxy server.\n"
15984,field,java/net/Authenticator/RequestorType/SERVER," Entity requesting authentication is a HTTP origin server.\n"
15989,method,java/util/WeakHashMap/containsKey/Object," Returns <tt>true</tt> if this map contains a mapping for the\n specified key.\n\n @param  key   The key whose presence in this map is to be tested\n @return <tt>true</tt> if there is a mapping for <tt>key</tt>;\n         <tt>false</tt> otherwise\n"
15990,method,java/util/WeakHashMap/put/Object;Object," Associates the specified value with the specified key in this map.\n If the map previously contained a mapping for this key, the old\n value is replaced.\n\n @param key key with which the specified value is to be associated.\n @param value value to be associated with the specified key.\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n"
15991,method,java/util/WeakHashMap/putAll/Map," Copies all of the mappings from the specified map to this map.\n These mappings will replace any mappings that this map had for any\n of the keys currently in the specified map.\n\n @param m mappings to be stored in this map.\n @throws  NullPointerException if the specified map is null.\n"
15994,method,java/util/WeakHashMap/containsValue/Object," Returns <tt>true</tt> if this map maps one or more keys to the\n specified value.\n\n @param value value whose presence in this map is to be tested\n @return <tt>true</tt> if this map maps one or more keys to the\n         specified value\n"
15995,method,java/util/WeakHashMap/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n"
15996,method,java/util/WeakHashMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n"
15997,method,java/util/WeakHashMap/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n"
15998,method,java/util/WeakHashMap/WeakHashMap/int;float," Constructs a new, empty <tt>WeakHashMap</tt> with the given initial\n capacity and the given load factor.\n\n @param  initialCapacity The initial capacity of the <tt>WeakHashMap</tt>\n @param  loadFactor      The load factor of the <tt>WeakHashMap</tt>\n @throws IllegalArgumentException if the initial capacity is negative,\n         or if the load factor is nonpositive.\n"
15999,method,java/util/WeakHashMap/WeakHashMap/int," Constructs a new, empty <tt>WeakHashMap</tt> with the given initial\n capacity and the default load factor (0.75).\n\n @param  initialCapacity The initial capacity of the <tt>WeakHashMap</tt>\n @throws IllegalArgumentException if the initial capacity is negative\n"
16000,method,java/util/WeakHashMap/WeakHashMap/," Constructs a new, empty <tt>WeakHashMap</tt> with the default initial\n capacity (16) and load factor (0.75).\n"
16001,method,java/util/WeakHashMap/WeakHashMap/Map," Constructs a new <tt>WeakHashMap</tt> with the same mappings as the\n specified map.  The <tt>WeakHashMap</tt> is created with the default\n load factor (0.75) and an initial capacity sufficient to hold the\n mappings in the specified map.\n\n @param   m the map whose mappings are to be placed in this map\n @throws  NullPointerException if the specified map is null\n @since	1.3\n"
16003,method,java/util/Vector/copyInto/Object[]," Copies the components of this vector into the specified array.\n The item at index {@code k} in this vector is copied into\n component {@code k} of {@code anArray}.\n\n @param  anArray the array into which the components get copied\n @throws NullPointerException if the given array is null\n @throws IndexOutOfBoundsException if the specified array is not\n         large enough to hold all the components of this vector\n @throws ArrayStoreException if a component of this vector is not of\n         a runtime type that can be stored in the specified array\n @see #toArray(Object[])\n"
16004,method,java/util/Vector/trimToSize/," Trims the capacity of this vector to be the vector's current\n size. If the capacity of this vector is larger than its current\n size, then the capacity is changed to equal the size by replacing\n its internal data array, kept in the field {@code elementData},\n with a smaller one. An application can use this operation to\n minimize the storage of a vector.\n"
16006,method,java/util/Vector/setSize/int," Sets the size of this vector. If the new size is greater than the\n current size, new {@code null} items are added to the end of\n the vector. If the new size is less than the current size, all\n components at index {@code newSize} and greater are discarded.\n\n @param  newSize   the new size of this vector\n @throws ArrayIndexOutOfBoundsException if the new size is negative\n"
16007,method,java/util/Vector/capacity/," Returns the current capacity of this vector.\n\n @return  the current capacity (the length of its internal\n          data array, kept in the field {@code elementData}\n          of this vector)\n"
16008,method,java/util/Vector/size/," Returns the number of components in this vector.\n\n @return  the number of components in this vector\n"
16010,method,java/util/Vector/elements/," Returns an enumeration of the components of this vector. The\n returned {@code Enumeration} object will generate all items in\n this vector. The first item generated is the item at index {@code 0},\n then the item at index {@code 1}, and so on.\n\n @return  an enumeration of the components of this vector\n @see     Iterator\n"
16012,method,java/util/Vector/indexOf/Object," Returns the index of the first occurrence of the specified element\n in this vector, or -1 if this vector does not contain the element.\n More formally, returns the lowest index {@code i} such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the first occurrence of the specified element in\n         this vector, or -1 if this vector does not contain the element\n"
16013,method,java/util/Vector/indexOf/Object;int," Returns the index of the first occurrence of the specified element in\n this vector, searching forwards from {@code index}, or returns -1 if\n the element is not found.\n More formally, returns the lowest index {@code i} such that\n <tt>(i&nbsp;&gt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @param index index to start searching from\n @return the index of the first occurrence of the element in\n         this vector at position {@code index} or later in the vector;\n         {@code -1} if the element is not found.\n @throws IndexOutOfBoundsException if the specified index is negative\n @see     Object#equals(Object)\n"
16014,method,java/util/Vector/lastIndexOf/Object," Returns the index of the last occurrence of the specified element\n in this vector, or -1 if this vector does not contain the element.\n More formally, returns the highest index {@code i} such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the last occurrence of the specified element in\n         this vector, or -1 if this vector does not contain the element\n"
16015,method,java/util/Vector/lastIndexOf/Object;int," Returns the index of the last occurrence of the specified element in\n this vector, searching backwards from {@code index}, or returns -1 if\n the element is not found.\n More formally, returns the highest index {@code i} such that\n <tt>(i&nbsp;&lt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i))))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @param index index to start searching backwards from\n @return the index of the last occurrence of the element at position\n         less than or equal to {@code index} in this vector;\n         -1 if the element is not found.\n @throws IndexOutOfBoundsException if the specified index is greater\n         than or equal to the current size of this vector\n"
16016,method,java/util/Vector/elementAt/int," Returns the component at the specified index.\n\n <p>This method is identical in functionality to the {@link #get(int)}\n method (which is part of the {@link List} interface).\n\n @param      index   an index into this vector\n @return     the component at the specified index\n @throws ArrayIndexOutOfBoundsException if the index is out of range\n	       ({@code index < 0 || index >= size()})\n"
16017,method,java/util/Vector/firstElement/," Returns the first component (the item at index {@code 0}) of\n this vector.\n\n @return     the first component of this vector\n @throws NoSuchElementException if this vector has no components\n"
16018,method,java/util/Vector/lastElement/," Returns the last component of the vector.\n\n @return  the last component of the vector, i.e., the component at index\n          <code>size()&nbsp;-&nbsp;1</code>.\n @throws NoSuchElementException if this vector is empty\n"
16022,method,java/util/Vector/addElement/Object," Adds the specified component to the end of this vector,\n increasing its size by one. The capacity of this vector is\n increased if its size becomes greater than its capacity.\n\n <p>This method is identical in functionality to the\n {@link #add(Object) add(E)}\n method (which is part of the {@link List} interface).\n\n @param   obj   the component to be added\n"
16023,method,java/util/Vector/removeElement/Object," Removes the first (lowest-indexed) occurrence of the argument\n from this vector. If the object is found in this vector, each\n component in the vector with an index greater or equal to the\n object's index is shifted downward to have an index one smaller\n than the value it had previously.\n\n <p>This method is identical in functionality to the\n {@link #remove(Object)} method (which is part of the\n {@link List} interface).\n\n @param   obj   the component to be removed\n @return  {@code true} if the argument was a component of this\n          vector; {@code false} otherwise.\n"
16024,method,java/util/Vector/removeAllElements/," Removes all components from this vector and sets its size to zero.\n\n <p>This method is identical in functionality to the {@link #clear}\n method (which is part of the {@link List} interface).\n"
16025,method,java/util/Vector/clone/," Returns a clone of this vector. The copy will contain a\n reference to a clone of the internal data array, not a reference\n to the original internal data array of this {@code Vector} object.\n\n @return  a clone of this vector\n"
16026,method,java/util/Vector/toArray/," Returns an array containing all of the elements in this Vector\n in the correct order.\n\n @since 1.2\n"
16028,method,java/util/Vector/get/int," Returns the element at the specified position in this Vector.\n\n @param index index of the element to return\n @return object at the specified index\n @throws ArrayIndexOutOfBoundsException if the index is out of range\n            ({@code index < 0 || index >= size()})\n @since 1.2\n"
16029,method,java/util/Vector/set/int;Object," Replaces the element at the specified position in this Vector with the\n specified element.\n\n @param index index of the element to replace\n @param element element to be stored at the specified position\n @return the element previously at the specified position\n @throws ArrayIndexOutOfBoundsException if the index is out of range\n	       ({@code index < 0 || index >= size()})\n @since 1.2\n"
16030,method,java/util/Vector/add/Object," Appends the specified element to the end of this Vector.\n\n @param e element to be appended to this Vector\n @return {@code true} (as specified by {@link Collection#add})\n @since 1.2\n"
16031,method,java/util/Vector/remove/Object," Removes the first occurrence of the specified element in this Vector\n If the Vector does not contain the element, it is unchanged.  More\n formally, removes the element with the lowest index i such that\n {@code (o==null ? get(i)==null : o.equals(get(i)))} (if such\n an element exists).\n\n @param o element to be removed from this Vector, if present\n @return true if the Vector contained the specified element\n @since 1.2\n"
16032,method,java/util/Vector/add/int;Object," Inserts the specified element at the specified position in this Vector.\n Shifts the element currently at that position (if any) and any\n subsequent elements to the right (adds one to their indices).\n\n @param index index at which the specified element is to be inserted\n @param element element to be inserted\n @throws ArrayIndexOutOfBoundsException if the index is out of range\n         ({@code index < 0 || index > size()})\n @since 1.2\n"
16033,method,java/util/Vector/remove/int," Removes the element at the specified position in this Vector.\n Shifts any subsequent elements to the left (subtracts one from their\n indices).  Returns the element that was removed from the Vector.\n\n @throws ArrayIndexOutOfBoundsException if the index is out of range\n         ({@code index < 0 || index >= size()})\n @param index the index of the element to be removed\n @return element that was removed\n @since 1.2\n"
16035,method,java/util/Vector/containsAll/Collection," Returns true if this Vector contains all of the elements in the\n specified Collection.\n\n @param   c a collection whose elements will be tested for containment\n          in this Vector\n @return true if this Vector contains all of the elements in the\n	       specified collection\n @throws NullPointerException if the specified collection is null\n"
16041,method,java/util/Vector/hashCode/," Returns the hash code value for this Vector.\n"
16042,method,java/util/Vector/toString/," Returns a string representation of this Vector, containing\n the String representation of each element.\n"
16045,method,java/util/Vector/Vector/int;int," Constructs an empty vector with the specified initial capacity and\n capacity increment.\n\n @param   initialCapacity     the initial capacity of the vector\n @param   capacityIncrement   the amount by which the capacity is\n                              increased when the vector overflows\n @throws IllegalArgumentException if the specified initial capacity\n         is negative\n"
16046,method,java/util/Vector/Vector/int," Constructs an empty vector with the specified initial capacity and\n with its capacity increment equal to zero.\n\n @param   initialCapacity   the initial capacity of the vector\n @throws IllegalArgumentException if the specified initial capacity\n         is negative\n"
16047,method,java/util/Vector/Vector/," Constructs an empty vector so that its internal data array\n has size {@code 10} and its standard capacity increment is\n zero.\n"
16048,method,java/util/Vector/Vector/Collection," Constructs a vector containing the elements of the specified\n collection, in the order they are returned by the collection's\n iterator.\n\n @param c the collection whose elements are to be placed into this\n       vector\n @throws NullPointerException if the specified collection is null\n @since   1.2\n"
16049,field,java/util/Vector/elementData," The array buffer into which the components of the vector are\n stored. The capacity of the vector is the length of this array buffer,\n and is at least large enough to contain all the vector's elements.\n\n <p>Any array elements following the last element in the Vector are null.\n\n @serial\n"
16050,field,java/util/Vector/elementCount," The number of valid components in this {@code Vector} object.\n Components {@code elementData[0]} through\n {@code elementData[elementCount-1]} are the actual items.\n\n @serial\n"
16051,field,java/util/Vector/capacityIncrement," The amount by which the capacity of the vector is automatically\n incremented when its size becomes greater than its capacity.  If\n the capacity increment is less than or equal to zero, the capacity\n of the vector is doubled each time it needs to grow.\n\n @serial\n"
16052,class,java/util/UnknownFormatFlagsException," Unchecked exception thrown when an unknown flag is given.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16053,method,java/util/UnknownFormatFlagsException/getFlags/," Returns the set of flags which contains an unknown flag.\n\n @return  The flags\n"
16054,method,java/util/UnknownFormatFlagsException/getMessage/,""
16055,method,java/util/UnknownFormatFlagsException/UnknownFormatFlagsException/String," Constructs an instance of this class with the specified flags.\n\n @param  f\n         The set of format flags which contain an unknown flag\n"
16056,class,java/util/UnknownFormatConversionException," Unchecked exception thrown when an unknown conversion is given.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to\n any method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.6, 03/23/10\n @since 1.5\n"
16057,method,java/util/UnknownFormatConversionException/getConversion/," Returns the unknown conversion.\n\n @return  The unknown conversion.\n"
16058,method,java/util/UnknownFormatConversionException/getMessage/,""
16059,method,java/util/UnknownFormatConversionException/UnknownFormatConversionException/String," Constructs an instance of this class with the unknown conversion.\n\n @param  s\n         Unknown conversion\n"
16062,method,java/util/UUID/nameUUIDFromBytes/byte[]," Static factory to retrieve a type 3 (name based) <tt>UUID</tt> based on\n the specified byte array.\n\n @param  name a byte array to be used to construct a <tt>UUID</tt>.\n @return  a <tt>UUID</tt> generated from the specified array.\n"
16063,method,java/util/UUID/fromString/String," Creates a <tt>UUID</tt> from the string standard representation as\n described in the {@link #toString} method.\n\n @param  name a string that specifies a <tt>UUID</tt>.\n @return  a <tt>UUID</tt> with the specified value.\n @throws IllegalArgumentException if name does not conform to the\n         string representation as described in {@link #toString}.\n"
16064,method,java/util/UUID/getLeastSignificantBits/," Returns the least significant 64 bits of this UUID's 128 bit value.\n\n @return the least significant 64 bits of this UUID's 128 bit value.\n"
16065,method,java/util/UUID/getMostSignificantBits/," Returns the most significant 64 bits of this UUID's 128 bit value.\n\n @return the most significant 64 bits of this UUID's 128 bit value.\n"
16066,method,java/util/UUID/version/," The version number associated with this <tt>UUID</tt>. The version \n number describes how this <tt>UUID</tt> was generated.\n\n The version number has the following meaning:<p>\n <ul>\n <li>1    Time-based UUID\n <li>2    DCE security UUID\n <li>3    Name-based UUID\n <li>4    Randomly generated UUID\n </ul>\n\n @return  the version number of this <tt>UUID</tt>.\n"
16067,method,java/util/UUID/variant/," The variant number associated with this <tt>UUID</tt>. The variant \n number describes the layout of the <tt>UUID</tt>.\n\n The variant number has the following meaning:<p>\n <ul>\n <li>0    Reserved for NCS backward compatibility\n <li>2    The Leach-Salz variant (used by this class)\n <li>6    Reserved, Microsoft Corporation backward compatibility\n <li>7    Reserved for future definition\n </ul>\n\n @return  the variant number of this <tt>UUID</tt>.\n"
16071,method,java/util/UUID/toString/," Returns a <code>String</code> object representing this\n <code>UUID</code>.\n \n <p>The UUID string representation is as described by this BNF : \n <blockquote><pre>\n {@code\n UUID                   = <time_low> "-" <time_mid> "-"\n                          <time_high_and_version> "-"\n                          <variant_and_sequence> "-"\n                          <node>\n time_low               = 4*<hexOctet>\n time_mid               = 2*<hexOctet>\n time_high_and_version  = 2*<hexOctet>\n variant_and_sequence   = 2*<hexOctet>\n node                   = 6*<hexOctet>\n hexOctet               = <hexDigit><hexDigit>\n hexDigit               =\n       "0" | "1" | "2" | "3" | "4" | "5" | "6" | "7" | "8" | "9"\n       | "a" | "b" | "c" | "d" | "e" | "f"\n       | "A" | "B" | "C" | "D" | "E" | "F"\n }</pre></blockquote>\n\n @return  a string representation of this <tt>UUID</tt>.\n"
16072,method,java/util/UUID/hashCode/," Returns a hash code for this <code>UUID</code>.\n\n @return  a hash code value for this <tt>UUID</tt>. \n"
16074,method,java/util/UUID/compareTo/UUID," Compares this UUID with the specified UUID.\n \n <p>The first of two UUIDs follows the second if the most significant\n field in which the UUIDs differ is greater for the first UUID.\n\n @param  val <tt>UUID</tt> to which this <tt>UUID</tt> is to be compared.\n @return -1, 0 or 1 as this <tt>UUID</tt> is less than, equal\n         to, or greater than <tt>val</tt>.\n"
16075,method,java/util/UUID/UUID/long;long," Constructs a new <tt>UUID</tt> using the specified data.\n <tt>mostSigBits</tt> is used for the most significant 64 bits\n of the <tt>UUID</tt> and <tt>leastSigBits</tt> becomes the\n least significant 64 bits of the <tt>UUID</tt>.\n\n @param  mostSigBits\n @param  leastSigBits\n"
16077,method,java/util/TreeSet/iterator/," Returns an iterator over the elements in this set in ascending order.\n\n @return an iterator over the elements in this set in ascending order\n"
16078,method,java/util/TreeSet/descendingIterator/," Returns an iterator over the elements in this set in descending order.\n\n @return an iterator over the elements in this set in descending order\n @since 1.6\n"
16079,method,java/util/TreeSet/descendingSet/," @since 1.6\n"
16080,method,java/util/TreeSet/size/," Returns the number of elements in this set (its cardinality).\n\n @return the number of elements in this set (its cardinality)\n"
16081,method,java/util/TreeSet/isEmpty/," Returns {@code true} if this set contains no elements.\n\n @return {@code true} if this set contains no elements\n"
16093,method,java/util/TreeSet/comparator/,""
16100,method,java/util/TreeSet/pollFirst/," @since 1.6\n"
16101,method,java/util/TreeSet/pollLast/," @since 1.6\n"
16102,method,java/util/TreeSet/clone/," Returns a shallow copy of this {@code TreeSet} instance. (The elements\n themselves are not cloned.)\n\n @return a shallow copy of this set\n"
16106,method,java/util/TreeSet/TreeSet/SortedSet," Constructs a new tree set containing the same elements and\n using the same ordering as the specified sorted set.\n\n @param s sorted set whose elements will comprise the new set\n @throws NullPointerException if the specified sorted set is null\n"
16108,method,java/util/TreeMap/size/," Returns the number of key-value mappings in this map.\n\n @return the number of key-value mappings in this map\n"
16109,method,java/util/TreeMap/containsKey/Object," Returns <tt>true</tt> if this map contains a mapping for the specified\n key.\n\n @param key key whose presence in this map is to be tested\n @return <tt>true</tt> if this map contains a mapping for the\n         specified key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map uses natural ordering, or its comparator\n         does not permit null keys\n"
16112,method,java/util/TreeMap/comparator/,""
16115,method,java/util/TreeMap/putAll/Map," Copies all of the mappings from the specified map to this map.\n These mappings replace any mappings that this map had for any\n of the keys currently in the specified map.\n\n @param  map mappings to be stored in this map\n @throws ClassCastException if the class of a key or value in\n         the specified map prevents it from being stored in this map\n @throws NullPointerException if the specified map is null or\n         the specified map contains a null key and this map does not\n         permit null keys\n"
16116,method,java/util/TreeMap/put/Object;Object," Associates the specified value with the specified key in this map.\n If the map previously contained a mapping for the key, the old\n value is replaced.\n\n @param key key with which the specified value is to be associated\n @param value value to be associated with the specified key\n\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map uses natural ordering, or its comparator\n         does not permit null keys\n"
16119,method,java/util/TreeMap/clone/," Returns a shallow copy of this <tt>TreeMap</tt> instance. (The keys and\n values themselves are not cloned.)\n\n @return a shallow copy of this map\n"
16120,method,java/util/TreeMap/firstEntry/," @since 1.6\n"
16121,method,java/util/TreeMap/lastEntry/," @since 1.6\n"
16122,method,java/util/TreeMap/pollFirstEntry/," @since 1.6\n"
16123,method,java/util/TreeMap/pollLastEntry/," @since 1.6\n"
16132,method,java/util/TreeMap/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set's iterator returns the keys in ascending order.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n"
16133,method,java/util/TreeMap/navigableKeySet/," @since 1.6\n"
16134,method,java/util/TreeMap/descendingKeySet/," @since 1.6\n"
16135,method,java/util/TreeMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection's iterator returns the values in ascending order\n of the corresponding keys.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n"
16136,method,java/util/TreeMap/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set's iterator returns the entries in ascending key order.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n"
16137,method,java/util/TreeMap/descendingMap/," @since 1.6\n"
16147,method,java/util/TreeMap/TreeMap/SortedMap," Constructs a new tree map containing the same mappings and\n using the same ordering as the specified sorted map.  This\n method runs in linear time.\n\n @param  m the sorted map whose mappings are to be placed in this map,\n         and whose comparator is to be used to sort this map\n @throws NullPointerException if the specified map is null\n"
16149,method,java/util/TooManyListenersException/TooManyListenersException/," Constructs a TooManyListenersException with no detail message.\n A detail message is a String that describes this particular exception.\n"
16150,method,java/util/TooManyListenersException/TooManyListenersException/String," Constructs a TooManyListenersException with the specified detail message.\n A detail message is a String that describes this particular exception.\n @param s the detail message\n"
16151,class,java/util/TimerTask," A task that can be scheduled for one-time or repeated execution by a Timer.\n\n @author  Josh Bloch\n @version 1.12, 03/23/10\n @see	    Timer\n @since   1.3\n"
16152,method,java/util/TimerTask/run/," The action to be performed by this timer task.\n"
16155,method,java/util/TimerTask/TimerTask/," Creates a new timer task.\n"
16174,method,java/util/TimeZone/getID/," Gets the ID of this time zone.\n @return the ID of this time zone.\n"
16175,method,java/util/TimeZone/setID/String," Sets the time zone ID. This does not change any other data in\n the time zone object.\n @param ID the new time zone ID.\n"
16176,method,java/util/TimeZone/getDisplayName/," Returns a name of this time zone suitable for presentation to the user\n in the default locale.\n This method returns the long name, not including daylight savings.\n If the display name is not available for the locale,\n then this method returns a string in the \n <a href="#NormalizedCustomID">normalized custom ID format</a>.\n @return the human-readable name of this time zone in the default locale.\n @since 1.2\n"
16177,method,java/util/TimeZone/getDisplayName/Locale," Returns a name of this time zone suitable for presentation to the user\n in the specified locale.\n This method returns the long name, not including daylight savings.\n If the display name is not available for the locale,\n then this method returns a string in the \n <a href="#NormalizedCustomID">normalized custom ID format</a>.\n @param locale the locale in which to supply the display name.\n @return the human-readable name of this time zone in the given locale.\n @since 1.2\n"
16178,method,java/util/TimeZone/getDisplayName/boolean;int," Returns a name of this time zone suitable for presentation to the user\n in the default locale.\n If the display name is not available for the locale, then this\n method returns a string in the \n <a href="#NormalizedCustomID">normalized custom ID format</a>.\n @param daylight if true, return the daylight savings name.\n @param style either <code>LONG</code> or <code>SHORT</code>\n @return the human-readable name of this time zone in the default locale.\n @since 1.2\n"
16179,method,java/util/TimeZone/getDisplayName/boolean;int;Locale," Returns a name of this time zone suitable for presentation to the user\n in the specified locale.\n If the display name is not available for the locale,\n then this method returns a string in the \n <a href="#NormalizedCustomID">normalized custom ID format</a>.\n @param daylight if true, return the daylight savings name.\n @param style either <code>LONG</code> or <code>SHORT</code>\n @param locale the locale in which to supply the display name.\n @return the human-readable name of this time zone in the given locale.\n @exception IllegalArgumentException style is invalid.\n @since 1.2\n"
16182,method,java/util/TimeZone/inDaylightTime/Date," Queries if the given date is in daylight savings time in\n this time zone.\n @param date the given Date.\n @return true if the given date is in daylight savings time,\n false, otherwise.\n"
16184,method,java/util/TimeZone/getAvailableIDs/int," Gets the available IDs according to the given time zone offset in milliseconds.\n\n @param rawOffset the given time zone GMT offset in milliseconds.\n @return an array of IDs, where the time zone for that ID has\n the specified GMT offset. For example, "America/Phoenix" and "America/Denver"\n both have GMT-07:00, but differ in daylight savings behavior.\n @see #getRawOffset()\n"
16185,method,java/util/TimeZone/getAvailableIDs/," Gets all the available IDs supported.\n @return an array of IDs.\n"
16187,method,java/util/TimeZone/setDefault/TimeZone," Sets the <code>TimeZone</code> that is\n returned by the <code>getDefault</code> method.  If <code>zone</code>\n is null, reset the default to the value it had originally when the\n VM first started.\n @param zone the new default time zone\n @see #getDefault\n"
16189,method,java/util/TimeZone/clone/," Creates a copy of this <code>TimeZone</code>.\n\n @return a clone of this <code>TimeZone</code>\n"
16191,field,java/util/TimeZone/SHORT," A style specifier for <code>getDisplayName()</code> indicating\n a short name, such as "PST."\n @see #LONG\n @since 1.2\n"
16192,field,java/util/TimeZone/LONG," A style specifier for <code>getDisplayName()</code> indicating\n a long name, such as "Pacific Standard Time."\n @see #SHORT\n @since 1.2\n"
16195,method,java/util/StringTokenizer/nextToken/," Returns the next token from this string tokenizer.\n\n @return     the next token from this string tokenizer.\n @exception  NoSuchElementException  if there are no more tokens in this\n               tokenizer's string.\n"
16197,method,java/util/StringTokenizer/hasMoreElements/," Returns the same value as the <code>hasMoreTokens</code>\n method. It exists so that this class can implement the\n <code>Enumeration</code> interface. \n\n @return  <code>true</code> if there are more tokens;\n          <code>false</code> otherwise.\n @see     java.util.Enumeration\n @see     java.util.StringTokenizer#hasMoreTokens()\n"
16198,method,java/util/StringTokenizer/nextElement/," Returns the same value as the <code>nextToken</code> method,\n except that its declared return value is <code>Object</code> rather than\n <code>String</code>. It exists so that this class can implement the\n <code>Enumeration</code> interface. \n\n @return     the next token in the string.\n @exception  NoSuchElementException  if there are no more tokens in this\n               tokenizer's string.\n @see        java.util.Enumeration\n @see        java.util.StringTokenizer#nextToken()\n"
16202,method,java/util/StringTokenizer/StringTokenizer/String," Constructs a string tokenizer for the specified string. The \n tokenizer uses the default delimiter set, which is \n <code>"&nbsp;&#92;t&#92;n&#92;r&#92;f"</code>: the space character, \n the tab character, the newline character, the carriage-return character,\n and the form-feed character. Delimiter characters themselves will \n not be treated as tokens.\n\n @param   str   a string to be parsed.\n @exception NullPointerException if str is <CODE>null</CODE> \n"
16204,method,java/util/Stack/push/Object," Pushes an item onto the top of this stack. This has exactly\n the same effect as:\n <blockquote><pre>\n addElement(item)</pre></blockquote>\n\n @param   item   the item to be pushed onto this stack.\n @return  the <code>item</code> argument.\n @see     java.util.Vector#addElement\n"
16205,method,java/util/Stack/pop/," Removes the object at the top of this stack and returns that\n object as the value of this function.\n\n @return     The object at the top of this stack (the last item\n             of the <tt>Vector</tt> object).\n @exception  EmptyStackException  if this stack is empty.\n"
16206,method,java/util/Stack/peek/," Looks at the object at the top of this stack without removing it\n from the stack.\n\n @return     the object at the top of this stack (the last item\n             of the <tt>Vector</tt> object).\n @exception  EmptyStackException  if this stack is empty.\n"
16209,method,java/util/Stack/Stack/," Creates an empty Stack.\n"
16211,method,java/util/SortedSet/comparator/," Returns the comparator used to order the elements in this set,\n or <tt>null</tt> if this set uses the {@linkplain Comparable\n natural ordering} of its elements.\n\n @return the comparator used to order the elements in this set,\n         or <tt>null</tt> if this set uses the natural ordering\n         of its elements\n"
16215,method,java/util/SortedSet/first/," Returns the first (lowest) element currently in this set.\n\n @return the first (lowest) element currently in this set\n @throws NoSuchElementException if this set is empty\n"
16216,method,java/util/SortedSet/last/," Returns the last (highest) element currently in this set.\n\n @return the last (highest) element currently in this set\n @throws NoSuchElementException if this set is empty\n"
16218,method,java/util/SortedMap/comparator/," Returns the comparator used to order the keys in this map, or\n <tt>null</tt> if this map uses the {@linkplain Comparable\n natural ordering} of its keys.\n\n @return the comparator used to order the keys in this map,\n         or <tt>null</tt> if this map uses the natural ordering\n         of its keys\n"
16222,method,java/util/SortedMap/firstKey/," Returns the first (lowest) key currently in this map.\n\n @return the first (lowest) key currently in this map\n @throws NoSuchElementException if this map is empty\n"
16223,method,java/util/SortedMap/lastKey/," Returns the last (highest) key currently in this map.\n\n @return the last (highest) key currently in this map\n @throws NoSuchElementException if this map is empty\n"
16224,method,java/util/SortedMap/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set's iterator returns the keys in ascending order.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n\n @return a set view of the keys contained in this map, sorted in\n         ascending order\n"
16225,method,java/util/SortedMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection's iterator returns the values in ascending order\n of the corresponding keys.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n\n @return a collection view of the values contained in this map,\n         sorted in ascending key order\n"
16226,method,java/util/SortedMap/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set's iterator returns the entries in ascending key order.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n\n @return a set view of the mappings contained in this map,\n         sorted in ascending key order\n"
16228,method,java/util/SimpleTimeZone/setStartYear/int," Sets the daylight saving time starting year.\n\n @param year  The daylight saving starting year.\n"
16230,method,java/util/SimpleTimeZone/setStartRule/int;int;int," Sets the daylight saving time start rule to a fixed date within a month.\n This method is equivalent to:\n <pre><code>setStartRule(startMonth, startDay, 0, startTime)</code></pre>\n\n @param startMonth      The daylight saving time starting month. Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. e.g., 0 for January).\n @param startDay        The day of the month on which the daylight saving time starts.\n @param startTime       The daylight saving time starting time in local wall clock\n                        time, which is local standard time in this case.\n                        See the class description for the special cases of this parameter.\n @exception IllegalArgumentException if the <code>startMonth</code>,\n <code>startDayOfMonth</code>, or <code>startTime</code> parameters are out of range\n @since 1.2\n"
16233,method,java/util/SimpleTimeZone/setEndRule/int;int;int," Sets the daylight saving time end rule to a fixed date within a month.\n This method is equivalent to:\n <pre><code>setEndRule(endMonth, endDay, 0, endTime)</code></pre>\n\n @param endMonth        The daylight saving time ending month. Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. e.g., 9 for October).\n @param endDay          The day of the month on which the daylight saving time ends.\n @param endTime         The daylight saving ending time in local wall clock time,\n                        (in milliseconds within the day) which is local daylight\n                        time in this case.\n @exception IllegalArgumentException the <code>endMonth</code>, <code>endDay</code>,\n or <code>endTime</code> parameters are out of range\n @since 1.2\n"
16235,method,java/util/SimpleTimeZone/getOffset/long," Returns the offset of this time zone from UTC at the given\n time. If daylight saving time is in effect at the given time,\n the offset value is adjusted with the amount of daylight\n saving.\n\n @param date the time at which the time zone offset is found\n @return the amount of time in milliseconds to add to UTC to get\n local time.\n @since 1.4\n"
16237,method,java/util/SimpleTimeZone/getRawOffset/," Gets the GMT offset for this time zone.\n @return the GMT offset value in milliseconds\n @see #setRawOffset\n"
16238,method,java/util/SimpleTimeZone/setRawOffset/int," Sets the base time zone offset to GMT.\n This is the offset to add to UTC to get local time.\n @see #getRawOffset\n"
16239,method,java/util/SimpleTimeZone/setDSTSavings/int," Sets the amount of time in milliseconds that the clock is advanced\n during daylight saving time.\n @param millisSavedDuringDST the number of milliseconds the time is\n advanced with respect to standard time when the daylight saving time rules\n are in effect. A positive number, typically one hour (3600000).\n @see #getDSTSavings\n @since 1.2\n"
16240,method,java/util/SimpleTimeZone/getDSTSavings/," Returns the amount of time in milliseconds that the clock is\n advanced during daylight saving time.\n\n @return the number of milliseconds the time is advanced with\n respect to standard time when the daylight saving rules are in\n effect, or 0 (zero) if this time zone doesn't observe daylight\n saving time.\n\n @see #setDSTSavings\n @since 1.2\n"
16241,method,java/util/SimpleTimeZone/useDaylightTime/," Queries if this time zone uses daylight saving time.\n @return true if this time zone uses daylight saving time;\n false otherwise.\n"
16242,method,java/util/SimpleTimeZone/inDaylightTime/Date," Queries if the given date is in daylight saving time.\n @return true if daylight saving time is in effective at the\n given date; false otherwise.\n"
16243,method,java/util/SimpleTimeZone/clone/," Returns a clone of this <code>SimpleTimeZone</code> instance.\n @return a clone of this instance.\n"
16244,method,java/util/SimpleTimeZone/hashCode/," Generates the hash code for the SimpleDateFormat object.\n @return the hash code for this object\n"
16245,method,java/util/SimpleTimeZone/equals/Object," Compares the equality of two <code>SimpleTimeZone</code> objects.\n\n @param obj  The <code>SimpleTimeZone</code> object to be compared with.\n @return     True if the given <code>obj</code> is the same as this\n		   <code>SimpleTimeZone</code> object; false otherwise.\n"
16246,method,java/util/SimpleTimeZone/hasSameRules/TimeZone," Returns <code>true</code> if this zone has the same rules and offset as another zone.\n @param other the TimeZone object to be compared with\n @return <code>true</code> if the given zone is a SimpleTimeZone and has the\n same rules and offset as this one\n @since 1.2\n"
16247,method,java/util/SimpleTimeZone/toString/," Returns a string representation of this time zone.\n @return a string representation of this time zone.\n"
16248,method,java/util/SimpleTimeZone/SimpleTimeZone/int;String," Constructs a SimpleTimeZone with the given base time zone offset from GMT\n and time zone ID with no daylight saving time schedule.\n\n @param rawOffset  The base time zone offset in milliseconds to GMT.\n @param ID         The time zone name that is given to this instance.\n"
16251,method,java/util/SimpleTimeZone/SimpleTimeZone/int;String;int;int;int;int;int;int;int;int;int;int;int," Constructs a SimpleTimeZone with the given base time zone offset from\n GMT, time zone ID, and rules for starting and ending the daylight\n time.\n This constructor takes the full set of the start and end rules\n parameters, including modes of <code>startTime</code> and\n <code>endTime</code>. The mode specifies either {@link #WALL_TIME wall\n time} or {@link #STANDARD_TIME standard time} or {@link #UTC_TIME UTC\n time}.\n\n @param rawOffset       The given base time zone offset from GMT.\n @param ID              The time zone ID which is given to this object.\n @param startMonth      The daylight saving time starting month. Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. e.g., 0 for January).\n @param startDay        The day of the month on which the daylight saving time starts.\n                        See the class description for the special cases of this parameter.\n @param startDayOfWeek  The daylight saving time starting day-of-week.\n                        See the class description for the special cases of this parameter.\n @param startTime       The daylight saving time starting time in the time mode\n                        specified by <code>startTimeMode</code>.\n @param startTimeMode   The mode of the start time specified by startTime.\n @param endMonth        The daylight saving time ending month. Month is\n                        a {@link Calendar#MONTH MONTH} field\n                        value (0-based. e.g., 9 for October).\n @param endDay          The day of the month on which the daylight saving time ends.\n                        See the class description for the special cases of this parameter.\n @param endDayOfWeek    The daylight saving time ending day-of-week.\n                        See the class description for the special cases of this parameter.\n @param endTime         The daylight saving ending time in time time mode\n                        specified by <code>endTimeMode</code>.\n @param endTimeMode     The mode of the end time specified by endTime\n @param dstSavings      The amount of time in milliseconds saved during\n                        daylight saving time.\n\n @exception IllegalArgumentException if the month, day, dayOfWeek, time more, or\n time parameters are out of range for the start or end rule, or if a time mode\n value is invalid.\n\n @see #WALL_TIME\n @see #STANDARD_TIME\n @see #UTC_TIME\n\n @since 1.4\n"
16252,field,java/util/SimpleTimeZone/WALL_TIME," Constant for a mode of start or end time specified as wall clock\n time.  Wall clock time is standard time for the onset rule, and\n daylight time for the end rule.\n @since 1.4\n"
16253,field,java/util/SimpleTimeZone/STANDARD_TIME," Constant for a mode of start or end time specified as standard time.\n @since 1.4\n"
16254,field,java/util/SimpleTimeZone/UTC_TIME," Constant for a mode of start or end time specified as UTC. European\n Union rules are specified as UTC time, for example.\n @since 1.4\n"
16256,method,java/util/Set/size/," Returns the number of elements in this set (its cardinality).  If this\n set contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of elements in this set (its cardinality)\n"
16257,method,java/util/Set/isEmpty/," Returns <tt>true</tt> if this set contains no elements.\n\n @return <tt>true</tt> if this set contains no elements\n"
16259,method,java/util/Set/iterator/," Returns an iterator over the elements in this set.  The elements are\n returned in no particular order (unless this set is an instance of some\n class that provides a guarantee).\n\n @return an iterator over the elements in this set\n"
16264,method,java/util/Set/containsAll/Collection," Returns <tt>true</tt> if this set contains all of the elements of the\n specified collection.  If the specified collection is also a set, this\n method returns <tt>true</tt> if it is a <i>subset</i> of this set.\n\n @param  c collection to be checked for containment in this set\n @return <tt>true</tt> if this set contains all of the elements of the\n 	       specified collection\n @throws ClassCastException if the types of one or more elements\n         in the specified collection are incompatible with this\n         set (optional)\n @throws NullPointerException if the specified collection contains one\n         or more null elements and this set does not permit null\n         elements (optional), or if the specified collection is null\n @see    #contains(Object)\n"
16269,method,java/util/Set/equals/Object," Compares the specified object with this set for equality.  Returns\n <tt>true</tt> if the specified object is also a set, the two sets\n have the same size, and every member of the specified set is\n contained in this set (or equivalently, every member of this set is\n contained in the specified set).  This definition ensures that the\n equals method works properly across different implementations of the\n set interface.\n\n @param o object to be compared for equality with this set\n @return <tt>true</tt> if the specified object is equal to this set\n"
16274,method,java/util/ServiceLoader/load/Class;ClassLoader," Creates a new service loader for the given service type and class\n loader.\n\n @param  service\n         The interface or abstract class representing the service\n\n @param  loader\n         The class loader to be used to load provider-configuration files\n         and provider classes, or <tt>null</tt> if the system class\n         loader (or, failing that, the bootstrap class loader) is to be\n         used\n \n @return A new service loader\n"
16277,method,java/util/ServiceLoader/toString/," Returns a string describing this service.\n\n @return  A descriptive string\n"
16279,method,java/util/ServiceConfigurationError/ServiceConfigurationError/String," Constructs a new instance with the specified message.\n\n @param  msg  The message, or <tt>null</tt> if there is no message\n\n"
16280,method,java/util/ServiceConfigurationError/ServiceConfigurationError/String;Throwable," Constructs a new instance with the specified message and cause.\n\n @param  msg  The message, or <tt>null</tt> if there is no message\n\n @param  cause  The cause, or <tt>null</tt> if the cause is nonexistent\n                or unknown\n"
16283,method,java/util/Scanner/ioException/," Returns the <code>IOException</code> last thrown by this\n <code>Scanner</code>'s underlying <code>Readable</code>. This method\n returns <code>null</code> if no such exception exists.\n\n @return the last exception thrown by this scanner's readable\n"
16284,method,java/util/Scanner/delimiter/," Returns the <code>Pattern</code> this <code>Scanner</code> is currently\n using to match delimiters.\n\n @return this scanner's delimiting pattern.\n"
16285,method,java/util/Scanner/useDelimiter/Pattern," Sets this scanner's delimiting pattern to the specified pattern.\n\n @param pattern A delimiting pattern\n @return this scanner\n"
16287,method,java/util/Scanner/locale/," Returns this scanner's locale.\n\n <p>A scanner's locale affects many elements of its default\n primitive matching regular expressions; see \n <a href= "#localized-numbers">localized numbers</a> above.\n\n @return this scanner's locale\n"
16289,method,java/util/Scanner/radix/," Returns this scanner's default radix.\n\n <p>A scanner's radix affects elements of its default\n number matching regular expressions; see \n <a href= "#localized-numbers">localized numbers</a> above.\n\n @return the default radix of this scanner\n"
16309,method,java/util/Scanner/nextBoolean/," Scans the next token of the input into a boolean value and returns\n that value. This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid boolean value.\n If the match is successful, the scanner advances past the input that \n matched.\n\n @return the boolean scanned from the input\n @throws InputMismatchException if the next token is not a valid boolean\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16313,method,java/util/Scanner/nextByte/int," Scans the next token of the input as a <tt>byte</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid byte value as\n described below. If the translation is successful, the scanner advances\n past the input that matched.\n\n <p> If the next token matches the <a\n href="#Integer-regex"><i>Integer</i></a> regular expression defined \n above then the token is converted into a <tt>byte</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Byte#parseByte(String, int) Byte.parseByte} with the\n specified radix.\n\n @param radix the radix used to interpret the token as a byte value\n @return the <tt>byte</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Integer</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16317,method,java/util/Scanner/nextShort/int," Scans the next token of the input as a <tt>short</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid short value as\n described below. If the translation is successful, the scanner advances\n past the input that matched.\n\n <p> If the next token matches the <a\n href="#Integer-regex"><i>Integer</i></a> regular expression defined \n above then the token is converted into a <tt>short</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Short#parseShort(String, int) Short.parseShort} with the \n specified radix.\n\n @param radix the radix used to interpret the token as a short value\n @return the <tt>short</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Integer</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16321,method,java/util/Scanner/nextInt/int," Scans the next token of the input as an <tt>int</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid int value as\n described below. If the translation is successful, the scanner advances\n past the input that matched.\n\n <p> If the next token matches the <a\n href="#Integer-regex"><i>Integer</i></a> regular expression defined \n above then the token is converted into an <tt>int</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Integer#parseInt(String, int) Integer.parseInt} with the\n specified radix.\n\n @param radix the radix used to interpret the token as an int value\n @return the <tt>int</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Integer</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16325,method,java/util/Scanner/nextLong/int," Scans the next token of the input as a <tt>long</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid long value as\n described below. If the translation is successful, the scanner advances\n past the input that matched.\n\n <p> If the next token matches the <a\n href="#Integer-regex"><i>Integer</i></a> regular expression defined \n above then the token is converted into a <tt>long</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Long#parseLong(String, int) Long.parseLong} with the\n specified radix.\n\n @param radix the radix used to interpret the token as an int value\n @return the <tt>long</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Integer</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16327,method,java/util/Scanner/nextFloat/," Scans the next token of the input as a <tt>float</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid float value as\n described below. If the translation is successful, the scanner advances\n past the input that matched.\n\n <p> If the next token matches the <a\n href="#Float-regex"><i>Float</i></a> regular expression defined above\n then the token is converted into a <tt>float</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Float#parseFloat Float.parseFloat}. If the token matches\n the localized NaN or infinity strings, then either "Nan" or "Infinity"\n is passed to {@link Float#parseFloat(String) Float.parseFloat} as \n appropriate.\n\n @return the <tt>float</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Float</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16329,method,java/util/Scanner/nextDouble/," Scans the next token of the input as a <tt>double</tt>.\n This method will throw <code>InputMismatchException</code>\n if the next token cannot be translated into a valid double value.\n If the translation is successful, the scanner advances past the input \n that matched.\n\n <p> If the next token matches the <a\n href="#Float-regex"><i>Float</i></a> regular expression defined above\n then the token is converted into a <tt>double</tt> value as if by\n removing all locale specific prefixes, group separators, and locale\n specific suffixes, then mapping non-ASCII digits into ASCII\n digits via {@link Character#digit Character.digit}, prepending a\n negative sign (-) if the locale specific negative prefixes and suffixes\n were present, and passing the resulting string to\n {@link Double#parseDouble Double.parseDouble}. If the token matches\n the localized NaN or infinity strings, then either "Nan" or "Infinity"\n is passed to {@link Double#parseDouble(String) Double.parseDouble} as \n appropriate.\n\n @return the <tt>double</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Float</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if the input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16333,method,java/util/Scanner/nextBigInteger/int," Scans the next token of the input as a {@link java.math.BigInteger\n BigInteger}.\n\n <p> If the next token matches the <a\n href="#Integer-regex"><i>Integer</i></a> regular expression defined\n above then the token is converted into a <tt>BigInteger</tt> value as if\n by removing all group separators, mapping non-ASCII digits into ASCII\n digits via the {@link Character#digit Character.digit}, and passing the\n resulting string to the {@link\n java.math.BigInteger#BigInteger(java.lang.String) \n BigInteger(String, int)} constructor with the specified radix.\n\n @param radix the radix used to interpret the token\n @return the <tt>BigInteger</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Integer</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if the input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16335,method,java/util/Scanner/nextBigDecimal/," Scans the next token of the input as a {@link java.math.BigDecimal\n BigDecimal}.\n\n <p> If the next token matches the <a\n href="#Decimal-regex"><i>Decimal</i></a> regular expression defined\n above then the token is converted into a <tt>BigDecimal</tt> value as if\n by removing all group separators, mapping non-ASCII digits into ASCII\n digits via the {@link Character#digit Character.digit}, and passing the\n resulting string to the {@link\n java.math.BigDecimal#BigDecimal(java.lang.String) BigDecimal(String)}\n constructor.\n\n @return the <tt>BigDecimal</tt> scanned from the input\n @throws InputMismatchException\n         if the next token does not match the <i>Decimal</i>\n         regular expression, or is out of range\n @throws NoSuchElementException if the input is exhausted\n @throws IllegalStateException if this scanner is closed\n"
16337,method,java/util/Scanner/Scanner/Readable," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified source.\n\n @param  source A character source implementing the {@link Readable}\n         interface\n"
16338,method,java/util/Scanner/Scanner/InputStream," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified input stream. Bytes from the stream are converted \n into characters using the underlying platform's\n {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n\n @param  source An input stream to be scanned\n"
16339,method,java/util/Scanner/Scanner/InputStream;String," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified input stream. Bytes from the stream are converted \n into characters using the specified charset.\n\n @param  source An input stream to be scanned\n @param charsetName The encoding type used to convert bytes from the\n        stream into characters to be scanned\n @throws IllegalArgumentException if the specified character set\n         does not exist\n"
16340,method,java/util/Scanner/Scanner/File," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified file. Bytes from the file are converted into \n characters using the underlying platform's\n {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n\n @param  source A file to be scanned\n @throws FileNotFoundException if source is not found\n"
16341,method,java/util/Scanner/Scanner/File;String," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified file. Bytes from the file are converted into \n characters using the specified charset.\n\n @param  source A file to be scanned\n @param charsetName The encoding type used to convert bytes from the file\n        into characters to be scanned\n @throws FileNotFoundException if source is not found\n @throws IllegalArgumentException if the specified encoding is \n         not found\n"
16342,method,java/util/Scanner/Scanner/String," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified string.\n\n @param  source A string to scan\n"
16343,method,java/util/Scanner/Scanner/ReadableByteChannel," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified channel. Bytes from the source are converted into \n characters using the underlying platform's\n {@linkplain java.nio.charset.Charset#defaultCharset() default charset}.\n\n @param  source A channel to scan\n"
16344,method,java/util/Scanner/Scanner/ReadableByteChannel;String," Constructs a new <code>Scanner</code> that produces values scanned\n from the specified channel. Bytes from the source are converted into \n characters using the specified charset.\n\n @param  source A channel to scan\n @param charsetName The encoding type used to convert bytes from the\n        channel into characters to be scanned\n @throws IllegalArgumentException if the specified character set\n         does not exist\n"
16350,method,java/util/ResourceBundle/setParent/ResourceBundle," Sets the parent bundle of this bundle.\n The parent bundle is searched by {@link #getObject getObject}\n when this bundle does not contain a particular resource.\n\n @param parent this bundle's parent bundle.\n"
16358,method,java/util/ResourceBundle/clearCache/ClassLoader," Removes all resource bundles from the cache that have been loaded\n using the given class loader.\n\n @param loader the class loader\n @exception NullPointerException if <code>loader</code> is null\n @since 1.6\n @see ResourceBundle.Control#getTimeToLive(String,Locale)\n"
16360,method,java/util/ResourceBundle/getKeys/," Returns an enumeration of the keys.\n\n @return an <code>Enumeration</code> of the keys contained in\n         this <code>ResourceBundle</code> and its parent bundles.\n"
16361,method,java/util/ResourceBundle/containsKey/String," Determines whether the given <code>key</code> is contained in\n this <code>ResourceBundle</code> or its parent bundles.\n\n @param key\n        the resource <code>key</code>\n @return <code>true</code> if the given <code>key</code> is\n        contained in this <code>ResourceBundle</code> or its\n        parent bundles; <code>false</code> otherwise.\n @exception NullPointerException\n         if <code>key</code> is <code>null</code>\n @since 1.6\n"
16362,method,java/util/ResourceBundle/keySet/," Returns a <code>Set</code> of all keys contained in this\n <code>ResourceBundle</code> and its parent bundles.\n\n @return a <code>Set</code> of all keys contained in this\n         <code>ResourceBundle</code> and its parent bundles.\n @since 1.6\n"
16365,field,java/util/ResourceBundle/parent," The parent bundle of this bundle.\n The parent bundle is searched by {@link #getObject getObject}\n when this bundle does not contain a particular resource.\n"
16378,field,java/util/ResourceBundle/Control/FORMAT_DEFAULT," The default format <code>List</code>, which contains the strings\n <code>"java.class"</code> and <code>"java.properties"</code>, in\n this order. This <code>List</code> is {@linkplain\n Collections#unmodifiableList(List) unmodifiable}.\n\n @see #getFormats(String)\n"
16381,field,java/util/ResourceBundle/Control/TTL_DONT_CACHE," The time-to-live constant for not caching loaded resource bundle\n instances.\n\n @see #getTimeToLive(String, Locale)\n"
16382,field,java/util/ResourceBundle/Control/TTL_NO_EXPIRATION_CONTROL," The time-to-live constant for disabling the expiration control\n for loaded resource bundle instances in the cache.\n\n @see #getTimeToLive(String, Locale)\n"
16387,method,java/util/Random/nextBytes/byte[]," Generates random bytes and places them into a user-supplied\n byte array.  The number of random bytes produced is equal to\n the length of the byte array.\n\n <p>The method {@code nextBytes} is implemented by class {@code Random}\n as if by:\n  <pre> {@code\n public void nextBytes(byte[] bytes) {\n   for (int i = 0; i < bytes.length; )\n     for (int rnd = nextInt(), n = Math.min(bytes.length - i, 4);\n          n-- > 0; rnd >>= 8)\n       bytes[i++] = (byte)rnd;\n }}</pre>\n\n @param  bytes the byte array to fill with random bytes\n @throws NullPointerException if the byte array is null\n @since  1.1\n"
16388,method,java/util/Random/nextInt/," Returns the next pseudorandom, uniformly distributed {@code int}\n value from this random number generator's sequence. The general\n contract of {@code nextInt} is that one {@code int} value is\n pseudorandomly generated and returned. All 2<font size="-1"><sup>32\n </sup></font> possible {@code int} values are produced with\n (approximately) equal probability.\n\n <p>The method {@code nextInt} is implemented by class {@code Random}\n as if by:\n  <pre> {@code\n public int nextInt() {\n   return next(32);\n }}</pre>\n\n @return the next pseudorandom, uniformly distributed {@code int}\n         value from this random number generator's sequence\n"
16391,method,java/util/Random/nextBoolean/," Returns the next pseudorandom, uniformly distributed\n {@code boolean} value from this random number generator's\n sequence. The general contract of {@code nextBoolean} is that one\n {@code boolean} value is pseudorandomly generated and returned.  The\n values {@code true} and {@code false} are produced with\n (approximately) equal probability.\n\n <p>The method {@code nextBoolean} is implemented by class {@code Random}\n as if by:\n  <pre> {@code\n public boolean nextBoolean() {\n   return next(1) != 0;\n }}</pre>\n\n @return the next pseudorandom, uniformly distributed\n         {@code boolean} value from this random number generator's\n	       sequence\n @since 1.2\n"
16401,method,java/util/Queue/poll/," Retrieves and removes the head of this queue,\n or returns <tt>null</tt> if this queue is empty.\n\n @return the head of this queue, or <tt>null</tt> if this queue is empty\n"
16403,method,java/util/Queue/peek/," Retrieves, but does not remove, the head of this queue,\n or returns <tt>null</tt> if this queue is empty.\n\n @return the head of this queue, or <tt>null</tt> if this queue is empty\n"
16405,method,java/util/PropertyResourceBundle/handleGetObject/String,""
16406,method,java/util/PropertyResourceBundle/getKeys/," Returns an <code>Enumeration</code> of the keys contained in\n this <code>ResourceBundle</code> and its parent bundles.\n\n @return an <code>Enumeration</code> of the keys contained in\n         this <code>ResourceBundle</code> and its parent bundles.\n @see #keySet()\n"
16411,method,java/util/PropertyPermission/implies/Permission," Checks if this PropertyPermission object "implies" the specified\n permission.\n <P>\n More specifically, this method returns true if:<p>\n <ul>\n <li> <i>p</i> is an instanceof PropertyPermission,<p>\n <li> <i>p</i>'s actions are a subset of this\n object's actions, and <p>\n <li> <i>p</i>'s name is implied by this object's\n      name. For example, "java.*" implies "java.home".\n </ul>\n @param p the permission to check against.\n\n @return true if the specified permission is implied by this object,\n false if not.\n"
16412,method,java/util/PropertyPermission/equals/Object," Checks two PropertyPermission objects for equality. Checks that <i>obj</i> is\n a PropertyPermission, and has the same name and actions as this object.\n <P>\n @param obj the object we are testing for equality with this object.\n @return true if obj is a PropertyPermission, and has the same name and\n actions as this PropertyPermission object.\n"
16415,method,java/util/PropertyPermission/newPermissionCollection/," Returns a new PermissionCollection object for storing\n PropertyPermission objects.\n <p>\n\n @return a new PermissionCollection object suitable for storing\n PropertyPermissions.\n"
16427,method,java/util/Properties/getProperty/String," Searches for the property with the specified key in this property list.\n If the key is not found in this property list, the default property list,\n and its defaults, recursively, are then checked. The method returns\n <code>null</code> if the property is not found.\n\n @param   key   the property key.\n @return  the value in this property list with the specified key value.\n @see     #setProperty\n @see     #defaults\n"
16428,method,java/util/Properties/getProperty/String;String," Searches for the property with the specified key in this property list.\n If the key is not found in this property list, the default property list,\n and its defaults, recursively, are then checked. The method returns the\n default value argument if the property is not found.\n\n @param   key            the hashtable key.\n @param   defaultValue   a default value.\n\n @return  the value in this property list with the specified key value.\n @see     #setProperty\n @see     #defaults\n"
16429,method,java/util/Properties/propertyNames/," Returns an enumeration of all the keys in this property list,\n including distinct keys in the default property list if a key\n of the same name has not already been found from the main\n properties list.\n\n @return  an enumeration of all the keys in this property list, including\n          the keys in the default property list.\n @throws  ClassCastException if any key in this property list\n          is not a string. \n @see     java.util.Enumeration\n @see     java.util.Properties#defaults\n @see     #stringPropertyNames\n"
16430,method,java/util/Properties/stringPropertyNames/," Returns a set of keys in this property list where\n the key and its corresponding value are strings,\n including distinct keys in the default property list if a key\n of the same name has not already been found from the main\n properties list.  Properties whose key or value is not \n of type <tt>String</tt> are omitted.\n <p>\n The returned set is not backed by the <tt>Properties</tt> object.\n Changes to this <tt>Properties</tt> are not reflected in the set,\n or vice versa.\n\n @return  a set of keys in this property list where\n          the key and its corresponding value are strings,\n          including the keys in the default property list.\n @see     java.util.Properties#defaults\n @since   1.6\n"
16433,method,java/util/Properties/Properties/," Creates an empty property list with no default values.\n"
16434,method,java/util/Properties/Properties/Properties," Creates an empty property list with the specified defaults.\n\n @param   defaults   the defaults.\n"
16435,field,java/util/Properties/defaults," A property list that contains default values for any keys not\n found in this property list.\n\n @serial\n"
16437,method,java/util/PriorityQueue/add/Object," Inserts the specified element into this priority queue.\n\n @return {@code true} (as specified by {@link Collection#add})\n @throws ClassCastException if the specified element cannot be\n         compared with elements currently in this priority queue\n         according to the priority queue's ordering\n @throws NullPointerException if the specified element is null\n"
16438,method,java/util/PriorityQueue/offer/Object," Inserts the specified element into this priority queue.\n\n @return {@code true} (as specified by {@link Queue#offer})\n @throws ClassCastException if the specified element cannot be\n         compared with elements currently in this priority queue\n         according to the priority queue's ordering\n @throws NullPointerException if the specified element is null\n"
16439,method,java/util/PriorityQueue/peek/,""
16444,method,java/util/PriorityQueue/iterator/," Returns an iterator over the elements in this queue. The iterator\n does not return the elements in any particular order.\n\n @return an iterator over the elements in this queue\n"
16445,method,java/util/PriorityQueue/size/,""
16447,method,java/util/PriorityQueue/poll/,""
16448,method,java/util/PriorityQueue/comparator/," Returns the comparator used to order the elements in this\n queue, or {@code null} if this queue is sorted according to\n the {@linkplain Comparable natural ordering} of its elements.\n\n @return the comparator used to order this queue, or\n         {@code null} if this queue is sorted according to the\n         natural ordering of its elements\n"
16449,method,java/util/PriorityQueue/PriorityQueue/," Creates a {@code PriorityQueue} with the default initial\n capacity (11) that orders its elements according to their\n {@linkplain Comparable natural ordering}.\n"
16450,method,java/util/PriorityQueue/PriorityQueue/int," Creates a {@code PriorityQueue} with the specified initial\n capacity that orders its elements according to their\n {@linkplain Comparable natural ordering}.\n\n @param initialCapacity the initial capacity for this priority queue\n @throws IllegalArgumentException if {@code initialCapacity} is less\n         than 1\n"
16451,method,java/util/PriorityQueue/PriorityQueue/int;Comparator," Creates a {@code PriorityQueue} with the specified initial capacity\n that orders its elements according to the specified comparator.\n\n @param  initialCapacity the initial capacity for this priority queue\n @param  comparator the comparator that will be used to order this\n         priority queue.  If {@code null}, the {@linkplain Comparable\n         natural ordering} of the elements will be used.\n @throws IllegalArgumentException if {@code initialCapacity} is\n         less than 1\n"
16452,method,java/util/PriorityQueue/PriorityQueue/Collection," Creates a {@code PriorityQueue} containing the elements in the\n specified collection.  If the specified collection is an instance of\n a {@link SortedSet} or is another {@code PriorityQueue}, this\n priority queue will be ordered according to the same ordering.\n Otherwise, this priority queue will be ordered according to the\n {@linkplain Comparable natural ordering} of its elements.\n\n @param  c the collection whose elements are to be placed\n         into this priority queue\n @throws ClassCastException if elements of the specified collection\n         cannot be compared to one another according to the priority\n         queue's ordering\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
16453,method,java/util/PriorityQueue/PriorityQueue/PriorityQueue," Creates a {@code PriorityQueue} containing the elements in the\n specified priority queue.  This priority queue will be\n ordered according to the same ordering as the given priority\n queue.\n\n @param  c the priority queue whose elements are to be placed\n         into this priority queue\n @throws ClassCastException if elements of {@code c} cannot be\n         compared to one another according to {@code c}'s\n         ordering\n @throws NullPointerException if the specified priority queue or any\n         of its elements are null\n"
16454,method,java/util/PriorityQueue/PriorityQueue/SortedSet," Creates a {@code PriorityQueue} containing the elements in the\n specified sorted set.   This priority queue will be ordered\n according to the same ordering as the given sorted set.\n\n @param  c the sorted set whose elements are to be placed\n         into this priority queue\n @throws ClassCastException if elements of the specified sorted\n         set cannot be compared to one another according to the\n         sorted set's ordering\n @throws NullPointerException if the specified sorted set or any\n         of its elements are null\n"
16455,interface,java/util/Observer," A class can implement the <code>Observer</code> interface when it\n wants to be informed of changes in observable objects.\n\n @author  Chris Warth\n @version 1.21, 03/23/10\n @see     java.util.Observable\n @since   JDK1.0\n"
16458,method,java/util/Observable/addObserver/Observer," Adds an observer to the set of observers for this object, provided \n that it is not the same as some observer already in the set. \n The order in which notifications will be delivered to multiple \n observers is not specified. See the class comment.\n\n @param   o   an observer to be added.\n @throws NullPointerException   if the parameter o is null.\n"
16459,method,java/util/Observable/deleteObserver/Observer," Deletes an observer from the set of observers of this object. \n Passing <CODE>null</CODE> to this method will have no effect.\n @param   o   the observer to be deleted.\n"
16462,method,java/util/Observable/deleteObservers/," Clears the observer list so that this object no longer has any observers.\n"
16463,method,java/util/Observable/setChanged/," Marks this <tt>Observable</tt> object as having been changed; the \n <tt>hasChanged</tt> method will now return <tt>true</tt>.\n"
16466,method,java/util/Observable/countObservers/," Returns the number of observers of this <tt>Observable</tt> object.\n\n @return  the number of observers of this object.\n"
16467,method,java/util/Observable/Observable/,"Construct an Observable with zero Observers. "
16468,class,java/util/NoSuchElementException," Thrown by the <code>nextElement</code> method of an \n <code>Enumeration</code> to indicate that there are no more \n elements in the enumeration. \n\n @author  unascribed\n @version 1.23, 03/23/10\n @see     java.util.Enumeration\n @see     java.util.Enumeration#nextElement()\n @since   JDK1.0\n"
16473,method,java/util/NavigableSet/floor/Object," Returns the greatest element in this set less than or equal to\n the given element, or {@code null} if there is no such element.\n\n @param e the value to match\n @return the greatest element less than or equal to {@code e},\n         or {@code null} if there is no such element\n @throws ClassCastException if the specified element cannot be\n         compared with the elements currently in the set\n @throws NullPointerException if the specified element is null\n         and this set does not permit null elements\n"
16474,method,java/util/NavigableSet/ceiling/Object," Returns the least element in this set greater than or equal to\n the given element, or {@code null} if there is no such element.\n\n @param e the value to match\n @return the least element greater than or equal to {@code e},\n         or {@code null} if there is no such element\n @throws ClassCastException if the specified element cannot be\n         compared with the elements currently in the set\n @throws NullPointerException if the specified element is null\n         and this set does not permit null elements\n"
16476,method,java/util/NavigableSet/pollFirst/," Retrieves and removes the first (lowest) element,\n or returns {@code null} if this set is empty.\n\n @return the first element, or {@code null} if this set is empty\n"
16477,method,java/util/NavigableSet/pollLast/," Retrieves and removes the last (highest) element,\n or returns {@code null} if this set is empty.\n\n @return the last element, or {@code null} if this set is empty\n"
16478,method,java/util/NavigableSet/iterator/," Returns an iterator over the elements in this set, in ascending order.\n\n @return an iterator over the elements in this set, in ascending order\n"
16479,method,java/util/NavigableSet/descendingSet/," Returns a reverse order view of the elements contained in this set.\n The descending set is backed by this set, so changes to the set are\n reflected in the descending set, and vice-versa.  If either set is\n modified while an iteration over either set is in progress (except\n through the iterator's own {@code remove} operation), the results of\n the iteration are undefined.\n\n <p>The returned set has an ordering equivalent to\n <tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.\n The expression {@code s.descendingSet().descendingSet()} returns a\n view of {@code s} essentially equivalent to {@code s}.\n\n @return a reverse order view of this set\n"
16480,method,java/util/NavigableSet/descendingIterator/," Returns an iterator over the elements in this set, in descending order.\n Equivalent in effect to {@code descendingSet().iterator()}.\n\n @return an iterator over the elements in this set, in descending order\n"
16490,method,java/util/NavigableMap/floorEntry/Object," Returns a key-value mapping associated with the greatest key\n less than or equal to the given key, or {@code null} if there\n is no such key.\n\n @param key the key\n @return an entry with the greatest key less than or equal to\n         {@code key}, or {@code null} if there is no such key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map does not permit null keys\n"
16491,method,java/util/NavigableMap/floorKey/Object," Returns the greatest key less than or equal to the given key,\n or {@code null} if there is no such key.\n\n @param key the key\n @return the greatest key less than or equal to {@code key},\n         or {@code null} if there is no such key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map does not permit null keys\n"
16492,method,java/util/NavigableMap/ceilingEntry/Object," Returns a key-value mapping associated with the least key\n greater than or equal to the given key, or {@code null} if\n there is no such key.\n\n @param key the key\n @return an entry with the least key greater than or equal to\n         {@code key}, or {@code null} if there is no such key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map does not permit null keys\n"
16493,method,java/util/NavigableMap/ceilingKey/Object," Returns the least key greater than or equal to the given key,\n or {@code null} if there is no such key.\n\n @param key the key\n @return the least key greater than or equal to {@code key},\n         or {@code null} if there is no such key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n         and this map does not permit null keys\n"
16496,method,java/util/NavigableMap/firstEntry/," Returns a key-value mapping associated with the least\n key in this map, or {@code null} if the map is empty.\n\n @return an entry with the least key,\n         or {@code null} if this map is empty\n"
16497,method,java/util/NavigableMap/lastEntry/," Returns a key-value mapping associated with the greatest\n key in this map, or {@code null} if the map is empty.\n\n @return an entry with the greatest key,\n         or {@code null} if this map is empty\n"
16498,method,java/util/NavigableMap/pollFirstEntry/," Removes and returns a key-value mapping associated with\n the least key in this map, or {@code null} if the map is empty.\n\n @return the removed first entry of this map,\n         or {@code null} if this map is empty\n"
16499,method,java/util/NavigableMap/pollLastEntry/," Removes and returns a key-value mapping associated with\n the greatest key in this map, or {@code null} if the map is empty.\n\n @return the removed last entry of this map,\n         or {@code null} if this map is empty\n"
16500,method,java/util/NavigableMap/descendingMap/," Returns a reverse order view of the mappings contained in this map.\n The descending map is backed by this map, so changes to the map are\n reflected in the descending map, and vice-versa.  If either map is\n modified while an iteration over a collection view of either map\n is in progress (except through the iterator's own {@code remove}\n operation), the results of the iteration are undefined.\n\n <p>The returned map has an ordering equivalent to\n <tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.\n The expression {@code m.descendingMap().descendingMap()} returns a\n view of {@code m} essentially equivalent to {@code m}.\n\n @return a reverse order view of this map\n"
16501,method,java/util/NavigableMap/navigableKeySet/," Returns a {@link NavigableSet} view of the keys contained in this map.\n The set's iterator returns the keys in ascending order.\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa.  If the map is modified while an iteration\n over the set is in progress (except through the iterator's own {@code\n remove} operation), the results of the iteration are undefined.  The\n set supports element removal, which removes the corresponding mapping\n from the map, via the {@code Iterator.remove}, {@code Set.remove},\n {@code removeAll}, {@code retainAll}, and {@code clear} operations.\n It does not support the {@code add} or {@code addAll} operations.\n\n @return a navigable set view of the keys in this map\n"
16502,method,java/util/NavigableMap/descendingKeySet/," Returns a reverse order {@link NavigableSet} view of the keys contained in this map.\n The set's iterator returns the keys in descending order.\n The set is backed by the map, so changes to the map are reflected in\n the set, and vice-versa.  If the map is modified while an iteration\n over the set is in progress (except through the iterator's own {@code\n remove} operation), the results of the iteration are undefined.  The\n set supports element removal, which removes the corresponding mapping\n from the map, via the {@code Iterator.remove}, {@code Set.remove},\n {@code removeAll}, {@code retainAll}, and {@code clear} operations.\n It does not support the {@code add} or {@code addAll} operations.\n\n @return a reverse order navigable set view of the keys in this map\n"
16509,class,java/util/MissingResourceException," Signals that a resource is missing.\n @see java.lang.Exception\n @see ResourceBundle\n @version     1.20, 03/23/10\n @author      Mark Davis\n @since       JDK1.1\n"
16510,method,java/util/MissingResourceException/getClassName/," Gets parameter passed by constructor.\n\n @return the name of the resource class\n"
16511,method,java/util/MissingResourceException/getKey/," Gets parameter passed by constructor.\n\n @return the key for the missing resource\n"
16512,method,java/util/MissingResourceException/MissingResourceException/String;String;String," Constructs a MissingResourceException with the specified information.\n A detail message is a String that describes this particular exception.\n @param s the detail message\n @param className the name of the resource class\n @param key the key for the missing resource.\n"
16514,method,java/util/MissingFormatWidthException/getFormatSpecifier/," Returns the format specifier which does not have a width.\n\n @return  The format specifier which does not have a width\n"
16515,method,java/util/MissingFormatWidthException/getMessage/,""
16516,method,java/util/MissingFormatWidthException/MissingFormatWidthException/String," Constructs an instance of this class with the specified format\n specifier. \n\n @param  s\n         The format specifier which does not have a width\n"
16517,class,java/util/MissingFormatArgumentException," Unchecked exception thrown when there is a format specifier which does not\n have a corresponding argument or if an argument index refers to an argument\n that does not exist.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16518,method,java/util/MissingFormatArgumentException/getFormatSpecifier/," Returns the unmatched format specifier.\n\n @return  The unmatched format specifier\n"
16519,method,java/util/MissingFormatArgumentException/getMessage/,""
16520,method,java/util/MissingFormatArgumentException/MissingFormatArgumentException/String," Constructs an instance of this class with the unmatched format\n specifier.\n\n @param  s\n         Format specifier which does not have a corresponding argument\n"
16522,method,java/util/Map/size/," Returns the number of key-value mappings in this map.  If the\n map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of key-value mappings in this map\n"
16523,method,java/util/Map/isEmpty/," Returns <tt>true</tt> if this map contains no key-value mappings.\n\n @return <tt>true</tt> if this map contains no key-value mappings\n"
16531,method,java/util/Map/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n\n @return a set view of the keys contained in this map\n"
16532,method,java/util/Map/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n\n @return a collection view of the values contained in this map\n"
16533,method,java/util/Map/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n\n @return a set view of the mappings contained in this map\n"
16534,method,java/util/Map/equals/Object," Compares the specified object with this map for equality.  Returns\n <tt>true</tt> if the given object is also a map and the two maps\n represent the same mappings.  More formally, two maps <tt>m1</tt> and\n <tt>m2</tt> represent the same mappings if\n <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the\n <tt>equals</tt> method works properly across different implementations\n of the <tt>Map</tt> interface.\n\n @param o object to be compared for equality with this map\n @return <tt>true</tt> if the specified object is equal to this map\n"
16540,method,java/util/Map/Entry/equals/Object," Compares the specified object with this entry for equality.\n Returns <tt>true</tt> if the given object is also a map entry and\n the two entries represent the same mapping.  More formally, two\n entries <tt>e1</tt> and <tt>e2</tt> represent the same mapping\n if<pre>\n     (e1.getKey()==null ?\n      e2.getKey()==null : e1.getKey().equals(e2.getKey()))  &amp;&amp;\n     (e1.getValue()==null ?\n      e2.getValue()==null : e1.getValue().equals(e2.getValue()))\n </pre>\n This ensures that the <tt>equals</tt> method works properly across\n different implementations of the <tt>Map.Entry</tt> interface.\n\n @param o object to be compared for equality with this map entry\n @return <tt>true</tt> if the specified object is equal to this map\n         entry\n"
16543,method,java/util/Locale/getDefault/," Gets the current value of the default locale for this instance\n of the Java Virtual Machine.\n <p>\n The Java Virtual Machine sets the default locale during startup\n based on the host environment. It is used by many locale-sensitive\n methods if no locale is explicitly specified.\n It can be changed using the\n {@link #setDefault(java.util.Locale) setDefault} method.\n\n @return the default locale for this instance of the Java Virtual Machine\n"
16546,method,java/util/Locale/getISOCountries/," Returns a list of all 2-letter country codes defined in ISO 3166.\n Can be used to create Locales.\n"
16549,method,java/util/Locale/getCountry/," Returns the country/region code for this locale, which will\n either be the empty string or an uppercase ISO 3166 2-letter code.\n @see #getDisplayCountry\n"
16550,method,java/util/Locale/getVariant/," Returns the variant code for this locale.\n @see #getDisplayVariant\n"
16552,method,java/util/Locale/getISO3Language/," Returns a three-letter abbreviation for this locale's language.  If the locale\n doesn't specify a language, this will be the empty string.  Otherwise, this will\n be a lowercase ISO 639-2/T language code.\n The ISO 639-2 language codes can be found on-line at\n <a href="http://www.loc.gov/standards/iso639-2/englangn.html">\n <code>http://www.loc.gov/standards/iso639-2/englangn.html</code>.</a>\n @exception MissingResourceException Throws MissingResourceException if the\n three-letter language abbreviation is not available for this locale.\n"
16553,method,java/util/Locale/getISO3Country/," Returns a three-letter abbreviation for this locale's country.  If the locale\n doesn't specify a country, this will be the empty string.  Otherwise, this will\n be an uppercase ISO 3166 3-letter country code.\n The ISO 3166-2 country codes can be found on-line at\n <a href="http://www.davros.org/misc/iso3166.txt">\n <code>http://www.davros.org/misc/iso3166.txt</code>.</a>\n @exception MissingResourceException Throws MissingResourceException if the\n three-letter country abbreviation is not available for this locale.\n"
16554,method,java/util/Locale/getDisplayLanguage/," Returns a name for the locale's language that is appropriate for display to the\n user.\n If possible, the name returned will be localized for the default locale.\n For example, if the locale is fr_FR and the default locale\n is en_US, getDisplayLanguage() will return "French"; if the locale is en_US and\n the default locale is fr_FR, getDisplayLanguage() will return "anglais".\n If the name returned cannot be localized for the default locale,\n (say, we don't have a Japanese name for Croatian),\n this function falls back on the English name, and uses the ISO code as a last-resort\n value.  If the locale doesn't specify a language, this function returns the empty string.\n"
16555,method,java/util/Locale/getDisplayLanguage/Locale," Returns a name for the locale's language that is appropriate for display to the\n user.\n If possible, the name returned will be localized according to inLocale.\n For example, if the locale is fr_FR and inLocale\n is en_US, getDisplayLanguage() will return "French"; if the locale is en_US and\n inLocale is fr_FR, getDisplayLanguage() will return "anglais".\n If the name returned cannot be localized according to inLocale,\n (say, we don't have a Japanese name for Croatian),\n this function falls back on the English name, and finally\n on the ISO code as a last-resort value.  If the locale doesn't specify a language,\n this function returns the empty string.\n\n @exception NullPointerException if <code>inLocale</code> is <code>null</code>\n"
16556,method,java/util/Locale/getDisplayCountry/," Returns a name for the locale's country that is appropriate for display to the\n user.\n If possible, the name returned will be localized for the default locale.\n For example, if the locale is fr_FR and the default locale\n is en_US, getDisplayCountry() will return "France"; if the locale is en_US and\n the default locale is fr_FR, getDisplayCountry() will return "Etats-Unis".\n If the name returned cannot be localized for the default locale,\n (say, we don't have a Japanese name for Croatia),\n this function falls back on the English name, and uses the ISO code as a last-resort\n value.  If the locale doesn't specify a country, this function returns the empty string.\n"
16557,method,java/util/Locale/getDisplayCountry/Locale," Returns a name for the locale's country that is appropriate for display to the\n user.\n If possible, the name returned will be localized according to inLocale.\n For example, if the locale is fr_FR and inLocale\n is en_US, getDisplayCountry() will return "France"; if the locale is en_US and\n inLocale is fr_FR, getDisplayCountry() will return "Etats-Unis".\n If the name returned cannot be localized according to inLocale.\n (say, we don't have a Japanese name for Croatia),\n this function falls back on the English name, and finally\n on the ISO code as a last-resort value.  If the locale doesn't specify a country,\n this function returns the empty string.\n\n @exception NullPointerException if <code>inLocale</code> is <code>null</code>\n"
16558,method,java/util/Locale/getDisplayVariant/," Returns a name for the locale's variant code that is appropriate for display to the\n user.  If possible, the name will be localized for the default locale.  If the locale\n doesn't specify a variant code, this function returns the empty string.\n"
16559,method,java/util/Locale/getDisplayVariant/Locale," Returns a name for the locale's variant code that is appropriate for display to the\n user.  If possible, the name will be localized for inLocale.  If the locale\n doesn't specify a variant code, this function returns the empty string.\n\n @exception NullPointerException if <code>inLocale</code> is <code>null</code>\n"
16560,method,java/util/Locale/getDisplayName/," Returns a name for the locale that is appropriate for display to the\n user.  This will be the values returned by getDisplayLanguage(), getDisplayCountry(),\n and getDisplayVariant() assembled into a single string.  The display name will have\n one of the following forms:<p><blockquote>\n language (country, variant)<p>\n language (country)<p>\n language (variant)<p>\n country (variant)<p>\n language<p>\n country<p>\n variant<p></blockquote>\n depending on which fields are specified in the locale.  If the language, country,\n and variant fields are all empty, this function returns the empty string.\n"
16561,method,java/util/Locale/getDisplayName/Locale," Returns a name for the locale that is appropriate for display to the\n user.  This will be the values returned by getDisplayLanguage(), getDisplayCountry(),\n and getDisplayVariant() assembled into a single string.  The display name will have\n one of the following forms:<p><blockquote>\n language (country, variant)<p>\n language (country)<p>\n language (variant)<p>\n country (variant)<p>\n language<p>\n country<p>\n variant<p></blockquote>\n depending on which fields are specified in the locale.  If the language, country,\n and variant fields are all empty, this function returns the empty string.\n\n @exception NullPointerException if <code>inLocale</code> is <code>null</code>\n"
16564,method,java/util/Locale/equals/Object," Returns true if this Locale is equal to another object.  A Locale is\n deemed equal to another Locale with identical language, country,\n and variant, and unequal to all other objects.\n\n @return true if this Locale is equal to the specified object.\n"
16568,field,java/util/Locale/ENGLISH,"Useful constant for language.\n"
16569,field,java/util/Locale/FRENCH,"Useful constant for language.\n"
16570,field,java/util/Locale/GERMAN,"Useful constant for language.\n"
16571,field,java/util/Locale/ITALIAN,"Useful constant for language.\n"
16572,field,java/util/Locale/JAPANESE,"Useful constant for language.\n"
16573,field,java/util/Locale/KOREAN,"Useful constant for language.\n"
16574,field,java/util/Locale/CHINESE,"Useful constant for language.\n"
16575,field,java/util/Locale/SIMPLIFIED_CHINESE,"Useful constant for language.\n"
16576,field,java/util/Locale/TRADITIONAL_CHINESE,"Useful constant for language.\n"
16577,field,java/util/Locale/FRANCE,"Useful constant for country.\n"
16578,field,java/util/Locale/GERMANY,"Useful constant for country.\n"
16579,field,java/util/Locale/ITALY,"Useful constant for country.\n"
16580,field,java/util/Locale/JAPAN,"Useful constant for country.\n"
16581,field,java/util/Locale/KOREA,"Useful constant for country.\n"
16582,field,java/util/Locale/CHINA,"Useful constant for country.\n"
16583,field,java/util/Locale/PRC,"Useful constant for country.\n"
16584,field,java/util/Locale/TAIWAN,"Useful constant for country.\n"
16585,field,java/util/Locale/UK,"Useful constant for country.\n"
16586,field,java/util/Locale/US,"Useful constant for country.\n"
16587,field,java/util/Locale/CANADA,"Useful constant for country.\n"
16588,field,java/util/Locale/CANADA_FRENCH,"Useful constant for country.\n"
16589,field,java/util/Locale/ROOT," Useful constant for the root locale.  The root locale is the locale whose\n language, country, and variant are empty ("") strings.  This is regarded\n as the base locale of all locales, and is used as the language/country \n neutral locale for the locale sensitive operations.\n\n @since 1.6\n"
16591,method,java/util/ListResourceBundle/handleGetObject/String,""
16592,method,java/util/ListResourceBundle/getKeys/," Returns an <code>Enumeration</code> of the keys contained in\n this <code>ResourceBundle</code> and its parent bundles.\n\n @return an <code>Enumeration</code> of the keys contained in\n         this <code>ResourceBundle</code> and its parent bundles.\n @see #keySet()\n"
16597,method,java/util/ListIterator/hasNext/," Returns <tt>true</tt> if this list iterator has more elements when\n traversing the list in the forward direction. (In other words, returns\n <tt>true</tt> if <tt>next</tt> would return an element rather than\n throwing an exception.)\n\n @return <tt>true</tt> if the list iterator has more elements when\n		traversing the list in the forward direction.\n"
16599,method,java/util/ListIterator/hasPrevious/," Returns <tt>true</tt> if this list iterator has more elements when\n traversing the list in the reverse direction.  (In other words, returns\n <tt>true</tt> if <tt>previous</tt> would return an element rather than\n throwing an exception.)\n\n @return <tt>true</tt> if the list iterator has more elements when\n	       traversing the list in the reverse direction.\n"
16607,method,java/util/List/size/," Returns the number of elements in this list.  If this list contains\n more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of elements in this list\n"
16608,method,java/util/List/isEmpty/," Returns <tt>true</tt> if this list contains no elements.\n\n @return <tt>true</tt> if this list contains no elements\n"
16610,method,java/util/List/iterator/," Returns an iterator over the elements in this list in proper sequence.\n\n @return an iterator over the elements in this list in proper sequence\n"
16615,method,java/util/List/containsAll/Collection," Returns <tt>true</tt> if this list contains all of the elements of the\n specified collection.\n\n @param  c collection to be checked for containment in this list\n @return <tt>true</tt> if this list contains all of the elements of the\n         specified collection\n @throws ClassCastException if the types of one or more elements\n         in the specified collection are incompatible with this\n         list (optional)\n @throws NullPointerException if the specified collection contains one\n         or more null elements and this list does not permit null\n         elements (optional), or if the specified collection is null\n @see #contains(Object)\n"
16623,method,java/util/List/get/int," Returns the element at the specified position in this list.\n\n @param index index of the element to return\n @return the element at the specified position in this list\n @throws IndexOutOfBoundsException if the index is out of range\n         (<tt>index &lt; 0 || index &gt;= size()</tt>)\n"
16624,method,java/util/List/set/int;Object," Replaces the element at the specified position in this list with the\n specified element (optional operation).\n\n @param index index of the element to replace\n @param element element to be stored at the specified position\n @return the element previously at the specified position\n @throws UnsupportedOperationException if the <tt>set</tt> operation\n         is not supported by this list\n @throws ClassCastException if the class of the specified element\n         prevents it from being added to this list\n @throws NullPointerException if the specified element is null and\n         this list does not permit null elements\n @throws IllegalArgumentException if some property of the specified\n         element prevents it from being added to this list\n @throws IndexOutOfBoundsException if the index is out of range\n         (<tt>index &lt; 0 || index &gt;= size()</tt>)\n"
16625,method,java/util/List/add/int;Object," Inserts the specified element at the specified position in this list\n (optional operation).  Shifts the element currently at that position\n (if any) and any subsequent elements to the right (adds one to their\n indices).\n\n @param index index at which the specified element is to be inserted\n @param element element to be inserted\n @throws UnsupportedOperationException if the <tt>add</tt> operation\n         is not supported by this list\n @throws ClassCastException if the class of the specified element\n         prevents it from being added to this list\n @throws NullPointerException if the specified element is null and\n         this list does not permit null elements\n @throws IllegalArgumentException if some property of the specified\n         element prevents it from being added to this list\n @throws IndexOutOfBoundsException if the index is out of range\n         (<tt>index &lt; 0 || index &gt; size()</tt>)\n"
16626,method,java/util/List/remove/int," Removes the element at the specified position in this list (optional\n operation).  Shifts any subsequent elements to the left (subtracts one\n from their indices).  Returns the element that was removed from the\n list.\n\n @param index the index of the element to be removed\n @return the element previously at the specified position\n @throws UnsupportedOperationException if the <tt>remove</tt> operation\n         is not supported by this list\n @throws IndexOutOfBoundsException if the index is out of range\n         (<tt>index &lt; 0 || index &gt;= size()</tt>)\n"
16627,method,java/util/List/indexOf/Object," Returns the index of the first occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the lowest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the first occurrence of the specified element in\n         this list, or -1 if this list does not contain the element\n @throws ClassCastException if the type of the specified element\n         is incompatible with this list (optional)\n @throws NullPointerException if the specified element is null and this\n         list does not permit null elements (optional)\n"
16628,method,java/util/List/lastIndexOf/Object," Returns the index of the last occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the highest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the last occurrence of the specified element in\n         this list, or -1 if this list does not contain the element\n @throws ClassCastException if the type of the specified element\n         is incompatible with this list (optional)\n @throws NullPointerException if the specified element is null and this\n         list does not permit null elements (optional)\n"
16629,method,java/util/List/listIterator/," Returns a list iterator over the elements in this list (in proper\n sequence).\n\n @return a list iterator over the elements in this list (in proper\n         sequence)\n"
16633,method,java/util/LinkedList/getFirst/," Returns the first element in this list.\n\n @return the first element in this list\n @throws NoSuchElementException if this list is empty\n"
16634,method,java/util/LinkedList/getLast/," Returns the last element in this list.\n\n @return the last element in this list\n @throws NoSuchElementException if this list is empty\n"
16635,method,java/util/LinkedList/removeFirst/," Removes and returns the first element from this list.\n\n @return the first element from this list\n @throws NoSuchElementException if this list is empty\n"
16636,method,java/util/LinkedList/removeLast/," Removes and returns the last element from this list.\n\n @return the last element from this list\n @throws NoSuchElementException if this list is empty\n"
16637,method,java/util/LinkedList/addFirst/Object," Inserts the specified element at the beginning of this list.\n\n @param e the element to add\n"
16638,method,java/util/LinkedList/addLast/Object," Appends the specified element to the end of this list.\n\n <p>This method is equivalent to {@link #add}.\n\n @param e the element to add\n"
16640,method,java/util/LinkedList/size/," Returns the number of elements in this list.\n\n @return the number of elements in this list\n"
16641,method,java/util/LinkedList/add/Object," Appends the specified element to the end of this list.\n\n <p>This method is equivalent to {@link #addLast}.\n\n @param e element to be appended to this list\n @return <tt>true</tt> (as specified by {@link Collection#add})\n"
16645,method,java/util/LinkedList/clear/," Removes all of the elements from this list.\n"
16650,method,java/util/LinkedList/indexOf/Object," Returns the index of the first occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the lowest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the first occurrence of the specified element in\n         this list, or -1 if this list does not contain the element\n"
16651,method,java/util/LinkedList/lastIndexOf/Object," Returns the index of the last occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the highest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n\n @param o element to search for\n @return the index of the last occurrence of the specified element in\n         this list, or -1 if this list does not contain the element\n"
16652,method,java/util/LinkedList/peek/," Retrieves, but does not remove, the head (first element) of this list.\n @return the head of this list, or <tt>null</tt> if this list is empty\n @since 1.5\n"
16653,method,java/util/LinkedList/element/," Retrieves, but does not remove, the head (first element) of this list.\n @return the head of this list\n @throws NoSuchElementException if this list is empty\n @since 1.5\n"
16654,method,java/util/LinkedList/poll/," Retrieves and removes the head (first element) of this list\n @return the head of this list, or <tt>null</tt> if this list is empty\n @since 1.5\n"
16655,method,java/util/LinkedList/remove/," Retrieves and removes the head (first element) of this list.\n\n @return the head of this list\n @throws NoSuchElementException if this list is empty\n @since 1.5\n"
16656,method,java/util/LinkedList/offer/Object," Adds the specified element as the tail (last element) of this list.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Queue#offer})\n @since 1.5\n"
16657,method,java/util/LinkedList/offerFirst/Object," Inserts the specified element at the front of this list.\n\n @param e the element to insert\n @return <tt>true</tt> (as specified by {@link Deque#offerFirst})\n @since 1.6\n"
16658,method,java/util/LinkedList/offerLast/Object," Inserts the specified element at the end of this list.\n\n @param e the element to insert\n @return <tt>true</tt> (as specified by {@link Deque#offerLast})\n @since 1.6\n"
16659,method,java/util/LinkedList/peekFirst/," Retrieves, but does not remove, the first element of this list,\n or returns <tt>null</tt> if this list is empty.\n\n @return the first element of this list, or <tt>null</tt>\n         if this list is empty\n @since 1.6\n"
16660,method,java/util/LinkedList/peekLast/," Retrieves, but does not remove, the last element of this list,\n or returns <tt>null</tt> if this list is empty.\n\n @return the last element of this list, or <tt>null</tt>\n         if this list is empty\n @since 1.6\n"
16661,method,java/util/LinkedList/pollFirst/," Retrieves and removes the first element of this list,\n or returns <tt>null</tt> if this list is empty.\n\n @return the first element of this list, or <tt>null</tt> if\n     this list is empty\n @since 1.6\n"
16662,method,java/util/LinkedList/pollLast/," Retrieves and removes the last element of this list,\n or returns <tt>null</tt> if this list is empty.\n\n @return the last element of this list, or <tt>null</tt> if\n     this list is empty\n @since 1.6\n"
16663,method,java/util/LinkedList/push/Object," Pushes an element onto the stack represented by this list.  In other\n words, inserts the element at the front of this list.\n\n <p>This method is equivalent to {@link #addFirst}.\n\n @param e the element to push\n @since 1.6\n"
16664,method,java/util/LinkedList/pop/," Pops an element from the stack represented by this list.  In other\n words, removes and returns the first element of this list.\n\n <p>This method is equivalent to {@link #removeFirst()}.\n\n @return the element at the front of this list (which is the top\n         of the stack represented by this list)\n @throws NoSuchElementException if this list is empty\n @since 1.6\n"
16665,method,java/util/LinkedList/removeFirstOccurrence/Object," Removes the first occurrence of the specified element in this\n list (when traversing the list from head to tail).  If the list\n does not contain the element, it is unchanged.\n\n @param o element to be removed from this list, if present\n @return <tt>true</tt> if the list contained the specified element\n @since 1.6\n"
16666,method,java/util/LinkedList/removeLastOccurrence/Object," Removes the last occurrence of the specified element in this\n list (when traversing the list from head to tail).  If the list\n does not contain the element, it is unchanged.\n\n @param o element to be removed from this list, if present\n @return <tt>true</tt> if the list contained the specified element\n @since 1.6\n"
16668,method,java/util/LinkedList/descendingIterator/," @since 1.6\n"
16669,method,java/util/LinkedList/clone/," Returns a shallow copy of this <tt>LinkedList</tt>. (The elements\n themselves are not cloned.)\n\n @return a shallow copy of this <tt>LinkedList</tt> instance\n"
16672,method,java/util/LinkedList/LinkedList/," Constructs an empty list.\n"
16673,method,java/util/LinkedList/LinkedList/Collection," Constructs a list containing the elements of the specified\n collection, in the order they are returned by the collection's\n iterator.\n\n @param  c the collection whose elements are to be placed into this list\n @throws NullPointerException if the specified collection is null\n"
16675,method,java/util/LinkedHashSet/LinkedHashSet/int;float," Constructs a new, empty linked hash set with the specified initial\n capacity and load factor.\n\n @param      initialCapacity the initial capacity of the linked hash set\n @param      loadFactor      the load factor of the linked hash set\n @throws     IllegalArgumentException  if the initial capacity is less\n               than zero, or if the load factor is nonpositive\n"
16676,method,java/util/LinkedHashSet/LinkedHashSet/int," Constructs a new, empty linked hash set with the specified initial\n capacity and the default load factor (0.75).\n\n @param   initialCapacity   the initial capacity of the LinkedHashSet\n @throws  IllegalArgumentException if the initial capacity is less\n              than zero\n"
16677,method,java/util/LinkedHashSet/LinkedHashSet/," Constructs a new, empty linked hash set with the default initial\n capacity (16) and load factor (0.75).\n"
16678,method,java/util/LinkedHashSet/LinkedHashSet/Collection," Constructs a new linked hash set with the same elements as the\n specified collection.  The linked hash set is created with an initial\n capacity sufficient to hold the elements in the specified collection\n and the default load factor (0.75).\n\n @param c  the collection whose elements are to be placed into\n           this set\n @throws NullPointerException if the specified collection is null\n"
16680,method,java/util/LinkedHashMap/containsValue/Object," Returns <tt>true</tt> if this map maps one or more keys to the\n specified value.\n\n @param value value whose presence in this map is to be tested\n @return <tt>true</tt> if this map maps one or more keys to the\n         specified value\n"
16684,method,java/util/LinkedHashMap/LinkedHashMap/int;float," Constructs an empty insertion-ordered <tt>LinkedHashMap</tt> instance\n with the specified initial capacity and load factor.\n\n @param  initialCapacity the initial capacity\n @param  loadFactor      the load factor\n @throws IllegalArgumentException if the initial capacity is negative\n         or the load factor is nonpositive\n"
16685,method,java/util/LinkedHashMap/LinkedHashMap/int," Constructs an empty insertion-ordered <tt>LinkedHashMap</tt> instance\n with the specified initial capacity and a default load factor (0.75).\n\n @param  initialCapacity the initial capacity\n @throws IllegalArgumentException if the initial capacity is negative\n"
16686,method,java/util/LinkedHashMap/LinkedHashMap/," Constructs an empty insertion-ordered <tt>LinkedHashMap</tt> instance\n with the default initial capacity (16) and load factor (0.75).\n"
16687,method,java/util/LinkedHashMap/LinkedHashMap/Map," Constructs an insertion-ordered <tt>LinkedHashMap</tt> instance with\n the same mappings as the specified map.  The <tt>LinkedHashMap</tt>\n instance is created with a default load factor (0.75) and an initial\n capacity sufficient to hold the mappings in the specified map.\n\n @param  m the map whose mappings are to be placed in this map\n @throws NullPointerException if the specified map is null\n"
16688,method,java/util/LinkedHashMap/LinkedHashMap/int;float;boolean," Constructs an empty <tt>LinkedHashMap</tt> instance with the\n specified initial capacity, load factor and ordering mode.\n\n @param  initialCapacity the initial capacity\n @param  loadFactor      the load factor\n @param  accessOrder     the ordering mode - <tt>true</tt> for\n         access-order, <tt>false</tt> for insertion-order\n @throws IllegalArgumentException if the initial capacity is negative\n         or the load factor is nonpositive\n"
16690,method,java/util/Iterator/hasNext/," Returns <tt>true</tt> if the iteration has more elements. (In other\n words, returns <tt>true</tt> if <tt>next</tt> would return an element\n rather than throwing an exception.)\n\n @return <tt>true</tt> if the iterator has more elements.\n"
16691,method,java/util/Iterator/next/," Returns the next element in the iteration.\n\n @return the next element in the iteration.\n @exception NoSuchElementException iteration has no more elements.\n"
16694,method,java/util/InvalidPropertiesFormatException/InvalidPropertiesFormatException/Throwable," Constructs an InvalidPropertiesFormatException with the specified\n cause.\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).\n"
16695,method,java/util/InvalidPropertiesFormatException/InvalidPropertiesFormatException/String," Constructs an InvalidPropertiesFormatException with the specified\n detail message.\n\n @param   message   the detail message. The detail message is saved for \n          later retrieval by the {@link Throwable#getMessage()} method.\n"
16696,class,java/util/InputMismatchException," Thrown by a <code>Scanner</code> to indicate that the token\n retrieved does not match the pattern for the expected type, or\n that the token is out of range for the expected type.\n\n @author  unascribed\n @version 1.6 03/23/10\n @see     java.util.Scanner\n @since   1.5\n"
16699,class,java/util/IllegalFormatWidthException," Unchecked exception thrown when the format width is a negative value other\n than <tt>-1</tt> or is otherwise unsupported.\n\n @version 	1.6, 03/23/10\n @since 1.5\n"
16700,method,java/util/IllegalFormatWidthException/getWidth/," Returns the width\n\n @return  The width\n"
16701,method,java/util/IllegalFormatWidthException/getMessage/,""
16702,method,java/util/IllegalFormatWidthException/IllegalFormatWidthException/int," Constructs an instance of this class with the specified width.\n\n @param  w\n         The width\n"
16703,class,java/util/IllegalFormatPrecisionException," Unchecked exception thrown when the precision is a negative value other than\n <tt>-1</tt>, the conversion does not support a precision, or the value is\n otherwise unsupported.\n\n @version 	1.6, 03/23/10\n @since 1.5\n"
16704,method,java/util/IllegalFormatPrecisionException/getPrecision/," Returns the precision\n\n @return  The precision\n"
16705,method,java/util/IllegalFormatPrecisionException/getMessage/,""
16706,method,java/util/IllegalFormatPrecisionException/IllegalFormatPrecisionException/int," Constructs an instance of this class with the specified precision.\n\n @param  p\n         The precision\n"
16707,class,java/util/IllegalFormatFlagsException," Unchecked exception thrown when an illegal combination flags is given.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16708,method,java/util/IllegalFormatFlagsException/getFlags/," Returns the set of flags which contains an illegal combination.\n\n @return  The flags\n"
16709,method,java/util/IllegalFormatFlagsException/getMessage/,""
16710,method,java/util/IllegalFormatFlagsException/IllegalFormatFlagsException/String," Constructs an instance of this class with the specified flags.\n\n @param  f\n         The set of format flags which contain an illegal combination\n"
16712,class,java/util/IllegalFormatConversionException," Unchecked exception thrown when the argument corresponding to the format\n specifier is of an incompatible type.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.5, 03/23/10\n @since 1.5\n"
16713,method,java/util/IllegalFormatConversionException/getConversion/," Returns the inapplicable conversion.\n\n @return  The inapplicable conversion\n"
16714,method,java/util/IllegalFormatConversionException/getArgumentClass/," Returns the class of the mismatched argument.\n\n @return   The class of the mismatched argument\n"
16715,method,java/util/IllegalFormatConversionException/getMessage/,""
16716,method,java/util/IllegalFormatConversionException/IllegalFormatConversionException/char;Class," Constructs an instance of this class with the mismatched conversion and\n the corresponding argument class.\n\n @param  c\n         Inapplicable conversion\n\n @param  arg\n         Class of the mismatched argument\n"
16717,class,java/util/IllegalFormatCodePointException," Unchecked exception thrown when a character with an invalid Unicode code\n point as defined by {@link Character#isValidCodePoint} is passed to the\n {@link Formatter}.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.5, 03/23/10\n @since 1.5\n"
16718,method,java/util/IllegalFormatCodePointException/getCodePoint/," Returns the illegal code point as defined by {@link\n Character#isValidCodePoint}.\n\n @return  The illegal Unicode code point\n"
16719,method,java/util/IllegalFormatCodePointException/getMessage/,""
16720,method,java/util/IllegalFormatCodePointException/IllegalFormatCodePointException/int," Constructs an instance of this class with the specified illegal code\n point as defined by {@link Character#isValidCodePoint}.\n\n @param  c\n         The illegal Unicode code point\n"
16722,method,java/util/IdentityHashMap/size/," Returns the number of key-value mappings in this identity hash map.\n\n @return the number of key-value mappings in this map\n"
16723,method,java/util/IdentityHashMap/isEmpty/," Returns <tt>true</tt> if this identity hash map contains no key-value\n mappings.\n\n @return <tt>true</tt> if this identity hash map contains no key-value\n         mappings\n"
16725,method,java/util/IdentityHashMap/containsKey/Object," Tests whether the specified object reference is a key in this identity\n hash map.\n\n @param   key   possible key\n @return  <code>true</code> if the specified object reference is a key\n          in this map\n @see     #containsValue(Object)\n"
16726,method,java/util/IdentityHashMap/containsValue/Object," Tests whether the specified object reference is a value in this identity\n hash map.\n\n @param value value whose presence in this map is to be tested\n @return <tt>true</tt> if this map maps one or more keys to the\n         specified object reference\n @see     #containsKey(Object)\n"
16727,method,java/util/IdentityHashMap/put/Object;Object," Associates the specified value with the specified key in this identity\n hash map.  If the map previously contained a mapping for the key, the\n old value is replaced.\n\n @param key the key with which the specified value is to be associated\n @param value the value to be associated with the specified key\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n @see     Object#equals(Object)\n @see     #get(Object)\n @see     #containsKey(Object)\n"
16728,method,java/util/IdentityHashMap/putAll/Map," Copies all of the mappings from the specified map to this map.\n These mappings will replace any mappings that this map had for\n any of the keys currently in the specified map.\n\n @param m mappings to be stored in this map\n @throws NullPointerException if the specified map is null\n"
16729,method,java/util/IdentityHashMap/remove/Object," Removes the mapping for this key from this map if present.\n\n @param key key whose mapping is to be removed from the map\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n"
16733,method,java/util/IdentityHashMap/clone/," Returns a shallow copy of this identity hash map: the keys and values\n themselves are not cloned.\n\n @return a shallow copy of this map\n"
16735,method,java/util/IdentityHashMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress,\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> methods.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> methods.\n\n <p><b>While the object returned by this method implements the\n <tt>Collection</tt> interface, it does <i>not</i> obey\n <tt>Collection's</tt> general contract.  Like its backing map,\n the collection returned by this method defines element equality as\n reference-equality rather than object-equality.  This affects the\n behavior of its <tt>contains</tt>, <tt>remove</tt> and\n <tt>containsAll</tt> methods.</b>\n"
16737,method,java/util/IdentityHashMap/IdentityHashMap/," Constructs a new, empty identity hash map with a default expected\n maximum size (21).\n"
16739,method,java/util/IdentityHashMap/IdentityHashMap/Map," Constructs a new identity hash map containing the keys-value mappings\n in the specified map.\n\n @param m the map whose mappings are to be placed into this map\n @throws NullPointerException if the specified map is null\n"
16741,method,java/util/Hashtable/size/," Returns the number of keys in this hashtable.\n\n @return  the number of keys in this hashtable.\n"
16742,method,java/util/Hashtable/isEmpty/," Tests if this hashtable maps no keys to values.\n\n @return  <code>true</code> if this hashtable maps no keys to values;\n          <code>false</code> otherwise.\n"
16743,method,java/util/Hashtable/keys/," Returns an enumeration of the keys in this hashtable.\n\n @return  an enumeration of the keys in this hashtable.\n @see     Enumeration\n @see     #elements()\n @see	#keySet()\n @see	Map\n"
16744,method,java/util/Hashtable/elements/," Returns an enumeration of the values in this hashtable.\n Use the Enumeration methods on the returned object to fetch the elements\n sequentially.\n\n @return  an enumeration of the values in this hashtable.\n @see     java.util.Enumeration\n @see     #keys()\n @see	#values()\n @see	Map\n"
16748,method,java/util/Hashtable/get/Object," Returns the value to which the specified key is mapped,\n or {@code null} if this map contains no mapping for the key.\n\n <p>More formally, if this map contains a mapping from a key\n {@code k} to a value {@code v} such that {@code (key.equals(k))},\n then this method returns {@code v}; otherwise it returns\n {@code null}.  (There can be at most one such mapping.)\n\n @param key the key whose associated value is to be returned\n @return the value to which the specified key is mapped, or\n         {@code null} if this map contains no mapping for the key\n @throws NullPointerException if the specified key is null\n @see     #put(Object, Object)\n"
16751,method,java/util/Hashtable/remove/Object," Removes the key (and its corresponding value) from this\n hashtable. This method does nothing if the key is not in the hashtable.\n\n @param   key   the key that needs to be removed\n @return  the value to which the key had been mapped in this hashtable,\n          or <code>null</code> if the key did not have a mapping\n @throws  NullPointerException  if the key is <code>null</code>\n"
16752,method,java/util/Hashtable/putAll/Map," Copies all of the mappings from the specified map to this hashtable.\n These mappings will replace any mappings that this hashtable had for any\n of the keys currently in the specified map.\n\n @param t mappings to be stored in this map\n @throws NullPointerException if the specified map is null\n @since 1.2\n"
16753,method,java/util/Hashtable/clear/," Clears this hashtable so that it contains no keys.\n"
16754,method,java/util/Hashtable/clone/," Creates a shallow copy of this hashtable. All the structure of the\n hashtable itself is copied, but the keys and values are not cloned.\n This is a relatively expensive operation.\n\n @return  a clone of the hashtable\n"
16755,method,java/util/Hashtable/toString/," Returns a string representation of this <tt>Hashtable</tt> object\n in the form of a set of entries, enclosed in braces and separated\n by the ASCII characters "<tt>,&nbsp;</tt>" (comma and space). Each\n entry is rendered as the key, an equals sign <tt>=</tt>, and the\n associated element, where the <tt>toString</tt> method is used to\n convert the key and element to strings.\n\n @return  a string representation of this hashtable\n"
16756,method,java/util/Hashtable/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n\n @since 1.2\n"
16757,method,java/util/Hashtable/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n\n @since 1.2\n"
16758,method,java/util/Hashtable/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n\n @since 1.2\n"
16759,method,java/util/Hashtable/equals/Object," Compares the specified Object with this Map for equality,\n as per the definition in the Map interface.\n\n @param  o object to be compared for equality with this hashtable\n @return true if the specified Object is equal to this Map\n @see Map#equals(Object)\n @since 1.2\n"
16760,method,java/util/Hashtable/hashCode/," Returns the hash code value for this Map as per the definition in the\n Map interface.\n\n @see Map#hashCode()\n @since 1.2\n"
16761,method,java/util/Hashtable/Hashtable/int;float," Constructs a new, empty hashtable with the specified initial\n capacity and the specified load factor.\n\n @param      initialCapacity   the initial capacity of the hashtable.\n @param      loadFactor        the load factor of the hashtable.\n @exception  IllegalArgumentException  if the initial capacity is less\n             than zero, or if the load factor is nonpositive.\n"
16762,method,java/util/Hashtable/Hashtable/int," Constructs a new, empty hashtable with the specified initial capacity\n and default load factor (0.75).\n\n @param     initialCapacity   the initial capacity of the hashtable.\n @exception IllegalArgumentException if the initial capacity is less\n              than zero.\n"
16763,method,java/util/Hashtable/Hashtable/," Constructs a new, empty hashtable with a default initial capacity (11)\n and load factor (0.75).\n"
16764,method,java/util/Hashtable/Hashtable/Map," Constructs a new hashtable with the same mappings as the given\n Map.  The hashtable is created with an initial capacity sufficient to\n hold the mappings in the given Map and a default load factor (0.75).\n\n @param t the map whose mappings are to be placed in this map.\n @throws NullPointerException if the specified map is null.\n @since   1.2\n"
16767,method,java/util/HashSet/size/," Returns the number of elements in this set (its cardinality).\n\n @return the number of elements in this set (its cardinality)\n"
16768,method,java/util/HashSet/isEmpty/," Returns <tt>true</tt> if this set contains no elements.\n\n @return <tt>true</tt> if this set contains no elements\n"
16773,method,java/util/HashSet/clone/," Returns a shallow copy of this <tt>HashSet</tt> instance: the elements\n themselves are not cloned.\n\n @return a shallow copy of this set\n"
16774,method,java/util/HashSet/HashSet/," Constructs a new, empty set; the backing <tt>HashMap</tt> instance has\n default initial capacity (16) and load factor (0.75).\n"
16775,method,java/util/HashSet/HashSet/Collection," Constructs a new set containing the elements in the specified\n collection.  The <tt>HashMap</tt> is created with default load factor\n (0.75) and an initial capacity sufficient to contain the elements in\n the specified collection.\n\n @param c the collection whose elements are to be placed into this set\n @throws NullPointerException if the specified collection is null\n"
16776,method,java/util/HashSet/HashSet/int;float," Constructs a new, empty set; the backing <tt>HashMap</tt> instance has\n the specified initial capacity and the specified load factor.\n\n @param      initialCapacity   the initial capacity of the hash map\n @param      loadFactor        the load factor of the hash map\n @throws     IllegalArgumentException if the initial capacity is less\n             than zero, or if the load factor is nonpositive\n"
16777,method,java/util/HashSet/HashSet/int," Constructs a new, empty set; the backing <tt>HashMap</tt> instance has\n the specified initial capacity and default load factor (0.75).\n\n @param      initialCapacity   the initial capacity of the hash table\n @throws     IllegalArgumentException if the initial capacity is less\n             than zero\n"
16779,method,java/util/HashMap/size/," Returns the number of key-value mappings in this map.\n\n @return the number of key-value mappings in this map\n"
16780,method,java/util/HashMap/isEmpty/," Returns <tt>true</tt> if this map contains no key-value mappings.\n\n @return <tt>true</tt> if this map contains no key-value mappings\n"
16782,method,java/util/HashMap/containsKey/Object," Returns <tt>true</tt> if this map contains a mapping for the\n specified key.\n\n @param   key   The key whose presence in this map is to be tested\n @return <tt>true</tt> if this map contains a mapping for the specified\n key.\n"
16783,method,java/util/HashMap/put/Object;Object," Associates the specified value with the specified key in this map.\n If the map previously contained a mapping for the key, the old\n value is replaced.\n\n @param key key with which the specified value is to be associated\n @param value value to be associated with the specified key\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n"
16784,method,java/util/HashMap/putAll/Map," Copies all of the mappings from the specified map to this map.\n These mappings will replace any mappings that this map had for\n any of the keys currently in the specified map.\n\n @param m mappings to be stored in this map\n @throws NullPointerException if the specified map is null\n"
16785,method,java/util/HashMap/remove/Object," Removes the mapping for the specified key from this map if present.\n\n @param  key key whose mapping is to be removed from the map\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with <tt>key</tt>.)\n"
16787,method,java/util/HashMap/containsValue/Object," Returns <tt>true</tt> if this map maps one or more keys to the\n specified value.\n\n @param value value whose presence in this map is to be tested\n @return <tt>true</tt> if this map maps one or more keys to the\n         specified value\n"
16788,method,java/util/HashMap/clone/," Returns a shallow copy of this <tt>HashMap</tt> instance: the keys and\n values themselves are not cloned.\n\n @return a shallow copy of this map\n"
16789,method,java/util/HashMap/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation), the results of\n the iteration are undefined.  The set supports element removal,\n which removes the corresponding mapping from the map, via the\n <tt>Iterator.remove</tt>, <tt>Set.remove</tt>,\n <tt>removeAll</tt>, <tt>retainAll</tt>, and <tt>clear</tt>\n operations.  It does not support the <tt>add</tt> or <tt>addAll</tt>\n operations.\n"
16790,method,java/util/HashMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The collection is backed by the map, so changes to the map are\n reflected in the collection, and vice-versa.  If the map is\n modified while an iteration over the collection is in progress\n (except through the iterator's own <tt>remove</tt> operation),\n the results of the iteration are undefined.  The collection\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Collection.remove</tt>, <tt>removeAll</tt>,\n <tt>retainAll</tt> and <tt>clear</tt> operations.  It does not\n support the <tt>add</tt> or <tt>addAll</tt> operations.\n"
16791,method,java/util/HashMap/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The set is backed by the map, so changes to the map are\n reflected in the set, and vice-versa.  If the map is modified\n while an iteration over the set is in progress (except through\n the iterator's own <tt>remove</tt> operation, or through the\n <tt>setValue</tt> operation on a map entry returned by the\n iterator) the results of the iteration are undefined.  The set\n supports element removal, which removes the corresponding\n mapping from the map, via the <tt>Iterator.remove</tt>,\n <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n <tt>clear</tt> operations.  It does not support the\n <tt>add</tt> or <tt>addAll</tt> operations.\n\n @return a set view of the mappings contained in this map\n"
16792,method,java/util/HashMap/HashMap/int;float," Constructs an empty <tt>HashMap</tt> with the specified initial\n capacity and load factor.\n\n @param  initialCapacity the initial capacity\n @param  loadFactor      the load factor\n @throws IllegalArgumentException if the initial capacity is negative\n         or the load factor is nonpositive\n"
16793,method,java/util/HashMap/HashMap/int," Constructs an empty <tt>HashMap</tt> with the specified initial\n capacity and the default load factor (0.75).\n\n @param  initialCapacity the initial capacity.\n @throws IllegalArgumentException if the initial capacity is negative.\n"
16794,method,java/util/HashMap/HashMap/," Constructs an empty <tt>HashMap</tt> with the default initial capacity\n (16) and the default load factor (0.75).\n"
16795,method,java/util/HashMap/HashMap/Map," Constructs a new <tt>HashMap</tt> with the same mappings as the\n specified <tt>Map</tt>.  The <tt>HashMap</tt> is created with\n default load factor (0.75) and an initial capacity sufficient to\n hold the mappings in the specified <tt>Map</tt>.\n\n @param   m the map whose mappings are to be placed in this map\n @throws  NullPointerException if the specified map is null\n"
16797,method,java/util/GregorianCalendar/setGregorianChange/Date," Sets the <code>GregorianCalendar</code> change date. This is the point when the switch\n from Julian dates to Gregorian dates occurred. Default is October 15,\n 1582 (Gregorian). Previous to this, dates will be in the Julian calendar.\n <p>\n To obtain a pure Julian calendar, set the change date to\n <code>Date(Long.MAX_VALUE)</code>.  To obtain a pure Gregorian calendar,\n set the change date to <code>Date(Long.MIN_VALUE)</code>.\n\n @param date the given Gregorian cutover date.\n"
16798,method,java/util/GregorianCalendar/getGregorianChange/," Gets the Gregorian Calendar change date.  This is the point when the\n switch from Julian dates to Gregorian dates occurred. Default is\n October 15, 1582 (Gregorian). Previous to this, dates will be in the Julian\n calendar.\n\n @return the Gregorian cutover date for this <code>GregorianCalendar</code> object.\n"
16801,method,java/util/GregorianCalendar/hashCode/," Generates the hash code for this <code>GregorianCalendar</code> object.\n"
16805,method,java/util/GregorianCalendar/getMinimum/int," Returns the minimum value for the given calendar field of this\n <code>GregorianCalendar</code> instance. The minimum value is\n defined as the smallest value returned by the {@link\n Calendar#get(int) get} method for any possible time value,\n taking into consideration the current values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n\n @param field the calendar field.\n @return the minimum value for the given calendar field.\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
16806,method,java/util/GregorianCalendar/getMaximum/int," Returns the maximum value for the given calendar field of this\n <code>GregorianCalendar</code> instance. The maximum value is\n defined as the largest value returned by the {@link\n Calendar#get(int) get} method for any possible time value,\n taking into consideration the current values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n\n @param field the calendar field.\n @return the maximum value for the given calendar field.\n @see #getMinimum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
16807,method,java/util/GregorianCalendar/getGreatestMinimum/int," Returns the highest minimum value for the given calendar field\n of this <code>GregorianCalendar</code> instance. The highest\n minimum value is defined as the largest value returned by\n {@link #getActualMinimum(int)} for any possible time value,\n taking into consideration the current values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n\n @param field the calendar field.\n @return the highest minimum value for the given calendar field.\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
16808,method,java/util/GregorianCalendar/getLeastMaximum/int," Returns the lowest maximum value for the given calendar field\n of this <code>GregorianCalendar</code> instance. The lowest\n maximum value is defined as the smallest value returned by\n {@link #getActualMaximum(int)} for any possible time value,\n taking into consideration the current values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n\n @param field the calendar field\n @return the lowest maximum value for the given calendar field.\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
16809,method,java/util/GregorianCalendar/getActualMinimum/int," Returns the minimum value that this calendar field could have,\n taking into consideration the given time value and the current\n values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n\n <p>For example, if the Gregorian change date is January 10,\n 1970 and the date of this <code>GregorianCalendar</code> is\n January 20, 1970, the actual minimum value of the\n <code>DAY_OF_MONTH</code> field is 10 because the previous date\n of January 10, 1970 is December 27, 1996 (in the Julian\n calendar). Therefore, December 28, 1969 to January 9, 1970\n don't exist.\n\n @param field the calendar field\n @return the minimum of the given field for the time value of\n this <code>GregorianCalendar</code>\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMaximum(int)\n @since 1.2\n"
16810,method,java/util/GregorianCalendar/getActualMaximum/int," Returns the maximum value that this calendar field could have,\n taking into consideration the given time value and the current\n values of the\n {@link Calendar#getFirstDayOfWeek() getFirstDayOfWeek},\n {@link Calendar#getMinimalDaysInFirstWeek() getMinimalDaysInFirstWeek},\n {@link #getGregorianChange() getGregorianChange} and\n {@link Calendar#getTimeZone() getTimeZone} methods.\n For example, if the date of this instance is February 1, 2004,\n the actual maximum value of the <code>DAY_OF_MONTH</code> field\n is 29 because 2004 is a leap year, and if the date of this\n instance is February 1, 2005, it's 28.\n\n @param field the calendar field\n @return the maximum of the given field for the time value of\n this <code>GregorianCalendar</code>\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @since 1.2\n"
16811,method,java/util/GregorianCalendar/clone/,""
16812,method,java/util/GregorianCalendar/getTimeZone/,""
16813,method,java/util/GregorianCalendar/setTimeZone/TimeZone,""
16815,method,java/util/GregorianCalendar/computeTime/," Converts calendar field values to the time value (millisecond\n offset from the <a href="Calendar.html#Epoch">Epoch</a>).\n\n @exception IllegalArgumentException if any calendar fields are invalid.\n"
16816,method,java/util/GregorianCalendar/GregorianCalendar/," Constructs a default <code>GregorianCalendar</code> using the current time\n in the default time zone with the default locale.\n"
16817,method,java/util/GregorianCalendar/GregorianCalendar/TimeZone," Constructs a <code>GregorianCalendar</code> based on the current time\n in the given time zone with the default locale.\n\n @param zone the given time zone.\n"
16818,method,java/util/GregorianCalendar/GregorianCalendar/Locale," Constructs a <code>GregorianCalendar</code> based on the current time\n in the default time zone with the given locale.\n\n @param aLocale the given locale.\n"
16819,method,java/util/GregorianCalendar/GregorianCalendar/TimeZone;Locale," Constructs a <code>GregorianCalendar</code> based on the current time\n in the given time zone with the given locale.\n\n @param zone the given time zone.\n @param aLocale the given locale.\n"
16820,method,java/util/GregorianCalendar/GregorianCalendar/int;int;int," Constructs a <code>GregorianCalendar</code> with the given date set\n in the default time zone with the default locale.\n\n @param year the value used to set the <code>YEAR</code> calendar field in the calendar.\n @param month the value used to set the <code>MONTH</code> calendar field in the calendar.\n Month value is 0-based. e.g., 0 for January.\n @param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.\n"
16821,method,java/util/GregorianCalendar/GregorianCalendar/int;int;int;int;int," Constructs a <code>GregorianCalendar</code> with the given date\n and time set for the default time zone with the default locale.\n\n @param year the value used to set the <code>YEAR</code> calendar field in the calendar.\n @param month the value used to set the <code>MONTH</code> calendar field in the calendar.\n Month value is 0-based. e.g., 0 for January.\n @param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.\n @param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field\n in the calendar.\n @param minute the value used to set the <code>MINUTE</code> calendar field\n in the calendar.\n"
16822,method,java/util/GregorianCalendar/GregorianCalendar/int;int;int;int;int;int," Constructs a GregorianCalendar with the given date\n and time set for the default time zone with the default locale.\n\n @param year the value used to set the <code>YEAR</code> calendar field in the calendar.\n @param month the value used to set the <code>MONTH</code> calendar field in the calendar.\n Month value is 0-based. e.g., 0 for January.\n @param dayOfMonth the value used to set the <code>DAY_OF_MONTH</code> calendar field in the calendar.\n @param hourOfDay the value used to set the <code>HOUR_OF_DAY</code> calendar field\n in the calendar.\n @param minute the value used to set the <code>MINUTE</code> calendar field\n in the calendar.\n @param second the value used to set the <code>SECOND</code> calendar field\n in the calendar.\n"
16824,field,java/util/GregorianCalendar/AD," Value of the <code>ERA</code> field indicating\n the common era (Anno Domini), also known as CE.\n The sequence of years at the transition from <code>BC</code> to <code>AD</code> is\n ..., 2 BC, 1 BC, 1 AD, 2 AD,...\n\n @see #ERA\n"
16825,class,java/util/FormatterClosedException," Unchecked exception thrown when the formatter has been closed.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16826,method,java/util/FormatterClosedException/FormatterClosedException/," Constructs an instance of this class.\n"
16837,method,java/util/Formatter/Formatter/Appendable," Constructs a new formatter with the specified destination.\n\n <p> The locale used is the {@linkplain Locale#getDefault() default\n locale} for this instance of the Java virtual machine.\n\n @param  a\n         Destination for the formatted output.  If <tt>a</tt> is\n         <tt>null</tt> then a {@link StringBuilder} will be created.\n"
16839,method,java/util/Formatter/Formatter/Appendable;Locale," Constructs a new formatter with the specified destination and locale.\n\n @param  a\n         Destination for the formatted output.  If <tt>a</tt> is\n         <tt>null</tt> then a {@link StringBuilder} will be created.\n\n @param  l\n         The {@linkplain java.util.Locale locale} to apply during\n         formatting.  If <tt>l</tt> is <tt>null</tt> then no localization\n         is applied.\n"
16846,method,java/util/Formatter/Formatter/PrintStream," Constructs a new formatter with the specified print stream.\n\n <p> The locale used is the {@linkplain Locale#getDefault() default\n locale} for this instance of the Java virtual machine.\n\n <p> Characters are written to the given {@link java.io.PrintStream\n PrintStream} object and are therefore encoded using that object's\n charset.\n\n @param  ps\n         The stream to use as the destination of this formatter.\n"
16847,method,java/util/Formatter/Formatter/OutputStream," Constructs a new formatter with the specified output stream.\n\n <p> The charset used is the {@linkplain\n java.nio.charset.Charset#defaultCharset() default charset} for this\n instance of the Java virtual machine.\n\n <p> The locale used is the {@linkplain Locale#getDefault() default\n locale} for this instance of the Java virtual machine.\n\n @param  os\n         The output stream to use as the destination of this formatter.\n         The output will be buffered.\n"
16848,method,java/util/Formatter/Formatter/OutputStream;String," Constructs a new formatter with the specified output stream and\n charset.\n\n <p> The locale used is the {@linkplain Locale#getDefault default\n locale} for this instance of the Java virtual machine.\n\n @param  os\n         The output stream to use as the destination of this formatter.\n         The output will be buffered.\n\n @param  csn\n         The name of a supported {@linkplain java.nio.charset.Charset\n         charset}\n\n @throws  UnsupportedEncodingException\n          If the named charset is not supported\n"
16849,method,java/util/Formatter/Formatter/OutputStream;String;Locale," Constructs a new formatter with the specified output stream, charset,\n and locale.\n\n @param  os\n         The output stream to use as the destination of this formatter.\n         The output will be buffered.\n\n @param  csn\n         The name of a supported {@linkplain java.nio.charset.Charset\n         charset}\n\n @param  l\n         The {@linkplain java.util.Locale locale} to apply during\n         formatting.  If <tt>l</tt> is <tt>null</tt> then no localization\n         is applied.\n\n @throws  UnsupportedEncodingException\n          If the named charset is not supported\n"
16850,class,java/util/Formatter/BigDecimalLayoutForm,""
16851,method,java/util/Formatter/BigDecimalLayoutForm/values/,""
16852,method,java/util/Formatter/BigDecimalLayoutForm/valueOf/String,""
16853,field,java/util/Formatter/BigDecimalLayoutForm/SCIENTIFIC,""
16854,field,java/util/Formatter/BigDecimalLayoutForm/DECIMAL_FLOAT,""
16855,class,java/util/FormattableFlags," FomattableFlags are passed to the {@link Formattable#formatTo\n Formattable.formatTo()} method and modify the output format for {@linkplain\n Formattable Formattables}.  Implementations of {@link Formattable} are\n responsible for interpreting and validating any flags.\n\n @version 	1.3, 03/23/10\n @since  1.5\n"
16861,class,java/util/FormatFlagsConversionMismatchException," Unchecked exception thrown when a conversion and flag are incompatible.\n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16862,method,java/util/FormatFlagsConversionMismatchException/getFlags/," Returns the incompatible flag.\n\n @return  The flag\n"
16863,method,java/util/FormatFlagsConversionMismatchException/getConversion/," Returns the incompatible conversion.\n\n @return  The conversion\n"
16864,method,java/util/FormatFlagsConversionMismatchException/getMessage/,""
16865,method,java/util/FormatFlagsConversionMismatchException/FormatFlagsConversionMismatchException/String;char," Constructs an instance of this class with the specified flag\n and conversion.\n\n @param  f\n         The flag\n\n @param  c\n         The conversion\n"
16867,method,java/util/EventObject/getSource/," The object on which the Event initially occurred.\n\n @return   The object on which the Event initially occurred.\n"
16868,method,java/util/EventObject/toString/," Returns a String representation of this EventObject.\n\n @return  A a String representation of this EventObject.\n"
16869,method,java/util/EventObject/EventObject/Object," Constructs a prototypical Event.\n\n @param    source    The object on which the Event initially occurred.\n @exception  IllegalArgumentException  if source is null.\n"
16870,field,java/util/EventObject/source," The object on which the Event initially occurred.\n"
16872,method,java/util/EventListenerProxy/getListener/," @return The listener associated with this proxy.\n"
16873,method,java/util/EventListenerProxy/EventListenerProxy/EventListener," @param listener The listener object.\n"
16877,method,java/util/Enumeration/nextElement/," Returns the next element of this enumeration if this enumeration\n object has at least one more element to provide.\n\n @return     the next element of this enumeration.\n @exception  NoSuchElementException  if no more elements exist.\n"
16879,method,java/util/EnumSet/noneOf/Class," Creates an empty enum set with the specified element type.\n\n @param elementType the class object of the element type for this enum\n     set\n @throws NullPointerException if <tt>elementType</tt> is null\n"
16880,method,java/util/EnumSet/allOf/Class," Creates an enum set containing all of the elements in the specified\n element type.\n\n @param elementType the class object of the element type for this enum\n     set\n @throws NullPointerException if <tt>elementType</tt> is null\n"
16881,method,java/util/EnumSet/copyOf/EnumSet," Creates an enum set with the same element type as the specified enum\n set, initially containing the same elements (if any).\n\n @param s the enum set from which to initialize this enum set\n @throws NullPointerException if <tt>s</tt> is null\n"
16883,method,java/util/EnumSet/complementOf/EnumSet," Creates an enum set with the same element type as the specified enum\n set, initially containing all the elements of this type that are\n <i>not</i> contained in the specified set.\n\n @param s the enum set from whose complement to initialize this enum set\n @throws NullPointerException if <tt>s</tt> is null\n"
16891,method,java/util/EnumSet/clone/," Returns a copy of this set.\n\n @return a copy of this set\n"
16893,method,java/util/EnumMap/size/," Returns the number of key-value mappings in this map.\n\n @return the number of key-value mappings in this map\n"
16894,method,java/util/EnumMap/containsValue/Object," Returns <tt>true</tt> if this map maps one or more keys to the\n specified value.\n\n @param value the value whose presence in this map is to be tested\n @return <tt>true</tt> if this map maps one or more keys to this value\n"
16895,method,java/util/EnumMap/containsKey/Object," Returns <tt>true</tt> if this map contains a mapping for the specified\n key.\n\n @param key the key whose presence in this map is to be tested\n @return <tt>true</tt> if this map contains a mapping for the specified\n            key\n"
16897,method,java/util/EnumMap/put/Enum;Object," Associates the specified value with the specified key in this map.\n If the map previously contained a mapping for this key, the old\n value is replaced.\n\n @param key the key with which the specified value is to be associated\n @param value the value to be associated with the specified key\n\n @return the previous value associated with specified key, or\n     <tt>null</tt> if there was no mapping for key.  (A <tt>null</tt>\n     return can also indicate that the map previously associated\n     <tt>null</tt> with the specified key.)\n @throws NullPointerException if the specified key is null\n"
16898,method,java/util/EnumMap/remove/Object," Removes the mapping for this key from this map if present.\n\n @param key the key whose mapping is to be removed from the map\n @return the previous value associated with specified key, or\n     <tt>null</tt> if there was no entry for key.  (A <tt>null</tt>\n     return can also indicate that the map previously associated\n     <tt>null</tt> with the specified key.)\n"
16899,method,java/util/EnumMap/putAll/Map," Copies all of the mappings from the specified map to this map.\n These mappings will replace any mappings that this map had for\n any of the keys currently in the specified map.\n\n @param m the mappings to be stored in this map\n @throws NullPointerException the specified map is null, or if\n     one or more keys in the specified map are null\n"
16900,method,java/util/EnumMap/clear/," Removes all mappings from this map.\n"
16901,method,java/util/EnumMap/keySet/," Returns a {@link Set} view of the keys contained in this map.\n The returned set obeys the general contract outlined in\n {@link Map#keySet()}.  The set's iterator will return the keys\n in their natural order (the order in which the enum constants\n are declared).\n\n @return a set view of the keys contained in this enum map\n"
16902,method,java/util/EnumMap/values/," Returns a {@link Collection} view of the values contained in this map.\n The returned collection obeys the general contract outlined in\n {@link Map#values()}.  The collection's iterator will return the\n values in the order their corresponding keys appear in map,\n which is their natural order (the order in which the enum constants\n are declared).\n\n @return a collection view of the values contained in this map\n"
16903,method,java/util/EnumMap/entrySet/," Returns a {@link Set} view of the mappings contained in this map.\n The returned set obeys the general contract outlined in\n {@link Map#keySet()}.  The set's iterator will return the\n mappings in the order their keys appear in map, which is their\n natural order (the order in which the enum constants are declared).\n\n @return a set view of the mappings contained in this enum map\n"
16904,method,java/util/EnumMap/equals/Object," Compares the specified object with this map for equality.  Returns\n <tt>true</tt> if the given object is also a map and the two maps\n represent the same mappings, as specified in the {@link\n Map#equals(Object)} contract.\n\n @param o the object to be compared for equality with this map\n @return <tt>true</tt> if the specified object is equal to this map\n"
16905,method,java/util/EnumMap/clone/," Returns a shallow copy of this enum map.  (The values themselves\n are not cloned.\n\n @return a shallow copy of this enum map\n"
16906,method,java/util/EnumMap/EnumMap/Class," Creates an empty enum map with the specified key type.\n\n @param keyType the class object of the key type for this enum map\n @throws NullPointerException if <tt>keyType</tt> is null\n"
16907,method,java/util/EnumMap/EnumMap/EnumMap," Creates an enum map with the same key type as the specified enum\n map, initially containing the same mappings (if any).\n\n @param m the enum map from which to initialize this enum map\n @throws NullPointerException if <tt>m</tt> is null\n"
16909,class,java/util/EmptyStackException," Thrown by methods in the <code>Stack</code> class to indicate \n that the stack is empty. \n\n @author  Jonathan Payne\n @version 1.22, 03/23/10\n @see     java.util.Stack\n @since   JDK1.0\n"
16911,class,java/util/DuplicateFormatFlagsException," Unchecked exception thrown when duplicate flags are provided in the format\n specifier.  \n\n <p> Unless otherwise specified, passing a <tt>null</tt> argument to any\n method or constructor in this class will cause a {@link\n NullPointerException} to be thrown.\n\n @version 	1.4, 03/23/10\n @since 1.5\n"
16912,method,java/util/DuplicateFormatFlagsException/getFlags/," Returns the set of flags which contains a duplicate flag.\n\n @return  The flags\n"
16913,method,java/util/DuplicateFormatFlagsException/getMessage/,""
16914,method,java/util/DuplicateFormatFlagsException/DuplicateFormatFlagsException/String," Constructs an instance of this class with the specified flags.\n\n @param  f\n         The set of format flags which contain a duplicate flag.\n"
16916,method,java/util/Dictionary/size/," Returns the number of entries (distinct keys) in this dictionary.\n\n @return  the number of keys in this dictionary.\n"
16918,method,java/util/Dictionary/keys/," Returns an enumeration of the keys in this dictionary. The general \n contract for the keys method is that an <tt>Enumeration</tt> object \n is returned that will generate all the keys for which this dictionary \n contains entries. \n\n @return  an enumeration of the keys in this dictionary.\n @see     java.util.Dictionary#elements()\n @see     java.util.Enumeration\n"
16919,method,java/util/Dictionary/elements/," Returns an enumeration of the values in this dictionary. The general \n contract for the <tt>elements</tt> method is that an \n <tt>Enumeration</tt> is returned that will generate all the elements \n contained in entries in this dictionary.\n\n @return  an enumeration of the values in this dictionary.\n @see     java.util.Dictionary#keys()\n @see     java.util.Enumeration\n"
16920,method,java/util/Dictionary/get/Object," Returns the value to which the key is mapped in this dictionary. \n The general contract for the <tt>isEmpty</tt> method is that if this \n dictionary contains an entry for the specified key, the associated \n value is returned; otherwise, <tt>null</tt> is returned. \n\n @return  the value to which the key is mapped in this dictionary;\n @param   key   a key in this dictionary.\n          <code>null</code> if the key is not mapped to any value in\n          this dictionary.\n @exception NullPointerException if the <tt>key</tt> is <tt>null</tt>.\n @see     java.util.Dictionary#put(java.lang.Object, java.lang.Object)\n"
16922,method,java/util/Dictionary/remove/Object," Removes the <code>key</code> (and its corresponding \n <code>value</code>) from this dictionary. This method does nothing \n if the <code>key</code> is not in this dictionary. \n\n @param   key   the key that needs to be removed.\n @return  the value to which the <code>key</code> had been mapped in this\n          dictionary, or <code>null</code> if the key did not have a\n          mapping.\n @exception NullPointerException if <tt>key</tt> is <tt>null</tt>.\n"
16931,method,java/util/Deque/pollFirst/," Retrieves and removes the first element of this deque,\n or returns <tt>null</tt> if this deque is empty.\n\n @return the head of this deque, or <tt>null</tt> if this deque is empty\n"
16932,method,java/util/Deque/pollLast/," Retrieves and removes the last element of this deque,\n or returns <tt>null</tt> if this deque is empty.\n\n @return the tail of this deque, or <tt>null</tt> if this deque is empty\n"
16935,method,java/util/Deque/peekFirst/," Retrieves, but does not remove, the first element of this deque,\n or returns <tt>null</tt> if this deque is empty.\n\n @return the head of this deque, or <tt>null</tt> if this deque is empty\n"
16936,method,java/util/Deque/peekLast/," Retrieves, but does not remove, the last element of this deque,\n or returns <tt>null</tt> if this deque is empty.\n\n @return the tail of this deque, or <tt>null</tt> if this deque is empty\n"
16942,method,java/util/Deque/poll/," Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque), or returns\n <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #pollFirst()}.\n\n @return the first element of this deque, or <tt>null</tt> if\n         this deque is empty\n"
16944,method,java/util/Deque/peek/," Retrieves, but does not remove, the head of the queue represented by\n this deque (in other words, the first element of this deque), or\n returns <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #peekFirst()}.\n\n @return the head of the queue represented by this deque, or\n         <tt>null</tt> if this deque is empty\n"
16946,method,java/util/Deque/pop/," Pops an element from the stack represented by this deque.  In other\n words, removes and returns the first element of this deque.\n\n <p>This method is equivalent to {@link #removeFirst()}.\n\n @return the element at the front of this deque (which is the top\n         of the stack represented by this deque)\n @throws NoSuchElementException if this deque is empty\n"
16949,method,java/util/Deque/size/," Returns the number of elements in this deque.\n\n @return the number of elements in this deque\n"
16950,method,java/util/Deque/iterator/," Returns an iterator over the elements in this deque in proper sequence.\n The elements will be returned in order from first (head) to last (tail).\n\n @return an iterator over the elements in this deque in proper sequence\n"
16951,method,java/util/Deque/descendingIterator/," Returns an iterator over the elements in this deque in reverse\n sequential order.  The elements will be returned in order from\n last (tail) to first (head).\n\n @return an iterator over the elements in this deque in reverse\n sequence\n"
16953,method,java/util/Date/clone/," Return a copy of this object.\n"
16956,method,java/util/Date/getYear/," Returns a value that is the result of subtracting 1900 from the \n year that contains or begins with the instant in time represented \n by this <code>Date</code> object, as interpreted in the local \n time zone.\n\n @return  the year represented by this date, minus 1900.\n @see     java.util.Calendar\n @deprecated As of JDK version 1.1,\n replaced by <code>Calendar.get(Calendar.YEAR) - 1900</code>.\n"
16962,method,java/util/Date/getDay/," Returns the day of the week represented by this date. The \n returned value (<tt>0</tt> = Sunday, <tt>1</tt> = Monday, \n <tt>2</tt> = Tuesday, <tt>3</tt> = Wednesday, <tt>4</tt> = \n Thursday, <tt>5</tt> = Friday, <tt>6</tt> = Saturday) \n represents the day of the week that contains or begins with \n the instant in time represented by this <tt>Date</tt> object, \n as interpreted in the local time zone.\n\n @return  the day of the week represented by this date.\n @see     java.util.Calendar\n @deprecated As of JDK version 1.1,\n replaced by <code>Calendar.get(Calendar.DAY_OF_WEEK)</code>.\n"
16963,method,java/util/Date/getHours/," Returns the hour represented by this <tt>Date</tt> object. The \n returned value is a number (<tt>0</tt> through <tt>23</tt>) \n representing the hour within the day that contains or begins \n with the instant in time represented by this <tt>Date</tt> \n object, as interpreted in the local time zone.\n\n @return  the hour represented by this date.\n @see     java.util.Calendar\n @deprecated As of JDK version 1.1,\n replaced by <code>Calendar.get(Calendar.HOUR_OF_DAY)</code>.\n"
16969,method,java/util/Date/getTime/," Returns the number of milliseconds since January 1, 1970, 00:00:00 GMT\n represented by this <tt>Date</tt> object.\n\n @return  the number of milliseconds since January 1, 1970, 00:00:00 GMT\n          represented by this date.\n"
16975,method,java/util/Date/hashCode/," Returns a hash code value for this object. The result is the \n exclusive OR of the two halves of the primitive <tt>long</tt> \n value returned by the {@link Date#getTime} \n method. That is, the hash code is the value of the expression:\n <blockquote><pre>\n (int)(this.getTime()^(this.getTime() >>> 32))</pre></blockquote>\n\n @return  a hash code value for this object. \n"
16980,method,java/util/Date/Date/," Allocates a <code>Date</code> object and initializes it so that \n it represents the time at which it was allocated, measured to the \n nearest millisecond. \n\n @see     java.lang.System#currentTimeMillis()\n"
16981,method,java/util/Date/Date/long," Allocates a <code>Date</code> object and initializes it to \n represent the specified number of milliseconds since the \n standard base time known as "the epoch", namely January 1, \n 1970, 00:00:00 GMT. \n\n @param   date   the milliseconds since January 1, 1970, 00:00:00 GMT.\n @see     java.lang.System#currentTimeMillis()\n"
16985,method,java/util/Date/Date/String," Allocates a <code>Date</code> object and initializes it so that \n it represents the date and time indicated by the string \n <code>s</code>, which is interpreted as if by the \n {@link Date#parse} method. \n\n @param   s   a string representation of the date.\n @see     java.text.DateFormat\n @see     java.util.Date#parse(java.lang.String)\n @deprecated As of JDK version 1.1,\n replaced by <code>DateFormat.parse(String s)</code>.\n"
16987,method,java/util/Currency/getInstance/String," Returns the <code>Currency</code> instance for the given currency code.\n\n @param currencyCode the ISO 4217 code of the currency\n @return the <code>Currency</code> instance for the given currency code\n @exception NullPointerException if <code>currencyCode</code> is null\n @exception IllegalArgumentException if <code>currencyCode</code> is not\n a supported ISO 4217 code.\n"
16989,method,java/util/Currency/getCurrencyCode/," Gets the ISO 4217 currency code of this currency.\n\n @return the ISO 4217 currency code of this currency.\n"
16992,method,java/util/Currency/getDefaultFractionDigits/," Gets the default number of fraction digits used with this currency.\n For example, the default number of fraction digits for the Euro is 2,\n while for the Japanese Yen it's 0.\n In the case of pseudo-currencies, such as IMF Special Drawing Rights,\n -1 is returned.\n\n @return the default number of fraction digits used with this currency\n"
16993,method,java/util/Currency/toString/," Returns the ISO 4217 currency code of this currency.\n\n @return the ISO 4217 currency code of this currency\n"
17005,method,java/util/Collections/reverse/List," Reverses the order of the elements in the specified list.<p>\n\n This method runs in linear time.\n\n @param  list the list whose elements are to be reversed.\n @throws UnsupportedOperationException if the specified list or\n         its list-iterator does not support the <tt>set</tt> operation.\n"
17009,method,java/util/Collections/fill/List;Object," Replaces all of the elements of the specified list with the specified\n element. <p>\n\n This method runs in linear time.\n\n @param  list the list to be filled with the specified element.\n @param  obj The element with which to fill the specified list.\n @throws UnsupportedOperationException if the specified list or its\n	       list-iterator does not support the <tt>set</tt> operation.\n"
17016,method,java/util/Collections/replaceAll/List;Object;Object," Replaces all occurrences of one specified value in a list with another.\n More formally, replaces with <tt>newVal</tt> each element <tt>e</tt>\n in <tt>list</tt> such that\n <tt>(oldVal==null ? e==null : oldVal.equals(e))</tt>.\n (This method has no effect on the size of the list.)\n\n @param list the list in which replacement is to occur.\n @param oldVal the old value to be replaced.\n @param newVal the new value with which <tt>oldVal</tt> is to be\n        replaced.\n @return <tt>true</tt> if <tt>list</tt> contained one or more elements\n         <tt>e</tt> such that\n         <tt>(oldVal==null ?  e==null : oldVal.equals(e))</tt>.\n @throws UnsupportedOperationException if the specified list or\n         its list-iterator does not support the <tt>set</tt> operation.\n @since  1.4\n"
17017,method,java/util/Collections/indexOfSubList/List;List," Returns the starting position of the first occurrence of the specified\n target list within the specified source list, or -1 if there is no\n such occurrence.  More formally, returns the lowest index <tt>i</tt>\n such that <tt>source.subList(i, i+target.size()).equals(target)</tt>,\n or -1 if there is no such index.  (Returns -1 if\n <tt>target.size() > source.size()</tt>.)\n\n <p>This implementation uses the "brute force" technique of scanning\n over the source list, looking for a match with the target at each\n location in turn.\n\n @param source the list in which to search for the first occurrence\n        of <tt>target</tt>.\n @param target the list to search for as a subList of <tt>source</tt>.\n @return the starting position of the first occurrence of the specified\n         target list within the specified source list, or -1 if there\n         is no such occurrence.\n @since  1.4\n"
17018,method,java/util/Collections/lastIndexOfSubList/List;List," Returns the starting position of the last occurrence of the specified\n target list within the specified source list, or -1 if there is no such\n occurrence.  More formally, returns the highest index <tt>i</tt>\n such that <tt>source.subList(i, i+target.size()).equals(target)</tt>,\n or -1 if there is no such index.  (Returns -1 if\n <tt>target.size() > source.size()</tt>.)\n\n <p>This implementation uses the "brute force" technique of iterating\n over the source list, looking for a match with the target at each\n location in turn.\n\n @param source the list in which to search for the last occurrence\n        of <tt>target</tt>.\n @param target the list to search for as a subList of <tt>source</tt>.\n @return the starting position of the last occurrence of the specified\n         target list within the specified source list, or -1 if there\n         is no such occurrence.\n @since  1.4\n"
17043,method,java/util/Collections/nCopies/int;Object," Returns an immutable list consisting of <tt>n</tt> copies of the\n specified object.  The newly allocated data object is tiny (it contains\n a single reference to the data object).  This method is useful in\n combination with the <tt>List.addAll</tt> method to grow lists.\n The returned list is serializable.\n\n @param  n the number of elements in the returned list.\n @param  o the element to appear repeatedly in the returned list.\n @return an immutable list consisting of <tt>n</tt> copies of the\n 	       specified object.\n @throws IllegalArgumentException if n &lt; 0.\n @see    List#addAll(Collection)\n @see    List#addAll(int, Collection)\n"
17044,method,java/util/Collections/reverseOrder/," Returns a comparator that imposes the reverse of the <i>natural\n ordering</i> on a collection of objects that implement the\n <tt>Comparable</tt> interface.  (The natural ordering is the ordering\n imposed by the objects' own <tt>compareTo</tt> method.)  This enables a\n simple idiom for sorting (or maintaining) collections (or arrays) of\n objects that implement the <tt>Comparable</tt> interface in\n reverse-natural-order.  For example, suppose a is an array of\n strings. Then: <pre>\n 		Arrays.sort(a, Collections.reverseOrder());\n </pre> sorts the array in reverse-lexicographic (alphabetical) order.<p>\n\n The returned comparator is serializable.\n\n @return a comparator that imposes the reverse of the <i>natural\n 	       ordering</i> on a collection of objects that implement\n	       the <tt>Comparable</tt> interface.\n @see Comparable\n"
17048,method,java/util/Collections/frequency/Collection;Object," Returns the number of elements in the specified collection equal to the\n specified object.  More formally, returns the number of elements\n <tt>e</tt> in the collection such that\n <tt>(o == null ? e == null : o.equals(e))</tt>.\n\n @param c the collection in which to determine the frequency\n     of <tt>o</tt>\n @param o the object whose frequency is to be determined\n @throws NullPointerException if <tt>c</tt> is null\n @since 1.5\n"
17053,field,java/util/Collections/EMPTY_SET," The empty set (immutable).  This set is serializable.\n\n @see #emptySet()\n"
17054,field,java/util/Collections/EMPTY_LIST," The empty list (immutable).  This list is serializable.\n\n @see #emptyList()\n"
17055,field,java/util/Collections/EMPTY_MAP," The empty map (immutable).  This map is serializable.\n\n @see #emptyMap()\n @since 1.3\n"
17057,method,java/util/Collection/size/," Returns the number of elements in this collection.  If this collection\n contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of elements in this collection\n"
17058,method,java/util/Collection/isEmpty/," Returns <tt>true</tt> if this collection contains no elements.\n\n @return <tt>true</tt> if this collection contains no elements\n"
17060,method,java/util/Collection/iterator/," Returns an iterator over the elements in this collection.  There are no\n guarantees concerning the order in which the elements are returned\n (unless this collection is an instance of some class that provides a\n guarantee).\n\n @return an <tt>Iterator</tt> over the elements in this collection\n"
17065,method,java/util/Collection/containsAll/Collection," Returns <tt>true</tt> if this collection contains all of the elements\n in the specified collection.\n\n @param  c collection to be checked for containment in this collection\n @return <tt>true</tt> if this collection contains all of the elements\n	       in the specified collection\n @throws ClassCastException if the types of one or more elements\n         in the specified collection are incompatible with this\n         collection (optional)\n @throws NullPointerException if the specified collection contains one\n         or more null elements and this collection does not permit null\n         elements (optional), or if the specified collection is null\n @see    #contains(Object)\n"
17073,method,java/util/Calendar/getInstance/," Gets a calendar using the default time zone and locale. The\n <code>Calendar</code> returned is based on the current time\n in the default time zone with the default locale.\n\n @return a Calendar.\n"
17074,method,java/util/Calendar/getInstance/TimeZone," Gets a calendar using the specified time zone and default locale.\n The <code>Calendar</code> returned is based on the current time\n in the given time zone with the default locale. \n\n @param zone the time zone to use\n @return a Calendar.\n"
17075,method,java/util/Calendar/getInstance/Locale," Gets a calendar using the default time zone and specified locale.\n The <code>Calendar</code> returned is based on the current time\n in the default time zone with the given locale.\n\n @param aLocale the locale for the week data\n @return a Calendar.\n"
17076,method,java/util/Calendar/getInstance/TimeZone;Locale," Gets a calendar with the specified time zone and locale.\n The <code>Calendar</code> returned is based on the current time\n in the given time zone with the given locale.\n\n @param zone the time zone to use\n @param aLocale the locale for the week data\n @return a Calendar.\n"
17078,method,java/util/Calendar/computeTime/," Converts the current calendar field values in {@link #fields fields[]}\n to the millisecond time value\n {@link #time}.\n\n @see #complete()\n @see #computeFields()\n"
17080,method,java/util/Calendar/getTime/," Returns a <code>Date</code> object representing this\n <code>Calendar</code>'s time value (millisecond offset from the <a\n href="#Epoch">Epoch</a>").\n\n @return a <code>Date</code> representing the time value.\n @see #setTime(Date)\n @see #getTimeInMillis()\n"
17082,method,java/util/Calendar/getTimeInMillis/," Returns this Calendar's time value in milliseconds. \n\n @return the current time as UTC milliseconds from the epoch.\n @see #getTime()\n @see #setTimeInMillis(long)\n"
17083,method,java/util/Calendar/setTimeInMillis/long," Sets this Calendar's current time from the given long value.\n\n @param millis the new time in UTC milliseconds from the epoch.\n @see #setTime(Date)\n @see #getTimeInMillis()\n"
17084,method,java/util/Calendar/get/int," Returns the value of the given calendar field. In lenient mode,\n all calendar fields are normalized. In non-lenient mode, all\n calendar fields are validated and this method throws an\n exception if any calendar fields have out-of-range values. The\n normalization and validation are handled by the\n {@link #complete()} method, which process is calendar\n system dependent.\n\n @param field the given calendar field.\n @return the value for the given calendar field.\n @throws ArrayIndexOutOfBoundsException if the specified field is out of range\n             (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).\n @see #set(int,int)\n @see #complete()\n"
17086,method,java/util/Calendar/set/int;int," Sets the given calendar field to the given value. The value is not\n interpreted by this method regardless of the leniency mode.\n\n @param field the given calendar field.\n @param value the value to be set for the given calendar field.\n @throws ArrayIndexOutOfBoundsException if the specified field is out of range\n             (<code>field &lt; 0 || field &gt;= FIELD_COUNT</code>).\n in non-lenient mode.\n @see #set(int,int,int)\n @see #set(int,int,int,int,int)\n @see #set(int,int,int,int,int,int)\n @see #get(int)\n"
17097,method,java/util/Calendar/hashCode/," Returns a hash code for this calendar.\n\n @return a hash code value for this object. \n @since 1.2\n"
17104,method,java/util/Calendar/setTimeZone/TimeZone," Sets the time zone with the given time zone value.\n\n @param value the given time zone.\n"
17105,method,java/util/Calendar/getTimeZone/," Gets the time zone.\n\n @return the time zone object associated with this calendar.\n"
17107,method,java/util/Calendar/isLenient/," Tells whether date/time interpretation is to be lenient.\n\n @return <code>true</code> if the interpretation mode of this calendar is lenient;\n <code>false</code> otherwise.\n @see #setLenient(boolean)\n"
17108,method,java/util/Calendar/setFirstDayOfWeek/int," Sets what the first day of the week is; e.g., <code>SUNDAY</code> in the U.S.,\n <code>MONDAY</code> in France.\n\n @param value the given first day of the week.\n @see #getFirstDayOfWeek()\n @see #getMinimalDaysInFirstWeek()\n"
17109,method,java/util/Calendar/getFirstDayOfWeek/," Gets what the first day of the week is; e.g., <code>SUNDAY</code> in the U.S.,\n <code>MONDAY</code> in France.\n\n @return the first day of the week.\n @see #setFirstDayOfWeek(int)\n @see #getMinimalDaysInFirstWeek()\n"
17112,method,java/util/Calendar/getMinimum/int," Returns the minimum value for the given calendar field of this\n <code>Calendar</code> instance. The minimum value is defined as\n the smallest value returned by the {@link #get(int) get} method\n for any possible time value.  The minimum value depends on\n calendar system specific parameters of the instance.\n\n @param field the calendar field.\n @return the minimum value for the given calendar field.\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
17113,method,java/util/Calendar/getMaximum/int," Returns the maximum value for the given calendar field of this\n <code>Calendar</code> instance. The maximum value is defined as\n the largest value returned by the {@link #get(int) get} method\n for any possible time value. The maximum value depends on\n calendar system specific parameters of the instance.\n\n @param field the calendar field.\n @return the maximum value for the given calendar field.\n @see #getMinimum(int)\n @see #getGreatestMinimum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
17114,method,java/util/Calendar/getGreatestMinimum/int," Returns the highest minimum value for the given calendar field\n of this <code>Calendar</code> instance. The highest minimum\n value is defined as the largest value returned by {@link\n #getActualMinimum(int)} for any possible time value. The\n greatest minimum value depends on calendar system specific\n parameters of the instance.\n\n @param field the calendar field.\n @return the highest minimum value for the given calendar field.\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getLeastMaximum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
17115,method,java/util/Calendar/getLeastMaximum/int," Returns the lowest maximum value for the given calendar field\n of this <code>Calendar</code> instance. The lowest maximum\n value is defined as the smallest value returned by {@link\n #getActualMaximum(int)} for any possible time value. The least\n maximum value depends on calendar system specific parameters of\n the instance. For example, a <code>Calendar</code> for the\n Gregorian calendar system returns 28 for the\n <code>DAY_OF_MONTH</code> field, because the 28th is the last\n day of the shortest month of this calendar, February in a\n common year.\n\n @param field the calendar field.\n @return the lowest maximum value for the given calendar field.\n @see #getMinimum(int)\n @see #getMaximum(int)\n @see #getGreatestMinimum(int)\n @see #getActualMinimum(int)\n @see #getActualMaximum(int)\n"
17118,method,java/util/Calendar/clone/," Creates and returns a copy of this object.\n\n @return a copy of this object.\n"
17120,method,java/util/Calendar/Calendar/," Constructs a Calendar with the default time zone\n and locale.\n @see     TimeZone#getDefault\n"
17121,method,java/util/Calendar/Calendar/TimeZone;Locale," Constructs a calendar with the specified time zone and locale.\n\n @param zone the time zone to use\n @param aLocale the locale for the week data\n"
17127,field,java/util/Calendar/DATE," Field number for <code>get</code> and <code>set</code> indicating the\n day of the month. This is a synonym for <code>DAY_OF_MONTH</code>.\n The first day of the month has value 1.\n\n @see #DAY_OF_MONTH\n"
17128,field,java/util/Calendar/DAY_OF_MONTH," Field number for <code>get</code> and <code>set</code> indicating the\n day of the month. This is a synonym for <code>DATE</code>.\n The first day of the month has value 1.\n\n @see #DATE\n"
17129,field,java/util/Calendar/DAY_OF_YEAR," Field number for <code>get</code> and <code>set</code> indicating the day\n number within the current year.  The first day of the year has value 1.\n"
17130,field,java/util/Calendar/DAY_OF_WEEK," Field number for <code>get</code> and <code>set</code> indicating the day\n of the week.  This field takes values <code>SUNDAY</code>,\n <code>MONDAY</code>, <code>TUESDAY</code>, <code>WEDNESDAY</code>,\n <code>THURSDAY</code>, <code>FRIDAY</code>, and <code>SATURDAY</code>.\n\n @see #SUNDAY\n @see #MONDAY\n @see #TUESDAY\n @see #WEDNESDAY\n @see #THURSDAY\n @see #FRIDAY\n @see #SATURDAY\n"
17133,field,java/util/Calendar/HOUR," Field number for <code>get</code> and <code>set</code> indicating the\n hour of the morning or afternoon. <code>HOUR</code> is used for the\n 12-hour clock (0 - 11). Noon and midnight are represented by 0, not by 12.\n E.g., at 10:04:15.250 PM the <code>HOUR</code> is 10.\n\n @see #AM_PM\n @see #HOUR_OF_DAY\n"
17134,field,java/util/Calendar/HOUR_OF_DAY," Field number for <code>get</code> and <code>set</code> indicating the\n hour of the day. <code>HOUR_OF_DAY</code> is used for the 24-hour clock.\n E.g., at 10:04:15.250 PM the <code>HOUR_OF_DAY</code> is 22.\n\n @see #HOUR\n"
17135,field,java/util/Calendar/MINUTE," Field number for <code>get</code> and <code>set</code> indicating the\n minute within the hour.\n E.g., at 10:04:15.250 PM the <code>MINUTE</code> is 4.\n"
17136,field,java/util/Calendar/SECOND," Field number for <code>get</code> and <code>set</code> indicating the\n second within the minute.\n E.g., at 10:04:15.250 PM the <code>SECOND</code> is 15.\n"
17137,field,java/util/Calendar/MILLISECOND," Field number for <code>get</code> and <code>set</code> indicating the\n millisecond within the second.\n E.g., at 10:04:15.250 PM the <code>MILLISECOND</code> is 250.\n"
17140,field,java/util/Calendar/FIELD_COUNT," The number of distinct fields recognized by <code>get</code> and <code>set</code>.\n Field numbers range from <code>0..FIELD_COUNT-1</code>.\n"
17141,field,java/util/Calendar/SUNDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Sunday.\n"
17142,field,java/util/Calendar/MONDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Monday.\n"
17143,field,java/util/Calendar/TUESDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Tuesday.\n"
17144,field,java/util/Calendar/WEDNESDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Wednesday.\n"
17145,field,java/util/Calendar/THURSDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Thursday.\n"
17146,field,java/util/Calendar/FRIDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Friday.\n"
17147,field,java/util/Calendar/SATURDAY," Value of the {@link #DAY_OF_WEEK} field indicating\n Saturday.\n"
17148,field,java/util/Calendar/JANUARY," Value of the {@link #MONTH} field indicating the\n first month of the year in the Gregorian and Julian calendars.\n"
17149,field,java/util/Calendar/FEBRUARY," Value of the {@link #MONTH} field indicating the\n second month of the year in the Gregorian and Julian calendars.\n"
17150,field,java/util/Calendar/MARCH," Value of the {@link #MONTH} field indicating the\n third month of the year in the Gregorian and Julian calendars.\n"
17151,field,java/util/Calendar/APRIL," Value of the {@link #MONTH} field indicating the\n fourth month of the year in the Gregorian and Julian calendars.\n"
17152,field,java/util/Calendar/MAY," Value of the {@link #MONTH} field indicating the\n fifth month of the year in the Gregorian and Julian calendars.\n"
17153,field,java/util/Calendar/JUNE," Value of the {@link #MONTH} field indicating the\n sixth month of the year in the Gregorian and Julian calendars.\n"
17154,field,java/util/Calendar/JULY," Value of the {@link #MONTH} field indicating the\n seventh month of the year in the Gregorian and Julian calendars.\n"
17155,field,java/util/Calendar/AUGUST," Value of the {@link #MONTH} field indicating the\n eighth month of the year in the Gregorian and Julian calendars.\n"
17156,field,java/util/Calendar/SEPTEMBER," Value of the {@link #MONTH} field indicating the\n ninth month of the year in the Gregorian and Julian calendars.\n"
17157,field,java/util/Calendar/OCTOBER," Value of the {@link #MONTH} field indicating the\n tenth month of the year in the Gregorian and Julian calendars.\n"
17158,field,java/util/Calendar/NOVEMBER," Value of the {@link #MONTH} field indicating the\n eleventh month of the year in the Gregorian and Julian calendars.\n"
17159,field,java/util/Calendar/DECEMBER," Value of the {@link #MONTH} field indicating the\n twelfth month of the year in the Gregorian and Julian calendars.\n"
17160,field,java/util/Calendar/UNDECIMBER," Value of the {@link #MONTH} field indicating the\n thirteenth month of the year. Although <code>GregorianCalendar</code>\n does not use this value, lunar calendars do.\n"
17163,field,java/util/Calendar/ALL_STYLES," A style specifier for {@link #getDisplayNames(int, int, Locale)\n getDisplayNames} indicating names in all styles, such as\n "January" and "Jan".\n\n @see #SHORT\n @see #LONG\n @since 1.6\n"
17164,field,java/util/Calendar/SHORT," A style specifier for {@link #getDisplayName(int, int, Locale)\n getDisplayName} and {@link #getDisplayNames(int, int, Locale)\n getDisplayNames} indicating a short name, such as "Jan".\n\n @see #LONG\n @since 1.6\n"
17165,field,java/util/Calendar/LONG," A style specifier for {@link #getDisplayName(int, int, Locale)\n getDisplayName} and {@link #getDisplayNames(int, int, Locale)\n getDisplayNames} indicating a long name, such as "January".\n\n @see #SHORT\n @since 1.6\n"
17166,field,java/util/Calendar/fields," The calendar field values for the currently set time for this calendar.\n This is an array of <code>FIELD_COUNT</code> integers, with index values\n <code>ERA</code> through <code>DST_OFFSET</code>.\n @serial\n"
17169,field,java/util/Calendar/isTimeSet," True if then the value of <code>time</code> is valid.\n The time is made invalid by a change to an item of <code>field[]</code>.\n @see #time\n @serial\n"
17170,field,java/util/Calendar/areFieldsSet," True if <code>fields[]</code> are in sync with the currently set time.\n If false, then the next attempt to get the value of a field will\n force a recomputation of all fields from the current value of\n <code>time</code>.\n @serial\n"
17172,method,java/util/BitSet/flip/int," Sets the bit at the specified index to the complement of its\n current value.\n\n @param   bitIndex the index of the bit to flip.\n @exception IndexOutOfBoundsException if the specified index is negative.\n @since   1.4\n"
17174,method,java/util/BitSet/set/int," Sets the bit at the specified index to <code>true</code>.\n\n @param     bitIndex   a bit index.\n @exception IndexOutOfBoundsException if the specified index is negative.\n @since     JDK1.0\n"
17175,method,java/util/BitSet/set/int;boolean," Sets the bit at the specified index to the specified value.\n\n @param     bitIndex   a bit index.\n @param     value a boolean value to set.\n @exception IndexOutOfBoundsException if the specified index is negative.\n @since     1.4\n"
17178,method,java/util/BitSet/clear/int," Sets the bit specified by the index to <code>false</code>.\n\n @param     bitIndex   the index of the bit to be cleared.\n @exception IndexOutOfBoundsException if the specified index is negative.\n @since     JDK1.0\n"
17180,method,java/util/BitSet/clear/," Sets all of the bits in this BitSet to <code>false</code>.\n\n @since   1.4\n"
17181,method,java/util/BitSet/get/int," Returns the value of the bit with the specified index. The value\n is <code>true</code> if the bit with the index <code>bitIndex</code>\n is currently set in this <code>BitSet</code>; otherwise, the result\n is <code>false</code>.\n\n @param     bitIndex   the bit index.\n @return    the value of the bit with the specified index.\n @exception IndexOutOfBoundsException if the specified index is negative.\n"
17185,method,java/util/BitSet/length/," Returns the "logical size" of this <code>BitSet</code>: the index of\n the highest set bit in the <code>BitSet</code> plus one. Returns zero\n if the <code>BitSet</code> contains no set bits.\n\n @return  the logical size of this <code>BitSet</code>.\n @since   1.2\n"
17186,method,java/util/BitSet/isEmpty/," Returns true if this <code>BitSet</code> contains no bits that are set\n to <code>true</code>.\n\n @return    boolean indicating whether this <code>BitSet</code> is empty.\n @since     1.4\n"
17187,method,java/util/BitSet/intersects/BitSet," Returns true if the specified <code>BitSet</code> has any bits set to\n <code>true</code> that are also set to <code>true</code> in this\n <code>BitSet</code>.\n\n @param	set <code>BitSet</code> to intersect with\n @return  boolean indicating whether this <code>BitSet</code> intersects\n          the specified <code>BitSet</code>.\n @since   1.4\n"
17188,method,java/util/BitSet/cardinality/," Returns the number of bits set to <tt>true</tt> in this\n <code>BitSet</code>.\n\n @return  the number of bits set to <tt>true</tt> in this\n          <code>BitSet</code>.\n @since   1.4\n"
17192,method,java/util/BitSet/andNot/BitSet," Clears all of the bits in this <code>BitSet</code> whose corresponding\n bit is set in the specified <code>BitSet</code>.\n\n @param     set the <code>BitSet</code> with which to mask this\n            <code>BitSet</code>.\n @since     1.2\n"
17194,method,java/util/BitSet/size/," Returns the number of bits of space actually in use by this\n <code>BitSet</code> to represent bit values.\n The maximum element in the set is the size - 1st element.\n\n @return  the number of bits currently in this bit set.\n"
17198,method,java/util/BitSet/BitSet/," Creates a new bit set. All bits are initially <code>false</code>.\n"
17199,method,java/util/BitSet/BitSet/int," Creates a bit set whose initial size is large enough to explicitly\n represent bits with indices in the range <code>0</code> through\n <code>nbits-1</code>. All bits are initially <code>false</code>.\n\n @param     nbits   the initial size of the bit set.\n @exception NegativeArraySizeException if the specified initial size\n               is negative.\n"
17237,method,java/util/Arrays/equals/long[];long[]," Returns <tt>true</tt> if the two specified arrays of longs are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17238,method,java/util/Arrays/equals/int[];int[]," Returns <tt>true</tt> if the two specified arrays of ints are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17239,method,java/util/Arrays/equals/short[];short[]," Returns <tt>true</tt> if the two specified arrays of shorts are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17240,method,java/util/Arrays/equals/char[];char[]," Returns <tt>true</tt> if the two specified arrays of chars are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17241,method,java/util/Arrays/equals/byte[];byte[]," Returns <tt>true</tt> if the two specified arrays of bytes are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17242,method,java/util/Arrays/equals/boolean[];boolean[]," Returns <tt>true</tt> if the two specified arrays of booleans are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17243,method,java/util/Arrays/equals/double[];double[]," Returns <tt>true</tt> if the two specified arrays of doubles are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n Two doubles <tt>d1</tt> and <tt>d2</tt> are considered equal if:\n <pre>    <tt>new Double(d1).equals(new Double(d2))</tt></pre>\n (Unlike the <tt>==</tt> operator, this method considers\n <tt>NaN</tt> equals to itself, and 0.0d unequal to -0.0d.)\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n @see Double#equals(Object)\n"
17244,method,java/util/Arrays/equals/float[];float[]," Returns <tt>true</tt> if the two specified arrays of floats are\n <i>equal</i> to one another.  Two arrays are considered equal if both\n arrays contain the same number of elements, and all corresponding pairs\n of elements in the two arrays are equal.  In other words, two arrays\n are equal if they contain the same elements in the same order.  Also,\n two array references are considered equal if both are <tt>null</tt>.<p>\n\n Two floats <tt>f1</tt> and <tt>f2</tt> are considered equal if:\n <pre>    <tt>new Float(f1).equals(new Float(f2))</tt></pre>\n (Unlike the <tt>==</tt> operator, this method considers\n <tt>NaN</tt> equals to itself, and 0.0f unequal to -0.0f.)\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n @see Float#equals(Object)\n"
17245,method,java/util/Arrays/equals/Object[];Object[]," Returns <tt>true</tt> if the two specified arrays of Objects are\n <i>equal</i> to one another.  The two arrays are considered equal if\n both arrays contain the same number of elements, and all corresponding\n pairs of elements in the two arrays are equal.  Two objects <tt>e1</tt>\n and <tt>e2</tt> are considered <i>equal</i> if <tt>(e1==null ? e2==null\n : e1.equals(e2))</tt>.  In other words, the two arrays are equal if\n they contain the same elements in the same order.  Also, two array\n references are considered equal if both are <tt>null</tt>.<p>\n\n @param a one array to be tested for equality\n @param a2 the other array to be tested for equality\n @return <tt>true</tt> if the two arrays are equal\n"
17246,method,java/util/Arrays/fill/long[];long," Assigns the specified long value to each element of the specified array\n of longs.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17248,method,java/util/Arrays/fill/int[];int," Assigns the specified int value to each element of the specified array\n of ints.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17250,method,java/util/Arrays/fill/short[];short," Assigns the specified short value to each element of the specified array\n of shorts.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17252,method,java/util/Arrays/fill/char[];char," Assigns the specified char value to each element of the specified array\n of chars.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17254,method,java/util/Arrays/fill/byte[];byte," Assigns the specified byte value to each element of the specified array\n of bytes.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17256,method,java/util/Arrays/fill/boolean[];boolean," Assigns the specified boolean value to each element of the specified\n array of booleans.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17258,method,java/util/Arrays/fill/double[];double," Assigns the specified double value to each element of the specified\n array of doubles.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17260,method,java/util/Arrays/fill/float[];float," Assigns the specified float value to each element of the specified array\n of floats.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n"
17262,method,java/util/Arrays/fill/Object[];Object," Assigns the specified Object reference to each element of the specified\n array of Objects.\n\n @param a the array to be filled\n @param val the value to be stored in all elements of the array\n @throws ArrayStoreException if the specified value is not of a\n         runtime type that can be stored in the specified array\n"
17296,method,java/util/Arrays/toString/long[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(long)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17297,method,java/util/Arrays/toString/int[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(int)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt> is\n <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17298,method,java/util/Arrays/toString/short[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(short)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17299,method,java/util/Arrays/toString/char[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(char)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17300,method,java/util/Arrays/toString/byte[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements\n are separated by the characters <tt>", "</tt> (a comma followed\n by a space).  Elements are converted to strings as by\n <tt>String.valueOf(byte)</tt>.  Returns <tt>"null"</tt> if\n <tt>a</tt> is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17301,method,java/util/Arrays/toString/boolean[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(boolean)</tt>.  Returns <tt>"null"</tt> if\n <tt>a</tt> is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17302,method,java/util/Arrays/toString/float[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(float)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17303,method,java/util/Arrays/toString/double[]," Returns a string representation of the contents of the specified array.\n The string representation consists of a list of the array's elements,\n enclosed in square brackets (<tt>"[]"</tt>).  Adjacent elements are\n separated by the characters <tt>", "</tt> (a comma followed by a\n space).  Elements are converted to strings as by\n <tt>String.valueOf(double)</tt>.  Returns <tt>"null"</tt> if <tt>a</tt>\n is <tt>null</tt>.\n\n @param a the array whose string representation to return\n @return a string representation of <tt>a</tt>\n @since 1.5\n"
17307,method,java/util/ArrayList/trimToSize/," Trims the capacity of this <tt>ArrayList</tt> instance to be the\n list's current size.  An application can use this operation to minimize\n the storage of an <tt>ArrayList</tt> instance.\n"
17309,method,java/util/ArrayList/size/," Returns the number of elements in this list.\n\n @return the number of elements in this list\n"
17310,method,java/util/ArrayList/isEmpty/," Returns <tt>true</tt> if this list contains no elements.\n\n @return <tt>true</tt> if this list contains no elements\n"
17312,method,java/util/ArrayList/indexOf/Object," Returns the index of the first occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the lowest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n"
17313,method,java/util/ArrayList/lastIndexOf/Object," Returns the index of the last occurrence of the specified element\n in this list, or -1 if this list does not contain the element.\n More formally, returns the highest index <tt>i</tt> such that\n <tt>(o==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;o.equals(get(i)))</tt>,\n or -1 if there is no such index.\n"
17314,method,java/util/ArrayList/clone/," Returns a shallow copy of this <tt>ArrayList</tt> instance.  (The\n elements themselves are not copied.)\n\n @return a clone of this <tt>ArrayList</tt> instance\n"
17319,method,java/util/ArrayList/add/Object," Appends the specified element to the end of this list.\n\n @param e element to be appended to this list\n @return <tt>true</tt> (as specified by {@link Collection#add})\n"
17327,method,java/util/ArrayList/ArrayList/int," Constructs an empty list with the specified initial capacity.\n\n @param   initialCapacity   the initial capacity of the list\n @exception IllegalArgumentException if the specified initial capacity\n            is negative\n"
17328,method,java/util/ArrayList/ArrayList/," Constructs an empty list with an initial capacity of ten.\n"
17329,method,java/util/ArrayList/ArrayList/Collection," Constructs a list containing the elements of the specified\n collection, in the order they are returned by the collection's\n iterator.\n\n @param c the collection whose elements are to be placed into this list\n @throws NullPointerException if the specified collection is null\n"
17331,method,java/util/ArrayDeque/addFirst/Object," Inserts the specified element at the front of this deque.\n\n @param e the element to add\n @throws NullPointerException if the specified element is null\n"
17332,method,java/util/ArrayDeque/addLast/Object," Inserts the specified element at the end of this deque.\n\n <p>This method is equivalent to {@link #add}.\n\n @param e the element to add\n @throws NullPointerException if the specified element is null\n"
17333,method,java/util/ArrayDeque/offerFirst/Object," Inserts the specified element at the front of this deque.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Deque#offerFirst})\n @throws NullPointerException if the specified element is null\n"
17334,method,java/util/ArrayDeque/offerLast/Object," Inserts the specified element at the end of this deque.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Deque#offerLast})\n @throws NullPointerException if the specified element is null\n"
17337,method,java/util/ArrayDeque/pollFirst/,""
17338,method,java/util/ArrayDeque/pollLast/,""
17341,method,java/util/ArrayDeque/peekFirst/,""
17342,method,java/util/ArrayDeque/peekLast/,""
17345,method,java/util/ArrayDeque/add/Object," Inserts the specified element at the end of this deque.\n\n <p>This method is equivalent to {@link #addLast}.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Collection#add})\n @throws NullPointerException if the specified element is null\n"
17346,method,java/util/ArrayDeque/offer/Object," Inserts the specified element at the end of this deque.\n\n <p>This method is equivalent to {@link #offerLast}.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Queue#offer})\n @throws NullPointerException if the specified element is null\n"
17348,method,java/util/ArrayDeque/poll/," Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque), or returns\n <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #pollFirst}.\n\n @return the head of the queue represented by this deque, or\n         <tt>null</tt> if this deque is empty\n"
17350,method,java/util/ArrayDeque/peek/," Retrieves, but does not remove, the head of the queue represented by\n this deque, or returns <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #peekFirst}.\n\n @return the head of the queue represented by this deque, or\n         <tt>null</tt> if this deque is empty\n"
17351,method,java/util/ArrayDeque/push/Object," Pushes an element onto the stack represented by this deque.  In other\n words, inserts the element at the front of this deque.\n\n <p>This method is equivalent to {@link #addFirst}.\n\n @param e the element to push\n @throws NullPointerException if the specified element is null\n"
17353,method,java/util/ArrayDeque/size/," Returns the number of elements in this deque.\n\n @return the number of elements in this deque\n"
17354,method,java/util/ArrayDeque/isEmpty/," Returns <tt>true</tt> if this deque contains no elements.\n\n @return <tt>true</tt> if this deque contains no elements\n"
17356,method,java/util/ArrayDeque/descendingIterator/,""
17362,method,java/util/ArrayDeque/clone/," Returns a copy of this deque.\n\n @return a copy of this deque\n"
17363,method,java/util/ArrayDeque/ArrayDeque/," Constructs an empty array deque with an initial capacity\n sufficient to hold 16 elements.\n"
17364,method,java/util/ArrayDeque/ArrayDeque/int," Constructs an empty array deque with an initial capacity\n sufficient to hold the specified number of elements.\n\n @param numElements  lower bound on initial capacity of the deque\n"
17365,method,java/util/ArrayDeque/ArrayDeque/Collection," Constructs a deque containing the elements of the specified\n collection, in the order they are returned by the collection's\n iterator.  (The first element returned by the collection's\n iterator becomes the first element, or <i>front</i> of the\n deque.)\n\n @param c the collection whose elements are to be placed into the deque\n @throws NullPointerException if the specified collection is null\n"
17367,method,java/util/AbstractSet/equals/Object," Compares the specified object with this set for equality.  Returns\n <tt>true</tt> if the given object is also a set, the two sets have\n the same size, and every member of the given set is contained in\n this set.  This ensures that the <tt>equals</tt> method works\n properly across different implementations of the <tt>Set</tt>\n interface.<p>\n\n This implementation first checks if the specified object is this\n set; if so it returns <tt>true</tt>.  Then, it checks if the\n specified object is a set whose size is identical to the size of\n this set; if not, it returns false.  If so, it returns\n <tt>containsAll((Collection) o)</tt>.\n\n @param o object to be compared for equality with this set\n @return <tt>true</tt> if the specified object is equal to this set\n"
17377,method,java/util/AbstractSequentialList/iterator/," Returns an iterator over the elements in this list (in proper\n sequence).<p>\n\n This implementation merely returns a list iterator over the list.\n\n @return an iterator over the elements in this list (in proper sequence)\n"
17399,method,java/util/AbstractMap/entrySet/,""
17400,method,java/util/AbstractMap/equals/Object," Compares the specified object with this map for equality.  Returns\n <tt>true</tt> if the given object is also a map and the two maps\n represent the same mappings.  More formally, two maps <tt>m1</tt> and\n <tt>m2</tt> represent the same mappings if\n <tt>m1.entrySet().equals(m2.entrySet())</tt>.  This ensures that the\n <tt>equals</tt> method works properly across different implementations\n of the <tt>Map</tt> interface.\n\n <p>This implementation first checks if the specified object is this map;\n if so it returns <tt>true</tt>.  Then, it checks if the specified\n object is a map whose size is identical to the size of this map; if\n not, it returns <tt>false</tt>.  If so, it iterates over this map's\n <tt>entrySet</tt> collection, and checks that the specified map\n contains each mapping that this map contains.  If the specified map\n fails to contain such a mapping, <tt>false</tt> is returned.  If the\n iteration completes, <tt>true</tt> is returned.\n\n @param o object to be compared for equality with this map\n @return <tt>true</tt> if the specified object is equal to this map\n"
17402,method,java/util/AbstractMap/toString/," Returns a string representation of this map.  The string representation\n consists of a list of key-value mappings in the order returned by the\n map's <tt>entrySet</tt> view's iterator, enclosed in braces\n (<tt>"{}"</tt>).  Adjacent mappings are separated by the characters\n <tt>", "</tt> (comma and space).  Each key-value mapping is rendered as\n the key followed by an equals sign (<tt>"="</tt>) followed by the\n associated value.  Keys and values are converted to strings as by\n {@link String#valueOf(Object)}.\n\n @return a string representation of this map\n"
17403,method,java/util/AbstractMap/clone/," Returns a shallow copy of this <tt>AbstractMap</tt> instance: the keys\n and values themselves are not cloned.\n\n @return a shallow copy of this map\n"
17406,method,java/util/AbstractMap/SimpleEntry/getKey/," Returns the key corresponding to this entry.\n\n @return the key corresponding to this entry\n"
17407,method,java/util/AbstractMap/SimpleEntry/getValue/," Returns the value corresponding to this entry.\n\n @return the value corresponding to this entry\n"
17408,method,java/util/AbstractMap/SimpleEntry/setValue/Object," Replaces the value corresponding to this entry with the specified\n value.\n\n @param value new value to be stored in this entry\n @return the old value corresponding to the entry\n"
17409,method,java/util/AbstractMap/SimpleEntry/equals/Object," Compares the specified object with this entry for equality.\n Returns {@code true} if the given object is also a map entry and\n the two entries represent the same mapping.	More formally, two\n entries {@code e1} and {@code e2} represent the same mapping\n if<pre>\n   (e1.getKey()==null ?\n    e2.getKey()==null :\n    e1.getKey().equals(e2.getKey()))\n   &amp;&amp;\n   (e1.getValue()==null ?\n    e2.getValue()==null :\n    e1.getValue().equals(e2.getValue()))</pre>\n This ensures that the {@code equals} method works properly across\n different implementations of the {@code Map.Entry} interface.\n\n @param o object to be compared for equality with this map entry\n @return {@code true} if the specified object is equal to this map\n	   entry\n @see    #hashCode\n"
17411,method,java/util/AbstractMap/SimpleEntry/toString/," Returns a String representation of this map entry.  This\n implementation returns the string representation of this\n entry's key followed by the equals character ("<tt>=</tt>")\n followed by the string representation of this entry's value.\n\n @return a String representation of this map entry\n"
17412,method,java/util/AbstractMap/SimpleEntry/AbstractMap/SimpleEntry/Object;Object," Creates an entry representing a mapping from the specified\n key to the specified value.\n\n @param key the key represented by this entry\n @param value the value represented by this entry\n"
17413,method,java/util/AbstractMap/SimpleEntry/AbstractMap/SimpleEntry/Entry," Creates an entry representing the same mapping as the\n specified entry.\n\n @param entry the entry to copy\n"
17415,method,java/util/AbstractMap/SimpleImmutableEntry/getKey/," Returns the key corresponding to this entry.\n\n @return the key corresponding to this entry\n"
17416,method,java/util/AbstractMap/SimpleImmutableEntry/getValue/," Returns the value corresponding to this entry.\n\n @return the value corresponding to this entry\n"
17417,method,java/util/AbstractMap/SimpleImmutableEntry/setValue/Object," Replaces the value corresponding to this entry with the specified\n value (optional operation).  This implementation simply throws\n <tt>UnsupportedOperationException</tt>, as this class implements\n an <i>immutable</i> map entry.\n\n @param value new value to be stored in this entry\n @return (Does not return)\n @throws UnsupportedOperationException always\n"
17418,method,java/util/AbstractMap/SimpleImmutableEntry/equals/Object," Compares the specified object with this entry for equality.\n Returns {@code true} if the given object is also a map entry and\n the two entries represent the same mapping.	More formally, two\n entries {@code e1} and {@code e2} represent the same mapping\n if<pre>\n   (e1.getKey()==null ?\n    e2.getKey()==null :\n    e1.getKey().equals(e2.getKey()))\n   &amp;&amp;\n   (e1.getValue()==null ?\n    e2.getValue()==null :\n    e1.getValue().equals(e2.getValue()))</pre>\n This ensures that the {@code equals} method works properly across\n different implementations of the {@code Map.Entry} interface.\n\n @param o object to be compared for equality with this map entry\n @return {@code true} if the specified object is equal to this map\n	   entry\n @see    #hashCode\n"
17420,method,java/util/AbstractMap/SimpleImmutableEntry/toString/," Returns a String representation of this map entry.  This\n implementation returns the string representation of this\n entry's key followed by the equals character ("<tt>=</tt>")\n followed by the string representation of this entry's value.\n\n @return a String representation of this map entry\n"
17421,method,java/util/AbstractMap/SimpleImmutableEntry/AbstractMap/SimpleImmutableEntry/Object;Object," Creates an entry representing a mapping from the specified\n key to the specified value.\n\n @param key the key represented by this entry\n @param value the value represented by this entry\n"
17422,method,java/util/AbstractMap/SimpleImmutableEntry/AbstractMap/SimpleImmutableEntry/Entry," Creates an entry representing the same mapping as the\n specified entry.\n\n @param entry the entry to copy\n"
17438,method,java/util/AbstractList/hashCode/," Returns the hash code value for this list.\n\n <p>This implementation uses exactly the code that is used to define the\n list hash function in the documentation for the {@link List#hashCode}\n method.\n\n @return the hash code value for this list\n"
17443,method,java/util/AbstractCollection/iterator/," Returns an iterator over the elements contained in this collection.\n\n @return an iterator over the elements contained in this collection\n"
17444,method,java/util/AbstractCollection/size/,""
17456,method,java/util/AbstractCollection/toString/," Returns a string representation of this collection.  The string\n representation consists of a list of the collection's elements in the\n order they are returned by its iterator, enclosed in square brackets\n (<tt>"[]"</tt>).  Adjacent elements are separated by the characters\n <tt>", "</tt> (comma and space).  Elements are converted to strings as\n by {@link String#valueOf(Object)}.\n\n @return a string representation of this collection\n"
17459,method,java/util/logging/XMLFormatter/format/LogRecord," Format the given message to XML.\n @param record the log record to be formatted.\n @return a formatted log record\n"
17460,method,java/util/logging/XMLFormatter/getHead/Handler," Return the header string for a set of XML formatted records.\n \n @param   h  The target handler (can be null)\n @return  a valid XML string\n"
17461,method,java/util/logging/XMLFormatter/getTail/Handler," Return the tail string for a set of XML formatted records.\n \n @param   h  The target handler (can be null)\n @return  a valid XML string\n"
17462,method,java/util/logging/XMLFormatter/XMLFormatter/,""
17463,class,java/util/logging/StreamHandler," Stream based logging <tt>Handler</tt>.\n <p>\n This is primarily intended as a base class or support class to\n be used in implementing other logging <tt>Handlers</tt>.\n <p>\n <tt>LogRecords</tt> are published to a given <tt>java.io.OutputStream</tt>.\n <p>\n <b>Configuration:</b>\n By default each <tt>StreamHandler</tt> is initialized using the following\n <tt>LogManager</tt> configuration properties.  If properties are not defined\n (or have invalid values) then the specified default values are used.\n <ul>\n <li>   java.util.logging.StreamHandler.level\n	  specifies the default level for the <tt>Handler</tt>\n	  (defaults to <tt>Level.INFO</tt>).\n <li>   java.util.logging.StreamHandler.filter\n	  specifies the name of a <tt>Filter</tt> class to use\n	   (defaults to no <tt>Filter</tt>).\n <li>   java.util.logging.StreamHandler.formatter \n	  specifies the name of a <tt>Formatter</tt> class to use\n  	  (defaults to <tt>java.util.logging.SimpleFormatter</tt>).\n <li>   java.util.logging.StreamHandler.encoding \n	  the name of the character set encoding to use (defaults to\n	  the default platform encoding).\n </ul>\n\n @version 1.20, 03/23/10\n @since 1.4\n"
17467,method,java/util/logging/StreamHandler/isLoggable/LogRecord," Check if this <tt>Handler</tt> would actually log a given <tt>LogRecord</tt>.\n <p>\n This method checks if the <tt>LogRecord</tt> has an appropriate level and \n whether it satisfies any <tt>Filter</tt>.  It will also return false if\n no output stream has been assigned yet or the LogRecord is Null.\n <p>\n @param record  a <tt>LogRecord</tt>\n @return true if the <tt>LogRecord</tt> would be logged.\n\n"
17468,method,java/util/logging/StreamHandler/flush/," Flush any buffered messages.\n"
17470,method,java/util/logging/StreamHandler/StreamHandler/," Create a <tt>StreamHandler</tt>, with no current output stream.\n"
17471,method,java/util/logging/StreamHandler/StreamHandler/OutputStream;Formatter," Create a <tt>StreamHandler</tt> with a given <tt>Formatter</tt>\n and output stream.\n <p>\n @param out         the target output stream\n @param formatter   Formatter to be used to format output\n"
17474,method,java/util/logging/SocketHandler/publish/LogRecord," Format and publish a <tt>LogRecord</tt>.\n\n @param  record  description of the log event. A null record is\n                 silently ignored and is not published\n"
17476,method,java/util/logging/SocketHandler/SocketHandler/String;int," Construct a <tt>SocketHandler</tt> using a specified host and port.\n\n The <tt>SocketHandler</tt> is configured based on <tt>LogManager</tt> \n properties (or their default values) except that the given target host\n and port arguments are used. If the host argument is empty, but not\n null String then the localhost is used.\n\n @param host target host.\n @param port target port.\n\n @throws IllegalArgumentException if the host or port are invalid.\n @throws IOException if we are unable to connect to the target\n	       host and port.\n"
17477,class,java/util/logging/SimpleFormatter," Print a brief summary of the LogRecord in a human readable\n format.  The summary will typically be 1 or 2 lines.\n\n @version 1.16, 03/23/10\n @since 1.4\n"
17478,method,java/util/logging/SimpleFormatter/format/LogRecord," Format the given LogRecord.\n @param record the log record to be formatted.\n @return a formatted log record\n"
17479,method,java/util/logging/SimpleFormatter/SimpleFormatter/,""
17482,method,java/util/logging/MemoryHandler/push/," Push any buffered output to the target <tt>Handler</tt>.\n <p>\n The buffer is then cleared.\n"
17486,method,java/util/logging/MemoryHandler/getPushLevel/,"\n Get the <tt>pushLevel</tt>.\n\n @return the value of the <tt>pushLevel</tt>\n"
17487,method,java/util/logging/MemoryHandler/isLoggable/LogRecord," Check if this <tt>Handler</tt> would actually log a given \n <tt>LogRecord</tt> into its internal buffer.\n <p>\n This method checks if the <tt>LogRecord</tt> has an appropriate level and \n whether it satisfies any <tt>Filter</tt>.  However it does <b>not</b>\n check whether the <tt>LogRecord</tt> would result in a "push" of the\n buffer contents. It will return false if the <tt>LogRecord</tt> is Null.\n <p>\n @param record  a <tt>LogRecord</tt>\n @return true if the <tt>LogRecord</tt> would be logged.\n\n"
17488,method,java/util/logging/MemoryHandler/MemoryHandler/," Create a <tt>MemoryHandler</tt> and configure it based on\n <tt>LogManager</tt> configuration properties.\n"
17496,method,java/util/logging/LoggingMXBean/getParentLoggerName/String," Returns the name of the parent for the specified logger.\n If the specified logger does not exist, <tt>null</tt> is returned. \n If the specified logger is the root <tt>Logger</tt> in the namespace,\n the result will be an empty string.\n\n @param loggerName The name of a <tt>Logger</tt>.\n\n @return the name of the nearest existing parent logger;\n         an empty string if the specified logger is the root logger.\n         If the specified logger does not exist, <tt>null</tt> \n         is returned. \n"
17507,method,java/util/logging/Logger/log/Level;String," Log a message, with no arguments.\n <p>\n If the logger is currently enabled for the given message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param	level	One of the message level identifiers, e.g. SEVERE\n @param   msg	The string message (or a key in the message catalog)\n"
17508,method,java/util/logging/Logger/log/Level;String;Object," Log a message, with one object parameter.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   msg	The string message (or a key in the message catalog)\n @param   param1	parameter to the message\n"
17509,method,java/util/logging/Logger/log/Level;String;Object[]," Log a message, with an array of object arguments.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   msg	The string message (or a key in the message catalog)\n @param   params	array of parameters to the message\n"
17511,method,java/util/logging/Logger/logp/Level;String;String;String," Log a message, specifying source class and method,\n with no arguments.\n <p>\n If the logger is currently enabled for the given message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param	level	One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   msg	The string message (or a key in the message catalog)\n"
17512,method,java/util/logging/Logger/logp/Level;String;String;String;Object," Log a message, specifying source class and method,\n with a single object parameter to the log message.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   msg	 The string message (or a key in the message catalog)\n @param   param1    Parameter to the log message.\n"
17513,method,java/util/logging/Logger/logp/Level;String;String;String;Object[]," Log a message, specifying source class and method,\n with an array of object arguments.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   msg	The string message (or a key in the message catalog)\n @param   params	Array of parameters to the message\n"
17515,method,java/util/logging/Logger/logrb/Level;String;String;String;String," Log a message, specifying source class, method, and resource bundle name\n with no arguments.\n <p>\n If the logger is currently enabled for the given message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n The msg string is localized using the named resource bundle.  If the\n resource bundle name is null, or an empty String or invalid\n then the msg string is not localized.\n <p>\n @param	level	One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   bundleName     name of resource bundle to localize msg, \n                         can be null\n @param   msg	The string message (or a key in the message catalog)\n"
17516,method,java/util/logging/Logger/logrb/Level;String;String;String;String;Object," Log a message, specifying source class, method, and resource bundle name,\n with a single object parameter to the log message.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n The msg string is localized using the named resource bundle.  If the\n resource bundle name is null, or an empty String or invalid\n then the msg string is not localized.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   bundleName     name of resource bundle to localize msg,\n                         can be null\n @param   msg	 The string message (or a key in the message catalog)\n @param   param1    Parameter to the log message.\n"
17517,method,java/util/logging/Logger/logrb/Level;String;String;String;String;Object[]," Log a message, specifying source class, method, and resource bundle name,\n with an array of object arguments.\n <p>\n If the logger is currently enabled for the given message \n level then a corresponding LogRecord is created and forwarded \n to all the registered output Handler objects.\n <p>\n The msg string is localized using the named resource bundle.  If the\n resource bundle name is null, or an empty String or invalid\n then the msg string is not localized.\n <p>\n @param	level   One of the message level identifiers, e.g. SEVERE\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that issued the logging request\n @param   bundleName     name of resource bundle to localize msg,\n                         can be null.\n @param   msg	The string message (or a key in the message catalog)\n @param   params	Array of parameters to the message\n"
17519,method,java/util/logging/Logger/entering/String;String," Log a method entry.\n <p>\n This is a convenience method that can be used to log entry\n to a method.  A LogRecord with message "ENTRY", log level\n FINER, and the given sourceMethod and sourceClass is logged.\n <p>\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that is being entered\n"
17520,method,java/util/logging/Logger/entering/String;String;Object," Log a method entry, with one parameter.\n <p>\n This is a convenience method that can be used to log entry\n to a method.  A LogRecord with message "ENTRY {0}", log level\n FINER, and the given sourceMethod, sourceClass, and parameter\n is logged.\n <p>\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that is being entered\n @param   param1	       parameter to the method being entered\n"
17521,method,java/util/logging/Logger/entering/String;String;Object[]," Log a method entry, with an array of parameters.\n <p>\n This is a convenience method that can be used to log entry\n to a method.  A LogRecord with message "ENTRY" (followed by a \n format {N} indicator for each entry in the parameter array), \n log level FINER, and the given sourceMethod, sourceClass, and \n parameters is logged.\n <p>\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of method that is being entered\n @param   params	       array of parameters to the method being entered\n"
17522,method,java/util/logging/Logger/exiting/String;String," Log a method return.\n <p>\n This is a convenience method that can be used to log returning\n from a method.  A LogRecord with message "RETURN", log level\n FINER, and the given sourceMethod and sourceClass is logged.\n <p>\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of the method \n"
17523,method,java/util/logging/Logger/exiting/String;String;Object," Log a method return, with result object.\n <p>\n This is a convenience method that can be used to log returning\n from a method.  A LogRecord with message "RETURN {0}", log level\n FINER, and the gives sourceMethod, sourceClass, and result\n object is logged.\n <p>\n @param   sourceClass    name of class that issued the logging request\n @param   sourceMethod   name of the method \n @param   result  Object that is being returned\n"
17525,method,java/util/logging/Logger/severe/String," Log a SEVERE message.\n <p>\n If the logger is currently enabled for the SEVERE message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17527,method,java/util/logging/Logger/info/String," Log an INFO message.\n <p>\n If the logger is currently enabled for the INFO message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17528,method,java/util/logging/Logger/config/String," Log a CONFIG message.\n <p>\n If the logger is currently enabled for the CONFIG message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17529,method,java/util/logging/Logger/fine/String," Log a FINE message.\n <p>\n If the logger is currently enabled for the FINE message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17530,method,java/util/logging/Logger/finer/String," Log a FINER message.\n <p>\n If the logger is currently enabled for the FINER message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17531,method,java/util/logging/Logger/finest/String," Log a FINEST message.\n <p>\n If the logger is currently enabled for the FINEST message \n level then the given message is forwarded to all the\n registered output Handler objects.\n <p>\n @param   msg	The string message (or a key in the message catalog)\n"
17535,method,java/util/logging/Logger/getName/," Get the name for this logger.\n @return logger name.  Will be null for anonymous Loggers.\n"
17538,method,java/util/logging/Logger/getHandlers/," Get the Handlers associated with this logger.\n <p>\n @return  an array of all registered Handlers\n"
17540,method,java/util/logging/Logger/getUseParentHandlers/," Discover whether or not this logger is sending its output\n to its parent logger.\n\n @return  true if output is to be sent to the logger's parent\n"
17553,method,java/util/logging/LogRecord/getLevel/," Get the logging message level, for example Level.SEVERE.\n @return the logging message level\n"
17554,method,java/util/logging/LogRecord/setLevel/Level," Set the logging message level, for example Level.SEVERE.\n @param level the logging message level\n"
17555,method,java/util/logging/LogRecord/getSequenceNumber/,"\n Get the sequence number.\n <p>\n Sequence numbers are normally assigned in the LogRecord\n constructor, which assigns unique sequence numbers to\n each new LogRecord in increasing order.\n @return the sequence number\n"
17567,method,java/util/logging/LogRecord/getMillis/," Get event time in milliseconds since 1970.\n\n @return event time in millis since 1970\n"
17568,method,java/util/logging/LogRecord/setMillis/long," Set event time.\n\n @param millis event time in millis since 1970\n"
17573,method,java/util/logging/LogManager/getLogManager/," Return the global LogManager object.\n"
17582,method,java/util/logging/LogManager/getProperty/String," Get the value of a logging property.\n The method returns null if the property is not found.\n @param name	property name\n @return		property value\n"
17584,method,java/util/logging/LogManager/getLoggingMXBean/," Returns <tt>LoggingMXBean</tt> for managing loggers. \n The <tt>LoggingMXBean</tt> can also obtained from the \n {@link java.lang.management.ManagementFactory#getPlatformMBeanServer\n platform <tt>MBeanServer</tt>} method.\n\n @return a {@link LoggingMXBean} object.\n\n @see java.lang.management.ManagementFactory\n @since 1.5\n"
17586,field,java/util/logging/LogManager/LOGGING_MXBEAN_NAME," String representation of the\n {@link javax.management.ObjectName} for {@link LoggingMXBean}.\n @since 1.5\n"
17588,method,java/util/logging/Level/getResourceBundleName/," Return the level's localization resource bundle name, or\n null if no localization bundle is defined.\n\n @return localization resource bundle name\n"
17589,method,java/util/logging/Level/getName/," Return the non-localized string name of the Level.\n\n @return non-localized name\n"
17590,method,java/util/logging/Level/getLocalizedName/," Return the localized string name of the Level, for\n the current default locale. \n <p>\n If no localization information is available, the\n non-localized name is returned.\n\n @return localized name\n"
17591,method,java/util/logging/Level/toString/," @return the non-localized name of the Level, for example "INFO".\n"
17595,method,java/util/logging/Level/hashCode/," Generate a hashcode.\n @return a hashcode based on the level value\n"
17597,method,java/util/logging/Level/Level/String;int;String," Create a named Level with a given integer value and a\n given localization resource name.\n <p>\n @param name  the name of the Level, for example "SEVERE".\n @param value an integer value for the level.\n @param resourceBundleName name of a resource bundle to use in\n    localizing the given name. If the resourceBundleName is null \n    or an empty string, it is ignored. \n @throws NullPointerException if the name is null\n"
17598,field,java/util/logging/Level/OFF," OFF is a special level that can be used to turn off logging.\n This level is initialized to <CODE>Integer.MAX_VALUE</CODE>.\n"
17605,field,java/util/logging/Level/FINEST," FINEST indicates a highly detailed tracing message.\n This level is initialized to <CODE>300</CODE>. \n"
17607,class,java/util/logging/Handler," A <tt>Handler</tt> object takes log messages from a <tt>Logger</tt> and\n exports them.  It might for example, write them to a console\n or write them to a file, or send them to a network logging service,\n or forward them to an OS log, or whatever.\n <p>\n A <tt>Handler</tt> can be disabled by doing a <tt>setLevel(Level.OFF)</tt>\n and can  be re-enabled by doing a <tt>setLevel</tt> with an appropriate level.\n <p>\n <tt>Handler</tt> classes typically use <tt>LogManager</tt> properties to set\n default values for the <tt>Handler</tt>'s <tt>Filter</tt>, <tt>Formatter</tt>,\n and <tt>Level</tt>.  See the specific documentation for each concrete\n <tt>Handler</tt> class.\n\n\n @version 1.22, 03/23/10\n @since 1.4\n"
17609,method,java/util/logging/Handler/flush/," Flush any buffered output.\n"
17621,method,java/util/logging/Handler/getLevel/," Get the log level specifying which messages will be\n logged by this <tt>Handler</tt>.  Message levels lower\n than this level will be discarded.\n @return	the level of messages being logged.\n"
17624,class,java/util/logging/Formatter," A Formatter provides support for formatting LogRecords.\n <p>\n Typically each logging Handler will have a Formatter associated\n with it.  The Formatter takes a LogRecord and converts it to\n a string.\n <p>\n Some formatters (such as the XMLFormatter) need to wrap head\n and tail strings around a set of formatted records. The getHeader\n and getTail methods can be used to obtain these strings.\n\n @version 1.18, 03/23/10\n @since 1.4\n"
17625,method,java/util/logging/Formatter/format/LogRecord," Format the given log record and return the formatted string. \n <p>\n The resulting formatted String will normally include a\n localized and formated version of the LogRecord's message field.\n The Formatter.formatMessage convenience method can (optionally)\n be used to localize and format the message field.\n\n @param record the log record to be formatted.\n @return the formatted log record\n"
17629,method,java/util/logging/Formatter/Formatter/," Construct a new formatter.\n"
17633,method,java/util/logging/FileHandler/publish/LogRecord," Format and publish a <tt>LogRecord</tt>.\n\n @param  record  description of the log event. A null record is\n                 silently ignored and is not published\n"
17642,method,java/util/logging/ErrorManager/ErrorManager/,""
17643,field,java/util/logging/ErrorManager/GENERIC_FAILURE," GENERIC_FAILURE is used for failure that don't fit\n into one of the other categories.\n"
17644,field,java/util/logging/ErrorManager/WRITE_FAILURE," WRITE_FAILURE is used when a write to an output stream fails.\n"
17645,field,java/util/logging/ErrorManager/FLUSH_FAILURE," FLUSH_FAILURE is used when a flush to an output stream fails.\n"
17646,field,java/util/logging/ErrorManager/CLOSE_FAILURE," CLOSE_FAILURE is used when a close of an output stream fails.\n"
17647,field,java/util/logging/ErrorManager/OPEN_FAILURE," OPEN_FAILURE is used when an open of an output stream fails.\n"
17648,field,java/util/logging/ErrorManager/FORMAT_FAILURE," FORMAT_FAILURE is used when formatting fails for any reason.\n"
17649,class,java/util/logging/ConsoleHandler," This <tt>Handler</tt> publishes log records to <tt>System.err</tt>.\n By default the <tt>SimpleFormatter</tt> is used to generate brief summaries.\n <p>\n <b>Configuration:</b>\n By default each <tt>ConsoleHandler</tt> is initialized using the following\n <tt>LogManager</tt> configuration properties.  If properties are not defined\n (or have invalid values) then the specified default values are used.\n <ul>\n <li>   java.util.logging.ConsoleHandler.level \n	  specifies the default level for the <tt>Handler</tt>\n	  (defaults to <tt>Level.INFO</tt>).\n <li>   java.util.logging.ConsoleHandler.filter\n	  specifies the name of a <tt>Filter</tt> class to use\n	  (defaults to no <tt>Filter</tt>).\n <li>   java.util.logging.ConsoleHandler.formatter\n 	  specifies the name of a <tt>Formatter</tt> class to use\n  	  (defaults to <tt>java.util.logging.SimpleFormatter</tt>).\n <li>   java.util.logging.ConsoleHandler.encoding \n	  the name of the character set encoding to use (defaults to\n	  the default platform encoding).\n </ul>\n <p>\n @version 1.14, 03/23/10\n @since 1.4\n"
17650,method,java/util/logging/ConsoleHandler/publish/LogRecord," Publish a <tt>LogRecord</tt>.\n <p>\n The logging request was made initially to a <tt>Logger</tt> object,\n which initialized the <tt>LogRecord</tt> and forwarded it here.\n <p>\n @param  record  description of the log event. A null record is\n                 silently ignored and is not published\n"
17652,method,java/util/logging/ConsoleHandler/ConsoleHandler/," Create a <tt>ConsoleHandler</tt> for <tt>System.err</tt>.\n <p>\n The <tt>ConsoleHandler</tt> is configured based on\n <tt>LogManager</tt> properties (or their default values).\n \n"
17660,method,java/util/prefs/Preferences/systemRoot/," Returns the root preference node for the system.\n\n @return the root preference node for the system.\n @throws SecurityException If a security manager is present and\n         it denies <tt>RuntimePermission("preferences")</tt>.\n @see    RuntimePermission\n"
17661,method,java/util/prefs/Preferences/put/String;String," Associates the specified value with the specified key in this\n preference node.\n\n @param key key with which the specified value is to be associated.\n @param value value to be associated with the specified key.\n @throws NullPointerException if key or value is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n       <tt>MAX_KEY_LENGTH</tt> or if <tt>value.length</tt> exceeds\n       <tt>MAX_VALUE_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n"
17665,method,java/util/prefs/Preferences/putInt/String;int," Associates a string representing the specified int value with the\n specified key in this preference node.  The associated string is the\n one that would be returned if the int value were passed to\n {@link Integer#toString(int)}.  This method is intended for use in\n conjunction with {@link #getInt}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #getInt(String,int)\n"
17666,method,java/util/prefs/Preferences/getInt/String;int," Returns the int value represented by the string associated with the\n specified key in this preference node.  The string is converted to\n an integer as by {@link Integer#parseInt(String)}.  Returns the\n specified default if there is no value associated with the key,\n the backing store is inaccessible, or if\n <tt>Integer.parseInt(String)</tt> would throw a {@link\n NumberFormatException} if the associated value were passed.  This\n method is intended for use in conjunction with {@link #putInt}.\n\n <p>If the implementation supports <i>stored defaults</i> and such a\n default exists, is accessible, and could be converted to an int\n with <tt>Integer.parseInt</tt>, this int is returned in preference to\n the specified default.\n\n @param key key whose associated value is to be returned as an int.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as an int,\n        or the backing store is inaccessible.\n @return the int value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         an int.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @see #putInt(String,int)\n @see #get(String,String)\n"
17667,method,java/util/prefs/Preferences/putLong/String;long," Associates a string representing the specified long value with the\n specified key in this preference node.  The associated string is the\n one that would be returned if the long value were passed to\n {@link Long#toString(long)}.  This method is intended for use in\n conjunction with {@link #getLong}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #getLong(String,long)\n"
17668,method,java/util/prefs/Preferences/getLong/String;long," Returns the long value represented by the string associated with the\n specified key in this preference node.  The string is converted to\n a long as by {@link Long#parseLong(String)}.  Returns the\n specified default if there is no value associated with the key,\n the backing store is inaccessible, or if\n <tt>Long.parseLong(String)</tt> would throw a {@link\n NumberFormatException} if the associated value were passed.  This\n method is intended for use in conjunction with {@link #putLong}.\n\n <p>If the implementation supports <i>stored defaults</i> and such a\n default exists, is accessible, and could be converted to a long\n with <tt>Long.parseLong</tt>, this long is returned in preference to\n the specified default.\n\n @param key key whose associated value is to be returned as a long.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a long,\n        or the backing store is inaccessible.\n @return the long value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a long.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @see #putLong(String,long)\n @see #get(String,String)\n"
17669,method,java/util/prefs/Preferences/putBoolean/String;boolean," Associates a string representing the specified boolean value with the\n specified key in this preference node.  The associated string is\n <tt>"true"</tt> if the value is true, and <tt>"false"</tt> if it is\n false.  This method is intended for use in conjunction with\n {@link #getBoolean}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #getBoolean(String,boolean)\n @see #get(String,String)\n"
17670,method,java/util/prefs/Preferences/getBoolean/String;boolean," Returns the boolean value represented by the string associated with the\n specified key in this preference node.  Valid strings\n are <tt>"true"</tt>, which represents true, and <tt>"false"</tt>, which\n represents false.  Case is ignored, so, for example, <tt>"TRUE"</tt>\n and <tt>"False"</tt> are also valid.  This method is intended for use in\n conjunction with {@link #putBoolean}.\n\n <p>Returns the specified default if there is no value\n associated with the key, the backing store is inaccessible, or if the\n associated value is something other than <tt>"true"</tt> or\n <tt>"false"</tt>, ignoring case.\n\n <p>If the implementation supports <i>stored defaults</i> and such a\n default exists and is accessible, it is used in preference to the\n specified default, unless the stored default is something other than\n <tt>"true"</tt> or <tt>"false"</tt>, ignoring case, in which case the\n specified default is used.\n\n @param key key whose associated value is to be returned as a boolean.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a boolean,\n        or the backing store is inaccessible.\n @return the boolean value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a boolean.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @see #get(String,String)\n @see #putBoolean(String,boolean)\n"
17671,method,java/util/prefs/Preferences/putFloat/String;float," Associates a string representing the specified float value with the\n specified key in this preference node.  The associated string is the\n one that would be returned if the float value were passed to\n {@link Float#toString(float)}.  This method is intended for use in\n conjunction with {@link #getFloat}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #getFloat(String,float)\n"
17672,method,java/util/prefs/Preferences/getFloat/String;float," Returns the float value represented by the string associated with the\n specified key in this preference node.  The string is converted to an\n integer as by {@link Float#parseFloat(String)}.  Returns the specified\n default if there is no value associated with the key, the backing store\n is inaccessible, or if <tt>Float.parseFloat(String)</tt> would throw a\n {@link NumberFormatException} if the associated value were passed.\n This method is intended for use in conjunction with {@link #putFloat}.\n\n <p>If the implementation supports <i>stored defaults</i> and such a\n default exists, is accessible, and could be converted to a float\n with <tt>Float.parseFloat</tt>, this float is returned in preference to\n the specified default.\n\n @param key key whose associated value is to be returned as a float.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a float,\n        or the backing store is inaccessible.\n @return the float value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a float.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @see #putFloat(String,float)\n @see #get(String,String)\n"
17673,method,java/util/prefs/Preferences/putDouble/String;double," Associates a string representing the specified double value with the\n specified key in this preference node.  The associated string is the\n one that would be returned if the double value were passed to\n {@link Double#toString(double)}.  This method is intended for use in\n conjunction with {@link #getDouble}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @throws IllegalArgumentException if <tt>key.length()</tt> exceeds\n         <tt>MAX_KEY_LENGTH</tt>.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #getDouble(String,double)\n"
17674,method,java/util/prefs/Preferences/getDouble/String;double," Returns the double value represented by the string associated with the\n specified key in this preference node.  The string is converted to an\n integer as by {@link Double#parseDouble(String)}.  Returns the specified\n default if there is no value associated with the key, the backing store\n is inaccessible, or if <tt>Double.parseDouble(String)</tt> would throw a\n {@link NumberFormatException} if the associated value were passed.\n This method is intended for use in conjunction with {@link #putDouble}.\n\n <p>If the implementation supports <i>stored defaults</i> and such a\n default exists, is accessible, and could be converted to a double\n with <tt>Double.parseDouble</tt>, this double is returned in preference\n to the specified default.\n\n @param key key whose associated value is to be returned as a double.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a double,\n        or the backing store is inaccessible.\n @return the double value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a double.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.\n @see #putDouble(String,double)\n @see #get(String,String)\n"
17678,method,java/util/prefs/Preferences/childrenNames/," Returns the names of the children of this preference node, relative to\n this node.  (The returned array will be of size zero if this node has\n no children.)\n\n @return the names of the children of this preference node.\n @throws BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to \n         communicate with it.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n"
17679,method,java/util/prefs/Preferences/parent/," Returns the parent of this preference node, or <tt>null</tt> if this is\n the root.\n\n @return the parent of this preference node.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n"
17683,method,java/util/prefs/Preferences/name/," Returns this preference node's name, relative to its parent.\n\n @return this preference node's name, relative to its parent.\n"
17684,method,java/util/prefs/Preferences/absolutePath/," Returns this preference node's absolute path name.\n\n @return this preference node's absolute path name.\n"
17685,method,java/util/prefs/Preferences/isUserNode/," Returns <tt>true</tt> if this preference node is in the user\n preference tree, <tt>false</tt> if it's in the system preference tree.\n\n @return <tt>true</tt> if this preference node is in the user\n         preference tree, <tt>false</tt> if it's in the system\n         preference tree.\n"
17686,method,java/util/prefs/Preferences/toString/," Returns a string representation of this preferences node,\n as if computed by the expression:<tt>(this.isUserNode() ? "User" :\n "System") + " Preference Node: " + this.absolutePath()</tt>.\n"
17690,method,java/util/prefs/Preferences/removePreferenceChangeListener/PreferenceChangeListener," Removes the specified preference change listener, so it no longer\n receives preference change events.\n\n @param pcl The preference change listener to remove. \n @throws IllegalArgumentException if <tt>pcl</tt> was not a registered\n         preference change listener on this node.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #addPreferenceChangeListener(PreferenceChangeListener)\n"
17692,method,java/util/prefs/Preferences/removeNodeChangeListener/NodeChangeListener," Removes the specified <tt>NodeChangeListener</tt>, so it no longer\n receives change events.\n\n @param ncl The <tt>NodeChangeListener</tt> to remove. \n @throws IllegalArgumentException if <tt>ncl</tt> was not a registered\n         <tt>NodeChangeListener</tt> on this node.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @see #addNodeChangeListener(NodeChangeListener)\n"
17697,field,java/util/prefs/Preferences/MAX_KEY_LENGTH," Maximum length of string allowed as a key (80 characters).\n"
17698,field,java/util/prefs/Preferences/MAX_VALUE_LENGTH," Maximum length of string allowed as a value (8192 characters).\n"
17699,field,java/util/prefs/Preferences/MAX_NAME_LENGTH," Maximum length of a node name (80 characters).\n"
17700,interface,java/util/prefs/PreferenceChangeListener," A listener for receiving preference change events.\n\n @author  Josh Bloch\n @version 1.6, 03/23/10\n @see Preferences\n @see PreferenceChangeEvent\n @see NodeChangeListener\n @since   1.4\n"
17703,method,java/util/prefs/PreferenceChangeEvent/getNode/," Returns the preference node that emitted the event.\n\n @return  The preference node that emitted the event.\n"
17704,method,java/util/prefs/PreferenceChangeEvent/getKey/," Returns the key of the preference that was changed.\n\n @return  The key of the preference that was changed.\n"
17705,method,java/util/prefs/PreferenceChangeEvent/getNewValue/," Returns the new value for the preference.\n\n @return  The new value for the preference, or <tt>null</tt> if the\n          preference was removed.\n"
17706,method,java/util/prefs/PreferenceChangeEvent/PreferenceChangeEvent/Preferences;String;String," Constructs a new <code>PreferenceChangeEvent</code> instance.\n\n @param node  The Preferences node that emitted the event.\n @param key  The key of the preference that was changed.\n @param newValue  The new value of the preference, or <tt>null</tt>\n                  if the preference is being removed.\n"
17707,interface,java/util/prefs/NodeChangeListener," A listener for receiving preference node change events.\n\n @author  Josh Bloch\n @version 1.6, 03/23/10\n @see     Preferences\n @see     NodeChangeEvent\n @see     PreferenceChangeListener\n @since   1.4\n"
17711,method,java/util/prefs/NodeChangeEvent/getParent/," Returns the parent of the node that was added or removed.\n\n @return  The parent Preferences node whose child was added or removed\n"
17712,method,java/util/prefs/NodeChangeEvent/getChild/," Returns the node that was added or removed.\n\n @return  The node that was added or removed.\n"
17713,method,java/util/prefs/NodeChangeEvent/NodeChangeEvent/Preferences;Preferences," Constructs a new <code>NodeChangeEvent</code> instance.\n\n @param parent  The parent of the node that was added or removed.\n @param child   The node that was added or removed.\n"
17714,class,java/util/prefs/InvalidPreferencesFormatException," Thrown to indicate that an operation could not complete because\n the input did not conform to the appropriate XML document type\n for a collection of preferences, as per the {@link Preferences} \n specification.\n\n @author  Josh Bloch\n @version 1.9, 03/23/10\n @see     Preferences\n @since   1.4\n"
17715,method,java/util/prefs/InvalidPreferencesFormatException/InvalidPreferencesFormatException/Throwable," Constructs an InvalidPreferencesFormatException with the specified\n cause.\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).\n"
17716,method,java/util/prefs/InvalidPreferencesFormatException/InvalidPreferencesFormatException/String," Constructs an InvalidPreferencesFormatException with the specified\n detail message.\n\n @param   message   the detail message. The detail message is saved for \n          later retrieval by the {@link Throwable#getMessage()} method.\n"
17717,method,java/util/prefs/InvalidPreferencesFormatException/InvalidPreferencesFormatException/String;Throwable," Constructs an InvalidPreferencesFormatException with the specified\n detail message and cause.\n\n @param  message   the detail message. The detail message is saved for\n         later retrieval by the {@link Throwable#getMessage()} method.\n @param  cause the cause (which is saved for later retrieval by the\n         {@link Throwable#getCause()} method).\n"
17718,class,java/util/prefs/BackingStoreException," Thrown to indicate that a preferences operation could not complete because\n of a failure in the backing store, or a failure to contact the backing\n store.\n\n @author  Josh Bloch\n @version 1.9, 03/23/10\n @since   1.4\n"
17719,method,java/util/prefs/BackingStoreException/BackingStoreException/String," Constructs a BackingStoreException with the specified detail message.\n\n @param s the detail message.\n"
17720,method,java/util/prefs/BackingStoreException/BackingStoreException/Throwable," Constructs a BackingStoreException with the specified cause.\n\n @param cause the cause\n"
17736,method,java/util/prefs/AbstractPreferences/putByteArray/String;byte[]," Implements the <tt>putByteArray</tt> method as per the specification in\n {@link Preferences#putByteArray(String,byte[])}.\n\n @param key key with which the string form of value is to be associated.\n @param value value whose string form is to be associated with key.\n @throws NullPointerException if key or value is <tt>null</tt>.\n @throws IllegalArgumentException if key.length() exceeds MAX_KEY_LENGTH\n         or if value.length exceeds MAX_VALUE_LENGTH*3/4.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n"
17737,method,java/util/prefs/AbstractPreferences/getByteArray/String;byte[]," Implements the <tt>getByteArray</tt> method as per the specification in\n {@link Preferences#getByteArray(String,byte[])}.\n\n @param key key whose associated value is to be returned as a byte array.\n @param def the value to be returned in the event that this\n        preference node has no value associated with <tt>key</tt>\n        or the associated value cannot be interpreted as a byte array.\n @return the byte array value represented by the string associated with\n         <tt>key</tt> in this preference node, or <tt>def</tt> if the\n         associated value does not exist or cannot be interpreted as\n         a byte array.\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method.\n @throws NullPointerException if <tt>key</tt> is <tt>null</tt>.  (A \n         <tt>null</tt> value for <tt>def</tt> <i>is</i> permitted.)\n"
17740,method,java/util/prefs/AbstractPreferences/cachedChildren/," Returns all known unremoved children of this node.\n\n @return all known unremoved children of this node.\n"
17743,method,java/util/prefs/AbstractPreferences/nodeExists/String," Implements the <tt>nodeExists</tt> method as per the specification in\n {@link Preferences#nodeExists(String)}.\n\n <p>This implementation is very similar to {@link #node(String)},\n except that {@link #getChild(String)} is used instead of {@link\n #childSpi(String)}.\n\n @param path the path name of the node whose existence is to be checked.\n @return true if the specified node exists.\n @throws BackingStoreException if this operation cannot be completed\n         due to a failure in the backing store, or inability to \n         communicate with it.\n @throws IllegalArgumentException if the path name is invalid (i.e.,\n         it contains multiple consecutive slash characters, or ends\n         with a slash character and is more than one character long).\n @throws IllegalStateException if this node (or an ancestor) has been\n         removed with the {@link #removeNode()} method and\n         <tt>pathname</tt> is not the empty string (<tt>""</tt>).\n"
17745,method,java/util/prefs/AbstractPreferences/name/," Implements the <tt>name</tt> method as per the specification in\n {@link Preferences#name()}.\n\n <p>This implementation merely returns the name that was\n passed to this node's constructor.\n\n @return this preference node's name, relative to its parent.\n"
17746,method,java/util/prefs/AbstractPreferences/absolutePath/," Implements the <tt>absolutePath</tt> method as per the specification in\n {@link Preferences#absolutePath()}.\n\n <p>This implementation merely returns the absolute path name that\n was computed at the time that this node was constructed (based on\n the name that was passed to this node's constructor, and the names\n that were passed to this node's ancestors' constructors).\n\n @return this preference node's absolute path name.\n"
17747,method,java/util/prefs/AbstractPreferences/isUserNode/," Implements the <tt>isUserNode</tt> method as per the specification in\n {@link Preferences#isUserNode()}.\n\n <p>This implementation compares this node's root node (which is stored\n in a private field) with the value returned by\n {@link Preferences#userRoot()}.  If the two object references are\n identical, this method returns true.\n\n @return <tt>true</tt> if this preference node is in the user\n         preference tree, <tt>false</tt> if it's in the system\n         preference tree.\n"
17748,method,java/util/prefs/AbstractPreferences/addPreferenceChangeListener/PreferenceChangeListener,""
17749,method,java/util/prefs/AbstractPreferences/removePreferenceChangeListener/PreferenceChangeListener,""
17750,method,java/util/prefs/AbstractPreferences/addNodeChangeListener/NodeChangeListener,""
17751,method,java/util/prefs/AbstractPreferences/removeNodeChangeListener/NodeChangeListener,""
17760,method,java/util/prefs/AbstractPreferences/toString/," Returns the absolute path name of this preferences node.\n"
17766,method,java/util/prefs/AbstractPreferences/exportNode/OutputStream," Implements the <tt>exportNode</tt> method as per the specification in\n {@link Preferences#exportNode(OutputStream)}.\n\n @param os the output stream on which to emit the XML document.\n @throws IOException if writing to the specified output stream\n         results in an <tt>IOException</tt>.\n @throws BackingStoreException if preference data cannot be read from\n         backing store.\n"
17767,method,java/util/prefs/AbstractPreferences/exportSubtree/OutputStream," Implements the <tt>exportSubtree</tt> method as per the specification in\n {@link Preferences#exportSubtree(OutputStream)}.\n\n @param os the output stream on which to emit the XML document.\n @throws IOException if writing to the specified output stream\n         results in an <tt>IOException</tt>.\n @throws BackingStoreException if preference data cannot be read from\n         backing store.\n"
17768,method,java/util/prefs/AbstractPreferences/AbstractPreferences/AbstractPreferences;String," Creates a preference node with the specified parent and the specified\n name relative to its parent.\n\n @param parent the parent of this preference node, or null if this\n               is the root.\n @param name the name of this preference node, relative to its parent,\n             or <tt>""</tt> if this is the root.\n @throws IllegalArgumentException if <tt>name</tt> contains a slash\n          (<tt>'/'</tt>),  or <tt>parent</tt> is <tt>null</tt> and\n          name isn't <tt>""</tt>.  \n"
17772,method,java/util/concurrent/TimeoutException/TimeoutException/," Constructs a <tt>TimeoutException</tt> with no specified detail\n message.\n"
17773,method,java/util/concurrent/TimeoutException/TimeoutException/String," Constructs a <tt>TimeoutException</tt> with the specified detail\n message.\n\n @param message the detail message\n"
17775,method,java/util/concurrent/TimeUnit/values/,""
17776,method,java/util/concurrent/TimeUnit/valueOf/String,""
17777,method,java/util/concurrent/TimeUnit/convert/long;TimeUnit," Convert the given time duration in the given unit to this\n unit.  Conversions from finer to coarser granularities\n truncate, so lose precision. For example converting\n <tt>999</tt> milliseconds to seconds results in\n <tt>0</tt>. Conversions from coarser to finer granularities\n with arguments that would numerically overflow saturate to\n <tt>Long.MIN_VALUE</tt> if negative or <tt>Long.MAX_VALUE</tt>\n if positive.\n\n <p>For example, to convert 10 minutes to milliseconds, use:\n <tt>TimeUnit.MILLISECONDS.convert(10L, TimeUnit.MINUTES)</tt>\n\n @param sourceDuration the time duration in the given <tt>sourceUnit</tt>\n @param sourceUnit the unit of the <tt>sourceDuration</tt> argument\n @return the converted duration in this unit,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n"
17778,method,java/util/concurrent/TimeUnit/toNanos/long," Equivalent to <tt>NANOSECONDS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n"
17779,method,java/util/concurrent/TimeUnit/toMicros/long," Equivalent to <tt>MICROSECONDS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n"
17780,method,java/util/concurrent/TimeUnit/toMillis/long," Equivalent to <tt>MILLISECONDS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n"
17781,method,java/util/concurrent/TimeUnit/toSeconds/long," Equivalent to <tt>SECONDS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n"
17782,method,java/util/concurrent/TimeUnit/toMinutes/long," Equivalent to <tt>MINUTES.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n @since 1.6\n"
17783,method,java/util/concurrent/TimeUnit/toHours/long," Equivalent to <tt>HOURS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration,\n or <tt>Long.MIN_VALUE</tt> if conversion would negatively\n overflow, or <tt>Long.MAX_VALUE</tt> if it would positively overflow.\n @see #convert\n @since 1.6\n"
17784,method,java/util/concurrent/TimeUnit/toDays/long," Equivalent to <tt>DAYS.convert(duration, this)</tt>.\n @param duration the duration\n @return the converted duration\n @see #convert\n @since 1.6\n"
17788,field,java/util/concurrent/TimeUnit/NANOSECONDS,""
17789,field,java/util/concurrent/TimeUnit/MICROSECONDS,""
17790,field,java/util/concurrent/TimeUnit/MILLISECONDS,""
17791,field,java/util/concurrent/TimeUnit/SECONDS,""
17792,field,java/util/concurrent/TimeUnit/MINUTES,""
17793,field,java/util/concurrent/TimeUnit/HOURS,""
17794,field,java/util/concurrent/TimeUnit/DAYS,""
17799,method,java/util/concurrent/ThreadPoolExecutor/isShutdown/,""
17801,method,java/util/concurrent/ThreadPoolExecutor/isTerminated/,""
17802,method,java/util/concurrent/ThreadPoolExecutor/awaitTermination/long;TimeUnit,""
17806,method,java/util/concurrent/ThreadPoolExecutor/setRejectedExecutionHandler/RejectedExecutionHandler," Sets a new handler for unexecutable tasks.\n\n @param handler the new handler\n @throws NullPointerException if handler is null\n @see #getRejectedExecutionHandler\n"
17807,method,java/util/concurrent/ThreadPoolExecutor/getRejectedExecutionHandler/," Returns the current handler for unexecutable tasks.\n\n @return the current handler\n @see #setRejectedExecutionHandler\n"
17836,class,java/util/concurrent/ThreadPoolExecutor/AbortPolicy," A handler for rejected tasks that throws a\n <tt>RejectedExecutionException</tt>.\n"
17837,method,java/util/concurrent/ThreadPoolExecutor/AbortPolicy/rejectedExecution/Runnable;ThreadPoolExecutor," Always throws RejectedExecutionException.\n @param r the runnable task requested to be executed\n @param e the executor attempting to execute this task\n @throws RejectedExecutionException always.\n"
17838,method,java/util/concurrent/ThreadPoolExecutor/AbortPolicy/ThreadPoolExecutor/AbortPolicy/," Creates an <tt>AbortPolicy</tt>.\n"
17839,class,java/util/concurrent/ThreadPoolExecutor/DiscardPolicy," A handler for rejected tasks that silently discards the\n rejected task.\n"
17840,method,java/util/concurrent/ThreadPoolExecutor/DiscardPolicy/rejectedExecution/Runnable;ThreadPoolExecutor," Does nothing, which has the effect of discarding task r.\n @param r the runnable task requested to be executed\n @param e the executor attempting to execute this task\n"
17841,method,java/util/concurrent/ThreadPoolExecutor/DiscardPolicy/ThreadPoolExecutor/DiscardPolicy/," Creates a <tt>DiscardPolicy</tt>.\n"
17842,class,java/util/concurrent/ThreadPoolExecutor/DiscardOldestPolicy," A handler for rejected tasks that discards the oldest unhandled\n request and then retries <tt>execute</tt>, unless the executor\n is shut down, in which case the task is discarded.\n"
17843,method,java/util/concurrent/ThreadPoolExecutor/DiscardOldestPolicy/rejectedExecution/Runnable;ThreadPoolExecutor," Obtains and ignores the next task that the executor\n would otherwise execute, if one is immediately available,\n and then retries execution of task r, unless the executor\n is shut down, in which case task r is instead discarded.\n @param r the runnable task requested to be executed\n @param e the executor attempting to execute this task\n"
17844,method,java/util/concurrent/ThreadPoolExecutor/DiscardOldestPolicy/ThreadPoolExecutor/DiscardOldestPolicy/," Creates a <tt>DiscardOldestPolicy</tt> for the given executor.\n"
17864,method,java/util/concurrent/SynchronousQueue/iterator/," Returns an empty iterator in which <tt>hasNext</tt> always returns\n <tt>false</tt>.\n\n @return an empty iterator\n"
17865,method,java/util/concurrent/SynchronousQueue/toArray/," Returns a zero-length array.\n @return a zero-length array\n"
17866,method,java/util/concurrent/SynchronousQueue/toArray/Object[]," Sets the zeroeth element of the specified array to <tt>null</tt>\n (if the array has non-zero length) and returns it.\n\n @param a the array\n @return the specified array\n @throws NullPointerException if the specified array is null\n"
17883,method,java/util/concurrent/Semaphore/drainPermits/," Acquires and returns all permits that are immediately available.\n\n @return the number of permits acquired\n"
17885,method,java/util/concurrent/Semaphore/isFair/," Returns {@code true} if this semaphore has fairness set true.\n\n @return {@code true} if this semaphore has fairness set true\n"
17889,method,java/util/concurrent/Semaphore/toString/," Returns a string identifying this semaphore, as well as its state.\n The state, in brackets, includes the String {@code "Permits ="}\n followed by the number of permits.\n\n @return a string identifying this semaphore, as well as its state\n"
17893,method,java/util/concurrent/ScheduledThreadPoolExecutor/remove/Runnable,""
17896,method,java/util/concurrent/ScheduledThreadPoolExecutor/schedule/Runnable;long;TimeUnit,""
17897,method,java/util/concurrent/ScheduledThreadPoolExecutor/schedule/Callable;long;TimeUnit,""
17898,method,java/util/concurrent/ScheduledThreadPoolExecutor/scheduleAtFixedRate/Runnable;long;long;TimeUnit,""
17899,method,java/util/concurrent/ScheduledThreadPoolExecutor/scheduleWithFixedDelay/Runnable;long;long;TimeUnit,""
17901,method,java/util/concurrent/ScheduledThreadPoolExecutor/submit/Runnable,""
17902,method,java/util/concurrent/ScheduledThreadPoolExecutor/submit/Runnable;Object,""
17903,method,java/util/concurrent/ScheduledThreadPoolExecutor/submit/Callable,""
17908,method,java/util/concurrent/ScheduledThreadPoolExecutor/shutdown/," Initiates an orderly shutdown in which previously submitted\n tasks are executed, but no new tasks will be accepted. If the\n <tt>ExecuteExistingDelayedTasksAfterShutdownPolicy</tt> has\n been set <tt>false</tt>, existing delayed tasks whose delays\n have not yet elapsed are cancelled. And unless the\n <tt>ContinueExistingPeriodicTasksAfterShutdownPolicy</tt> has\n been set <tt>true</tt>, future executions of existing periodic\n tasks will be cancelled.\n"
17910,method,java/util/concurrent/ScheduledThreadPoolExecutor/getQueue/," Returns the task queue used by this executor.  Each element of\n this queue is a {@link ScheduledFuture}, including those\n tasks submitted using <tt>execute</tt> which are for scheduling\n purposes used as the basis of a zero-delay\n <tt>ScheduledFuture</tt>. Iteration over this queue is\n <em>not</em> guaranteed to traverse tasks in the order in\n which they will execute.\n\n @return the task queue\n"
17915,interface,java/util/concurrent/ScheduledFuture," A delayed result-bearing action that can be cancelled.\n Usually a scheduled future is the result of scheduling\n a task with a {@link ScheduledExecutorService}.\n\n @since 1.5\n @author Doug Lea\n @param <V> The result type returned by this Future\n"
17921,interface,java/util/concurrent/RunnableScheduledFuture," A {@link ScheduledFuture} that is {@link Runnable}. Successful\n execution of the <tt>run</tt> method causes completion of the\n <tt>Future</tt> and allows access to its results.\n @see FutureTask\n @see Executor\n @since 1.6\n @author Doug Lea\n @param <V> The result type returned by this Future's <tt>get</tt> method\n"
17923,interface,java/util/concurrent/RunnableFuture," A {@link Future} that is {@link Runnable}. Successful execution of\n the <tt>run</tt> method causes completion of the <tt>Future</tt>\n and allows access to its results.\n @see FutureTask\n @see Executor\n @since 1.6\n @author Doug Lea\n @param <V> The result type returned by this Future's <tt>get</tt> method\n"
17924,method,java/util/concurrent/RunnableFuture/run/," Sets this Future to the result of its computation\n unless it has been cancelled.\n"
17927,class,java/util/concurrent/RejectedExecutionException," Exception thrown by an {@link Executor} when a task cannot be\n accepted for execution.\n\n @since 1.5\n @author Doug Lea\n"
17930,method,java/util/concurrent/RejectedExecutionException/RejectedExecutionException/String;Throwable," Constructs a <tt>RejectedExecutionException</tt> with the\n specified detail message and cause.\n\n @param  message the detail message\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method)\n"
17931,method,java/util/concurrent/RejectedExecutionException/RejectedExecutionException/Throwable," Constructs a <tt>RejectedExecutionException</tt> with the\n specified cause.  The detail message is set to: <pre> (cause ==\n null ? null : cause.toString())</pre> (which typically contains\n the class and detail message of <tt>cause</tt>).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method)\n"
17933,method,java/util/concurrent/PriorityBlockingQueue/add/Object," Inserts the specified element into this priority queue.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Collection#add})\n @throws ClassCastException if the specified element cannot be compared\n         with elements currently in the priority queue according to the\n         priority queue's ordering\n @throws NullPointerException if the specified element is null\n"
17934,method,java/util/concurrent/PriorityBlockingQueue/offer/Object," Inserts the specified element into this priority queue.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Queue#offer})\n @throws ClassCastException if the specified element cannot be compared\n         with elements currently in the priority queue according to the\n         priority queue's ordering\n @throws NullPointerException if the specified element is null\n"
17937,method,java/util/concurrent/PriorityBlockingQueue/poll/,""
17938,method,java/util/concurrent/PriorityBlockingQueue/take/,""
17939,method,java/util/concurrent/PriorityBlockingQueue/poll/long;TimeUnit,""
17940,method,java/util/concurrent/PriorityBlockingQueue/peek/,""
17941,method,java/util/concurrent/PriorityBlockingQueue/comparator/," Returns the comparator used to order the elements in this queue,\n or <tt>null</tt> if this queue uses the {@linkplain Comparable\n natural ordering} of its elements.\n\n @return the comparator used to order the elements in this queue,\n         or <tt>null</tt> if this queue uses the natural\n         ordering of its elements\n"
17942,method,java/util/concurrent/PriorityBlockingQueue/size/,""
17943,method,java/util/concurrent/PriorityBlockingQueue/remainingCapacity/," Always returns <tt>Integer.MAX_VALUE</tt> because\n a <tt>PriorityBlockingQueue</tt> is not capacity constrained.\n @return <tt>Integer.MAX_VALUE</tt>\n"
17947,method,java/util/concurrent/PriorityBlockingQueue/toString/,""
17953,method,java/util/concurrent/PriorityBlockingQueue/PriorityBlockingQueue/," Creates a <tt>PriorityBlockingQueue</tt> with the default\n initial capacity (11) that orders its elements according to\n their {@linkplain Comparable natural ordering}.\n"
17954,method,java/util/concurrent/PriorityBlockingQueue/PriorityBlockingQueue/int," Creates a <tt>PriorityBlockingQueue</tt> with the specified\n initial capacity that orders its elements according to their\n {@linkplain Comparable natural ordering}.\n\n @param initialCapacity the initial capacity for this priority queue\n @throws IllegalArgumentException if <tt>initialCapacity</tt> is less\n         than 1\n"
17955,method,java/util/concurrent/PriorityBlockingQueue/PriorityBlockingQueue/int;Comparator," Creates a <tt>PriorityBlockingQueue</tt> with the specified initial\n capacity that orders its elements according to the specified\n comparator.\n\n @param initialCapacity the initial capacity for this priority queue\n @param  comparator the comparator that will be used to order this\n         priority queue.  If {@code null}, the {@linkplain Comparable\n         natural ordering} of the elements will be used.\n @throws IllegalArgumentException if <tt>initialCapacity</tt> is less\n         than 1\n"
17956,method,java/util/concurrent/PriorityBlockingQueue/PriorityBlockingQueue/Collection," Creates a <tt>PriorityBlockingQueue</tt> containing the elements\n in the specified collection.  If the specified collection is a\n {@link SortedSet} or a {@link PriorityQueue},  this\n priority queue will be ordered according to the same ordering.\n Otherwise, this priority queue will be ordered according to the\n {@linkplain Comparable natural ordering} of its elements.\n\n @param  c the collection whose elements are to be placed\n         into this priority queue\n @throws ClassCastException if elements of the specified collection\n         cannot be compared to one another according to the priority\n         queue's ordering\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
17958,method,java/util/concurrent/LinkedBlockingQueue/size/," Returns the number of elements in this queue.\n\n @return the number of elements in this queue\n"
17963,method,java/util/concurrent/LinkedBlockingQueue/take/,""
17964,method,java/util/concurrent/LinkedBlockingQueue/poll/long;TimeUnit,""
17965,method,java/util/concurrent/LinkedBlockingQueue/poll/,""
17966,method,java/util/concurrent/LinkedBlockingQueue/peek/,""
17970,method,java/util/concurrent/LinkedBlockingQueue/toString/,""
17975,method,java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue/," Creates a <tt>LinkedBlockingQueue</tt> with a capacity of\n {@link Integer#MAX_VALUE}.\n"
17976,method,java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue/int," Creates a <tt>LinkedBlockingQueue</tt> with the given (fixed) capacity.\n\n @param capacity the capacity of this queue\n @throws IllegalArgumentException if <tt>capacity</tt> is not greater\n         than zero\n"
17977,method,java/util/concurrent/LinkedBlockingQueue/LinkedBlockingQueue/Collection," Creates a <tt>LinkedBlockingQueue</tt> with a capacity of\n {@link Integer#MAX_VALUE}, initially containing the elements of the\n given collection,\n added in traversal order of the collection's iterator.\n\n @param c the collection of elements to initially contain\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
17978,class,java/util/concurrent/LinkedBlockingDeque," An optionally-bounded {@linkplain BlockingDeque blocking deque} based on\n linked nodes.\n\n <p> The optional capacity bound constructor argument serves as a\n way to prevent excessive expansion. The capacity, if unspecified,\n is equal to {@link Integer#MAX_VALUE}.  Linked nodes are\n dynamically created upon each insertion unless this would bring the\n deque above capacity.\n\n <p>Most operations run in constant time (ignoring time spent\n blocking).  Exceptions include {@link #remove(Object) remove},\n {@link #removeFirstOccurrence removeFirstOccurrence}, {@link\n #removeLastOccurrence removeLastOccurrence}, {@link #contains\n contains}, {@link #iterator iterator.remove()}, and the bulk\n operations, all of which run in linear time.\n\n <p>This class and its iterator implement all of the\n <em>optional</em> methods of the {@link Collection} and {@link\n Iterator} interfaces.\n\n <p>This class is a member of the\n <a href="{@docRoot}/../technotes/guides/collections/index.html">\n Java Collections Framework</a>.\n\n @since 1.6\n @author  Doug Lea\n @param <E> the type of elements held in this collection\n"
17989,method,java/util/concurrent/LinkedBlockingDeque/pollFirst/,""
17990,method,java/util/concurrent/LinkedBlockingDeque/pollLast/,""
17991,method,java/util/concurrent/LinkedBlockingDeque/takeFirst/,""
17992,method,java/util/concurrent/LinkedBlockingDeque/takeLast/,""
17993,method,java/util/concurrent/LinkedBlockingDeque/pollFirst/long;TimeUnit,""
17994,method,java/util/concurrent/LinkedBlockingDeque/pollLast/long;TimeUnit,""
17997,method,java/util/concurrent/LinkedBlockingDeque/peekFirst/,""
17998,method,java/util/concurrent/LinkedBlockingDeque/peekLast/,""
17999,method,java/util/concurrent/LinkedBlockingDeque/removeFirstOccurrence/Object,""
18000,method,java/util/concurrent/LinkedBlockingDeque/removeLastOccurrence/Object,""
18002,method,java/util/concurrent/LinkedBlockingDeque/offer/Object," @throws NullPointerException if the specified element is null\n"
18006,method,java/util/concurrent/LinkedBlockingDeque/poll/,""
18007,method,java/util/concurrent/LinkedBlockingDeque/take/,""
18008,method,java/util/concurrent/LinkedBlockingDeque/poll/long;TimeUnit,""
18010,method,java/util/concurrent/LinkedBlockingDeque/peek/,""
18017,method,java/util/concurrent/LinkedBlockingDeque/size/," Returns the number of elements in this deque.\n\n @return the number of elements in this deque\n"
18021,method,java/util/concurrent/LinkedBlockingDeque/toString/,""
18025,method,java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque/," Creates a <tt>LinkedBlockingDeque</tt> with a capacity of\n {@link Integer#MAX_VALUE}.\n"
18026,method,java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque/int," Creates a <tt>LinkedBlockingDeque</tt> with the given (fixed) capacity.\n\n @param capacity the capacity of this deque\n @throws IllegalArgumentException if <tt>capacity</tt> is less than 1\n"
18027,method,java/util/concurrent/LinkedBlockingDeque/LinkedBlockingDeque/Collection," Creates a <tt>LinkedBlockingDeque</tt> with a capacity of\n {@link Integer#MAX_VALUE}, initially containing the elements of\n the given collection, added in traversal order of the\n collection's iterator.\n\n @param c the collection of elements to initially contain\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
18029,method,java/util/concurrent/FutureTask/isCancelled/,""
18030,method,java/util/concurrent/FutureTask/isDone/,""
18031,method,java/util/concurrent/FutureTask/cancel/boolean,""
18037,method,java/util/concurrent/FutureTask/run/," Sets this Future to the result of its computation\n unless it has been cancelled.\n"
18040,method,java/util/concurrent/FutureTask/FutureTask/Runnable;Object," Creates a <tt>FutureTask</tt> that will upon running, execute the\n given <tt>Runnable</tt>, and arrange that <tt>get</tt> will return the\n given result on successful completion.\n\n @param  runnable the runnable task\n @param result the result to return on successful completion. If\n you don't need a particular result, consider using\n constructions of the form:\n <tt>Future&lt;?&gt; f = new FutureTask&lt;Object&gt;(runnable, null)</tt>\n @throws NullPointerException if runnable is null\n"
18058,method,java/util/concurrent/Executors/unconfigurableExecutorService/ExecutorService," Returns an object that delegates all defined {@link\n ExecutorService} methods to the given executor, but not any\n other methods that might otherwise be accessible using\n casts. This provides a way to safely "freeze" configuration and\n disallow tuning of a given concrete implementation.\n @param executor the underlying implementation\n @return an <tt>ExecutorService</tt> instance\n @throws NullPointerException if executor null\n"
18059,method,java/util/concurrent/Executors/unconfigurableScheduledExecutorService/ScheduledExecutorService," Returns an object that delegates all defined {@link\n ScheduledExecutorService} methods to the given executor, but\n not any other methods that might otherwise be accessible using\n casts. This provides a way to safely "freeze" configuration and\n disallow tuning of a given concrete implementation.\n @param executor the underlying implementation\n @return a <tt>ScheduledExecutorService</tt> instance\n @throws NullPointerException if executor null\n"
18071,method,java/util/concurrent/ExecutorService/isShutdown/," Returns <tt>true</tt> if this executor has been shut down.\n\n @return <tt>true</tt> if this executor has been shut down\n"
18075,method,java/util/concurrent/ExecutorService/submit/Runnable;Object," Submits a Runnable task for execution and returns a Future\n representing that task. The Future's <tt>get</tt> method will\n return the given result upon successful completion.\n\n @param task the task to submit\n @param result the result to return\n @return a Future representing pending completion of the task\n @throws RejectedExecutionException if the task cannot be\n         scheduled for execution\n @throws NullPointerException if the task is null\n"
18076,method,java/util/concurrent/ExecutorService/submit/Runnable," Submits a Runnable task for execution and returns a Future\n representing that task. The Future's <tt>get</tt> method will\n return <tt>null</tt> upon <em>successful</em> completion.\n\n @param task the task to submit\n @return a Future representing pending completion of the task\n @throws RejectedExecutionException if the task cannot be\n         scheduled for execution\n @throws NullPointerException if the task is null\n"
18079,method,java/util/concurrent/ExecutorService/invokeAny/Collection," Executes the given tasks, returning the result\n of one that has completed successfully (i.e., without throwing\n an exception), if any do. Upon normal or exceptional return,\n tasks that have not completed are cancelled.\n The results of this method are undefined if the given\n collection is modified while this operation is in progress.\n\n @param tasks the collection of tasks\n @return the result returned by one of the tasks\n @throws InterruptedException if interrupted while waiting\n @throws NullPointerException if tasks or any of its elements\n         are <tt>null</tt>\n @throws IllegalArgumentException if tasks is empty\n @throws ExecutionException if no task successfully completes\n @throws RejectedExecutionException if tasks cannot be scheduled\n         for execution\n"
18082,method,java/util/concurrent/ExecutorCompletionService/submit/Callable,""
18083,method,java/util/concurrent/ExecutorCompletionService/submit/Runnable;Object,""
18084,method,java/util/concurrent/ExecutorCompletionService/take/,""
18085,method,java/util/concurrent/ExecutorCompletionService/poll/,""
18086,method,java/util/concurrent/ExecutorCompletionService/poll/long;TimeUnit,""
18087,method,java/util/concurrent/ExecutorCompletionService/ExecutorCompletionService/Executor," Creates an ExecutorCompletionService using the supplied\n executor for base task execution and a\n {@link LinkedBlockingQueue} as a completion queue.\n\n @param executor the executor to use\n @throws NullPointerException if executor is <tt>null</tt>\n"
18088,method,java/util/concurrent/ExecutorCompletionService/ExecutorCompletionService/Executor;BlockingQueue," Creates an ExecutorCompletionService using the supplied\n executor for base task execution and the supplied queue as its\n completion queue.\n\n @param executor the executor to use\n @param completionQueue the queue to use as the completion queue\n normally one dedicated for use by this service\n @throws NullPointerException if executor or completionQueue are <tt>null</tt>\n"
18091,class,java/util/concurrent/ExecutionException," Exception thrown when attempting to retrieve the result of a task\n that aborted by throwing an exception. This exception can be\n inspected using the {@link #getCause()} method.\n\n @see Future\n @since 1.5\n @author Doug Lea\n"
18094,method,java/util/concurrent/ExecutionException/ExecutionException/String;Throwable," Constructs an <tt>ExecutionException</tt> with the specified detail\n message and cause.\n\n @param  message the detail message\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method)\n"
18095,method,java/util/concurrent/ExecutionException/ExecutionException/Throwable," Constructs an <tt>ExecutionException</tt> with the specified cause.\n The detail message is set to:\n <pre>\n  (cause == null ? null : cause.toString())</pre>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param  cause the cause (which is saved for later retrieval by the\n         {@link #getCause()} method)\n"
18099,method,java/util/concurrent/Exchanger/Exchanger/," Creates a new Exchanger.\n"
18101,method,java/util/concurrent/Delayed/getDelay/TimeUnit," Returns the remaining delay associated with this object, in the\n given time unit.\n\n @param unit the time unit\n @return the remaining delay; zero or negative values indicate\n that the delay has already elapsed\n"
18103,method,java/util/concurrent/DelayQueue/add/Delayed," Inserts the specified element into this delay queue.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Collection#add})\n @throws NullPointerException if the specified element is null\n"
18104,method,java/util/concurrent/DelayQueue/offer/Delayed," Inserts the specified element into this delay queue.\n\n @param e the element to add\n @return <tt>true</tt>\n @throws NullPointerException if the specified element is null\n"
18107,method,java/util/concurrent/DelayQueue/poll/," Retrieves and removes the head of this queue, or returns <tt>null</tt>\n if this queue has no elements with an expired delay.\n\n @return the head of this queue, or <tt>null</tt> if this\n         queue has no elements with an expired delay\n"
18110,method,java/util/concurrent/DelayQueue/peek/," Retrieves, but does not remove, the head of this queue, or\n returns <tt>null</tt> if this queue is empty.  Unlike\n <tt>poll</tt>, if no expired elements are available in the queue,\n this method returns the element that will expire next,\n if one exists.\n\n @return the head of this queue, or <tt>null</tt> if this\n         queue is empty.\n"
18111,method,java/util/concurrent/DelayQueue/size/,""
18115,method,java/util/concurrent/DelayQueue/remainingCapacity/," Always returns <tt>Integer.MAX_VALUE</tt> because\n a <tt>DelayQueue</tt> is not capacity constrained.\n\n @return <tt>Integer.MAX_VALUE</tt>\n"
18118,method,java/util/concurrent/DelayQueue/remove/Object," Removes a single instance of the specified element from this\n queue, if it is present, whether or not it has expired.\n"
18120,method,java/util/concurrent/DelayQueue/DelayQueue/," Creates a new <tt>DelayQueue</tt> that is initially empty.\n"
18121,method,java/util/concurrent/DelayQueue/DelayQueue/Collection," Creates a <tt>DelayQueue</tt> initially containing the elements of the\n given collection of {@link Delayed} instances.\n\n @param c the collection of elements to initially contain\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
18126,method,java/util/concurrent/CyclicBarrier/isBroken/," Queries if this barrier is in a broken state.\n\n @return {@code true} if one or more parties broke out of this\n         barrier due to interruption or timeout since\n         construction or the last reset, or a barrier action\n         failed due to an exception; {@code false} otherwise.\n"
18136,method,java/util/concurrent/CountDownLatch/toString/," Returns a string identifying this latch, as well as its state.\n The state, in brackets, includes the String {@code "Count ="}\n followed by the current count.\n\n @return a string identifying this latch, as well as its state\n"
18139,method,java/util/concurrent/CopyOnWriteArraySet/size/," Returns the number of elements in this set.\n\n @return the number of elements in this set\n"
18140,method,java/util/concurrent/CopyOnWriteArraySet/isEmpty/," Returns <tt>true</tt> if this set contains no elements.\n\n @return <tt>true</tt> if this set contains no elements\n"
18147,method,java/util/concurrent/CopyOnWriteArraySet/containsAll/Collection," Returns <tt>true</tt> if this set contains all of the elements of the\n specified collection.  If the specified collection is also a set, this\n method returns <tt>true</tt> if it is a <i>subset</i> of this set.\n\n @param  c collection to be checked for containment in this set\n @return <tt>true</tt> if this set contains all of the elements of the\n 	       specified collection\n @throws NullPointerException if the specified collection is null\n @see #contains(Object)\n"
18152,method,java/util/concurrent/CopyOnWriteArraySet/equals/Object," Compares the specified object with this set for equality.\n Returns {@code true} if the specified object is the same object\n as this object, or if it is also a {@link Set} and the elements\n returned by an {@linkplain List#iterator() iterator} over the\n specified set are the same as the elements returned by an\n iterator over this set.  More formally, the two iterators are\n considered to return the same elements if they return the same\n number of elements and for every element {@code e1} returned by\n the iterator over the specified set, there is an element\n {@code e2} returned by the iterator over this set such that\n {@code (e1==null ? e2==null : e1.equals(e2))}.\n\n @param o object to be compared for equality with this set\n @return {@code true} if the specified object is equal to this set\n"
18153,method,java/util/concurrent/CopyOnWriteArraySet/CopyOnWriteArraySet/," Creates an empty set.\n"
18154,method,java/util/concurrent/CopyOnWriteArraySet/CopyOnWriteArraySet/Collection," Creates a set containing all of the elements of the specified\n collection.\n\n @param c the collection of elements to initially contain\n @throws NullPointerException if the specified collection is null\n"
18156,method,java/util/concurrent/CopyOnWriteArrayList/size/," Returns the number of elements in this list.\n\n @return the number of elements in this list\n"
18157,method,java/util/concurrent/CopyOnWriteArrayList/isEmpty/," Returns <tt>true</tt> if this list contains no elements.\n\n @return <tt>true</tt> if this list contains no elements\n"
18160,method,java/util/concurrent/CopyOnWriteArrayList/indexOf/Object;int," Returns the index of the first occurrence of the specified element in\n this list, searching forwards from <tt>index</tt>, or returns -1 if\n the element is not found.\n More formally, returns the lowest index <tt>i</tt> such that\n <tt>(i&nbsp;&gt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(e==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;e.equals(get(i))))</tt>,\n or -1 if there is no such index.\n\n @param e element to search for\n @param index index to start searching from\n @return the index of the first occurrence of the element in\n         this list at position <tt>index</tt> or later in the list;\n         <tt>-1</tt> if the element is not found.\n @throws IndexOutOfBoundsException if the specified index is negative\n"
18162,method,java/util/concurrent/CopyOnWriteArrayList/lastIndexOf/Object;int," Returns the index of the last occurrence of the specified element in\n this list, searching backwards from <tt>index</tt>, or returns -1 if\n the element is not found.\n More formally, returns the highest index <tt>i</tt> such that\n <tt>(i&nbsp;&lt;=&nbsp;index&nbsp;&amp;&amp;&nbsp;(e==null&nbsp;?&nbsp;get(i)==null&nbsp;:&nbsp;e.equals(get(i))))</tt>,\n or -1 if there is no such index.\n\n @param e element to search for\n @param index index to start searching backwards from\n @return the index of the last occurrence of the element at position\n         less than or equal to <tt>index</tt> in this list;\n         -1 if the element is not found.\n @throws IndexOutOfBoundsException if the specified index is greater\n         than or equal to the current size of this list\n"
18163,method,java/util/concurrent/CopyOnWriteArrayList/clone/," Returns a shallow copy of this list.  (The elements themselves\n are not copied.)\n\n @return a clone of this list\n"
18168,method,java/util/concurrent/CopyOnWriteArrayList/add/Object," Appends the specified element to the end of this list.\n\n @param e element to be appended to this list\n @return <tt>true</tt> (as specified by {@link Collection#add})\n"
18172,method,java/util/concurrent/CopyOnWriteArrayList/addIfAbsent/Object," Append the element if not present.\n\n @param e element to be added to this list, if absent\n @return <tt>true</tt> if the element was added\n"
18173,method,java/util/concurrent/CopyOnWriteArrayList/containsAll/Collection," Returns <tt>true</tt> if this list contains all of the elements of the\n specified collection.\n\n @param c collection to be checked for containment in this list\n @return <tt>true</tt> if this list contains all of the elements of the\n         specified collection\n @throws NullPointerException if the specified collection is null\n @see #contains(Object)\n"
18176,method,java/util/concurrent/CopyOnWriteArrayList/addAllAbsent/Collection," Appends all of the elements in the specified collection that\n are not already contained in this list, to the end of\n this list, in the order that they are returned by the\n specified collection's iterator.\n\n @param c collection containing elements to be added to this list\n @return the number of elements added\n @throws NullPointerException if the specified collection is null\n @see #addIfAbsent(Object)\n"
18180,method,java/util/concurrent/CopyOnWriteArrayList/toString/," Returns a string representation of this list.  The string\n representation consists of the string representations of the list's\n elements in the order they are returned by its iterator, enclosed in\n square brackets (<tt>"[]"</tt>).  Adjacent elements are separated by\n the characters <tt>", "</tt> (comma and space).  Elements are\n converted to strings as by {@link String#valueOf(Object)}.\n\n @return a string representation of this list\n"
18181,method,java/util/concurrent/CopyOnWriteArrayList/equals/Object," Compares the specified object with this list for equality.\n Returns {@code true} if the specified object is the same object\n as this object, or if it is also a {@link List} and the sequence\n of elements returned by an {@linkplain List#iterator() iterator}\n over the specified list is the same as the sequence returned by\n an iterator over this list.  The two sequences are considered to\n be the same if they have the same length and corresponding\n elements at the same position in the sequence are <em>equal</em>.\n Two elements {@code e1} and {@code e2} are considered\n <em>equal</em> if {@code (e1==null ? e2==null : e1.equals(e2))}.\n\n @param o the object to be compared for equality with this list\n @return {@code true} if the specified object is equal to this list\n"
18182,method,java/util/concurrent/CopyOnWriteArrayList/hashCode/," Returns the hash code value for this list.\n\n <p>This implementation uses the definition in {@link List#hashCode}.\n\n @return the hash code value for this list\n"
18187,method,java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList/," Creates an empty list.\n"
18188,method,java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList/Collection," Creates a list containing the elements of the specified\n collection, in the order they are returned by the collection's\n iterator.\n\n @param c the collection of initially held elements\n @throws NullPointerException if the specified collection is null\n"
18189,method,java/util/concurrent/CopyOnWriteArrayList/CopyOnWriteArrayList/Object[]," Creates a list holding a copy of the given array.\n\n @param toCopyIn the array (a copy of this array is used as the\n        internal array)\n @throws NullPointerException if the specified array is null\n"
18193,method,java/util/concurrent/ConcurrentSkipListSet/isEmpty/," Returns <tt>true</tt> if this set contains no elements.\n @return <tt>true</tt> if this set contains no elements\n"
18197,method,java/util/concurrent/ConcurrentSkipListSet/clear/," Removes all of the elements from this set.\n"
18198,method,java/util/concurrent/ConcurrentSkipListSet/iterator/," Returns an iterator over the elements in this set in ascending order.\n\n @return an iterator over the elements in this set in ascending order\n"
18199,method,java/util/concurrent/ConcurrentSkipListSet/descendingIterator/," Returns an iterator over the elements in this set in descending order.\n\n @return an iterator over the elements in this set in descending order\n"
18200,method,java/util/concurrent/ConcurrentSkipListSet/equals/Object," Compares the specified object with this set for equality.  Returns\n <tt>true</tt> if the specified object is also a set, the two sets\n have the same size, and every member of the specified set is\n contained in this set (or equivalently, every member of this set is\n contained in the specified set).  This definition ensures that the\n equals method works properly across different implementations of the\n set interface.\n\n @param o the object to be compared for equality with this set\n @return <tt>true</tt> if the specified object is equal to this set\n"
18206,method,java/util/concurrent/ConcurrentSkipListSet/pollFirst/,""
18207,method,java/util/concurrent/ConcurrentSkipListSet/pollLast/,""
18208,method,java/util/concurrent/ConcurrentSkipListSet/comparator/,""
18217,method,java/util/concurrent/ConcurrentSkipListSet/descendingSet/," Returns a reverse order view of the elements contained in this set.\n The descending set is backed by this set, so changes to the set are\n reflected in the descending set, and vice-versa.\n\n <p>The returned set has an ordering equivalent to\n <tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.\n The expression {@code s.descendingSet().descendingSet()} returns a\n view of {@code s} essentially equivalent to {@code s}.\n\n @return a reverse order view of this set\n"
18218,method,java/util/concurrent/ConcurrentSkipListSet/ConcurrentSkipListSet/," Constructs a new, empty set that orders its elements according to\n their {@linkplain Comparable natural ordering}.\n"
18219,method,java/util/concurrent/ConcurrentSkipListSet/ConcurrentSkipListSet/Comparator," Constructs a new, empty set that orders its elements according to\n the specified comparator.\n\n @param comparator the comparator that will be used to order this set.\n        If <tt>null</tt>, the {@linkplain Comparable natural\n        ordering} of the elements will be used.\n"
18220,method,java/util/concurrent/ConcurrentSkipListSet/ConcurrentSkipListSet/Collection," Constructs a new set containing the elements in the specified\n collection, that orders its elements according to their\n {@linkplain Comparable natural ordering}.\n\n @param c The elements that will comprise the new set\n @throws ClassCastException if the elements in <tt>c</tt> are\n         not {@link Comparable}, or are not mutually comparable\n @throws NullPointerException if the specified collection or any\n         of its elements are null\n"
18221,method,java/util/concurrent/ConcurrentSkipListSet/ConcurrentSkipListSet/SortedSet," Constructs a new set containing the same elements and using the\n same ordering as the specified sorted set.\n\n @param s sorted set whose elements will comprise the new set\n @throws NullPointerException if the specified sorted set or any\n         of its elements are null\n"
18224,method,java/util/concurrent/ConcurrentSkipListMap/containsKey/Object," Returns <tt>true</tt> if this map contains a mapping for the specified\n key.\n\n @param key key whose presence in this map is to be tested\n @return <tt>true</tt> if this map contains a mapping for the specified key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n"
18225,method,java/util/concurrent/ConcurrentSkipListMap/get/Object," Returns the value to which the specified key is mapped,\n or {@code null} if this map contains no mapping for the key.\n\n <p>More formally, if this map contains a mapping from a key\n {@code k} to a value {@code v} such that {@code key} compares\n equal to {@code k} according to the map's ordering, then this\n method returns {@code v}; otherwise it returns {@code null}.\n (There can be at most one such mapping.)\n\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key is null\n"
18226,method,java/util/concurrent/ConcurrentSkipListMap/put/Object;Object," Associates the specified value with the specified key in this map.\n If the map previously contained a mapping for the key, the old\n value is replaced.\n\n @param key key with which the specified value is to be associated\n @param value value to be associated with the specified key\n @return the previous value associated with the specified key, or\n         <tt>null</tt> if there was no mapping for the key\n @throws ClassCastException if the specified key cannot be compared\n         with the keys currently in the map\n @throws NullPointerException if the specified key or value is null\n"
18230,method,java/util/concurrent/ConcurrentSkipListMap/isEmpty/," Returns <tt>true</tt> if this map contains no key-value mappings.\n @return <tt>true</tt> if this map contains no key-value mappings\n"
18231,method,java/util/concurrent/ConcurrentSkipListMap/clear/," Removes all of the mappings from this map.\n"
18233,method,java/util/concurrent/ConcurrentSkipListMap/navigableKeySet/,""
18236,method,java/util/concurrent/ConcurrentSkipListMap/descendingMap/,""
18237,method,java/util/concurrent/ConcurrentSkipListMap/descendingKeySet/,""
18243,method,java/util/concurrent/ConcurrentSkipListMap/comparator/,""
18260,method,java/util/concurrent/ConcurrentSkipListMap/firstEntry/," Returns a key-value mapping associated with the least\n key in this map, or <tt>null</tt> if the map is empty.\n The returned entry does <em>not</em> support\n the <tt>Entry.setValue</tt> method.\n"
18261,method,java/util/concurrent/ConcurrentSkipListMap/lastEntry/," Returns a key-value mapping associated with the greatest\n key in this map, or <tt>null</tt> if the map is empty.\n The returned entry does <em>not</em> support\n the <tt>Entry.setValue</tt> method.\n"
18262,method,java/util/concurrent/ConcurrentSkipListMap/pollFirstEntry/," Removes and returns a key-value mapping associated with\n the least key in this map, or <tt>null</tt> if the map is empty.\n The returned entry does <em>not</em> support\n the <tt>Entry.setValue</tt> method.\n"
18263,method,java/util/concurrent/ConcurrentSkipListMap/pollLastEntry/," Removes and returns a key-value mapping associated with\n the greatest key in this map, or <tt>null</tt> if the map is empty.\n The returned entry does <em>not</em> support\n the <tt>Entry.setValue</tt> method.\n"
18264,method,java/util/concurrent/ConcurrentSkipListMap/ConcurrentSkipListMap/," Constructs a new, empty map, sorted according to the\n {@linkplain Comparable natural ordering} of the keys.\n"
18265,method,java/util/concurrent/ConcurrentSkipListMap/ConcurrentSkipListMap/Comparator," Constructs a new, empty map, sorted according to the specified\n comparator.\n\n @param comparator the comparator that will be used to order this map.\n        If <tt>null</tt>, the {@linkplain Comparable natural\n        ordering} of the keys will be used.\n"
18266,method,java/util/concurrent/ConcurrentSkipListMap/ConcurrentSkipListMap/Map," Constructs a new map containing the same mappings as the given map,\n sorted according to the {@linkplain Comparable natural ordering} of\n the keys.\n\n @param  m the map whose mappings are to be placed in this map\n @throws ClassCastException if the keys in <tt>m</tt> are not\n         {@link Comparable}, or are not mutually comparable\n @throws NullPointerException if the specified map or any of its keys\n         or values are null\n"
18267,method,java/util/concurrent/ConcurrentSkipListMap/ConcurrentSkipListMap/SortedMap," Constructs a new map containing the same mappings and using the\n same ordering as the specified sorted map.\n\n @param m the sorted map whose mappings are to be placed in this\n        map, and whose comparator is to be used to sort this map\n @throws NullPointerException if the specified sorted map or any of\n         its keys or values are null\n"
18275,method,java/util/concurrent/ConcurrentNavigableMap/descendingMap/," Returns a reverse order view of the mappings contained in this map.\n The descending map is backed by this map, so changes to the map are\n reflected in the descending map, and vice-versa.\n\n <p>The returned map has an ordering equivalent to\n <tt>{@link Collections#reverseOrder(Comparator) Collections.reverseOrder}(comparator())</tt>.\n The expression {@code m.descendingMap().descendingMap()} returns a\n view of {@code m} essentially equivalent to {@code m}.\n\n @return a reverse order view of this map\n"
18280,method,java/util/concurrent/ConcurrentMap/putIfAbsent/Object;Object," If the specified key is not already associated\n with a value, associate it with the given value.\n This is equivalent to\n <pre>\n   if (!map.containsKey(key))\n       return map.put(key, value);\n   else\n       return map.get(key);</pre>\n except that the action is performed atomically.\n\n @param key key with which the specified value is to be associated\n @param value value to be associated with the specified key\n @return the previous value associated with the specified key, or\n         <tt>null</tt> if there was no mapping for the key.\n         (A <tt>null</tt> return can also indicate that the map\n         previously associated <tt>null</tt> with the key,\n         if the implementation supports null values.)\n @throws UnsupportedOperationException if the <tt>put</tt> operation\n         is not supported by this map\n @throws ClassCastException if the class of the specified key or value\n         prevents it from being stored in this map\n @throws NullPointerException if the specified key or value is null,\n         and this map does not permit null keys or values\n @throws IllegalArgumentException if some property of the specified key\n         or value prevents it from being stored in this map\n\n"
18285,method,java/util/concurrent/ConcurrentLinkedQueue/add/Object," Inserts the specified element at the tail of this queue.\n\n @return {@code true}  (as specified by {@link Collection#add})\n @throws NullPointerException if the specified element is null\n"
18286,method,java/util/concurrent/ConcurrentLinkedQueue/offer/Object," Inserts the specified element at the tail of this queue.\n\n @return {@code true} (as specified by {@link Queue#offer})\n @throws NullPointerException if the specified element is null\n"
18287,method,java/util/concurrent/ConcurrentLinkedQueue/poll/,""
18288,method,java/util/concurrent/ConcurrentLinkedQueue/peek/,""
18289,method,java/util/concurrent/ConcurrentLinkedQueue/isEmpty/," Returns {@code true} if this queue contains no elements.\n\n @return {@code true} if this queue contains no elements\n"
18299,method,java/util/concurrent/ConcurrentHashMap/isEmpty/," Returns <tt>true</tt> if this map contains no key-value mappings.\n\n @return <tt>true</tt> if this map contains no key-value mappings\n"
18300,method,java/util/concurrent/ConcurrentHashMap/size/," Returns the number of key-value mappings in this map.  If the\n map contains more than <tt>Integer.MAX_VALUE</tt> elements, returns\n <tt>Integer.MAX_VALUE</tt>.\n\n @return the number of key-value mappings in this map\n"
18301,method,java/util/concurrent/ConcurrentHashMap/get/Object," Returns the value to which the specified key is mapped,\n or {@code null} if this map contains no mapping for the key.\n\n <p>More formally, if this map contains a mapping from a key\n {@code k} to a value {@code v} such that {@code key.equals(k)},\n then this method returns {@code v}; otherwise it returns\n {@code null}.  (There can be at most one such mapping.)\n\n @throws NullPointerException if the specified key is null\n"
18307,method,java/util/concurrent/ConcurrentHashMap/putAll/Map," Copies all of the mappings from the specified map to this one.\n These mappings replace any mappings that this map had for any of the\n keys currently in the specified map.\n\n @param m mappings to be stored in this map\n"
18308,method,java/util/concurrent/ConcurrentHashMap/remove/Object," Removes the key (and its corresponding value) from this map.\n This method does nothing if the key is not in the map.\n\n @param  key the key that needs to be removed\n @return the previous value associated with <tt>key</tt>, or\n         <tt>null</tt> if there was no mapping for <tt>key</tt>\n @throws NullPointerException if the specified key is null\n"
18312,method,java/util/concurrent/ConcurrentHashMap/clear/," Removes all of the mappings from this map.\n"
18316,method,java/util/concurrent/ConcurrentHashMap/keys/," Returns an enumeration of the keys in this table.\n\n @return an enumeration of the keys in this table\n @see #keySet()\n"
18317,method,java/util/concurrent/ConcurrentHashMap/elements/," Returns an enumeration of the values in this table.\n\n @return an enumeration of the values in this table\n @see #values()\n"
18326,method,java/util/concurrent/CompletionService/take/," Retrieves and removes the Future representing the next\n completed task, waiting if none are yet present.\n\n @return the Future representing the next completed task\n @throws InterruptedException if interrupted while waiting\n"
18327,method,java/util/concurrent/CompletionService/poll/," Retrieves and removes the Future representing the next\n completed task or <tt>null</tt> if none are present.\n\n @return the Future representing the next completed task, or\n         <tt>null</tt> if none are present\n"
18329,class,java/util/concurrent/CancellationException," Exception indicating that the result of a value-producing task,\n such as a {@link FutureTask}, cannot be retrieved because the task\n was cancelled.\n\n @since 1.5\n @author Doug Lea\n"
18330,method,java/util/concurrent/CancellationException/CancellationException/," Constructs a <tt>CancellationException</tt> with no detail message.\n"
18331,method,java/util/concurrent/CancellationException/CancellationException/String," Constructs a <tt>CancellationException</tt> with the specified detail\n message.\n\n @param message the detail message\n"
18333,method,java/util/concurrent/Callable/call/," Computes a result, or throws an exception if unable to do so.\n\n @return computed result\n @throws Exception if unable to compute a result\n"
18335,method,java/util/concurrent/BrokenBarrierException/BrokenBarrierException/," Constructs a <tt>BrokenBarrierException</tt> with no specified detail\n message.\n"
18336,method,java/util/concurrent/BrokenBarrierException/BrokenBarrierException/String," Constructs a <tt>BrokenBarrierException</tt> with the specified\n detail message.\n\n @param message the detail message\n"
18369,method,java/util/concurrent/BlockingDeque/poll/," Retrieves and removes the head of the queue represented by this deque\n (in other words, the first element of this deque), or returns\n <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #pollFirst()}.\n\n @return the head of this deque, or <tt>null</tt> if this deque is empty\n"
18373,method,java/util/concurrent/BlockingDeque/peek/," Retrieves, but does not remove, the head of the queue represented by\n this deque (in other words, the first element of this deque), or\n returns <tt>null</tt> if this deque is empty.\n\n <p>This method is equivalent to {@link #peekFirst() peekFirst}.\n\n @return the head of this deque, or <tt>null</tt> if this deque is empty\n"
18376,method,java/util/concurrent/BlockingDeque/size/," Returns the number of elements in this deque.\n\n @return the number of elements in this deque\n"
18377,method,java/util/concurrent/BlockingDeque/iterator/," Returns an iterator over the elements in this deque in proper sequence.\n The elements will be returned in order from first (head) to last (tail).\n\n @return an iterator over the elements in this deque in proper sequence\n"
18380,method,java/util/concurrent/ArrayBlockingQueue/add/Object," Inserts the specified element at the tail of this queue if it is\n possible to do so immediately without exceeding the queue's capacity,\n returning <tt>true</tt> upon success and throwing an\n <tt>IllegalStateException</tt> if this queue is full.\n\n @param e the element to add\n @return <tt>true</tt> (as specified by {@link Collection#add})\n @throws IllegalStateException if this queue is full\n @throws NullPointerException if the specified element is null\n"
18384,method,java/util/concurrent/ArrayBlockingQueue/poll/,""
18385,method,java/util/concurrent/ArrayBlockingQueue/take/,""
18386,method,java/util/concurrent/ArrayBlockingQueue/poll/long;TimeUnit,""
18387,method,java/util/concurrent/ArrayBlockingQueue/peek/,""
18388,method,java/util/concurrent/ArrayBlockingQueue/size/," Returns the number of elements in this queue.\n\n @return the number of elements in this queue\n"
18394,method,java/util/concurrent/ArrayBlockingQueue/toString/,""
18399,method,java/util/concurrent/ArrayBlockingQueue/ArrayBlockingQueue/int," Creates an <tt>ArrayBlockingQueue</tt> with the given (fixed)\n capacity and default access policy.\n\n @param capacity the capacity of this queue\n @throws IllegalArgumentException if <tt>capacity</tt> is less than 1\n"
18403,method,java/util/concurrent/AbstractExecutorService/newTaskFor/Runnable;Object," Returns a <tt>RunnableFuture</tt> for the given runnable and default\n value.\n\n @param runnable the runnable task being wrapped\n @param value the default value for the returned future\n @return a <tt>RunnableFuture</tt> which when run will run the\n underlying runnable and which, as a <tt>Future</tt>, will yield\n the given value as its result and provide for cancellation of\n the underlying task.\n @since 1.6\n"
18405,method,java/util/concurrent/AbstractExecutorService/submit/Runnable,""
18406,method,java/util/concurrent/AbstractExecutorService/submit/Runnable;Object,""
18407,method,java/util/concurrent/AbstractExecutorService/submit/Callable,""
18408,method,java/util/concurrent/AbstractExecutorService/invokeAny/Collection,""
18409,method,java/util/concurrent/AbstractExecutorService/invokeAny/Collection;long;TimeUnit,""
18410,method,java/util/concurrent/AbstractExecutorService/invokeAll/Collection,""
18411,method,java/util/concurrent/AbstractExecutorService/invokeAll/Collection;long;TimeUnit,""
18412,method,java/util/concurrent/AbstractExecutorService/AbstractExecutorService/,""
18414,method,java/util/concurrent/atomic/AtomicStampedReference/getReference/," Returns the current value of the reference.\n\n @return the current value of the reference\n"
18415,method,java/util/concurrent/atomic/AtomicStampedReference/getStamp/," Returns the current value of the stamp.\n\n @return the current value of the stamp\n"
18416,method,java/util/concurrent/atomic/AtomicStampedReference/get/int[]," Returns the current values of both the reference and the stamp.\n Typical usage is {@code int[1] holder; ref = v.get(holder); }.\n\n @param stampHolder an array of size of at least one.  On return,\n {@code stampholder[0]} will hold the value of the stamp.\n @return the current value of the reference\n"
18418,method,java/util/concurrent/atomic/AtomicStampedReference/compareAndSet/Object;Object;int;int," Atomically sets the value of both the reference and stamp\n to the given update values if the\n current reference is {@code ==} to the expected reference\n and the current stamp is equal to the expected stamp.\n\n @param expectedReference the expected value of the reference\n @param newReference the new value for the reference\n @param expectedStamp the expected value of the stamp\n @param newStamp the new value for the stamp\n @return true if successful\n"
18419,method,java/util/concurrent/atomic/AtomicStampedReference/set/Object;int," Unconditionally sets the value of both the reference and stamp.\n\n @param newReference the new value for the reference\n @param newStamp the new value for the stamp\n"
18421,method,java/util/concurrent/atomic/AtomicStampedReference/AtomicStampedReference/Object;int," Creates a new {@code AtomicStampedReference} with the given\n initial values.\n\n @param initialRef the initial reference\n @param initialStamp the initial stamp\n"
18423,method,java/util/concurrent/atomic/AtomicReferenceFieldUpdater/newUpdater/Class;Class;String," Creates and returns an updater for objects with the given field.\n The Class arguments are needed to check that reflective types and\n generic types match.\n\n @param tclass the class of the objects holding the field.\n @param vclass the class of the field\n @param fieldName the name of the field to be updated.\n @return the updater\n @throws IllegalArgumentException if the field is not a volatile reference type.\n @throws RuntimeException with a nested reflection-based\n exception if the class does not hold field or is the wrong type.\n"
18427,method,java/util/concurrent/atomic/AtomicReferenceFieldUpdater/lazySet/Object;Object," Eventually sets the field of the given object managed by this\n updater to the given updated value.\n\n @param obj An object whose field to set\n @param newValue the new value\n @since 1.6\n"
18428,method,java/util/concurrent/atomic/AtomicReferenceFieldUpdater/get/Object," Gets the current value held in the field of the given object managed\n by this updater.\n\n @param obj An object whose field to get\n @return the current value\n"
18429,method,java/util/concurrent/atomic/AtomicReferenceFieldUpdater/getAndSet/Object;Object," Atomically sets the field of the given object managed by this updater\n to the given value and returns the old value.\n\n @param obj An object whose field to get and set\n @param newValue the new value\n @return the previous value\n"
18432,method,java/util/concurrent/atomic/AtomicReferenceArray/length/," Returns the length of the array.\n\n @return the length of the array\n"
18433,method,java/util/concurrent/atomic/AtomicReferenceArray/get/int," Gets the current value at position {@code i}.\n\n @param i the index\n @return the current value\n"
18434,method,java/util/concurrent/atomic/AtomicReferenceArray/set/int;Object," Sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n"
18435,method,java/util/concurrent/atomic/AtomicReferenceArray/lazySet/int;Object," Eventually sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n @since 1.6\n"
18436,method,java/util/concurrent/atomic/AtomicReferenceArray/getAndSet/int;Object," Atomically sets the element at position {@code i} to the given\n value and returns the old value.\n\n @param i the index\n @param newValue the new value\n @return the previous value\n"
18437,method,java/util/concurrent/atomic/AtomicReferenceArray/compareAndSet/int;Object;Object," Atomically sets the element at position {@code i} to the given\n updated value if the current value {@code ==} the expected value.\n @param i the index\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18439,method,java/util/concurrent/atomic/AtomicReferenceArray/toString/," Returns the String representation of the current values of array.\n @return the String representation of the current values of array.\n"
18440,method,java/util/concurrent/atomic/AtomicReferenceArray/AtomicReferenceArray/int," Creates a new AtomicReferenceArray of given length.\n @param length the length of the array\n"
18441,method,java/util/concurrent/atomic/AtomicReferenceArray/AtomicReferenceArray/Object[]," Creates a new AtomicReferenceArray with the same length as, and\n all elements copied from, the given array.\n\n @param array the array to copy elements from\n @throws NullPointerException if array is null\n"
18443,method,java/util/concurrent/atomic/AtomicReference/get/," Gets the current value.\n\n @return the current value\n"
18444,method,java/util/concurrent/atomic/AtomicReference/set/Object," Sets to the given value.\n\n @param newValue the new value\n"
18445,method,java/util/concurrent/atomic/AtomicReference/lazySet/Object," Eventually sets to the given value.\n\n @param newValue the new value\n @since 1.6\n"
18446,method,java/util/concurrent/atomic/AtomicReference/compareAndSet/Object;Object," Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18448,method,java/util/concurrent/atomic/AtomicReference/getAndSet/Object," Atomically sets to the given value and returns the old value.\n\n @param newValue the new value\n @return the previous value\n"
18449,method,java/util/concurrent/atomic/AtomicReference/toString/," Returns the String representation of the current value.\n @return the String representation of the current value.\n"
18450,method,java/util/concurrent/atomic/AtomicReference/AtomicReference/Object," Creates a new AtomicReference with the given initial value.\n\n @param initialValue the initial value\n"
18451,method,java/util/concurrent/atomic/AtomicReference/AtomicReference/," Creates a new AtomicReference with null initial value.\n"
18453,method,java/util/concurrent/atomic/AtomicMarkableReference/getReference/," Returns the current value of the reference.\n\n @return the current value of the reference\n"
18454,method,java/util/concurrent/atomic/AtomicMarkableReference/isMarked/," Returns the current value of the mark.\n\n @return the current value of the mark\n"
18455,method,java/util/concurrent/atomic/AtomicMarkableReference/get/boolean[]," Returns the current values of both the reference and the mark.\n Typical usage is {@code boolean[1] holder; ref = v.get(holder); }.\n\n @param markHolder an array of size of at least one. On return,\n {@code markholder[0]} will hold the value of the mark.\n @return the current value of the reference\n"
18457,method,java/util/concurrent/atomic/AtomicMarkableReference/compareAndSet/Object;Object;boolean;boolean," Atomically sets the value of both the reference and mark\n to the given update values if the\n current reference is {@code ==} to the expected reference\n and the current mark is equal to the expected mark.\n\n @param expectedReference the expected value of the reference\n @param newReference the new value for the reference\n @param expectedMark the expected value of the mark\n @param newMark the new value for the mark\n @return true if successful\n"
18458,method,java/util/concurrent/atomic/AtomicMarkableReference/set/Object;boolean," Unconditionally sets the value of both the reference and mark.\n\n @param newReference the new value for the reference\n @param newMark the new value for the mark\n"
18460,method,java/util/concurrent/atomic/AtomicMarkableReference/AtomicMarkableReference/Object;boolean," Creates a new {@code AtomicMarkableReference} with the given\n initial values.\n\n @param initialRef the initial reference\n @param initialMark the initial mark\n"
18462,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/newUpdater/Class;String," Creates and returns an updater for objects with the given field.\n The Class argument is needed to check that reflective types and\n generic types match.\n\n @param tclass the class of the objects holding the field\n @param fieldName the name of the field to be updated.\n @return the updater\n @throws IllegalArgumentException if the field is not a\n volatile long type.\n @throws RuntimeException with a nested reflection-based\n exception if the class does not hold field or is the wrong type.\n"
18466,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/lazySet/Object;long," Eventually sets the field of the given object managed by this\n updater to the given updated value.\n\n @param obj An object whose field to set\n @param newValue the new value\n @since 1.6\n"
18467,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/get/Object," Gets the current value held in the field of the given object managed\n by this updater.\n\n @param obj An object whose field to get\n @return the current value\n"
18468,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/getAndSet/Object;long," Atomically sets the field of the given object managed by this updater\n to the given value and returns the old value.\n\n @param obj An object whose field to get and set\n @param newValue the new value\n @return the previous value\n"
18469,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/getAndIncrement/Object," Atomically increments by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the previous value\n"
18470,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/getAndDecrement/Object," Atomically decrements by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the previous value\n"
18471,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/getAndAdd/Object;long," Atomically adds the given value to the current value of the field of\n the given object managed by this updater.\n\n @param obj An object whose field to get and set\n @param delta the value to add\n @return the previous value\n"
18472,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/incrementAndGet/Object," Atomically increments by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the updated value\n"
18473,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/decrementAndGet/Object," Atomically decrements by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the updated value\n"
18474,method,java/util/concurrent/atomic/AtomicLongFieldUpdater/addAndGet/Object;long," Atomically adds the given value to the current value of the field of\n the given object managed by this updater.\n\n @param obj An object whose field to get and set\n @param delta the value to add\n @return the updated value\n"
18477,method,java/util/concurrent/atomic/AtomicLongArray/length/," Returns the length of the array.\n\n @return the length of the array\n"
18478,method,java/util/concurrent/atomic/AtomicLongArray/get/int," Gets the current value at position {@code i}.\n\n @param i the index\n @return the current value\n"
18479,method,java/util/concurrent/atomic/AtomicLongArray/set/int;long," Sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n"
18480,method,java/util/concurrent/atomic/AtomicLongArray/lazySet/int;long," Eventually sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n @since 1.6\n"
18481,method,java/util/concurrent/atomic/AtomicLongArray/getAndSet/int;long," Atomically sets the element at position {@code i} to the given value\n and returns the old value.\n\n @param i the index\n @param newValue the new value\n @return the previous value\n"
18482,method,java/util/concurrent/atomic/AtomicLongArray/compareAndSet/int;long;long," Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.\n\n @param i the index\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18484,method,java/util/concurrent/atomic/AtomicLongArray/getAndIncrement/int," Atomically increments by one the element at index {@code i}.\n\n @param i the index\n @return the previous value\n"
18485,method,java/util/concurrent/atomic/AtomicLongArray/getAndDecrement/int," Atomically decrements by one the element at index {@code i}.\n\n @param i the index\n @return the previous value\n"
18486,method,java/util/concurrent/atomic/AtomicLongArray/getAndAdd/int;long," Atomically adds the given value to the element at index {@code i}.\n\n @param i the index\n @param delta the value to add\n @return the previous value\n"
18487,method,java/util/concurrent/atomic/AtomicLongArray/incrementAndGet/int," Atomically increments by one the element at index {@code i}.\n\n @param i the index\n @return the updated value\n"
18488,method,java/util/concurrent/atomic/AtomicLongArray/decrementAndGet/int," Atomically decrements by one the element at index {@code i}.\n\n @param i the index\n @return the updated value\n"
18489,method,java/util/concurrent/atomic/AtomicLongArray/addAndGet/int;long," Atomically adds the given value to the element at index {@code i}.\n\n @param i the index\n @param delta the value to add\n @return the updated value\n"
18490,method,java/util/concurrent/atomic/AtomicLongArray/toString/," Returns the String representation of the current values of array.\n @return the String representation of the current values of array.\n"
18491,method,java/util/concurrent/atomic/AtomicLongArray/AtomicLongArray/int," Creates a new AtomicLongArray of given length.\n\n @param length the length of the array\n"
18492,method,java/util/concurrent/atomic/AtomicLongArray/AtomicLongArray/long[]," Creates a new AtomicLongArray with the same length as, and\n all elements copied from, the given array.\n\n @param array the array to copy elements from\n @throws NullPointerException if array is null\n"
18494,method,java/util/concurrent/atomic/AtomicLong/get/," Gets the current value.\n\n @return the current value\n"
18495,method,java/util/concurrent/atomic/AtomicLong/set/long," Sets to the given value.\n\n @param newValue the new value\n"
18496,method,java/util/concurrent/atomic/AtomicLong/lazySet/long," Eventually sets to the given value.\n\n @param newValue the new value\n @since 1.6\n"
18497,method,java/util/concurrent/atomic/AtomicLong/getAndSet/long," Atomically sets to the given value and returns the old value.\n\n @param newValue the new value\n @return the previous value\n"
18498,method,java/util/concurrent/atomic/AtomicLong/compareAndSet/long;long," Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.\n\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18500,method,java/util/concurrent/atomic/AtomicLong/getAndIncrement/," Atomically increments by one the current value.\n\n @return the previous value\n"
18501,method,java/util/concurrent/atomic/AtomicLong/getAndDecrement/," Atomically decrements by one the current value.\n\n @return the previous value\n"
18502,method,java/util/concurrent/atomic/AtomicLong/getAndAdd/long," Atomically adds the given value to the current value.\n\n @param delta the value to add\n @return the previous value\n"
18503,method,java/util/concurrent/atomic/AtomicLong/incrementAndGet/," Atomically increments by one the current value.\n\n @return the updated value\n"
18504,method,java/util/concurrent/atomic/AtomicLong/decrementAndGet/," Atomically decrements by one the current value.\n\n @return the updated value\n"
18505,method,java/util/concurrent/atomic/AtomicLong/addAndGet/long," Atomically adds the given value to the current value.\n\n @param delta the value to add\n @return the updated value\n"
18506,method,java/util/concurrent/atomic/AtomicLong/toString/," Returns the String representation of the current value.\n @return the String representation of the current value.\n"
18507,method,java/util/concurrent/atomic/AtomicLong/intValue/,""
18508,method,java/util/concurrent/atomic/AtomicLong/longValue/,""
18509,method,java/util/concurrent/atomic/AtomicLong/floatValue/,""
18510,method,java/util/concurrent/atomic/AtomicLong/doubleValue/,""
18511,method,java/util/concurrent/atomic/AtomicLong/AtomicLong/long," Creates a new AtomicLong with the given initial value.\n\n @param initialValue the initial value\n"
18512,method,java/util/concurrent/atomic/AtomicLong/AtomicLong/," Creates a new AtomicLong with initial value {@code 0}.\n"
18514,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/newUpdater/Class;String," Creates and returns an updater for objects with the given field.\n The Class argument is needed to check that reflective types and\n generic types match.\n\n @param tclass the class of the objects holding the field\n @param fieldName the name of the field to be updated\n @return the updater\n @throws IllegalArgumentException if the field is not a\n volatile integer type\n @throws RuntimeException with a nested reflection-based\n exception if the class does not hold field or is the wrong type\n"
18518,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/lazySet/Object;int," Eventually sets the field of the given object managed by this\n updater to the given updated value.\n\n @param obj An object whose field to set\n @param newValue the new value\n @since 1.6\n"
18519,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/get/Object," Gets the current value held in the field of the given object managed\n by this updater.\n\n @param obj An object whose field to get\n @return the current value\n"
18520,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/getAndSet/Object;int," Atomically sets the field of the given object managed by this updater\n to the given value and returns the old value.\n\n @param obj An object whose field to get and set\n @param newValue the new value\n @return the previous value\n"
18521,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/getAndIncrement/Object," Atomically increments by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the previous value\n"
18522,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/getAndDecrement/Object," Atomically decrements by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the previous value\n"
18523,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/getAndAdd/Object;int," Atomically adds the given value to the current value of the field of\n the given object managed by this updater.\n\n @param obj An object whose field to get and set\n @param delta the value to add\n @return the previous value\n"
18524,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/incrementAndGet/Object," Atomically increments by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the updated value\n"
18525,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/decrementAndGet/Object," Atomically decrements by one the current value of the field of the\n given object managed by this updater.\n\n @param obj An object whose field to get and set\n @return the updated value\n"
18526,method,java/util/concurrent/atomic/AtomicIntegerFieldUpdater/addAndGet/Object;int," Atomically adds the given value to the current value of the field of\n the given object managed by this updater.\n\n @param obj An object whose field to get and set\n @param delta the value to add\n @return the updated value\n"
18529,method,java/util/concurrent/atomic/AtomicIntegerArray/length/," Returns the length of the array.\n\n @return the length of the array\n"
18530,method,java/util/concurrent/atomic/AtomicIntegerArray/get/int," Gets the current value at position {@code i}.\n\n @param i the index\n @return the current value\n"
18531,method,java/util/concurrent/atomic/AtomicIntegerArray/set/int;int," Sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n"
18532,method,java/util/concurrent/atomic/AtomicIntegerArray/lazySet/int;int," Eventually sets the element at position {@code i} to the given value.\n\n @param i the index\n @param newValue the new value\n @since 1.6\n"
18533,method,java/util/concurrent/atomic/AtomicIntegerArray/getAndSet/int;int," Atomically sets the element at position {@code i} to the given\n value and returns the old value.\n\n @param i the index\n @param newValue the new value\n @return the previous value\n"
18534,method,java/util/concurrent/atomic/AtomicIntegerArray/compareAndSet/int;int;int," Atomically sets the element at position {@code i} to the given\n updated value if the current value {@code ==} the expected value.\n\n @param i the index\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18536,method,java/util/concurrent/atomic/AtomicIntegerArray/getAndIncrement/int," Atomically increments by one the element at index {@code i}.\n\n @param i the index\n @return the previous value\n"
18537,method,java/util/concurrent/atomic/AtomicIntegerArray/getAndDecrement/int," Atomically decrements by one the element at index {@code i}.\n\n @param i the index\n @return the previous value\n"
18538,method,java/util/concurrent/atomic/AtomicIntegerArray/getAndAdd/int;int," Atomically adds the given value to the element at index {@code i}.\n\n @param i the index\n @param delta the value to add\n @return the previous value\n"
18539,method,java/util/concurrent/atomic/AtomicIntegerArray/incrementAndGet/int," Atomically increments by one the element at index {@code i}.\n\n @param i the index\n @return the updated value\n"
18540,method,java/util/concurrent/atomic/AtomicIntegerArray/decrementAndGet/int," Atomically decrements by one the element at index {@code i}.\n\n @param i the index\n @return the updated value\n"
18541,method,java/util/concurrent/atomic/AtomicIntegerArray/addAndGet/int;int," Atomically adds the given value to the element at index {@code i}.\n\n @param i the index\n @param delta the value to add\n @return the updated value\n"
18542,method,java/util/concurrent/atomic/AtomicIntegerArray/toString/," Returns the String representation of the current values of array.\n @return the String representation of the current values of array.\n"
18543,method,java/util/concurrent/atomic/AtomicIntegerArray/AtomicIntegerArray/int," Creates a new AtomicIntegerArray of given length.\n\n @param length the length of the array\n"
18544,method,java/util/concurrent/atomic/AtomicIntegerArray/AtomicIntegerArray/int[]," Creates a new AtomicIntegerArray with the same length as, and\n all elements copied from, the given array.\n\n @param array the array to copy elements from\n @throws NullPointerException if array is null\n"
18546,method,java/util/concurrent/atomic/AtomicInteger/get/," Gets the current value.\n\n @return the current value\n"
18547,method,java/util/concurrent/atomic/AtomicInteger/set/int," Sets to the given value.\n\n @param newValue the new value\n"
18548,method,java/util/concurrent/atomic/AtomicInteger/lazySet/int," Eventually sets to the given value.\n\n @param newValue the new value\n @since 1.6\n"
18549,method,java/util/concurrent/atomic/AtomicInteger/getAndSet/int," Atomically sets to the given value and returns the old value.\n\n @param newValue the new value\n @return the previous value\n"
18550,method,java/util/concurrent/atomic/AtomicInteger/compareAndSet/int;int," Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.\n\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18552,method,java/util/concurrent/atomic/AtomicInteger/getAndIncrement/," Atomically increments by one the current value.\n\n @return the previous value\n"
18553,method,java/util/concurrent/atomic/AtomicInteger/getAndDecrement/," Atomically decrements by one the current value.\n\n @return the previous value\n"
18554,method,java/util/concurrent/atomic/AtomicInteger/getAndAdd/int," Atomically adds the given value to the current value.\n\n @param delta the value to add\n @return the previous value\n"
18555,method,java/util/concurrent/atomic/AtomicInteger/incrementAndGet/," Atomically increments by one the current value.\n\n @return the updated value\n"
18556,method,java/util/concurrent/atomic/AtomicInteger/decrementAndGet/," Atomically decrements by one the current value.\n\n @return the updated value\n"
18557,method,java/util/concurrent/atomic/AtomicInteger/addAndGet/int," Atomically adds the given value to the current value.\n\n @param delta the value to add\n @return the updated value\n"
18558,method,java/util/concurrent/atomic/AtomicInteger/toString/," Returns the String representation of the current value.\n @return the String representation of the current value.\n"
18559,method,java/util/concurrent/atomic/AtomicInteger/intValue/,""
18560,method,java/util/concurrent/atomic/AtomicInteger/longValue/,""
18561,method,java/util/concurrent/atomic/AtomicInteger/floatValue/,""
18562,method,java/util/concurrent/atomic/AtomicInteger/doubleValue/,""
18563,method,java/util/concurrent/atomic/AtomicInteger/AtomicInteger/int," Creates a new AtomicInteger with the given initial value.\n\n @param initialValue the initial value\n"
18564,method,java/util/concurrent/atomic/AtomicInteger/AtomicInteger/," Creates a new AtomicInteger with initial value {@code 0}.\n"
18566,method,java/util/concurrent/atomic/AtomicBoolean/get/," Returns the current value.\n\n @return the current value\n"
18567,method,java/util/concurrent/atomic/AtomicBoolean/compareAndSet/boolean;boolean," Atomically sets the value to the given updated value\n if the current value {@code ==} the expected value.\n\n @param expect the expected value\n @param update the new value\n @return true if successful. False return indicates that\n the actual value was not equal to the expected value.\n"
18569,method,java/util/concurrent/atomic/AtomicBoolean/set/boolean," Unconditionally sets to the given value.\n\n @param newValue the new value\n"
18570,method,java/util/concurrent/atomic/AtomicBoolean/lazySet/boolean," Eventually sets to the given value.\n\n @param newValue the new value\n @since 1.6\n"
18571,method,java/util/concurrent/atomic/AtomicBoolean/getAndSet/boolean," Atomically sets to the given value and returns the previous value.\n\n @param newValue the new value\n @return the previous value\n"
18572,method,java/util/concurrent/atomic/AtomicBoolean/toString/," Returns the String representation of the current value.\n @return the String representation of the current value.\n"
18573,method,java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean/boolean," Creates a new {@code AtomicBoolean} with the given initial value.\n\n @param initialValue the initial value\n"
18574,method,java/util/concurrent/atomic/AtomicBoolean/AtomicBoolean/," Creates a new {@code AtomicBoolean} with initial value {@code false}.\n"
18576,method,java/util/concurrent/locks/ReentrantReadWriteLock/writeLock/,""
18577,method,java/util/concurrent/locks/ReentrantReadWriteLock/readLock/,""
18595,method,java/util/concurrent/locks/ReentrantReadWriteLock/ReentrantReadWriteLock/," Creates a new {@code ReentrantReadWriteLock} with\n default (nonfair) ordering properties.\n"
18637,method,java/util/concurrent/locks/ReentrantLock/ReentrantLock/," Creates an instance of {@code ReentrantLock}.\n This is equivalent to using {@code ReentrantLock(false)}.\n"
18756,class,java/util/spi/TimeZoneNameProvider," An abstract class for service providers that\n provide localized time zone names for the\n {@link java.util.TimeZone TimeZone} class.\n The localized time zone names available from the implementations of\n this class are also the source for the \n {@link java.text.DateFormatSymbols#getZoneStrings() \n DateFormatSymbols.getZoneStrings()} method.\n\n @since        1.6\n @version      @(#)TimeZoneNameProvider.java	1.3 10/03/23\n"
18760,method,java/util/spi/LocaleServiceProvider/getAvailableLocales/," Returns an array of all locales for which this locale service provider \n can provide localized objects or names.\n\n @return An array of all locales for which this locale service provider \n can provide localized objects or names.\n"
18762,class,java/util/spi/LocaleNameProvider," An abstract class for service providers that\n provide localized names for the \n {@link java.util.Locale Locale} class.\n\n @since        1.6\n @version      @(#)LocaleNameProvider.java	1.3 10/03/23\n"
18773,method,java/util/regex/PatternSyntaxException/getPattern/," Retrieves the erroneous regular-expression pattern.\n\n @return  The erroneous pattern\n"
18777,method,java/util/regex/Pattern/compile/String," Compiles the given regular expression into a pattern.  </p>\n\n @param  regex\n         The expression to be compiled\n\n @throws  PatternSyntaxException\n          If the expression's syntax is invalid\n"
18779,method,java/util/regex/Pattern/pattern/," Returns the regular expression from which this pattern was compiled.\n </p>\n\n @return  The source of this pattern\n"
18780,method,java/util/regex/Pattern/toString/," <p>Returns the string representation of this pattern. This\n is the regular expression from which this pattern was\n compiled.</p>\n\n @return  The string representation of this pattern\n @since 1.5\n"
18781,method,java/util/regex/Pattern/matcher/CharSequence," Creates a matcher that will match the given input against this pattern.\n </p>\n\n @param  input\n         The character sequence to be matched\n\n @return  A new matcher for this pattern\n"
18782,method,java/util/regex/Pattern/flags/," Returns this pattern's match flags.  </p>\n\n @return  The match flags specified when this pattern was compiled\n"
18784,method,java/util/regex/Pattern/split/CharSequence;int," Splits the given input sequence around matches of this pattern.\n\n <p> The array returned by this method contains each substring of the\n input sequence that is terminated by another subsequence that matches\n this pattern or is terminated by the end of the input sequence.  The\n substrings in the array are in the order in which they occur in the\n input.  If this pattern does not match any subsequence of the input then\n the resulting array has just one element, namely the input sequence in\n string form.\n\n <p> The <tt>limit</tt> parameter controls the number of times the\n pattern is applied and therefore affects the length of the resulting\n array.  If the limit <i>n</i> is greater than zero then the pattern\n will be applied at most <i>n</i>&nbsp;-&nbsp;1 times, the array's\n length will be no greater than <i>n</i>, and the array's last entry\n will contain all input beyond the last matched delimiter.  If <i>n</i>\n is non-positive then the pattern will be applied as many times as\n possible and the array can have any length.  If <i>n</i> is zero then\n the pattern will be applied as many times as possible, the array can\n have any length, and trailing empty strings will be discarded.\n\n <p> The input <tt>"boo:and:foo"</tt>, for example, yields the following\n results with these parameters:\n\n <blockquote><table cellpadding=1 cellspacing=0\n              summary="Split examples showing regex, limit, and result">\n <tr><th><P align="left"><i>Regex&nbsp;&nbsp;&nbsp;&nbsp;</i></th>\n     <th><P align="left"><i>Limit&nbsp;&nbsp;&nbsp;&nbsp;</i></th>\n     <th><P align="left"><i>Result&nbsp;&nbsp;&nbsp;&nbsp;</i></th></tr>\n <tr><td align=center>:</td>\n     <td align=center>2</td>\n     <td><tt>{ "boo", "and:foo" }</tt></td></tr>\n <tr><td align=center>:</td>\n     <td align=center>5</td>\n     <td><tt>{ "boo", "and", "foo" }</tt></td></tr>\n <tr><td align=center>:</td>\n     <td align=center>-2</td>\n     <td><tt>{ "boo", "and", "foo" }</tt></td></tr>\n <tr><td align=center>o</td>\n     <td align=center>5</td>\n     <td><tt>{ "b", "", ":and:f", "", "" }</tt></td></tr>\n <tr><td align=center>o</td>\n     <td align=center>-2</td>\n     <td><tt>{ "b", "", ":and:f", "", "" }</tt></td></tr>\n <tr><td align=center>o</td>\n     <td align=center>0</td>\n     <td><tt>{ "b", "", ":and:f" }</tt></td></tr>\n </table></blockquote>\n\n\n @param  input\n         The character sequence to be split\n\n @param  limit\n         The result threshold, as described above\n\n @return  The array of strings computed by splitting the input\n          around matches of this pattern\n"
18786,method,java/util/regex/Pattern/quote/String," Returns a literal pattern <code>String</code> for the specified\n <code>String</code>.\n\n <p>This method produces a <code>String</code> that can be used to\n create a <code>Pattern</code> that would match the string\n <code>s</code> as if it were a literal pattern.</p> Metacharacters\n or escape sequences in the input sequence will be given no special\n meaning.\n\n @param  s The string to be literalized\n @return  A literal string replacement\n @since 1.5\n"
18789,field,java/util/regex/Pattern/COMMENTS," Permits whitespace and comments in pattern.\n\n <p> In this mode, whitespace is ignored, and embedded comments starting\n with <tt>#</tt> are ignored until the end of a line.\n\n <p> Comments mode can also be enabled via the embedded flag\n expression&nbsp;<tt>(?x)</tt>.\n"
18796,method,java/util/regex/Matcher/pattern/," Returns the pattern that is interpreted by this matcher.\n\n @return  The pattern for which this matcher was created\n"
18797,method,java/util/regex/Matcher/toMatchResult/," Returns the match state of this matcher as a {@link MatchResult}.\n The result is unaffected by subsequent operations performed upon this\n matcher.\n\n @return  a <code>MatchResult</code> with the state of this matcher\n @since 1.5\n"
18798,method,java/util/regex/Matcher/usePattern/Pattern," Changes the <tt>Pattern</tt> that this <tt>Matcher</tt> uses to\n find matches with.\n\n <p> This method causes this matcher to lose information\n about the groups of the last match that occurred. The\n matcher's position in the input is maintained and its\n last append position is unaffected.</p>\n\n @param  newPattern\n         The new pattern used by this matcher\n @return  This matcher\n @throws  IllegalArgumentException\n          If newPattern is <tt>null</tt>\n @since 1.5\n"
18799,method,java/util/regex/Matcher/reset/," Resets this matcher.\n\n <p> Resetting a matcher discards all of its explicit state information\n and sets its append position to zero. The matcher's region is set to the\n default region, which is its entire character sequence. The anchoring\n and transparency of this matcher's region boundaries are unaffected.\n\n @return  This matcher\n"
18800,method,java/util/regex/Matcher/reset/CharSequence," Resets this matcher with a new input sequence.\n\n <p> Resetting a matcher discards all of its explicit state information\n and sets its append position to zero.  The matcher's region is set to\n the default region, which is its entire character sequence.  The \n anchoring and transparency of this matcher's region boundaries are \n unaffected.\n\n @param  input\n         The new input character sequence\n\n @return  This matcher\n"
18801,method,java/util/regex/Matcher/start/," Returns the start index of the previous match.  </p>\n\n @return  The index of the first character matched\n\n @throws  IllegalStateException\n          If no match has yet been attempted,\n          or if the previous match operation failed\n"
18802,method,java/util/regex/Matcher/start/int," Returns the start index of the subsequence captured by the given group\n during the previous match operation.\n\n <p> <a href="Pattern.html#cg">Capturing groups</a> are indexed from left\n to right, starting at one.  Group zero denotes the entire pattern, so\n the expression <i>m.</i><tt>start(0)</tt> is equivalent to\n <i>m.</i><tt>start()</tt>.  </p>\n\n @param  group\n         The index of a capturing group in this matcher's pattern\n\n @return  The index of the first character captured by the group,\n          or <tt>-1</tt> if the match was successful but the group\n          itself did not match anything\n\n @throws  IllegalStateException\n          If no match has yet been attempted,\n          or if the previous match operation failed\n\n @throws  IndexOutOfBoundsException\n          If there is no capturing group in the pattern\n          with the given index\n"
18807,method,java/util/regex/Matcher/groupCount/," Returns the number of capturing groups in this matcher's pattern.\n\n <p> Group zero denotes the entire pattern by convention. It is not\n included in this count.\n\n <p> Any non-negative integer smaller than or equal to the value\n returned by this method is guaranteed to be a valid group index for\n this matcher.  </p>\n\n @return The number of capturing groups in this matcher's pattern\n"
18812,method,java/util/regex/Matcher/quoteReplacement/String," Returns a literal replacement <code>String</code> for the specified\n <code>String</code>.\n\n This method produces a <code>String</code> that will work\n as a literal replacement <code>s</code> in the\n <code>appendReplacement</code> method of the {@link Matcher} class.\n The <code>String</code> produced will match the sequence of characters\n in <code>s</code> treated as a literal sequence. Slashes ('\') and\n dollar signs ('$') will be given no special meaning.\n\n @param  s The string to be literalized\n @return  A literal string replacement\n @since 1.5\n"
18818,method,java/util/regex/Matcher/regionStart/," Reports the start index of this matcher's region. The\n searches this matcher conducts are limited to finding matches\n within {@link #regionStart regionStart} (inclusive) and\n {@link #regionEnd regionEnd} (exclusive).\n\n @return  The starting point of this matcher's region\n @since 1.5\n"
18819,method,java/util/regex/Matcher/regionEnd/," Reports the end index (exclusive) of this matcher's region.\n The searches this matcher conducts are limited to finding matches\n within {@link #regionStart regionStart} (inclusive) and\n {@link #regionEnd regionEnd} (exclusive).\n\n @return  the ending point of this matcher's region\n @since 1.5\n"
18820,method,java/util/regex/Matcher/hasTransparentBounds/," Queries the transparency of region bounds for this matcher.\n\n <p> This method returns <tt>true</tt> if this matcher uses\n <i>transparent</i> bounds, <tt>false</tt> if it uses <i>opaque</i>\n bounds.\n\n <p> See {@link #useTransparentBounds useTransparentBounds} for a \n description of transparent and opaque bounds.\n\n <p> By default, a matcher uses opaque region boundaries.\n\n @return <tt>true</tt> iff this matcher is using transparent bounds,\n         <tt>false</tt> otherwise.\n @see java.util.regex.Matcher#useTransparentBounds(boolean)\n @since 1.5\n"
18822,method,java/util/regex/Matcher/hasAnchoringBounds/," Queries the anchoring of region bounds for this matcher.\n\n <p> This method returns <tt>true</tt> if this matcher uses\n <i>anchoring</i> bounds, <tt>false</tt> otherwise.\n\n <p> See {@link #useAnchoringBounds useAnchoringBounds} for a \n description of anchoring bounds.\n\n <p> By default, a matcher uses anchoring region boundaries.\n\n @return <tt>true</tt> iff this matcher is using anchoring bounds,\n         <tt>false</tt> otherwise.\n @see java.util.regex.Matcher#useAnchoringBounds(boolean)\n @since 1.5\n"
18825,method,java/util/regex/Matcher/hitEnd/," <p>Returns true if the end of input was hit by the search engine in\n the last match operation performed by this matcher.\n\n <p>When this method returns true, then it is possible that more input \n would have changed the result of the last search.\n\n @return  true iff the end of input was hit in the last match; false\n          otherwise\n @since 1.5\n"
18827,interface,java/util/regex/MatchResult," The result of a match operation.\n\n <p>This interface contains query methods used to determine the\n results of a match against a regular expression. The match boundaries,\n groups and group boundaries can be seen but not modified through\n a <code>MatchResult</code>.\n\n @author  Michael McCloskey\n @version 1.7 03/23/10\n @see Matcher\n @since 1.5\n"
18828,method,java/util/regex/MatchResult/start/," Returns the start index of the match.\n\n @return  The index of the first character matched\n\n @throws  IllegalStateException\n          If no match has yet been attempted,\n          or if the previous match operation failed\n"
18829,method,java/util/regex/MatchResult/start/int," Returns the start index of the subsequence captured by the given group\n during this match.\n\n <p> <a href="Pattern.html#cg">Capturing groups</a> are indexed from left\n to right, starting at one.  Group zero denotes the entire pattern, so\n the expression <i>m.</i><tt>start(0)</tt> is equivalent to\n <i>m.</i><tt>start()</tt>.  </p>\n\n @param  group\n         The index of a capturing group in this matcher's pattern\n\n @return  The index of the first character captured by the group,\n          or <tt>-1</tt> if the match was successful but the group\n          itself did not match anything\n\n @throws  IllegalStateException\n          If no match has yet been attempted,\n          or if the previous match operation failed\n\n @throws  IndexOutOfBoundsException\n          If there is no capturing group in the pattern\n          with the given index\n"
18834,method,java/util/regex/MatchResult/groupCount/," Returns the number of capturing groups in this match result's pattern.\n\n <p> Group zero denotes the entire pattern by convention. It is not\n included in this count.\n\n <p> Any non-negative integer smaller than or equal to the value\n returned by this method is guaranteed to be a valid group index for\n this matcher.  </p>\n\n @return The number of capturing groups in this matcher's pattern\n"
18843,method,java/util/jar/Pack200/Packer/removePropertyChangeListener/PropertyChangeListener," Remove a listener for PropertyChange events, added by\n the {@link #addPropertyChangeListener}.\n\n @see #addPropertyChangeListener\n @param listener  The PropertyChange listener to be removed.\n"
18856,field,java/util/jar/Pack200/Packer/KEEP,"The string "keep", a possible value for certain properties.\n @see #DEFLATE_HINT\n @see #MODIFICATION_TIME\n"
18857,field,java/util/jar/Pack200/Packer/PASS,"The string "pass", a possible value for certain properties.\n @see #UNKNOWN_ATTRIBUTE\n @see #CLASS_ATTRIBUTE_PFX\n @see #FIELD_ATTRIBUTE_PFX\n @see #METHOD_ATTRIBUTE_PFX\n @see #CODE_ATTRIBUTE_PFX\n"
18858,field,java/util/jar/Pack200/Packer/STRIP,"The string "strip", a possible value for certain properties.\n @see #UNKNOWN_ATTRIBUTE\n @see #CLASS_ATTRIBUTE_PFX\n @see #FIELD_ATTRIBUTE_PFX\n @see #METHOD_ATTRIBUTE_PFX\n @see #CODE_ATTRIBUTE_PFX\n"
18860,field,java/util/jar/Pack200/Packer/TRUE,"The string "true", a possible value for certain properties.\n @see #KEEP_FILE_ORDER\n @see #DEFLATE_HINT\n"
18861,field,java/util/jar/Pack200/Packer/FALSE,"The string "false", a possible value for certain properties.\n @see #KEEP_FILE_ORDER\n @see #DEFLATE_HINT\n"
18862,field,java/util/jar/Pack200/Packer/LATEST,"The string "latest", a possible value for certain properties.\n @see #MODIFICATION_TIME\n"
18863,interface,java/util/jar/Pack200/Unpacker," The unpacker engine converts the packed stream to a JAR file.\n An instance of the engine can be obtained\n using {@link #newUnpacker}.\n <p>\n Every JAR file produced by this engine will include the string\n "<tt>PACK200</tt>" as a zip file comment.\n This allows a deployer to detect if a JAR archive was packed and unpacked.\n <p>\n This version of the unpacker is compatible with all previous versions.\n @since 1.5\n"
18868,method,java/util/jar/Pack200/Unpacker/removePropertyChangeListener/PropertyChangeListener," Remove a listener for PropertyChange events, added by\n the {@link #addPropertyChangeListener}.\n\n @see #addPropertyChangeListener\n @param listener  The PropertyChange listener to be removed.\n"
18869,field,java/util/jar/Pack200/Unpacker/KEEP,"The string "keep", a possible value for certain properties.\n @see #DEFLATE_HINT\n"
18870,field,java/util/jar/Pack200/Unpacker/TRUE,"The string "true", a possible value for certain properties.\n @see #DEFLATE_HINT\n"
18871,field,java/util/jar/Pack200/Unpacker/FALSE,"The string "false", a possible value for certain properties.\n @see #DEFLATE_HINT\n"
18874,class,java/util/jar/Manifest," The Manifest class is used to maintain Manifest entry names and their\n associated Attributes. There are main Manifest Attributes as well as\n per-entry Attributes. For information on the Manifest format, please\n see the \n <a href="../../../../technotes/guides/jar/jar.html">\n Manifest format specification</a>.\n\n @author  David Connelly\n @version 1.51, 03/23/10\n @see	    Attributes\n @since   1.2\n"
18875,method,java/util/jar/Manifest/getMainAttributes/," Returns the main Attributes for the Manifest.\n @return the main Attributes for the Manifest\n"
18876,method,java/util/jar/Manifest/getEntries/," Returns a Map of the entries contained in this Manifest. Each entry\n is represented by a String name (key) and associated Attributes (value).\n The Map permits the {@code null} key, but no entry with a null key is\n created by {@link #read}, nor is such an entry written by using {@link\n #write}.\n\n @return a Map of the entries contained in this Manifest\n"
18878,method,java/util/jar/Manifest/clear/," Clears the main Attributes as well as the entries in this Manifest.\n"
18881,method,java/util/jar/Manifest/equals/Object," Returns true if the specified Object is also a Manifest and has\n the same main Attributes and entries.\n\n @param o the object to be compared\n @return true if the specified Object is also a Manifest and has\n the same main Attributes and entries\n"
18882,method,java/util/jar/Manifest/hashCode/," Returns the hash code for this Manifest.\n"
18883,method,java/util/jar/Manifest/clone/," Returns a shallow copy of this Manifest.  The shallow copy is\n implemented as follows:\n <pre>\n     public Object clone() { return new Manifest(this); }\n </pre>\n @return a shallow copy of this Manifest\n"
18884,method,java/util/jar/Manifest/Manifest/," Constructs a new, empty Manifest.\n"
18886,method,java/util/jar/Manifest/Manifest/Manifest," Constructs a new Manifest that is a copy of the specified Manifest.\n\n @param man the Manifest to copy\n"
18892,method,java/util/jar/JarInputStream/getManifest/," Returns the <code>Manifest</code> for this JAR file, or\n <code>null</code> if none.\n\n @return the <code>Manifest</code> for this JAR file, or\n         <code>null</code> if none.\n"
18896,method,java/util/jar/JarInputStream/createZipEntry/String," Creates a new <code>JarEntry</code> (<code>ZipEntry</code>) for the\n specified JAR file entry name. The manifest attributes of\n the specified JAR file entry name will be copied to the new \n <CODE>JarEntry</CODE>.\n\n @param name the name of the JAR/ZIP file entry\n @return the <code>JarEntry</code> object just created\n"
18903,method,java/util/jar/JarFile/entries/," Returns an enumeration of the zip file entries.\n"
18910,field,java/util/jar/JarFile/MANIFEST_NAME," The JAR manifest file name.\n"
18912,method,java/util/jar/JarException/JarException/," Constructs a JarException with no detail message.\n"
18913,method,java/util/jar/JarException/JarException/String," Constructs a JarException with the specified detail message.\n @param s the detail message\n"
18914,class,java/util/jar/JarEntry," This class is used to represent a JAR file entry.\n"
18915,method,java/util/jar/JarEntry/getAttributes/," Returns the <code>Manifest</code> <code>Attributes</code> for this\n entry, or <code>null</code> if none.\n\n @return the <code>Manifest</code> <code>Attributes</code> for this\n entry, or <code>null</code> if none\n"
18918,method,java/util/jar/JarEntry/JarEntry/String," Creates a new <code>JarEntry</code> for the specified JAR file\n entry name.\n\n @param name the JAR file entry name\n @exception NullPointerException if the entry name is <code>null</code>\n @exception IllegalArgumentException if the entry name is longer than\n            0xFFFF bytes.\n"
18919,method,java/util/jar/JarEntry/JarEntry/ZipEntry," Creates a new <code>JarEntry</code> with fields taken from the\n specified <code>ZipEntry</code> object.\n @param ze the <code>ZipEntry</code> object to create the \n           <code>JarEntry</code> from\n"
18920,method,java/util/jar/JarEntry/JarEntry/JarEntry," Creates a new <code>JarEntry</code> with fields taken from the\n specified <code>JarEntry</code> object.\n\n @param je the <code>JarEntry</code> to copy\n"
18922,method,java/util/jar/Attributes/get/Object," Returns the value of the specified attribute name, or null if the\n attribute name was not found.\n\n @param name the attribute name\n @return the value of the specified attribute name, or null if\n         not found.\n"
18923,method,java/util/jar/Attributes/getValue/String," Returns the value of the specified attribute name, specified as\n a string, or null if the attribute was not found. The attribute\n name is case-insensitive.\n <p>\n This method is defined as:\n <pre>\n	    return (String)get(new Attributes.Name((String)name));\n </pre>\n\n @param name the attribute name as a string\n @return the String value of the specified attribute name, or null if\n         not found.\n @throws IllegalArgumentException if the attribute name is invalid\n"
18924,method,java/util/jar/Attributes/getValue/Name," Returns the value of the specified Attributes.Name, or null if the\n attribute was not found.\n <p>\n This method is defined as:\n <pre>\n     return (String)get(name);\n </pre>\n\n @param name the Attributes.Name object\n @return the String value of the specified Attribute.Name, or null if\n         not found.\n"
18925,method,java/util/jar/Attributes/put/Object;Object," Associates the specified value with the specified attribute name\n (key) in this Map. If the Map previously contained a mapping for\n the attribute name, the old value is replaced.\n\n @param name the attribute name\n @param value the attribute value\n @return the previous value of the attribute, or null if none\n @exception ClassCastException if the name is not a Attributes.Name\n            or the value is not a String\n"
18926,method,java/util/jar/Attributes/putValue/String;String," Associates the specified value with the specified attribute name,\n specified as a String. The attributes name is case-insensitive.\n If the Map previously contained a mapping for the attribute name,\n the old value is replaced.\n <p>\n This method is defined as:\n <pre>\n	    return (String)put(new Attributes.Name(name), value);\n </pre>\n\n @param name the attribute name as a string\n @param value the attribute value\n @return the previous value of the attribute, or null if none\n @exception IllegalArgumentException if the attribute name is invalid\n"
18927,method,java/util/jar/Attributes/remove/Object," Removes the attribute with the specified name (key) from this Map.\n Returns the previous attribute value, or null if none.\n\n @param name attribute name\n @return the previous value of the attribute, or null if none\n"
18928,method,java/util/jar/Attributes/containsValue/Object," Returns true if this Map maps one or more attribute names (keys)\n to the specified value.\n\n @param value the attribute value\n @return true if this Map maps one or more attribute names to\n         the specified value\n"
18929,method,java/util/jar/Attributes/containsKey/Object," Returns true if this Map contains the specified attribute name (key).\n\n @param name the attribute name\n @return true if this Map contains the specified attribute name\n"
18930,method,java/util/jar/Attributes/putAll/Map," Copies all of the attribute name-value mappings from the specified\n Attributes to this Map. Duplicate mappings will be replaced.\n\n @param attr the Attributes to be stored in this map\n @exception ClassCastException if attr is not an Attributes\n"
18931,method,java/util/jar/Attributes/clear/," Removes all attributes from this Map.\n"
18932,method,java/util/jar/Attributes/size/," Returns the number of attributes in this Map.\n"
18933,method,java/util/jar/Attributes/isEmpty/," Returns true if this Map contains no attributes.\n"
18934,method,java/util/jar/Attributes/keySet/," Returns a Set view of the attribute names (keys) contained in this Map.\n"
18935,method,java/util/jar/Attributes/values/," Returns a Collection view of the attribute values contained in this Map.\n"
18936,method,java/util/jar/Attributes/entrySet/," Returns a Collection view of the attribute name-value mappings\n contained in this Map.\n"
18937,method,java/util/jar/Attributes/equals/Object," Compares the specified Attributes object with this Map for equality.\n Returns true if the given object is also an instance of Attributes\n and the two Attributes objects represent the same mappings.\n\n @param o the Object to be compared\n @return true if the specified Object is equal to this Map\n"
18938,method,java/util/jar/Attributes/hashCode/," Returns the hash code value for this Map.\n"
18939,method,java/util/jar/Attributes/clone/," Returns a copy of the Attributes, implemented as follows:\n <pre>\n     public Object clone() { return new Attributes(this); }\n </pre>\n Since the attribute names and values are themselves immutable,\n the Attributes returned can be safely modified without affecting\n the original.\n"
18940,method,java/util/jar/Attributes/Attributes/," Constructs a new, empty Attributes object with default size.\n"
18941,method,java/util/jar/Attributes/Attributes/int," Constructs a new, empty Attributes object with the specified\n initial size.\n\n @param size the initial number of attributes\n"
18942,method,java/util/jar/Attributes/Attributes/Attributes," Constructs a new Attributes object with the same attribute name-value\n mappings as in the specified Attributes.\n\n @param attr the specified Attributes\n"
18943,field,java/util/jar/Attributes/map," The attribute name-value mappings.\n"
18945,method,java/util/jar/Attributes/Name/equals/Object," Compares this attribute name to another for equality.\n @param o the object to compare\n @return true if this attribute name is equal to the\n         specified attribute object\n"
18946,method,java/util/jar/Attributes/Name/hashCode/," Computes the hash value for this attribute name.\n"
18947,method,java/util/jar/Attributes/Name/toString/," Returns the attribute name as a String.\n"
18948,method,java/util/jar/Attributes/Name/Attributes/Name/String," Constructs a new attribute name using the given string name.\n\n @param name the attribute string name\n @exception IllegalArgumentException if the attribute name was\n            invalid\n @exception NullPointerException if the attribute name was null\n"
18949,field,java/util/jar/Attributes/Name/MANIFEST_VERSION," <code>Name</code> object for <code>Manifest-Version</code> \n manifest attribute. This attribute indicates the version number \n of the manifest standard to which a JAR file's manifest conforms.\n @see <a href="../../../../technotes/guides/jar/jar.html#JAR Manifest">\n      Manifest and Signature Specification</a>\n"
18950,field,java/util/jar/Attributes/Name/SIGNATURE_VERSION," <code>Name</code> object for <code>Signature-Version</code> \n manifest attribute used when signing JAR files.\n @see <a href="../../../../technotes/guides/jar/jar.html#JAR Manifest">\n      Manifest and Signature Specification</a>\n"
18951,field,java/util/jar/Attributes/Name/CONTENT_TYPE," <code>Name</code> object for <code>Content-Type</code> \n manifest attribute.\n"
18952,field,java/util/jar/Attributes/Name/CLASS_PATH," <code>Name</code> object for <code>Class-Path</code> \n manifest attribute. Bundled extensions can use this attribute \n to find other JAR files containing needed classes.\n @see <a href="../../../../technotes/guides/extensions/spec.html#bundled">\n      Extensions Specification</a>\n"
18953,field,java/util/jar/Attributes/Name/MAIN_CLASS," <code>Name</code> object for <code>Main-Class</code> manifest \n attribute used for launching applications packaged in JAR files. \n The <code>Main-Class</code> attribute is used in conjunction \n with the <code>-jar</code> command-line option of the \n <tt>java</tt> application launcher.\n"
18954,field,java/util/jar/Attributes/Name/SEALED," <code>Name</code> object for <code>Sealed</code> manifest attribute \n used for sealing.\n @see <a href="../../../../technotes/guides/extensions/spec.html#sealing">\n      Extension Sealing</a>\n"
18955,field,java/util/jar/Attributes/Name/EXTENSION_LIST," <code>Name</code> object for <code>Extension-List</code> manifest attribute \n used for declaring dependencies on installed extensions.\n @see <a href="../../../../technotes/guides/extensions/spec.html#dependency">\n      Installed extension dependency</a>\n"
18956,field,java/util/jar/Attributes/Name/EXTENSION_NAME," <code>Name</code> object for <code>Extension-Name</code> manifest attribute \n used for declaring dependencies on installed extensions.\n @see <a href="../../../../technotes/guides/extensions/spec.html#dependency">\n      Installed extension dependency</a>\n"
18957,field,java/util/jar/Attributes/Name/EXTENSION_INSTALLATION," <code>Name</code> object for <code>Extension-Name</code> manifest attribute \n used for declaring dependencies on installed extensions.\n @see <a href="../../../../technotes/guides/extensions/spec.html#dependency">\n      Installed extension dependency</a>\n"
18958,field,java/util/jar/Attributes/Name/IMPLEMENTATION_TITLE," <code>Name</code> object for <code>Implementation-Title</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18959,field,java/util/jar/Attributes/Name/IMPLEMENTATION_VERSION," <code>Name</code> object for <code>Implementation-Version</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18960,field,java/util/jar/Attributes/Name/IMPLEMENTATION_VENDOR," <code>Name</code> object for <code>Implementation-Vendor</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18961,field,java/util/jar/Attributes/Name/IMPLEMENTATION_VENDOR_ID," <code>Name</code> object for <code>Implementation-Vendor-Id</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18962,field,java/util/jar/Attributes/Name/IMPLEMENTATION_URL," <code>Name</code> object for <code>Implementation-Vendor-URL</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18963,field,java/util/jar/Attributes/Name/SPECIFICATION_TITLE," <code>Name</code> object for <code>Specification-Title</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18964,field,java/util/jar/Attributes/Name/SPECIFICATION_VERSION," <code>Name</code> object for <code>Specification-Version</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18965,field,java/util/jar/Attributes/Name/SPECIFICATION_VENDOR," <code>Name</code> object for <code>Specification-Vendor</code> \n manifest attribute used for package versioning.\n @see <a href="../../../../technotes/guides/versioning/spec/versioning2.html#wp90779">\n      Java Product Versioning Specification</a>\n"
18966,class,java/util/zip/ZipOutputStream," This class implements an output stream filter for writing files in the\n ZIP file format. Includes support for both compressed and uncompressed\n entries.\n\n @author	David Connelly\n @version	1.36, 03/23/10\n"
18967,method,java/util/zip/ZipOutputStream/setComment/String," Sets the ZIP file comment.\n @param comment the comment string\n @exception IllegalArgumentException if the length of the specified\n		  ZIP file comment is greater than 0xFFFF bytes\n"
18968,method,java/util/zip/ZipOutputStream/setMethod/int," Sets the default compression method for subsequent entries. This\n default will be used whenever the compression method is not specified\n for an individual ZIP file entry, and is initially set to DEFLATED.\n @param method the default compression method\n @exception IllegalArgumentException if the specified compression method\n		  is invalid\n"
18969,method,java/util/zip/ZipOutputStream/setLevel/int," Sets the compression level for subsequent entries which are DEFLATED.\n The default setting is DEFAULT_COMPRESSION.\n @param level the compression level (0-9)\n @exception IllegalArgumentException if the compression level is invalid\n"
18975,method,java/util/zip/ZipOutputStream/ZipOutputStream/OutputStream," Creates a new ZIP output stream.\n @param out the actual output stream\n"
18976,field,java/util/zip/ZipOutputStream/STORED," Compression method for uncompressed (STORED) entries.\n"
18977,field,java/util/zip/ZipOutputStream/DEFLATED," Compression method for compressed (DEFLATED) entries.\n"
18978,class,java/util/zip/ZipInputStream," This class implements an input stream filter for reading files in the\n ZIP file format. Includes support for both compressed and uncompressed\n entries.\n\n @author	David Connelly\n @version	1.46, 03/23/10\n"
18985,method,java/util/zip/ZipInputStream/createZipEntry/String," Creates a new <code>ZipEntry</code> object for the specified\n entry name.\n\n @param name the ZIP file entry name\n @return the ZipEntry just created\n"
18986,method,java/util/zip/ZipInputStream/ZipInputStream/InputStream," Creates a new ZIP input stream.\n @param in the actual input stream\n"
18988,method,java/util/zip/ZipFile/getEntry/String," Returns the zip file entry for the specified name, or null\n if not found.\n\n @param name the name of the entry\n @return the zip file entry, or null if not found\n @throws IllegalStateException if the zip file has been closed\n"
18990,method,java/util/zip/ZipFile/getName/," Returns the path name of the ZIP file.\n @return the path name of the ZIP file\n"
18991,method,java/util/zip/ZipFile/entries/," Returns an enumeration of the ZIP file entries.\n @return an enumeration of the ZIP file entries\n @throws IllegalStateException if the zip file has been closed\n"
18992,method,java/util/zip/ZipFile/size/," Returns the number of entries in the ZIP file.\n @return the number of entries in the ZIP file\n @throws IllegalStateException if the zip file has been closed\n"
18998,field,java/util/zip/ZipFile/OPEN_READ," Mode flag to open a zip file for reading.\n"
19000,class,java/util/zip/ZipException," Signals that a Zip exception of some sort has occurred.\n\n @author  unascribed\n @version 1.18 03/23/10\n @see     java.io.IOException\n @since   JDK1.0\n"
19002,method,java/util/zip/ZipException/ZipException/String," Constructs an <code>ZipException</code> with the specified detail \n message.\n\n @param   s   the detail message.\n"
19004,method,java/util/zip/ZipError/ZipError/String," Constructs a ZipError with the given detail message.\n @param s the {@code String} containing a detail message\n"
19005,class,java/util/zip/ZipEntry," This class is used to represent a ZIP file entry.\n\n @version	1.43, 03/23/10\n @author	David Connelly\n"
19006,method,java/util/zip/ZipEntry/getName/," Returns the name of the entry.\n @return the name of the entry\n"
19007,method,java/util/zip/ZipEntry/setTime/long," Sets the modification time of the entry.\n @param time the entry modification time in number of milliseconds\n		   since the epoch\n @see #getTime()\n"
19008,method,java/util/zip/ZipEntry/getTime/," Returns the modification time of the entry, or -1 if not specified.\n @return the modification time of the entry, or -1 if not specified\n @see #setTime(long)\n"
19009,method,java/util/zip/ZipEntry/setSize/long," Sets the uncompressed size of the entry data.\n @param size the uncompressed size in bytes\n @exception IllegalArgumentException if the specified size is less\n		  than 0 or greater than 0xFFFFFFFF bytes\n @see #getSize()\n"
19010,method,java/util/zip/ZipEntry/getSize/," Returns the uncompressed size of the entry data, or -1 if not known.\n @return the uncompressed size of the entry data, or -1 if not known\n @see #setSize(long)\n"
19011,method,java/util/zip/ZipEntry/getCompressedSize/," Returns the size of the compressed entry data, or -1 if not known.\n In the case of a stored entry, the compressed size will be the same\n as the uncompressed size of the entry.\n @return the size of the compressed entry data, or -1 if not known\n @see #setCompressedSize(long)\n"
19012,method,java/util/zip/ZipEntry/setCompressedSize/long," Sets the size of the compressed entry data.\n @param csize the compressed size to set to\n @see #getCompressedSize()\n"
19013,method,java/util/zip/ZipEntry/setCrc/long," Sets the CRC-32 checksum of the uncompressed entry data.\n @param crc the CRC-32 value\n @exception IllegalArgumentException if the specified CRC-32 value is\n		  less than 0 or greater than 0xFFFFFFFF\n @see #getCrc()\n"
19014,method,java/util/zip/ZipEntry/getCrc/," Returns the CRC-32 checksum of the uncompressed entry data, or -1 if\n not known.\n @return the CRC-32 checksum of the uncompressed entry data, or -1 if\n not known\n @see #setCrc(long)\n"
19015,method,java/util/zip/ZipEntry/setMethod/int," Sets the compression method for the entry.\n @param method the compression method, either STORED or DEFLATED\n @exception IllegalArgumentException if the specified compression\n		  method is invalid\n @see #getMethod()\n"
19016,method,java/util/zip/ZipEntry/getMethod/," Returns the compression method of the entry, or -1 if not specified.\n @return the compression method of the entry, or -1 if not specified\n @see #setMethod(int)\n"
19017,method,java/util/zip/ZipEntry/setExtra/byte[]," Sets the optional extra field data for the entry.\n @param extra the extra field data bytes\n @exception IllegalArgumentException if the length of the specified\n		  extra field data is greater than 0xFFFF bytes\n @see #getExtra()\n"
19018,method,java/util/zip/ZipEntry/getExtra/," Returns the extra field data for the entry, or null if none.\n @return the extra field data for the entry, or null if none\n @see #setExtra(byte[])\n"
19019,method,java/util/zip/ZipEntry/setComment/String," Sets the optional comment string for the entry.\n @param comment the comment string\n @exception IllegalArgumentException if the length of the specified\n		  comment string is greater than 0xFFFF bytes\n @see #getComment()\n"
19020,method,java/util/zip/ZipEntry/getComment/," Returns the comment string for the entry, or null if none.\n @return the comment string for the entry, or null if none\n @see #setComment(String)\n"
19021,method,java/util/zip/ZipEntry/isDirectory/," Returns true if this is a directory entry. A directory entry is\n defined to be one whose name ends with a '/'.\n @return true if this is a directory entry\n"
19022,method,java/util/zip/ZipEntry/toString/," Returns a string representation of the ZIP entry.\n"
19023,method,java/util/zip/ZipEntry/hashCode/," Returns the hash code value for this entry.\n"
19024,method,java/util/zip/ZipEntry/clone/," Returns a copy of this entry.\n"
19025,method,java/util/zip/ZipEntry/ZipEntry/String," Creates a new zip entry with the specified name.\n\n @param name the entry name\n @exception NullPointerException if the entry name is null\n @exception IllegalArgumentException if the entry name is longer than\n		  0xFFFF bytes\n"
19026,method,java/util/zip/ZipEntry/ZipEntry/ZipEntry," Creates a new zip entry with fields taken from the specified\n zip entry.\n @param e a zip Entry object\n"
19027,field,java/util/zip/ZipEntry/STORED," Compression method for uncompressed entries.\n"
19028,field,java/util/zip/ZipEntry/DEFLATED," Compression method for compressed (deflated) entries.\n"
19029,class,java/util/zip/InflaterOutputStream," Implements an output stream filter for uncompressing data stored in the\n "deflate" compression format.\n\n @version	1.2\n @since	1.6\n @author	David R Tribble (david@tribble.com)\n\n @see	InflaterInputStream\n @see	DeflaterInputStream\n @see	DeflaterOutputStream\n"
19035,method,java/util/zip/InflaterOutputStream/InflaterOutputStream/OutputStream," Creates a new output stream with a default decompressor and buffer\n size.\n\n @param out output stream to write the uncompressed data to\n @throws NullPointerException if {@code out} is null\n"
19036,method,java/util/zip/InflaterOutputStream/InflaterOutputStream/OutputStream;Inflater," Creates a new output stream with the specified decompressor and a\n default buffer size.\n\n @param out output stream to write the uncompressed data to\n @param infl decompressor ("inflater") for this stream\n @throws NullPointerException if {@code out} or {@code infl} is null\n"
19037,method,java/util/zip/InflaterOutputStream/InflaterOutputStream/OutputStream;Inflater;int," Creates a new output stream with the specified decompressor and\n buffer size.\n\n @param out output stream to write the uncompressed data to\n @param infl decompressor ("inflater") for this stream\n @param bufLen decompression buffer size\n @throws IllegalArgumentException if {@code bufLen} is <= 0\n @throws NullPointerException if {@code out} or {@code infl} is null\n"
19038,field,java/util/zip/InflaterOutputStream/inf,"Decompressor for this stream. "
19039,field,java/util/zip/InflaterOutputStream/buf,"Output buffer for writing uncompressed data. "
19040,class,java/util/zip/InflaterInputStream," This class implements a stream filter for uncompressing data in the\n "deflate" compression format. It is also used as the basis for other\n decompression filters, such as GZIPInputStream.\n\n @see		Inflater\n @version 	1.41, 03/23/10\n @author 	David Connelly\n"
19047,method,java/util/zip/InflaterInputStream/markSupported/," Tests if this input stream supports the <code>mark</code> and\n <code>reset</code> methods. The <code>markSupported</code>\n method of <code>InflaterInputStream</code> returns\n <code>false</code>.\n\n @return  a <code>boolean</code> indicating if this stream type supports\n          the <code>mark</code> and <code>reset</code> methods.\n @see     java.io.InputStream#mark(int)\n @see     java.io.InputStream#reset()\n"
19050,method,java/util/zip/InflaterInputStream/InflaterInputStream/InputStream;Inflater;int," Creates a new input stream with the specified decompressor and\n buffer size.\n @param in the input stream\n @param inf the decompressor ("inflater")\n @param size the input buffer size\n @exception IllegalArgumentException if size is <= 0\n"
19051,method,java/util/zip/InflaterInputStream/InflaterInputStream/InputStream;Inflater," Creates a new input stream with the specified decompressor and a\n default buffer size.\n @param in the input stream\n @param inf the decompressor ("inflater")\n"
19052,method,java/util/zip/InflaterInputStream/InflaterInputStream/InputStream," Creates a new input stream with a default decompressor and buffer size.\n @param in the input stream\n"
19053,field,java/util/zip/InflaterInputStream/inf," Decompressor for this stream.\n"
19054,field,java/util/zip/InflaterInputStream/buf," Input buffer for decompression.\n"
19055,field,java/util/zip/InflaterInputStream/len," Length of input buffer.\n"
19056,class,java/util/zip/Inflater," This class provides support for general purpose decompression using the\n popular ZLIB compression library. The ZLIB compression library was\n initially developed as part of the PNG graphics standard and is not\n protected by patents. It is fully described in the specifications at \n the <a href="package-summary.html#package_description">java.util.zip\n package description</a>.\n\n <p>The following code fragment demonstrates a trivial compression\n and decompression of a string using <tt>Deflater</tt> and\n <tt>Inflater</tt>.\n\n <blockquote><pre>\n try {\n     // Encode a String into bytes\n     String inputString = "blahblahblah€€";\n     byte[] input = inputString.getBytes("UTF-8");\n\n     // Compress the bytes\n     byte[] output = new byte[100];\n     Deflater compresser = new Deflater();\n     compresser.setInput(input);\n     compresser.finish();\n     int compressedDataLength = compresser.deflate(output);\n\n     // Decompress the bytes\n     Inflater decompresser = new Inflater();\n     decompresser.setInput(output, 0, compressedDataLength);\n     byte[] result = new byte[100];\n     int resultLength = decompresser.inflate(result);\n     decompresser.end();\n\n     // Decode the bytes into a String\n     String outputString = new String(result, 0, resultLength, "UTF-8");\n } catch(java.io.UnsupportedEncodingException ex) {\n     // handle\n } catch (java.util.zip.DataFormatException ex) {\n     // handle\n }\n </pre></blockquote>\n\n @see		Deflater\n @version 	1.47, 04/07/06\n @author 	David Connelly\n\n"
19063,method,java/util/zip/Inflater/needsDictionary/," Returns true if a preset dictionary is needed for decompression.\n @return true if a preset dictionary is needed for decompression\n @see Inflater#setDictionary\n"
19064,method,java/util/zip/Inflater/finished/," Returns true if the end of the compressed data stream has been\n reached.\n @return true if the end of the compressed data stream has been\n reached\n"
19067,method,java/util/zip/Inflater/getAdler/," Returns the ADLER-32 value of the uncompressed data.\n @return the ADLER-32 value of the uncompressed data\n"
19069,method,java/util/zip/Inflater/getBytesRead/," Returns the total number of compressed bytes input so far.</p>\n\n @return the total (non-negative) number of compressed bytes input so far\n @since 1.5\n"
19071,method,java/util/zip/Inflater/getBytesWritten/," Returns the total number of uncompressed bytes output so far.</p>\n\n @return the total (non-negative) number of uncompressed bytes output so far\n @since 1.5\n"
19072,method,java/util/zip/Inflater/reset/," Resets inflater so that a new set of input data can be processed.\n"
19074,method,java/util/zip/Inflater/finalize/," Closes the decompressor when garbage is collected.\n"
19076,method,java/util/zip/Inflater/Inflater/," Creates a new decompressor.\n"
19077,class,java/util/zip/GZIPOutputStream," This class implements a stream filter for writing compressed data in\n the GZIP file format.\n @version 	1.24, 03/23/10\n @author 	David Connelly\n\n"
19082,field,java/util/zip/GZIPOutputStream/crc," CRC-32 of uncompressed data.\n"
19083,class,java/util/zip/GZIPInputStream," This class implements a stream filter for reading compressed data in\n the GZIP file format.\n\n @see		InflaterInputStream\n @version 	1.34, 03/23/10\n @author 	David Connelly\n\n"
19088,field,java/util/zip/GZIPInputStream/crc," CRC-32 for uncompressed data.\n"
19089,field,java/util/zip/GZIPInputStream/eos," Indicates end of input stream.\n"
19090,field,java/util/zip/GZIPInputStream/GZIP_MAGIC," GZIP header magic number.\n"
19091,class,java/util/zip/DeflaterOutputStream," This class implements an output stream filter for compressing data in\n the "deflate" compression format. It is also used as the basis for other\n types of compression filters, such as GZIPOutputStream.\n\n @see		Deflater\n @version 	1.37, 03/23/10\n @author 	David Connelly\n"
19097,method,java/util/zip/DeflaterOutputStream/DeflaterOutputStream/OutputStream;Deflater;int," Creates a new output stream with the specified compressor and\n buffer size.\n @param out the output stream\n @param def the compressor ("deflater")\n @param size the output buffer size\n @exception IllegalArgumentException if size is <= 0\n"
19098,method,java/util/zip/DeflaterOutputStream/DeflaterOutputStream/OutputStream;Deflater," Creates a new output stream with the specified compressor and\n a default buffer size.\n @param out the output stream\n @param def the compressor ("deflater")\n"
19099,method,java/util/zip/DeflaterOutputStream/DeflaterOutputStream/OutputStream," Creates a new output stream with a default compressor and buffer size.\n @param out the output stream\n"
19100,field,java/util/zip/DeflaterOutputStream/def," Compressor for this stream.\n"
19101,field,java/util/zip/DeflaterOutputStream/buf," Output buffer for writing compressed data.\n"
19102,class,java/util/zip/DeflaterInputStream," Implements an input stream filter for compressing data in the "deflate"\n compression format.\n\n @version	1.2\n @since	1.6\n @author	David R Tribble (david@tribble.com)\n\n @see	DeflaterOutputStream\n @see	InflaterOutputStream\n @see	InflaterInputStream\n"
19108,method,java/util/zip/DeflaterInputStream/markSupported/," Always returns {@code false} because this input stream does not support\n the {@link #mark mark()} and {@link #reset reset()} methods.\n\n @return false, always\n"
19110,method,java/util/zip/DeflaterInputStream/reset/," <i>This operation is not supported</i>.\n\n @throws IOException always thrown\n"
19111,method,java/util/zip/DeflaterInputStream/DeflaterInputStream/InputStream," Creates a new input stream with a default compressor and buffer\n size.\n\n @param in input stream to read the uncompressed data to\n @throws NullPointerException if {@code in} is null\n"
19112,method,java/util/zip/DeflaterInputStream/DeflaterInputStream/InputStream;Deflater," Creates a new input stream with the specified compressor and a\n default buffer size.\n\n @param in input stream to read the uncompressed data to\n @param defl compressor ("deflater") for this stream\n @throws NullPointerException if {@code in} or {@code defl} is null\n"
19113,method,java/util/zip/DeflaterInputStream/DeflaterInputStream/InputStream;Deflater;int," Creates a new input stream with the specified compressor and buffer\n size.\n\n @param in input stream to read the uncompressed data to\n @param defl compressor ("deflater") for this stream\n @param bufLen compression buffer size\n @throws IllegalArgumentException if {@code bufLen} is <= 0\n @throws NullPointerException if {@code in} or {@code defl} is null\n"
19114,field,java/util/zip/DeflaterInputStream/def,"Compressor for this stream. "
19115,field,java/util/zip/DeflaterInputStream/buf,"Input buffer for reading compressed data. "
19116,class,java/util/zip/Deflater," This class provides support for general purpose compression using the\n popular ZLIB compression library. The ZLIB compression library was\n initially developed as part of the PNG graphics standard and is not\n protected by patents. It is fully described in the specifications at \n the <a href="package-summary.html#package_description">java.util.zip\n package description</a>.\n\n <p>The following code fragment demonstrates a trivial compression\n and decompression of a string using <tt>Deflater</tt> and\n <tt>Inflater</tt>.\n\n <blockquote><pre>\n try {\n     // Encode a String into bytes\n     String inputString = "blahblahblah€€";\n     byte[] input = inputString.getBytes("UTF-8");\n\n     // Compress the bytes\n     byte[] output = new byte[100];\n     Deflater compresser = new Deflater();\n     compresser.setInput(input);\n     compresser.finish();\n     int compressedDataLength = compresser.deflate(output);\n\n     // Decompress the bytes\n     Inflater decompresser = new Inflater();\n     decompresser.setInput(output, 0, compressedDataLength);\n     byte[] result = new byte[100];\n     int resultLength = decompresser.inflate(result);\n     decompresser.end();\n\n     // Decode the bytes into a String\n     String outputString = new String(result, 0, resultLength, "UTF-8");\n } catch(java.io.UnsupportedEncodingException ex) {\n     // handle\n } catch (java.util.zip.DataFormatException ex) {\n     // handle\n }\n </pre></blockquote>\n\n @see		Inflater\n @version 	1.47, 03/23/10\n @author 	David Connelly\n"
19121,method,java/util/zip/Deflater/setStrategy/int," Sets the compression strategy to the specified value.\n @param strategy the new compression strategy\n @exception IllegalArgumentException if the compression strategy is\n				           invalid\n"
19122,method,java/util/zip/Deflater/setLevel/int," Sets the current compression level to the specified value.\n @param level the new compression level (0-9)\n @exception IllegalArgumentException if the compression level is invalid\n"
19125,method,java/util/zip/Deflater/finished/," Returns true if the end of the compressed data output stream has\n been reached.\n @return true if the end of the compressed data output stream has\n been reached\n"
19128,method,java/util/zip/Deflater/getAdler/," Returns the ADLER-32 value of the uncompressed data.\n @return the ADLER-32 value of the uncompressed data\n"
19130,method,java/util/zip/Deflater/getBytesRead/," Returns the total number of uncompressed bytes input so far.</p>\n\n @return the total (non-negative) number of uncompressed bytes input so far\n @since 1.5\n"
19132,method,java/util/zip/Deflater/getBytesWritten/," Returns the total number of compressed bytes output so far.</p>\n\n @return the total (non-negative) number of compressed bytes output so far\n @since 1.5\n"
19133,method,java/util/zip/Deflater/reset/," Resets deflater so that a new set of input data can be processed.\n Keeps current compression level and strategy settings.\n"
19135,method,java/util/zip/Deflater/finalize/," Closes the compressor when garbage is collected.\n"
19136,method,java/util/zip/Deflater/Deflater/int;boolean," Creates a new compressor using the specified compression level.\n If 'nowrap' is true then the ZLIB header and checksum fields will\n not be used in order to support the compression format used in\n both GZIP and PKZIP.\n @param level the compression level (0-9)\n @param nowrap if true then use GZIP compatible compression\n"
19137,method,java/util/zip/Deflater/Deflater/int,"\n Creates a new compressor using the specified compression level.\n Compressed data will be generated in ZLIB format.\n @param level the compression level (0-9)\n"
19138,method,java/util/zip/Deflater/Deflater/," Creates a new compressor with the default compression level.\n Compressed data will be generated in ZLIB format.\n"
19140,field,java/util/zip/Deflater/NO_COMPRESSION," Compression level for no compression.\n"
19141,field,java/util/zip/Deflater/BEST_SPEED," Compression level for fastest compression.\n"
19143,field,java/util/zip/Deflater/DEFAULT_COMPRESSION," Default compression level.\n"
19146,field,java/util/zip/Deflater/DEFAULT_STRATEGY," Default compression strategy.\n"
19148,method,java/util/zip/DataFormatException/DataFormatException/," Constructs a DataFormatException with no detail message.\n"
19149,method,java/util/zip/DataFormatException/DataFormatException/String," Constructs a DataFormatException with the specified detail message.\n A detail message is a String that describes this particular exception.\n @param s the String containing a detail message\n"
19150,interface,java/util/zip/Checksum," An interface representing a data checksum.\n\n @version 	1.18, 03/23/10\n @author 	David Connelly\n"
19151,method,java/util/zip/Checksum/update/int," Updates the current checksum with the specified byte.\n\n @param b the byte to update the checksum with\n"
19152,method,java/util/zip/Checksum/update/byte[];int;int," Updates the current checksum with the specified array of bytes.\n @param b the byte array to update the checksum with\n @param off the start offset of the data\n @param len the number of bytes to use for the update\n"
19153,method,java/util/zip/Checksum/getValue/," Returns the current checksum value.\n @return the current checksum value\n"
19154,method,java/util/zip/Checksum/reset/," Resets the checksum to its initial value.\n"
19155,class,java/util/zip/CheckedOutputStream," An output stream that also maintains a checksum of the data being\n written. The checksum can then be used to verify the integrity of\n the output data.\n\n @see		Checksum\n @version 	1.20, 03/23/10\n @author 	David Connelly\n"
19158,method,java/util/zip/CheckedOutputStream/getChecksum/," Returns the Checksum for this output stream.\n @return the Checksum\n"
19159,method,java/util/zip/CheckedOutputStream/CheckedOutputStream/OutputStream;Checksum," Creates an output stream with the specified Checksum.\n @param out the output stream\n @param cksum the checksum\n"
19160,class,java/util/zip/CheckedInputStream," An input stream that also maintains a checksum of the data being read.\n The checksum can then be used to verify the integrity of the input data.\n\n @see		Checksum\n @version 	1.23, 03/23/10\n @author 	David Connelly\n"
19164,method,java/util/zip/CheckedInputStream/getChecksum/," Returns the Checksum for this input stream.\n @return the Checksum value\n"
19165,method,java/util/zip/CheckedInputStream/CheckedInputStream/InputStream;Checksum," Creates an input stream using the specified Checksum.\n @param in the input stream\n @param cksum the Checksum\n"
19166,class,java/util/zip/CRC32," A class that can be used to compute the CRC-32 of a data stream.\n\n @see		Checksum\n @version 	1.33, 03/23/10\n @author 	David Connelly\n"
19167,method,java/util/zip/CRC32/update/int," Updates CRC-32 with specified byte.\n"
19168,method,java/util/zip/CRC32/update/byte[];int;int," Updates CRC-32 with specified array of bytes.\n"
19169,method,java/util/zip/CRC32/update/byte[]," Updates checksum with specified array of bytes.\n\n @param b the array of bytes to update the checksum with\n"
19170,method,java/util/zip/CRC32/reset/," Resets CRC-32 to initial value.\n"
19171,method,java/util/zip/CRC32/getValue/," Returns CRC-32 value.\n"
19172,method,java/util/zip/CRC32/CRC32/," Creates a new CRC32 object.\n"
19173,class,java/util/zip/Adler32," A class that can be used to compute the Adler-32 checksum of a data\n stream. An Adler-32 checksum is almost as reliable as a CRC-32 but\n can be computed much faster.\n\n @see		Checksum\n @version 	1.30, 03/23/10\n @author 	David Connelly\n"
19174,method,java/util/zip/Adler32/update/int," Updates checksum with specified byte.\n \n @param b an array of bytes\n"
19175,method,java/util/zip/Adler32/update/byte[];int;int," Updates checksum with specified array of bytes.\n"
19176,method,java/util/zip/Adler32/update/byte[]," Updates checksum with specified array of bytes.\n"
19177,method,java/util/zip/Adler32/reset/," Resets checksum to initial value.\n"
19178,method,java/util/zip/Adler32/getValue/," Returns checksum value.\n"
19179,method,java/util/zip/Adler32/Adler32/," Creates a new Adler32 object.\n"
19181,method,java/math/RoundingMode/values/,""
19182,method,java/math/RoundingMode/valueOf/String,""
19183,method,java/math/RoundingMode/valueOf/int," Returns the <tt>RoundingMode</tt> object corresponding to a\n legacy integer rounding mode constant in {@link BigDecimal}.\n\n @param  rm legacy integer rounding mode to convert\n @return <tt>RoundingMode</tt> corresponding to the given integer.\n @throws IllegalArgumentException integer is out of range\n"
19189,field,java/math/RoundingMode/HALF_DOWN," Rounding mode to round towards &quot;nearest neighbor&quot;\n unless both neighbors are equidistant, in which case round\n down.  Behaves as for <tt>RoundingMode.UP</tt> if the discarded\n fraction is &gt; 0.5; otherwise, behaves as for\n <tt>RoundingMode.DOWN</tt>.\n\n<p>Example:\n<table border>\n<tr valign=top><th>Input Number</th>\n    <th>Input rounded to one digit<br> with <tt>HALF_DOWN</tt> rounding\n<tr align=right><td>5.5</td>	<td>5</td>\n<tr align=right><td>2.5</td>	<td>2</td>\n<tr align=right><td>1.6</td>	<td>2</td>\n<tr align=right><td>1.1</td>	<td>1</td>\n<tr align=right><td>1.0</td>	<td>1</td>\n<tr align=right><td>-1.0</td>	<td>-1</td>\n<tr align=right><td>-1.1</td>	<td>-1</td>\n<tr align=right><td>-1.6</td>	<td>-2</td>\n<tr align=right><td>-2.5</td>	<td>-2</td>\n<tr align=right><td>-5.5</td>	<td>-5</td>\n</table>\n"
19192,class,java/math/MathContext," Immutable objects which encapsulate the context settings which\n describe certain rules for numerical operators, such as those\n implemented by the {@link BigDecimal} class.\n \n <p>The base-independent settings are:\n <ol>\n <li>{@code precision}:\n the number of digits to be used for an operation; results are\n rounded to this precision\n \n <li>{@code roundingMode}:\n a {@link RoundingMode} object which specifies the algorithm to be\n used for rounding.\n </ol>\n\n @see     BigDecimal\n @see     RoundingMode\n @author  Mike Cowlishaw\n @author  Joseph D. Darcy\n @since 1.5\n"
19193,method,java/math/MathContext/getPrecision/," Returns the {@code precision} setting.\n This value is always non-negative.\n\n @return an {@code int} which is the value of the {@code precision}\n         setting\n"
19194,method,java/math/MathContext/getRoundingMode/," Returns the roundingMode setting.\n This will be one of\n {@link  RoundingMode#CEILING},\n {@link  RoundingMode#DOWN},\n {@link  RoundingMode#FLOOR},\n {@link  RoundingMode#HALF_DOWN},\n {@link  RoundingMode#HALF_EVEN},\n {@link  RoundingMode#HALF_UP},\n {@link  RoundingMode#UNNECESSARY}, or\n {@link  RoundingMode#UP}.\n\n @return a {@code RoundingMode} object which is the value of the\n         {@code roundingMode} setting\n"
19196,method,java/math/MathContext/hashCode/," Returns the hash code for this {@code MathContext}.\n\n @return hash code for this {@code MathContext}\n"
19198,method,java/math/MathContext/MathContext/int," Constructs a new {@code MathContext} with the specified\n precision and the {@link RoundingMode#HALF_UP HALF_UP} rounding\n mode.\n\n @param setPrecision The non-negative {@code int} precision setting.\n @throws IllegalArgumentException if the {@code setPrecision} parameter is less \n         than zero.\n"
19199,method,java/math/MathContext/MathContext/int;RoundingMode," Constructs a new {@code MathContext} with a specified\n precision and rounding mode.\n\n @param setPrecision The non-negative {@code int} precision setting.\n @param setRoundingMode The rounding mode to use.\n @throws IllegalArgumentException if the {@code setPrecision} parameter is less \n         than zero.\n @throws NullPointerException if the rounding mode argument is {@code null}\n"
19202,field,java/math/MathContext/DECIMAL32,"  A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal32 format, 7 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.\n"
19203,field,java/math/MathContext/DECIMAL64,"  A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal64 format, 16 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.\n"
19204,field,java/math/MathContext/DECIMAL128,"  A {@code MathContext} object with a precision setting\n  matching the IEEE 754R Decimal128 format, 34 digits, and a\n  rounding mode of {@link RoundingMode#HALF_EVEN HALF_EVEN}, the\n  IEEE 754R default.\n"
19206,method,java/math/BigInteger/probablePrime/int;Random," Returns a positive BigInteger that is probably prime, with the\n specified bitLength. The probability that a BigInteger returned\n by this method is composite does not exceed 2<sup>-100</sup>.\n\n @param  bitLength bitLength of the returned BigInteger.\n @param  rnd source of random bits used to select candidates to be\n	       tested for primality.\n @return a BigInteger of {@code bitLength} bits that is probably prime\n @throws ArithmeticException {@code bitLength < 2}.\n @see    #bitLength()\n @since 1.4\n"
19208,method,java/math/BigInteger/valueOf/long," Returns a BigInteger whose value is equal to that of the\n specified {@code long}.  This "static factory method" is\n provided in preference to a ({@code long}) constructor\n because it allows for reuse of frequently used BigIntegers.\n\n @param  val value of the BigInteger to return.\n @return a BigInteger with the specified value.\n"
19209,method,java/math/BigInteger/add/BigInteger," Returns a BigInteger whose value is {@code (this + val)}.\n\n @param  val value to be added to this BigInteger.\n @return {@code this + val}\n"
19210,method,java/math/BigInteger/subtract/BigInteger," Returns a BigInteger whose value is {@code (this - val)}.\n\n @param  val value to be subtracted from this BigInteger.\n @return {@code this - val}\n"
19211,method,java/math/BigInteger/multiply/BigInteger," Returns a BigInteger whose value is {@code (this * val)}.\n\n @param  val value to be multiplied by this BigInteger.\n @return {@code this * val}\n"
19212,method,java/math/BigInteger/divide/BigInteger," Returns a BigInteger whose value is {@code (this / val)}.\n\n @param  val value by which this BigInteger is to be divided.\n @return {@code this / val}\n @throws ArithmeticException {@code val==0}\n"
19213,method,java/math/BigInteger/divideAndRemainder/BigInteger," Returns an array of two BigIntegers containing {@code (this / val)}\n followed by {@code (this % val)}.\n\n @param  val value by which this BigInteger is to be divided, and the\n	       remainder computed.\n @return an array of two BigIntegers: the quotient {@code (this / val)}\n	       is the initial element, and the remainder {@code (this % val)}\n	       is the final element.\n @throws ArithmeticException {@code val==0}\n"
19214,method,java/math/BigInteger/remainder/BigInteger," Returns a BigInteger whose value is {@code (this % val)}.\n\n @param  val value by which this BigInteger is to be divided, and the\n	       remainder computed.\n @return {@code this % val}\n @throws ArithmeticException {@code val==0}\n"
19216,method,java/math/BigInteger/gcd/BigInteger," Returns a BigInteger whose value is the greatest common divisor of\n {@code abs(this)} and {@code abs(val)}.  Returns 0 if\n {@code this==0 && val==0}.\n\n @param  val value with which the GCD is to be computed.\n @return {@code GCD(abs(this), abs(val))}\n"
19217,method,java/math/BigInteger/abs/," Returns a BigInteger whose value is the absolute value of this\n BigInteger. \n\n @return {@code abs(this)}\n"
19218,method,java/math/BigInteger/negate/," Returns a BigInteger whose value is {@code (-this)}.\n\n @return {@code -this}\n"
19219,method,java/math/BigInteger/signum/," Returns the signum function of this BigInteger.\n\n @return -1, 0 or 1 as the value of this BigInteger is negative, zero or\n	       positive.\n"
19220,method,java/math/BigInteger/mod/BigInteger," Returns a BigInteger whose value is {@code (this mod m}).  This method\n differs from {@code remainder} in that it always returns a\n <i>non-negative</i> BigInteger.\n\n @param  m the modulus.\n @return {@code this mod m}\n @throws ArithmeticException {@code m <= 0}\n @see    #remainder\n"
19221,method,java/math/BigInteger/modPow/BigInteger;BigInteger," Returns a BigInteger whose value is\n <tt>(this<sup>exponent</sup> mod m)</tt>.  (Unlike {@code pow}, this\n method permits negative exponents.)\n\n @param  exponent the exponent.\n @param  m the modulus.\n @return <tt>this<sup>exponent</sup> mod m</tt>\n @throws ArithmeticException {@code m <= 0}\n @see    #modInverse\n"
19222,method,java/math/BigInteger/modInverse/BigInteger," Returns a BigInteger whose value is {@code (this}<sup>-1</sup> {@code mod m)}.\n\n @param  m the modulus.\n @return {@code this}<sup>-1</sup> {@code mod m}.\n @throws ArithmeticException {@code  m <= 0}, or this BigInteger\n	       has no multiplicative inverse mod m (that is, this BigInteger\n	       is not <i>relatively prime</i> to m).\n"
19231,method,java/math/BigInteger/setBit/int," Returns a BigInteger whose value is equivalent to this BigInteger\n with the designated bit set.  (Computes {@code (this | (1<<n))}.)\n\n @param  n index of bit to set.\n @return {@code this | (1<<n)}\n @throws ArithmeticException {@code n} is negative.\n"
19232,method,java/math/BigInteger/clearBit/int," Returns a BigInteger whose value is equivalent to this BigInteger\n with the designated bit cleared.\n (Computes {@code (this & ~(1<<n))}.)\n\n @param  n index of bit to clear.\n @return {@code this & ~(1<<n)}\n @throws ArithmeticException {@code n} is negative.\n"
19233,method,java/math/BigInteger/flipBit/int," Returns a BigInteger whose value is equivalent to this BigInteger\n with the designated bit flipped.\n (Computes {@code (this ^ (1<<n))}.)\n\n @param  n index of bit to flip.\n @return {@code this ^ (1<<n)}\n @throws ArithmeticException {@code n} is negative.\n"
19234,method,java/math/BigInteger/getLowestSetBit/," Returns the index of the rightmost (lowest-order) one bit in this\n BigInteger (the number of zero bits to the right of the rightmost\n one bit).  Returns -1 if this BigInteger contains no one bits.\n (Computes {@code (this==0? -1 : log2(this & -this))}.)\n\n @return index of the rightmost one bit in this BigInteger.\n"
19235,method,java/math/BigInteger/bitLength/," Returns the number of bits in the minimal two's-complement\n representation of this BigInteger, <i>excluding</i> a sign bit.\n For positive BigIntegers, this is equivalent to the number of bits in\n the ordinary binary representation.  (Computes\n {@code (ceil(log2(this < 0 ? -this : this+1)))}.)\n\n @return number of bits in the minimal two's-complement\n         representation of this BigInteger, <i>excluding</i> a sign bit.\n"
19236,method,java/math/BigInteger/bitCount/," Returns the number of bits in the two's complement representation\n of this BigInteger that differ from its sign bit.  This method is\n useful when implementing bit-vector style sets atop BigIntegers.\n\n @return number of bits in the two's complement representation\n         of this BigInteger that differ from its sign bit.\n"
19238,method,java/math/BigInteger/compareTo/BigInteger," Compares this BigInteger with the specified BigInteger.  This\n method is provided in preference to individual methods for each\n of the six boolean comparison operators ({@literal <}, ==,\n {@literal >}, {@literal >=}, !=, {@literal <=}).  The suggested\n idiom for performing these comparisons is: {@code\n (x.compareTo(y)} &lt;<i>op</i>&gt; {@code 0)}, where\n &lt;<i>op</i>&gt; is one of the six comparison operators.\n\n @param  val BigInteger to which this BigInteger is to be compared.\n @return -1, 0 or 1 as this BigInteger is numerically less than, equal\n         to, or greater than {@code val}.\n"
19242,method,java/math/BigInteger/hashCode/," Returns the hash code for this BigInteger.\n\n @return hash code for this BigInteger.\n"
19243,method,java/math/BigInteger/toString/int," Returns the String representation of this BigInteger in the\n given radix.  If the radix is outside the range from {@link\n Character#MIN_RADIX} to {@link Character#MAX_RADIX} inclusive,\n it will default to 10 (as is the case for\n {@code Integer.toString}).  The digit-to-character mapping\n provided by {@code Character.forDigit} is used, and a minus\n sign is prepended if appropriate.  (This representation is\n compatible with the {@link #BigInteger(String, int) (String,\n int)} constructor.)\n\n @param  radix  radix of the String representation.\n @return String representation of this BigInteger in the given radix.\n @see    Integer#toString\n @see    Character#forDigit\n @see    #BigInteger(java.lang.String, int)\n"
19244,method,java/math/BigInteger/toString/," Returns the decimal String representation of this BigInteger.\n The digit-to-character mapping provided by\n {@code Character.forDigit} is used, and a minus sign is\n prepended if appropriate.  (This representation is compatible\n with the {@link #BigInteger(String) (String)} constructor, and\n allows for String concatenation with Java's + operator.)\n\n @return decimal String representation of this BigInteger.\n @see    Character#forDigit\n @see    #BigInteger(java.lang.String)\n"
19251,method,java/math/BigInteger/BigInteger/int;byte[]," Translates the sign-magnitude representation of a BigInteger into a\n BigInteger.  The sign is represented as an integer signum value: -1 for\n negative, 0 for zero, or 1 for positive.  The magnitude is a byte array\n in <i>big-endian</i> byte-order: the most significant byte is in the\n zeroth element.  A zero-length magnitude array is permissible, and will\n result in a BigInteger value of 0, whether signum is -1, 0 or 1.\n\n @param  signum signum of the number (-1 for negative, 0 for zero, 1\n 	       for positive).\n @param  magnitude big-endian binary representation of the magnitude of\n 	       the number.\n @throws NumberFormatException {@code signum} is not one of the three\n	       legal values (-1, 0, and 1), or {@code signum} is 0 and\n	       {@code magnitude} contains one or more non-zero bytes.\n"
19256,field,java/math/BigInteger/ZERO," The BigInteger constant zero.\n\n @since   1.2\n"
19257,field,java/math/BigInteger/ONE," The BigInteger constant one.\n\n @since   1.2\n"
19258,field,java/math/BigInteger/TEN," The BigInteger constant ten.\n\n @since   1.5\n"
19261,method,java/math/BigDecimal/valueOf/long," Translates a {@code long} value into a {@code BigDecimal}\n with a scale of zero.  This {@literal "static factory method"}\n is provided in preference to a ({@code long}) constructor\n because it allows for reuse of frequently used\n {@code BigDecimal} values.\n\n @param val value of the {@code BigDecimal}.\n @return a {@code BigDecimal} whose value is {@code val}.\n"
19263,method,java/math/BigDecimal/add/BigDecimal," Returns a {@code BigDecimal} whose value is {@code (this +\n augend)}, and whose scale is {@code max(this.scale(),\n augend.scale())}.\n\n @param  augend value to be added to this {@code BigDecimal}.\n @return {@code this + augend}\n"
19265,method,java/math/BigDecimal/subtract/BigDecimal," Returns a {@code BigDecimal} whose value is {@code (this -\n subtrahend)}, and whose scale is {@code max(this.scale(),\n subtrahend.scale())}.\n\n @param  subtrahend value to be subtracted from this {@code BigDecimal}.\n @return {@code this - subtrahend}\n"
19267,method,java/math/BigDecimal/multiply/BigDecimal," Returns a {@code BigDecimal} whose value is <tt>(this &times;\n multiplicand)</tt>, and whose scale is {@code (this.scale() +\n multiplicand.scale())}.\n\n @param  multiplicand value to be multiplied by this {@code BigDecimal}.\n @return {@code this * multiplicand}\n"
19273,method,java/math/BigDecimal/divide/BigDecimal," Returns a {@code BigDecimal} whose value is {@code (this /\n divisor)}, and whose preferred scale is {@code (this.scale() -\n divisor.scale())}; if the exact quotient cannot be\n represented (because it has a non-terminating decimal\n expansion) an {@code ArithmeticException} is thrown.\n\n @param  divisor value by which this {@code BigDecimal} is to be divided.\n @throws ArithmeticException if the exact quotient does not have a\n         terminating decimal expansion\n @return {@code this / divisor}\n @since 1.5\n @author Joseph D. Darcy\n"
19275,method,java/math/BigDecimal/divideToIntegralValue/BigDecimal," Returns a {@code BigDecimal} whose value is the integer part\n of the quotient {@code (this / divisor)} rounded down.  The\n preferred scale of the result is {@code (this.scale() -\n divisor.scale())}.\n\n @param  divisor value by which this {@code BigDecimal} is to be divided.\n @return The integer part of {@code this / divisor}.\n @throws ArithmeticException if {@code divisor==0}\n @since  1.5\n"
19283,method,java/math/BigDecimal/abs/," Returns a {@code BigDecimal} whose value is the absolute value\n of this {@code BigDecimal}, and whose scale is\n {@code this.scale()}.\n\n @return {@code abs(this)}\n"
19285,method,java/math/BigDecimal/negate/," Returns a {@code BigDecimal} whose value is {@code (-this)},\n and whose scale is {@code this.scale()}.\n\n @return {@code -this}.\n"
19287,method,java/math/BigDecimal/plus/," Returns a {@code BigDecimal} whose value is {@code (+this)}, and whose\n scale is {@code this.scale()}.\n \n <p>This method, which simply returns this {@code BigDecimal}\n is included for symmetry with the unary minus method {@link\n #negate()}.\n \n @return {@code this}.\n @see #negate()\n @since  1.5\n"
19289,method,java/math/BigDecimal/signum/," Returns the signum function of this {@code BigDecimal}.\n\n @return -1, 0, or 1 as the value of this {@code BigDecimal} \n         is negative, zero, or positive.\n"
19290,method,java/math/BigDecimal/scale/," Returns the <i>scale</i> of this {@code BigDecimal}.  If zero\n or positive, the scale is the number of digits to the right of\n the decimal point.  If negative, the unscaled value of the\n number is multiplied by ten to the power of the negation of the\n scale.  For example, a scale of {@code -3} means the unscaled\n value is multiplied by 1000.\n\n @return the scale of this {@code BigDecimal}.\n"
19291,method,java/math/BigDecimal/precision/," Returns the <i>precision</i> of this {@code BigDecimal}.  (The\n precision is the number of digits in the unscaled value.)\n\n <p>The precision of a zero value is 1.\n\n @return the precision of this {@code BigDecimal}.\n @since  1.5\n"
19292,method,java/math/BigDecimal/unscaledValue/," Returns a {@code BigInteger} whose value is the <i>unscaled\n value</i> of this {@code BigDecimal}.  (Computes <tt>(this *\n 10<sup>this.scale()</sup>)</tt>.)\n\n @return the unscaled value of this {@code BigDecimal}.\n @since  1.2\n"
19299,method,java/math/BigDecimal/scaleByPowerOfTen/int," Returns a BigDecimal whose numerical value is equal to\n ({@code this} * 10<sup>n</sup>).  The scale of\n the result is {@code (this.scale() - n)}.\n\n @throws ArithmeticException if the scale would be\n         outside the range of a 32-bit integer.\n\n @since 1.5\n"
19300,method,java/math/BigDecimal/stripTrailingZeros/," Returns a {@code BigDecimal} which is numerically equal to\n this one but with any trailing zeros removed from the\n representation.  For example, stripping the trailing zeros from\n the {@code BigDecimal} value {@code 600.0}, which has\n [{@code BigInteger}, {@code scale}] components equals to\n [6000, 1], yields {@code 6E2} with [{@code BigInteger},\n {@code scale}] components equals to [6, -2]\n\n @return a numerically equal {@code BigDecimal} with any\n trailing zeros removed.\n @since 1.5\n"
19301,method,java/math/BigDecimal/compareTo/BigDecimal," Compares this {@code BigDecimal} with the specified\n {@code BigDecimal}.  Two {@code BigDecimal} objects that are\n equal in value but have a different scale (like 2.0 and 2.00)\n are considered equal by this method.  This method is provided\n in preference to individual methods for each of the six boolean\n comparison operators ({@literal <}, ==,\n {@literal >}, {@literal >=}, !=, {@literal <=}).  The\n suggested idiom for performing these comparisons is:\n {@code (x.compareTo(y)} &lt;<i>op</i>&gt; {@code 0)}, where\n &lt;<i>op</i>&gt; is one of the six comparison operators.\n\n @param  val {@code BigDecimal} to which this {@code BigDecimal} is \n         to be compared.\n @return -1, 0, or 1 as this {@code BigDecimal} is numerically \n          less than, equal to, or greater than {@code val}.\n"
19303,method,java/math/BigDecimal/min/BigDecimal," Returns the minimum of this {@code BigDecimal} and\n {@code val}.\n\n @param  val value with which the minimum is to be computed.\n @return the {@code BigDecimal} whose value is the lesser of this \n         {@code BigDecimal} and {@code val}.  If they are equal, \n         as defined by the {@link #compareTo(BigDecimal) compareTo}  \n         method, {@code this} is returned.\n @see    #compareTo(java.math.BigDecimal)\n"
19304,method,java/math/BigDecimal/max/BigDecimal," Returns the maximum of this {@code BigDecimal} and {@code val}.\n\n @param  val value with which the maximum is to be computed.\n @return the {@code BigDecimal} whose value is the greater of this \n         {@code BigDecimal} and {@code val}.  If they are equal, \n         as defined by the {@link #compareTo(BigDecimal) compareTo} \n         method, {@code this} is returned.\n @see    #compareTo(java.math.BigDecimal)\n"
19310,method,java/math/BigDecimal/toBigIntegerExact/," Converts this {@code BigDecimal} to a {@code BigInteger},\n checking for lost information.  An exception is thrown if this\n {@code BigDecimal} has a nonzero fractional part.\n\n @return this {@code BigDecimal} converted to a {@code BigInteger}.\n @throws ArithmeticException if {@code this} has a nonzero\n         fractional part.\n @since  1.5\n"
19312,method,java/math/BigDecimal/longValueExact/," Converts this {@code BigDecimal} to a {@code long}, checking\n for lost information.  If this {@code BigDecimal} has a\n nonzero fractional part or is out of the possible range for a\n {@code long} result then an {@code ArithmeticException} is\n thrown.\n\n @return this {@code BigDecimal} converted to a {@code long}.\n @throws ArithmeticException if {@code this} has a nonzero\n         fractional part, or will not fit in a {@code long}.\n @since  1.5\n"
19314,method,java/math/BigDecimal/intValueExact/," Converts this {@code BigDecimal} to an {@code int}, checking\n for lost information.  If this {@code BigDecimal} has a\n nonzero fractional part or is out of the possible range for an\n {@code int} result then an {@code ArithmeticException} is\n thrown.\n\n @return this {@code BigDecimal} converted to an {@code int}.\n @throws ArithmeticException if {@code this} has a nonzero\n         fractional part, or will not fit in an {@code int}.\n @since  1.5\n"
19315,method,java/math/BigDecimal/shortValueExact/," Converts this {@code BigDecimal} to a {@code short}, checking\n for lost information.  If this {@code BigDecimal} has a\n nonzero fractional part or is out of the possible range for a\n {@code short} result then an {@code ArithmeticException} is\n thrown.\n\n @return this {@code BigDecimal} converted to a {@code short}.\n @throws ArithmeticException if {@code this} has a nonzero\n         fractional part, or will not fit in a {@code short}.\n @since  1.5\n"
19316,method,java/math/BigDecimal/byteValueExact/," Converts this {@code BigDecimal} to a {@code byte}, checking\n for lost information.  If this {@code BigDecimal} has a\n nonzero fractional part or is out of the possible range for a\n {@code byte} result then an {@code ArithmeticException} is\n thrown.\n\n @return this {@code BigDecimal} converted to a {@code byte}.\n @throws ArithmeticException if {@code this} has a nonzero\n         fractional part, or will not fit in a {@code byte}.\n @since  1.5\n"
19325,method,java/math/BigDecimal/BigDecimal/String;MathContext," Translates the string representation of a {@code BigDecimal}\n into a {@code BigDecimal}, accepting the same strings as the\n {@link #BigDecimal(String)} constructor, with rounding\n according to the context settings.\n \n @param  val string representation of a {@code BigDecimal}.\n @param  mc the context to use.\n @throws ArithmeticException if the result is inexact but the\n         rounding mode is {@code UNNECESSARY}.\n @throws NumberFormatException if {@code val} is not a valid\n         representation of a BigDecimal.\n @since  1.5\n"
19328,method,java/math/BigDecimal/BigDecimal/BigInteger," Translates a {@code BigInteger} into a {@code BigDecimal}.\n The scale of the {@code BigDecimal} is zero.\n\n @param val {@code BigInteger} value to be converted to\n            {@code BigDecimal}.\n"
19329,method,java/math/BigDecimal/BigDecimal/BigInteger;MathContext," Translates a {@code BigInteger} into a {@code BigDecimal}\n rounding according to the context settings.  The scale of the\n {@code BigDecimal} is zero.\n \n @param val {@code BigInteger} value to be converted to\n            {@code BigDecimal}.\n @param  mc the context to use.\n @throws ArithmeticException if the result is inexact but the\n         rounding mode is {@code UNNECESSARY}.\n @since  1.5\n"
19330,method,java/math/BigDecimal/BigDecimal/BigInteger;int," Translates a {@code BigInteger} unscaled value and an\n {@code int} scale into a {@code BigDecimal}.  The value of\n the {@code BigDecimal} is\n <tt>(unscaledVal &times; 10<sup>-scale</sup>)</tt>.\n\n @param unscaledVal unscaled value of the {@code BigDecimal}.\n @param scale scale of the {@code BigDecimal}.\n"
19331,method,java/math/BigDecimal/BigDecimal/BigInteger;int;MathContext," Translates a {@code BigInteger} unscaled value and an\n {@code int} scale into a {@code BigDecimal}, with rounding\n according to the context settings.  The value of the\n {@code BigDecimal} is <tt>(unscaledVal &times;\n 10<sup>-scale</sup>)</tt>, rounded according to the\n {@code precision} and rounding mode settings.\n\n @param  unscaledVal unscaled value of the {@code BigDecimal}.\n @param  scale scale of the {@code BigDecimal}.\n @param  mc the context to use.\n @throws ArithmeticException if the result is inexact but the\n         rounding mode is {@code UNNECESSARY}.\n @since  1.5\n"
19332,method,java/math/BigDecimal/BigDecimal/int," Translates an {@code int} into a {@code BigDecimal}.  The\n scale of the {@code BigDecimal} is zero.\n\n @param val {@code int} value to be converted to\n            {@code BigDecimal}.\n @since  1.5\n"
19334,method,java/math/BigDecimal/BigDecimal/long," Translates a {@code long} into a {@code BigDecimal}.  The\n scale of the {@code BigDecimal} is zero.\n\n @param val {@code long} value to be converted to {@code BigDecimal}.\n @since  1.5\n"
19336,field,java/math/BigDecimal/ZERO," The value 0, with a scale of 0.\n\n @since  1.5\n"
19337,field,java/math/BigDecimal/ONE," The value 1, with a scale of 0.\n\n @since  1.5\n"
19338,field,java/math/BigDecimal/TEN," The value 10, with a scale of 0.\n\n @since  1.5\n"
19344,field,java/math/BigDecimal/ROUND_HALF_DOWN," Rounding mode to round towards {@literal "nearest neighbor"}\n unless both neighbors are equidistant, in which case round\n down.  Behaves as for {@code ROUND_UP} if the discarded\n fraction is {@literal >} 0.5; otherwise, behaves as for\n {@code ROUND_DOWN}.\n"
19350,method,java/security/UnresolvedPermission/hashCode/," Returns the hash code value for this object.\n\n @return a hash code value for this object.\n"
19352,method,java/security/UnresolvedPermission/getUnresolvedType/," Get the type (class name) of the underlying permission that\n has not been resolved.\n\n @return the type (class name) of the underlying permission that\n	has not been resolved\n\n @since 1.5\n"
19353,method,java/security/UnresolvedPermission/getUnresolvedName/," Get the target name of the underlying permission that\n has not been resolved.\n\n @return the target name of the underlying permission that\n		has not been resolved, or <code>null</code>,\n		if there is no targe name\n\n @since 1.5\n"
19354,method,java/security/UnresolvedPermission/getUnresolvedActions/," Get the actions for the underlying permission that\n has not been resolved.\n\n @return the actions for the underlying permission that\n		has not been resolved, or <code>null</code>\n		if there are no actions\n\n @since 1.5\n"
19356,method,java/security/UnresolvedPermission/toString/," Returns a string describing this UnresolvedPermission.  The convention \n is to specify the class name, the permission name, and the actions, in\n the following format: '(unresolved "ClassName" "name" "actions")'.\n \n @return information about this UnresolvedPermission.\n"
19357,method,java/security/UnresolvedPermission/newPermissionCollection/," Returns a new PermissionCollection object for storing \n UnresolvedPermission  objects.\n <p>\n @return a new PermissionCollection object suitable for \n storing UnresolvedPermissions.\n"
19358,method,java/security/UnresolvedPermission/UnresolvedPermission/String;String;String;Certificate[]," Creates a new UnresolvedPermission containing the permission\n information needed later to actually create a Permission of the\n specified class, when the permission is resolved.\n \n @param type the class name of the Permission class that will be\n created when this unresolved permission is resolved.\n @param name the name of the permission.\n @param actions the actions of the permission.\n @param certs the certificates the permission's class was signed with.\n This is a list of certificate chains, where each chain is composed of a\n signer certificate and optionally its supporting certificate chain.\n Each chain is ordered bottom-to-top (i.e., with the signer certificate\n first and the (root) certificate authority last). The signer \n certificates are copied from the array. Subsequent changes to\n the array will not affect this UnsolvedPermission.\n"
19359,class,java/security/UnrecoverableKeyException," This exception is thrown if a key in the keystore cannot be recovered.\n\n @version 1.13, 03/23/10\n\n @since 1.2\n"
19360,method,java/security/UnrecoverableKeyException/UnrecoverableKeyException/," Constructs an UnrecoverableKeyException with no detail message.\n"
19361,method,java/security/UnrecoverableKeyException/UnrecoverableKeyException/String," Constructs an UnrecoverableKeyException with the specified detail\n message, which provides more information about why this exception\n has been thrown.\n\n @param msg the detail message.\n"
19362,class,java/security/UnrecoverableEntryException," This exception is thrown if an entry in the keystore cannot be recovered.\n\n @version 1.4, 03/23/10\n\n @since 1.5\n"
19363,method,java/security/UnrecoverableEntryException/UnrecoverableEntryException/," Constructs an UnrecoverableEntryException with no detail message.\n"
19364,method,java/security/UnrecoverableEntryException/UnrecoverableEntryException/String," Constructs an UnrecoverableEntryException with the specified detail\n message, which provides more information about why this exception\n has been thrown.\n\n @param msg the detail message.\n"
19365,class,java/security/URIParameter," A parameter that contains a URI pointing to data intended for a\n PolicySpi or ConfigurationSpi implementation.\n\n @since 1.6\n"
19366,method,java/security/URIParameter/getURI/," Returns the URI.\n\n @return uri the URI.\n"
19367,method,java/security/URIParameter/URIParameter/URI," Constructs a URIParameter with the URI pointing to\n data intended for an SPI implementation.\n\n @param uri the URI pointing to the data.\n\n @exception NullPointerException if the specified URI is null.\n"
19368,class,java/security/Timestamp," This class encapsulates information about a signed timestamp.\n It is immutable.\n It includes the timestamp's date and time as well as information about the \n Timestamping Authority (TSA) which generated and signed the timestamp.\n\n @since 1.5\n @version 1.4, 03/23/10\n @author Vincent Ryan\n"
19369,method,java/security/Timestamp/getTimestamp/," Returns the date and time when the timestamp was generated.\n\n @return The timestamp's date and time.\n"
19370,method,java/security/Timestamp/getSignerCertPath/," Returns the certificate path for the Timestamping Authority.\n\n @return The TSA's certificate path.\n"
19371,method,java/security/Timestamp/hashCode/," Returns the hash code value for this timestamp. \n The hash code is generated using the date and time of the timestamp\n and the TSA's certificate path.\n\n @return a hash code value for this timestamp.\n"
19373,method,java/security/Timestamp/toString/," Returns a string describing this timestamp.\n \n @return A string comprising the date and time of the timestamp and\n         its signer's certificate.\n"
19378,method,java/security/Signer/toString/," Returns a string of information about the signer.\n\n @return a string of information about the signer.\n"
19380,method,java/security/Signer/Signer/String," Creates a signer with the specified identity name.\n\n @param name the identity name.\n"
19381,method,java/security/Signer/Signer/String;IdentityScope," Creates a signer with the specified identity name and scope.\n\n @param name the identity name.\n\n @param scope the scope of the identity.\n\n @exception KeyManagementException if there is already an identity\n with the same name in the scope.\n"
19385,method,java/security/SignedObject/getAlgorithm/," Retrieves the name of the signature algorithm.\n\n @return the signature algorithm name.\n"
19386,method,java/security/SignedObject/verify/PublicKey;Signature,"\n Verifies that the signature in this SignedObject is the valid\n signature for the object stored inside, with the given\n verification key, using the designated verification engine.\n \n @param verificationKey the public key for verification.\n @param verificationEngine the signature verification engine.\n\n @exception SignatureException if signature verification failed.\n @exception InvalidKeyException if the verification key is invalid.\n\n @return <tt>true</tt> if the signature \n is valid, <tt>false</tt> otherwise\n"
19389,method,java/security/SignatureSpi/engineInitVerify/PublicKey," Initializes this signature object with the specified\n public key for verification operations.\n\n @param publicKey the public key of the identity whose signature is\n going to be verified.\n \n @exception InvalidKeyException if the key is improperly\n encoded, parameters are missing, and so on.  \n"
19390,method,java/security/SignatureSpi/engineInitSign/PrivateKey," Initializes this signature object with the specified\n private key for signing operations.\n\n @param privateKey the private key of the identity whose signature\n will be generated.\n\n @exception InvalidKeyException if the key is improperly\n encoded, parameters are missing, and so on. \n"
19391,method,java/security/SignatureSpi/engineInitSign/PrivateKey;SecureRandom," Initializes this signature object with the specified\n private key and source of randomness for signing operations.\n\n <p>This concrete method has been added to this previously-defined\n abstract class. (For backwards compatibility, it cannot be abstract.)\n\n @param privateKey the private key of the identity whose signature\n will be generated.\n @param random the source of randomness\n\n @exception InvalidKeyException if the key is improperly\n encoded, parameters are missing, and so on. \n"
19392,method,java/security/SignatureSpi/engineUpdate/byte," Updates the data to be signed or verified\n using the specified byte.\n\n @param b the byte to use for the update.\n\n @exception SignatureException if the engine is not initialized\n properly.\n"
19393,method,java/security/SignatureSpi/engineUpdate/byte[];int;int," Updates the data to be signed or verified, using the \n specified array of bytes, starting at the specified offset.\n\n @param b the array of bytes  \n @param off the offset to start from in the array of bytes \n @param len the number of bytes to use, starting at offset\n\n @exception SignatureException if the engine is not initialized \n properly\n"
19394,method,java/security/SignatureSpi/engineUpdate/ByteBuffer," Updates the data to be signed or verified using the specified\n ByteBuffer. Processes the <code>data.remaining()</code> bytes\n starting at at <code>data.position()</code>.\n Upon return, the buffer's position will be equal to its limit;\n its limit will not have changed.\n\n @param input the ByteBuffer\n @since 1.5\n"
19395,method,java/security/SignatureSpi/engineSign/,"\n Returns the signature bytes of all the data\n updated so far.    \n The format of the signature depends on the underlying \n signature scheme.\n\n @return the signature bytes of the signing operation's result.\n\n @exception SignatureException if the engine is not\n initialized properly or if this signature algorithm is unable to\n process the input data provided.\n"
19397,method,java/security/SignatureSpi/engineVerify/byte[],"\n Verifies the passed-in signature.   \n \n @param sigBytes the signature bytes to be verified.\n\n @return true if the signature was verified, false if not. \n\n @exception SignatureException if the engine is not \n initialized properly, the passed-in signature is improperly \n encoded or of the wrong type, if this signature algorithm is unable to\n process the input data provided, etc.\n"
19404,method,java/security/SignatureSpi/SignatureSpi/,""
19405,field,java/security/SignatureSpi/appRandom," Application-specified source of randomness. \n"
19406,class,java/security/SignatureException," This is the generic Signature exception. \n \n @version 1.18 03/23/10\n @author Benjamin Renaud \n"
19407,method,java/security/SignatureException/SignatureException/," Constructs a SignatureException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
19408,method,java/security/SignatureException/SignatureException/String," Constructs a SignatureException with the specified detail\n message.  A detail message is a String that describes this\n particular exception.\n\n @param msg the detail message.  \n"
19409,method,java/security/SignatureException/SignatureException/String;Throwable," Creates a <code>SignatureException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19410,method,java/security/SignatureException/SignatureException/Throwable," Creates a <code>SignatureException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19415,method,java/security/Signature/getProvider/,"\n Returns the provider of this signature object.\n \n @return the provider of this signature object\n"
19424,method,java/security/Signature/update/byte," Updates the data to be signed or verified by a byte.\n\n @param b the byte to use for the update.\n \n @exception SignatureException if this signature object is not \n initialized properly.     \n"
19425,method,java/security/Signature/update/byte[]," Updates the data to be signed or verified, using the specified\n array of bytes.\n\n @param data the byte array to use for the update.       \n \n @exception SignatureException if this signature object is not \n initialized properly.          \n"
19426,method,java/security/Signature/update/byte[];int;int," Updates the data to be signed or verified, using the specified\n array of bytes, starting at the specified offset.  \n\n @param data the array of bytes.  \n @param off the offset to start from in the array of bytes.  \n @param len the number of bytes to use, starting at offset.\n  \n @exception SignatureException if this signature object is not \n initialized properly.          \n"
19427,method,java/security/Signature/update/ByteBuffer," Updates the data to be signed or verified using the specified\n ByteBuffer. Processes the <code>data.remaining()</code> bytes\n starting at at <code>data.position()</code>.\n Upon return, the buffer's position will be equal to its limit;\n its limit will not have changed.\n\n @param data the ByteBuffer\n\n @exception SignatureException if this signature object is not\n initialized properly.\n @since 1.5\n"
19428,method,java/security/Signature/getAlgorithm/,"\n Returns the name of the algorithm for this signature object.\n \n @return the name of the algorithm for this signature object.\n"
19429,method,java/security/Signature/toString/," Returns a string representation of this signature object,       \n providing information that includes the state of the object       \n and the name of the algorithm used.       \n \n @return a string representation of this signature object.\n"
19431,method,java/security/Signature/setParameter/AlgorithmParameterSpec," Initializes this signature engine with the specified parameter set.\n\n @param params the parameters\n\n @exception InvalidAlgorithmParameterException if the given parameters\n are inappropriate for this signature engine\n\n @see #getParameters\n"
19435,method,java/security/Signature/Signature/String," Creates a Signature object for the specified algorithm.\n\n @param algorithm the standard string name of the algorithm. \n See Appendix A in the <a href=\n "../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard algorithm names.\n"
19436,field,java/security/Signature/UNINITIALIZED,"\n Possible {@link #state} value, signifying that       \n this signature object has not yet been initialized.\n"
19437,field,java/security/Signature/SIGN,"\n Possible {@link #state} value, signifying that       \n this signature object has been initialized for signing.\n"
19438,field,java/security/Signature/VERIFY,"\n Possible {@link #state} value, signifying that       \n this signature object has been initialized for verification.\n"
19439,field,java/security/Signature/state,"\n Current state of this signature object.\n"
19443,class,java/security/Security," <p>This class centralizes all security properties and common security\n methods. One of its primary uses is to manage providers.\n\n @author Benjamin Renaud\n @version 1.133, 03/23/10\n"
19448,method,java/security/Security/getProviders/," Returns an array containing all the installed providers. The order of\n the providers in the array is their preference order.\n \n @return an array of all the installed providers.\n"
19449,method,java/security/Security/getProvider/String," Returns the provider installed with the specified name, if\n any. Returns null if no provider with the specified name is\n installed or if name is null.\n \n @param name the name of the provider to get.\n \n @return the provider of the specified name.\n\n @see #removeProvider\n @see #addProvider\n"
19459,method,java/security/SecureRandomSpi/SecureRandomSpi/,""
19464,method,java/security/SecureRandom/getProvider/," Returns the provider of this SecureRandom object.\n\n @return the provider of this SecureRandom object.\n"
19465,method,java/security/SecureRandom/getAlgorithm/," Returns the name of the algorithm implemented by this SecureRandom\n object.\n\n @return the name of the algorithm or <code>unknown</code>\n		if the algorithm name cannot be determined.\n @since 1.5\n"
19474,method,java/security/SecureRandom/SecureRandom/SecureRandomSpi;Provider," Creates a SecureRandom object.\n\n @param secureRandomSpi the SecureRandom implementation.\n @param provider the provider.\n"
19482,field,java/security/PublicKey/serialVersionUID,"\n The class fingerprint that is set to indicate serialization\n compatibility with a previous version of the class.\n"
19484,method,java/security/ProviderException/ProviderException/," Constructs a ProviderException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
19485,method,java/security/ProviderException/ProviderException/String," Constructs a ProviderException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param s the detail message.  \n"
19486,method,java/security/ProviderException/ProviderException/String;Throwable," Creates a <code>ProviderException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19487,method,java/security/ProviderException/ProviderException/Throwable," Creates a <code>ProviderException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19489,method,java/security/Provider/getName/," Returns the name of this provider.\n\n @return the name of this provider.\n"
19490,method,java/security/Provider/getVersion/," Returns the version number for this provider.\n\n @return the version number for this provider.\n"
19492,method,java/security/Provider/toString/," Returns a string with the name and the version number\n of this provider.\n\n @return the string with the name and the version number\n for this provider.\n"
19495,method,java/security/Provider/putAll/Map," Copies all of the mappings from the specified Map to this provider.\n These mappings will replace any properties that this provider had \n for any of the keys currently in the specified Map. \n\n @since 1.2\n"
19496,method,java/security/Provider/entrySet/," Returns an unmodifiable Set view of the property entries contained \n in this Provider.\n\n @see   java.util.Map.Entry\n @since 1.2\n"
19497,method,java/security/Provider/keySet/," Returns an unmodifiable Set view of the property keys contained in \n this provider.\n\n @since 1.2\n"
19498,method,java/security/Provider/values/," Returns an unmodifiable Collection view of the property values \n contained in this provider.\n\n @since 1.2\n"
19501,method,java/security/Provider/get/Object,""
19502,method,java/security/Provider/keys/,""
19503,method,java/security/Provider/elements/,""
19504,method,java/security/Provider/getProperty/String,""
19505,method,java/security/Provider/getService/String;String," Get the service describing this Provider's implementation of the\n specified type of this algorithm or alias. If no such\n implementation exists, this method returns null. If there are two\n matching services, one added to this provider using \n {@link #putService putService()} and one added via {@link #put put()},\n the service added via {@link #putService putService()} is returned.\n\n @param type the type of {@link Service service} requested\n (for example, <code>MessageDigest</code>)\n @param algorithm the case insensitive algorithm name (or alternate \n alias) of the service requested (for example, <code>SHA-1</code>)\n\n @return the service describing this Provider's matching service\n or null if no such service exists\n\n @throws NullPointerException if type or algorithm is null\n\n @since 1.5\n"
19506,method,java/security/Provider/getServices/," Get an unmodifiable Set of all services supported by\n this Provider.\n\n @return an unmodifiable Set of all services supported by\n this Provider\n\n @since 1.5\n"
19509,method,java/security/Provider/Provider/String;double;String," Constructs a provider with the specified name, version number,\n and information.\n\n @param name the provider name.\n\n @param version the provider version number.\n\n @param info a description of the provider and its services.\n"
19511,method,java/security/Provider/Service/getType/," Get the type of this service. For example, <code>MessageDigest</code>.\n\n @return the type of this service\n"
19512,method,java/security/Provider/Service/getAlgorithm/," Return the name of the algorithm of this service. For example,\n <code>SHA-1</code>.\n\n @return the algorithm of this service\n"
19513,method,java/security/Provider/Service/getProvider/," Return the Provider of this service.\n\n @return the Provider of this service\n"
19514,method,java/security/Provider/Service/getClassName/," Return the name of the class implementing this service.\n\n @return the name of the class implementing this service\n"
19515,method,java/security/Provider/Service/getAttribute/String," Return the value of the specified attribute or null if this\n attribute is not set for this Service.\n\n @param name the name of the requested attribute\n\n @return the value of the specified attribute or null if the\n         attribute is not present\n\n @throws NullPointerException if name is null\n"
19518,method,java/security/Provider/Service/toString/," Return a String representation of this service.\n\n @return a String representation of this service.\n"
19519,method,java/security/Provider/Service/Provider/Service/Provider;String;String;String;List;Map," Construct a new service.\n\n @param provider the provider that offers this service\n @param type the type of this service\n @param algorithm the algorithm name\n @param className the name of the class implementing this service\n @param aliases List of aliases or null if algorithm has no aliases\n @param attributes Map of attributes or null if this implementation\n		     has no attributes\n\n @throws NullPointerException if provider, type, algorithm, or\n className is null\n"
19520,class,java/security/ProtectionDomain,"\n\n<p>\n This ProtectionDomain class encapsulates the characteristics of a domain,\n which encloses a set of classes whose instances are granted a set \n of permissions when being executed on behalf of a given set of Principals.\n <p>\n A static set of permissions can be bound to a ProtectionDomain when it is\n constructed; such permissions are granted to the domain regardless of the\n Policy in force. However, to support dynamic security policies, a\n ProtectionDomain can also be constructed such that it is dynamically\n mapped to a set of permissions by the current Policy whenever a permission\n is checked.\n <p>\n \n @version 	1.49, 03/23/10\n @author Li Gong \n @author Roland Schemers\n @author Gary Ellison\n"
19526,method,java/security/ProtectionDomain/toString/," Convert a ProtectionDomain to a String.\n"
19532,method,java/security/PrivilegedActionException/getException/," Returns the exception thrown by the privileged computation that\n resulted in this <code>PrivilegedActionException</code>.\n\n <p>This method predates the general-purpose exception chaining facility.\n The {@link Throwable#getCause()} method is now the preferred means of\n obtaining this information.\n\n @return the exception thrown by the privileged computation that\n         resulted in this <code>PrivilegedActionException</code>.\n @see PrivilegedExceptionAction\n @see AccessController#doPrivileged(PrivilegedExceptionAction)\n @see AccessController#doPrivileged(PrivilegedExceptionAction,\n                                            AccessControlContext)\n"
19533,method,java/security/PrivilegedActionException/getCause/," Returns the the cause of this exception (the exception thrown by\n the privileged computation that resulted in this\n <code>PrivilegedActionException</code>).\n\n @return  the cause of this exception.\n @since   1.4\n"
19534,method,java/security/PrivilegedActionException/toString/,""
19535,method,java/security/PrivilegedActionException/PrivilegedActionException/Exception," Constructs a new PrivilegedActionException &quot;wrapping&quot;\n the specific Exception.\n\n @param exception The exception thrown\n"
19539,field,java/security/PrivateKey/serialVersionUID,"\n The class fingerprint that is set to indicate serialization\n compatibility with a previous version of the class.\n"
19540,interface,java/security/Principal," This interface represents the abstract notion of a principal, which\n can be used to represent any entity, such as an individual, a\n corporation, and a login id.\n\n @see java.security.cert.X509Certificate\n\n @version 1.24, 10/03/23\n @author Li Gong\n"
19541,method,java/security/Principal/equals/Object," Compares this principal to the specified object.  Returns true\n if the object passed in matches the principal represented by\n the implementation of this interface.\n\n @param another principal to compare with.\n\n @return true if the principal passed in is the same as that\n encapsulated by this principal, and false otherwise.\n\n"
19542,method,java/security/Principal/toString/," Returns a string representation of this principal.\n\n @return a string representation of this principal.\n"
19543,method,java/security/Principal/hashCode/," Returns a hashcode for this principal.\n\n @return a hashcode for this principal.\n"
19544,method,java/security/Principal/getName/," Returns the name of this principal.\n\n @return the name of this principal.\n"
19546,method,java/security/PolicySpi/engineImplies/ProtectionDomain;Permission," Check whether the policy has granted a Permission to a ProtectionDomain.\n\n @param domain the ProtectionDomain to check.\n\n @param permission check whether this permission is granted to the\n		specified domain.\n\n @return boolean true if the permission is granted to the domain.\n"
19550,method,java/security/PolicySpi/PolicySpi/,""
19562,method,java/security/Policy/implies/ProtectionDomain;Permission," Evaluates the global policy for the permissions granted to\n the ProtectionDomain and tests whether the permission is \n granted.\n\n @param domain the ProtectionDomain to test\n @param permission the Permission object to be tested for implication.\n\n @return true if "permission" is a proper subset of a permission\n granted to this ProtectionDomain.\n\n @see java.security.ProtectionDomain\n @since 1.4\n"
19564,method,java/security/Policy/Policy/,""
19566,interface,java/security/Policy/Parameters," This represents a marker interface for Policy parameters.\n\n @since 1.6\n"
19568,method,java/security/Permissions/add/Permission," Adds a permission object to the PermissionCollection for the class the\n permission belongs to. For example, if <i>permission</i> is a\n FilePermission, it is added to the FilePermissionCollection stored\n in this Permissions object. \n \n This method creates\n a new PermissionCollection object (and adds the permission to it)\n if an appropriate collection does not yet exist. <p>\n\n @param permission the Permission object to add.\n \n @exception SecurityException if this Permissions object is\n marked as readonly.\n \n @see PermissionCollection#isReadOnly()\n"
19570,method,java/security/Permissions/elements/," Returns an enumeration of all the Permission objects in all the\n PermissionCollections in this Permissions object.\n\n @return an enumeration of all the Permissions.\n"
19571,method,java/security/Permissions/Permissions/," Creates a new Permissions object containing no PermissionCollections.\n"
19573,method,java/security/PermissionCollection/add/Permission," Adds a permission object to the current collection of permission objects.\n\n @param permission the Permission object to add.\n\n @exception SecurityException -  if this PermissionCollection object\n                                 has been marked readonly\n"
19574,method,java/security/PermissionCollection/implies/Permission," Checks to see if the specified permission is implied by\n the collection of Permission objects held in this PermissionCollection.\n\n @param permission the Permission object to compare.\n\n @return true if "permission" is implied by the  permissions in\n the collection, false if not.\n"
19575,method,java/security/PermissionCollection/elements/," Returns an enumeration of all the Permission objects in the collection.\n\n @return an enumeration of all the Permissions.\n"
19579,method,java/security/PermissionCollection/PermissionCollection/,""
19583,method,java/security/Permission/equals/Object," Checks two Permission objects for equality.\n <P>\n Do not use the <code>equals</code> method for making access control\n decisions; use the <code>implies</code> method.\n  \n @param obj the object we are testing for equality with this object.\n\n @return true if both Permission objects are equivalent.\n"
19585,method,java/security/Permission/getName/," Returns the name of this Permission.\n For example, in the case of a <code>java.io.FilePermission</code>,\n the name will be a pathname.\n\n @return the name of this Permission.\n \n"
19588,method,java/security/Permission/toString/," Returns a string describing this Permission.  The convention is to\n specify the class name, the permission name, and the actions in\n the following format: '("ClassName" "name" "actions")'.\n \n @return information about this Permission.\n"
19589,method,java/security/Permission/Permission/String," Constructs a permission with the specified name.\n\n @param name name of the Permission object being created.\n\n"
19590,class,java/security/NoSuchProviderException," This exception is thrown when a particular security provider is\n requested but is not available in the environment.\n\n @version 1.22 10/03/23\n @author Benjamin Renaud \n"
19591,method,java/security/NoSuchProviderException/NoSuchProviderException/," Constructs a NoSuchProviderException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
19592,method,java/security/NoSuchProviderException/NoSuchProviderException/String," Constructs a NoSuchProviderException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
19593,class,java/security/NoSuchAlgorithmException," This exception is thrown when a particular cryptographic algorithm is\n requested but is not available in the environment.\n \n @version 1.27, 10/03/23\n @author Benjamin Renaud \n"
19594,method,java/security/NoSuchAlgorithmException/NoSuchAlgorithmException/,"\n Constructs a NoSuchAlgorithmException with no detail\n message. A detail message is a String that describes this\n particular exception.\n"
19596,method,java/security/NoSuchAlgorithmException/NoSuchAlgorithmException/String;Throwable," Creates a <code>NoSuchAlgorithmException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19597,method,java/security/NoSuchAlgorithmException/NoSuchAlgorithmException/Throwable," Creates a <code>NoSuchAlgorithmException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19600,method,java/security/MessageDigestSpi/engineUpdate/byte," Updates the digest using the specified byte.\n\n @param input the byte to use for the update.\n"
19601,method,java/security/MessageDigestSpi/engineUpdate/byte[];int;int," Updates the digest using the specified array of bytes,    \n starting at the specified offset.\n\n @param input the array of bytes to use for the update.\n\n @param offset the offset to start from in the array of bytes.\n\n @param len the number of bytes to use, starting at \n <code>offset</code>.\n"
19602,method,java/security/MessageDigestSpi/engineUpdate/ByteBuffer," Update the digest using the specified ByteBuffer. The digest is\n updated using the <code>input.remaining()</code> bytes starting\n at <code>input.position()</code>.\n Upon return, the buffer's position will be equal to its limit;\n its limit will not have changed.\n\n @param input the ByteBuffer\n @since 1.5\n"
19605,method,java/security/MessageDigestSpi/engineReset/," Resets the digest for further use.\n"
19607,method,java/security/MessageDigestSpi/MessageDigestSpi/,""
19612,method,java/security/MessageDigest/getProvider/,"\n Returns the provider of this message digest object.\n \n @return the provider of this message digest object\n"
19613,method,java/security/MessageDigest/update/byte," Updates the digest using the specified byte.    \n \n @param input the byte with which to update the digest.\n"
19614,method,java/security/MessageDigest/update/byte[];int;int," Updates the digest using the specified array of bytes, starting\n at the specified offset.\n \n @param input the array of bytes.\n\n @param offset the offset to start from in the array of bytes.\n\n @param len the number of bytes to use, starting at \n <code>offset</code>.  \n"
19615,method,java/security/MessageDigest/update/byte[]," Updates the digest using the specified array of bytes.\n \n @param input the array of bytes.\n"
19616,method,java/security/MessageDigest/update/ByteBuffer," Update the digest using the specified ByteBuffer. The digest is\n updated using the <code>input.remaining()</code> bytes starting\n at <code>input.position()</code>.\n Upon return, the buffer's position will be equal to its limit;\n its limit will not have changed.\n\n @param input the ByteBuffer\n @since 1.5\n"
19620,method,java/security/MessageDigest/toString/," Returns a string representation of this message digest object.  \n"
19621,method,java/security/MessageDigest/isEqual/byte[];byte[]," Compares two digests for equality. Does a simple byte compare.\n \n @param digesta one of the digests to compare.\n \n @param digestb the other digest to compare.    \n\n @return true if the digests are equal, false otherwise.\n"
19622,method,java/security/MessageDigest/reset/," Resets the digest for further use.\n"
19624,method,java/security/MessageDigest/getDigestLength/,"\n Returns the length of the digest in bytes, or 0 if this operation is\n not supported by the provider and the implementation is not cloneable.\n\n @return the digest length in bytes, or 0 if this operation is not\n supported by the provider and the implementation is not cloneable.\n \n @since 1.2\n"
19626,method,java/security/MessageDigest/MessageDigest/String," Creates a message digest with the specified algorithm name.\n \n @param algorithm the standard name of the digest algorithm. \n See Appendix A in the <a href=\n "../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard algorithm names.\n"
19631,method,java/security/KeyStoreSpi/engineGetCreationDate/String," Returns the creation date of the entry identified by the given alias.\n\n @param alias the alias name\n\n @return the creation date of this entry, or null if the given alias does\n not exist\n"
19635,method,java/security/KeyStoreSpi/engineDeleteEntry/String," Deletes the entry identified by the given alias from this keystore.\n\n @param alias the alias name\n\n @exception KeyStoreException if the entry cannot be removed.\n"
19636,method,java/security/KeyStoreSpi/engineAliases/," Lists all the alias names of this keystore.\n\n @return enumeration of the alias names\n"
19637,method,java/security/KeyStoreSpi/engineContainsAlias/String," Checks if the given alias exists in this keystore.\n\n @param alias the alias name\n\n @return true if the alias exists, false otherwise\n"
19638,method,java/security/KeyStoreSpi/engineSize/," Retrieves the number of entries in this keystore.\n\n @return the number of entries in this keystore\n"
19642,method,java/security/KeyStoreSpi/engineStore/OutputStream;char[]," Stores this keystore to the given output stream, and protects its\n integrity with the given password.\n\n @param stream the output stream to which this keystore is written.\n @param password the password to generate the keystore integrity check\n\n @exception IOException if there was an I/O problem with data\n @exception NoSuchAlgorithmException if the appropriate data integrity\n algorithm could not be found\n @exception CertificateException if any of the certificates included in\n the keystore data could not be stored\n"
19649,method,java/security/KeyStoreSpi/KeyStoreSpi/,""
19650,class,java/security/KeyStoreException," This is the generic KeyStore exception. \n \n @author Jan Luehe\n\n @version 1.14, 03/23/10\n\n @since 1.2\n"
19651,method,java/security/KeyStoreException/KeyStoreException/,"\n Constructs a KeyStoreException with no detail message.  (A\n detail message is a String that describes this particular\n exception.)  \n"
19652,method,java/security/KeyStoreException/KeyStoreException/String,"\n Constructs a KeyStoreException with the specified detail\n message.  (A detail message is a String that describes this\n particular exception.)\n\n @param msg the detail message.  \n"
19653,method,java/security/KeyStoreException/KeyStoreException/String;Throwable," Creates a <code>KeyStoreException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19654,method,java/security/KeyStoreException/KeyStoreException/Throwable," Creates a <code>KeyStoreException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19660,method,java/security/KeyStore/getProvider/,"\n Returns the provider of this keystore.\n \n @return the provider of this keystore.\n"
19661,method,java/security/KeyStore/getType/," Returns the type of this keystore.\n\n @return the type of this keystore.\n"
19665,method,java/security/KeyStore/getCreationDate/String," Returns the creation date of the entry identified by the given alias.\n\n @param alias the alias name\n\n @return the creation date of this entry, or null if the given alias does\n not exist\n\n @exception KeyStoreException if the keystore has not been initialized\n (loaded).\n"
19669,method,java/security/KeyStore/deleteEntry/String," Deletes the entry identified by the given alias from this keystore.\n\n @param alias the alias name\n\n @exception KeyStoreException if the keystore has not been initialized,\n or if the entry cannot be removed.\n"
19670,method,java/security/KeyStore/aliases/," Lists all the alias names of this keystore.\n\n @return enumeration of the alias names\n\n @exception KeyStoreException if the keystore has not been initialized\n (loaded).\n"
19671,method,java/security/KeyStore/containsAlias/String," Checks if the given alias exists in this keystore.\n\n @param alias the alias name\n\n @return true if the alias exists, false otherwise\n\n @exception KeyStoreException if the keystore has not been initialized\n (loaded).\n"
19672,method,java/security/KeyStore/size/," Retrieves the number of entries in this keystore.\n\n @return the number of entries in this keystore\n\n @exception KeyStoreException if the keystore has not been initialized\n (loaded).\n"
19676,method,java/security/KeyStore/store/OutputStream;char[]," Stores this keystore to the given output stream, and protects its\n integrity with the given password.\n\n @param stream the output stream to which this keystore is written.\n @param password the password to generate the keystore integrity check\n\n @exception KeyStoreException if the keystore has not been initialized\n (loaded).\n @exception IOException if there was an I/O problem with data\n @exception NoSuchAlgorithmException if the appropriate data integrity\n algorithm could not be found\n @exception CertificateException if any of the certificates included in\n the keystore data could not be stored\n"
19683,method,java/security/KeyStore/KeyStore/KeyStoreSpi;Provider;String," Creates a KeyStore object of the given type, and encapsulates the given\n provider implementation (SPI object) in it.\n\n @param keyStoreSpi the provider implementation.\n @param provider the provider.\n @param type the keystore type.\n"
19684,interface,java/security/KeyStore/LoadStoreParameter," A marker interface for <code>KeyStore</code>\n {@link #load(KeyStore.LoadStoreParameter) load}\n and\n {@link #store(KeyStore.LoadStoreParameter) store}\n parameters.\n\n @since 1.5\n"
19685,method,java/security/KeyStore/LoadStoreParameter/getProtectionParameter/," Gets the parameter used to protect keystore data.\n\n @return the parameter used to protect keystore data, or null\n"
19687,class,java/security/KeyStore/PasswordProtection," A password-based implementation of <code>ProtectionParameter</code>.\n\n @since 1.5\n"
19689,method,java/security/KeyStore/PasswordProtection/destroy/," Clears the password.\n\n @exception DestroyFailedException if this method was unable\n	to clear the password\n"
19690,method,java/security/KeyStore/PasswordProtection/isDestroyed/," Determines if password has been cleared.\n\n @return true if the password has been cleared, false otherwise\n"
19695,interface,java/security/KeyStore/Entry," A marker interface for <code>KeyStore</code> entry types.\n\n @since 1.5\n"
19696,class,java/security/KeyStore/PrivateKeyEntry," A <code>KeyStore</code> entry that holds a <code>PrivateKey</code>\n and corresponding certificate chain.\n\n @since 1.5\n"
19697,method,java/security/KeyStore/PrivateKeyEntry/getPrivateKey/," Gets the <code>PrivateKey</code> from this entry.\n\n @return the <code>PrivateKey</code> from this entry\n"
19699,method,java/security/KeyStore/PrivateKeyEntry/getCertificate/," Gets the end entity <code>Certificate</code>\n from the certificate chain in this entry.\n\n @return the end entity <code>Certificate</code> (at index 0)\n	from the certificate chain in this entry.\n	If the certificate is of type X.509,\n	the runtime type of the returned certificate is\n	<code>X509Certificate</code>.\n"
19700,method,java/security/KeyStore/PrivateKeyEntry/toString/," Returns a string representation of this PrivateKeyEntry.\n @return a string representation of this PrivateKeyEntry.\n"
19702,class,java/security/KeyStore/SecretKeyEntry," A <code>KeyStore</code> entry that holds a <code>SecretKey</code>.\n\n @since 1.5\n"
19703,method,java/security/KeyStore/SecretKeyEntry/getSecretKey/," Gets the <code>SecretKey</code> from this entry.\n\n @return the <code>SecretKey</code> from this entry\n"
19704,method,java/security/KeyStore/SecretKeyEntry/toString/," Returns a string representation of this SecretKeyEntry.\n @return a string representation of this SecretKeyEntry.\n"
19705,method,java/security/KeyStore/SecretKeyEntry/KeyStore/SecretKeyEntry/SecretKey," Constructs a <code>SecretKeyEntry</code> with a\n <code>SecretKey</code>.\n\n @param secretKey the <code>SecretKey</code>\n\n @exception NullPointerException if <code>secretKey</code>\n	is <code>null</code>\n"
19706,class,java/security/KeyStore/TrustedCertificateEntry," A <code>KeyStore</code> entry that holds a trusted\n <code>Certificate</code>.\n\n @since 1.5\n"
19707,method,java/security/KeyStore/TrustedCertificateEntry/getTrustedCertificate/," Gets the trusted <code>Certficate</code> from this entry.\n\n @return the trusted <code>Certificate</code> from this entry\n"
19708,method,java/security/KeyStore/TrustedCertificateEntry/toString/," Returns a string representation of this TrustedCertificateEntry.\n @return a string representation of this TrustedCertificateEntry.\n"
19709,method,java/security/KeyStore/TrustedCertificateEntry/KeyStore/TrustedCertificateEntry/Certificate," Constructs a <code>TrustedCertificateEntry</code> with a\n trusted <code>Certificate</code>.\n\n @param trustedCert the trusted <code>Certificate</code>\n\n @exception NullPointerException if\n	<code>trustedCert</code> is <code>null</code>\n"
19713,method,java/security/KeyStore/Builder/newInstance/KeyStore;ProtectionParameter," Returns a new Builder that encapsulates the given KeyStore.\n The {@linkplain #getKeyStore} method of the returned object \n will return <code>keyStore</code>, the {@linkplain \n #getProtectionParameter getProtectionParameter()} method will \n return <code>protectionParameters</code>.\n\n <p> This is useful if an existing KeyStore object needs to be\n used with Builder-based APIs.\n\n @return a new Builder object\n @param keyStore the KeyStore to be encapsulated\n @param protectionParameter the ProtectionParameter used to\n   protect the KeyStore entries\n @throws NullPointerException if keyStore or\n   protectionParameters is null\n @throws IllegalArgumentException if the keyStore has not been\n   initialized\n"
19716,method,java/security/KeyStore/Builder/KeyStore/Builder/," Construct a new Builder.\n"
19718,method,java/security/KeyRep/readResolve/," Resolve the Key object.\n\n <p> This method supports three Type/format combinations:\n <ul>\n <li> Type.SECRET/"RAW" - returns a SecretKeySpec object\n constructed using encoded key bytes and algorithm\n <li> Type.PUBLIC/"X.509" - gets a KeyFactory instance for\n the key algorithm, constructs an X509EncodedKeySpec with the\n encoded key bytes, and generates a public key from the spec\n <li> Type.PRIVATE/"PKCS#8" - gets a KeyFactory instance for\n the key algorithm, constructs a PKCS8EncodedKeySpec with the\n encoded key bytes, and generates a private key from the spec\n </ul>\n\n <p>\n\n @return the resolved Key object\n\n @exception ObjectStreamException if the Type/format\n	combination is unrecognized, if the algorithm, key format, or\n	encoded key bytes are unrecognized/invalid, of if the\n	resolution of the key fails for any reason\n"
19719,method,java/security/KeyRep/KeyRep/Type;String;String;byte[]," Construct the alternate Key class.\n\n <p>\n\n @param type either one of Type.SECRET, Type.PUBLIC, or Type.PRIVATE\n @param algorithm the algorithm returned from\n		<code>Key.getAlgorithm()</code>\n @param format the encoding format returned from\n		<code>Key.getFormat()</code>\n @param encoded the encoded bytes returned from\n		<code>Key.getEncoded()</code>\n\n @exception NullPointerException\n		if type is <code>null</code>,\n		if algorithm is <code>null</code>,\n		if format is <code>null</code>,\n		or if encoded is <code>null</code>\n"
19720,class,java/security/KeyRep/Type," Key type.\n\n @since 1.5\n"
19721,method,java/security/KeyRep/Type/values/,""
19722,method,java/security/KeyRep/Type/valueOf/String,""
19723,field,java/security/KeyRep/Type/SECRET,"Type for secret keys. "
19724,field,java/security/KeyRep/Type/PUBLIC,"Type for public keys. "
19725,field,java/security/KeyRep/Type/PRIVATE,"Type for private keys. "
19727,method,java/security/KeyPairGeneratorSpi/initialize/int;SecureRandom," Initializes the key pair generator for a certain keysize, using\n the default parameter set.\n\n @param keysize the keysize. This is an\n algorithm-specific metric, such as modulus length, specified in\n number of bits.\n\n @param random the source of randomness for this generator.\n\n @exception InvalidParameterException if the <code>keysize</code> is not\n supported by this KeyPairGeneratorSpi object.\n"
19730,method,java/security/KeyPairGeneratorSpi/KeyPairGeneratorSpi/,""
19732,method,java/security/KeyPairGenerator/getAlgorithm/," Returns the standard name of the algorithm for this key pair generator.\n See Appendix A in the <a href=\n "../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard algorithm names.\n \n @return the standard string name of the algorithm. \n"
19736,method,java/security/KeyPairGenerator/getProvider/,"\n Returns the provider of this key pair generator object.\n \n @return the provider of this key pair generator object\n"
19737,method,java/security/KeyPairGenerator/initialize/int," Initializes the key pair generator for a certain keysize using\n a default parameter set and the <code>SecureRandom</code>\n implementation of the highest-priority installed provider as the source\n of randomness.\n (If none of the installed providers supply an implementation of\n <code>SecureRandom</code>, a system-provided source of randomness is\n used.)\n\n @param keysize the keysize. This is an\n algorithm-specific metric, such as modulus length, specified in\n number of bits.\n\n @exception InvalidParameterException if the <code>keysize</code> is not\n supported by this KeyPairGenerator object.\n"
19738,method,java/security/KeyPairGenerator/initialize/int;SecureRandom," Initializes the key pair generator for a certain keysize with\n the given source of randomness (and a default parameter set).\n\n @param keysize the keysize. This is an\n algorithm-specific metric, such as modulus length, specified in\n number of bits.\n @param random the source of randomness.\n\n @exception InvalidParameterException if the <code>keysize</code> is not\n supported by this KeyPairGenerator object.\n\n @since 1.2\n"
19743,method,java/security/KeyPairGenerator/KeyPairGenerator/String," Creates a KeyPairGenerator object for the specified algorithm.\n\n @param algorithm the standard string name of the algorithm. \n See Appendix A in the <a href=\n "../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a> \n for information about standard algorithm names.\n"
19745,method,java/security/KeyPair/getPublic/," Returns a reference to the public key component of this key pair.\n\n @return a reference to the public key.\n"
19746,method,java/security/KeyPair/getPrivate/," Returns a reference to the private key component of this key pair.\n\n @return a reference to the private key.\n"
19749,method,java/security/KeyManagementException/KeyManagementException/," Constructs a KeyManagementException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
19750,method,java/security/KeyManagementException/KeyManagementException/String," Constructs a KeyManagementException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
19751,method,java/security/KeyManagementException/KeyManagementException/String;Throwable," Creates a <code>KeyManagementException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19752,method,java/security/KeyManagementException/KeyManagementException/Throwable," Creates a <code>KeyManagementException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19754,method,java/security/KeyFactorySpi/engineGeneratePublic/KeySpec," Generates a public key object from the provided key\n specification (key material).\n\n @param keySpec the specification (key material) of the public key.\n\n @return the public key.\n\n @exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a public key.\n"
19755,method,java/security/KeyFactorySpi/engineGeneratePrivate/KeySpec," Generates a private key object from the provided key\n specification (key material).\n\n @param keySpec the specification (key material) of the private key.\n\n @return the private key.\n\n @exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a private key.\n"
19758,method,java/security/KeyFactorySpi/KeyFactorySpi/,""
19763,method,java/security/KeyFactory/getProvider/,"\n Returns the provider of this key factory object.\n \n @return the provider of this key factory object\n"
19764,method,java/security/KeyFactory/getAlgorithm/," Gets the name of the algorithm \n associated with this <tt>KeyFactory</tt>.\n\n @return the name of the algorithm associated with this\n <tt>KeyFactory</tt>\n"
19765,method,java/security/KeyFactory/generatePublic/KeySpec," Generates a public key object from the provided key specification\n (key material).\n\n @param keySpec the specification (key material) of the public key.\n\n @return the public key.\n\n @exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a public key.\n"
19766,method,java/security/KeyFactory/generatePrivate/KeySpec," Generates a private key object from the provided key specification\n (key material).\n\n @param keySpec the specification (key material) of the private key.\n\n @return the private key.\n\n @exception InvalidKeySpecException if the given key specification\n is inappropriate for this key factory to produce a private key.\n"
19769,method,java/security/KeyFactory/KeyFactory/KeyFactorySpi;Provider;String," Creates a KeyFactory object.\n\n @param keyFacSpi the delegate\n @param provider the provider\n @param algorithm the name of the algorithm\n to associate with this <tt>KeyFactory</tt>\n"
19770,class,java/security/KeyException," This is the basic key exception.\n\n @see Key\n @see InvalidKeyException\n @see KeyManagementException\n\n @version 1.21 10/03/23\n @author Benjamin Renaud\n"
19771,method,java/security/KeyException/KeyException/," Constructs a KeyException with no detail message. A detail\n message is a String that describes this particular exception.\n"
19772,method,java/security/KeyException/KeyException/String," Constructs a KeyException with the specified detail message.\n A detail message is a String that describes this particular\n exception.\n\n @param msg the detail message.  \n"
19773,method,java/security/KeyException/KeyException/String;Throwable," Creates a <code>KeyException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19774,method,java/security/KeyException/KeyException/Throwable," Creates a <code>KeyException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19776,method,java/security/Key/getAlgorithm/," Returns the standard algorithm name for this key. For\n example, "DSA" would indicate that this key is a DSA key.\n See Appendix A in the <a href=\n "../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a>\n for information about standard algorithm names.\n\n @return the name of the algorithm associated with this key.\n"
19777,method,java/security/Key/getFormat/," Returns the name of the primary encoding format of this key,\n or null if this key does not support encoding.\n The primary encoding format is\n named in terms of the appropriate ASN.1 data format, if an\n ASN.1 specification for this key exists.\n For example, the name of the ASN.1 data format for public\n keys is <I>SubjectPublicKeyInfo</I>, as\n defined by the X.509 standard; in this case, the returned format is\n <code>"X.509"</code>. Similarly,\n the name of the ASN.1 data format for private keys is\n <I>PrivateKeyInfo</I>,\n as defined by the PKCS #8 standard; in this case, the returned format is\n <code>"PKCS#8"</code>.\n\n @return the primary encoding format of the key.\n"
19778,method,java/security/Key/getEncoded/," Returns the key in its primary encoding format, or null\n if this key does not support encoding.\n\n @return the encoded key, or null if the key does not support\n encoding.\n"
19779,field,java/security/Key/serialVersionUID," The class fingerprint that is set to indicate \n serialization compatibility with a previous \n version of the class.\n"
19780,class,java/security/InvalidParameterException," This exception, designed for use by the JCA/JCE engine classes, \n is thrown when an invalid parameter is passed \n to a method.\n\n @author Benjamin Renaud\n @version 1.22, 10/03/23\n"
19781,method,java/security/InvalidParameterException/InvalidParameterException/," Constructs an InvalidParameterException with no detail message.\n A detail message is a String that describes this particular\n exception.\n"
19782,method,java/security/InvalidParameterException/InvalidParameterException/String," Constructs an InvalidParameterException with the specified\n detail message.  A detail message is a String that describes\n this particular exception.\n\n @param msg the detail message.  \n"
19783,class,java/security/InvalidKeyException," This is the exception for invalid Keys (invalid encoding, wrong\n length, uninitialized, etc).\n\n @version 1.18, 03/23/10\n @author Benjamin Renaud \n"
19784,method,java/security/InvalidKeyException/InvalidKeyException/," Constructs an InvalidKeyException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
19785,method,java/security/InvalidKeyException/InvalidKeyException/String," Constructs an InvalidKeyException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
19786,method,java/security/InvalidKeyException/InvalidKeyException/String;Throwable," Creates a <code>InvalidKeyException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19787,method,java/security/InvalidKeyException/InvalidKeyException/Throwable," Creates a <code>InvalidKeyException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19788,class,java/security/InvalidAlgorithmParameterException," This is the exception for invalid or inappropriate algorithm parameters.\n\n @author Jan Luehe\n\n @version 1.16, 03/23/10\n\n @see AlgorithmParameters\n @see java.security.spec.AlgorithmParameterSpec\n\n @since 1.2\n"
19789,method,java/security/InvalidAlgorithmParameterException/InvalidAlgorithmParameterException/," Constructs an InvalidAlgorithmParameterException with no detail\n message.\n A detail message is a String that describes this particular\n exception.\n"
19790,method,java/security/InvalidAlgorithmParameterException/InvalidAlgorithmParameterException/String," Constructs an InvalidAlgorithmParameterException with the specified\n detail message.\n A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
19791,method,java/security/InvalidAlgorithmParameterException/InvalidAlgorithmParameterException/String;Throwable," Creates a <code>InvalidAlgorithmParameterException</code> with the\n specified detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19792,method,java/security/InvalidAlgorithmParameterException/InvalidAlgorithmParameterException/Throwable," Creates a <code>InvalidAlgorithmParameterException</code> with the\n specified cause and a detail message of\n <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19794,method,java/security/IdentityScope/getSystemScope/," Returns the system's identity scope.\n \n @return the system's identity scope.\n \n @see #setSystemScope\n"
19796,method,java/security/IdentityScope/size/," Returns the number of identities within this identity scope.\n \n @return the number of identities within this identity scope.\n"
19797,method,java/security/IdentityScope/getIdentity/String," Returns the identity in this scope with the specified name (if any).\n \n @param name the name of the identity to be retrieved.\n \n @return the identity named <code>name</code>, or null if there are\n no identities named <code>name</code> in this scope.\n"
19799,method,java/security/IdentityScope/getIdentity/PublicKey," Retrieves the identity with the specified public key.\n\n @param key the public key for the identity to be returned.\n\n @return the identity with the given key, or null if there are\n no identities in this scope with that key.\n"
19800,method,java/security/IdentityScope/addIdentity/Identity," Adds an identity to this identity scope.\n\n @param identity the identity to be added.\n\n @exception KeyManagementException if the identity is not\n valid, a name conflict occurs, another identity has the same\n public key as the identity being added, or another exception\n occurs. "
19801,method,java/security/IdentityScope/removeIdentity/Identity," Removes an identity from this identity scope.\n\n @param identity the identity to be removed.\n\n @exception KeyManagementException if the identity is missing,\n or another exception occurs.\n"
19802,method,java/security/IdentityScope/identities/," Returns an enumeration of all identities in this identity scope.\n \n @return an enumeration of all identities in this identity scope.\n"
19803,method,java/security/IdentityScope/toString/," Returns a string representation of this identity scope, including\n its name, its scope name, and the number of identities in this\n identity scope.\n\n @return a string representation of this identity scope.\n"
19805,method,java/security/IdentityScope/IdentityScope/String," Constructs a new identity scope with the specified name.\n\n @param name the scope name.\n"
19806,method,java/security/IdentityScope/IdentityScope/String;IdentityScope," Constructs a new identity scope with the specified name and scope.\n \n @param name the scope name.\n @param scope the scope for the new identity scope.\n \n @exception KeyManagementException if there is already an identity \n with the same name in the scope.\n"
19808,method,java/security/Identity/getName/," Returns this identity's name.\n\n @return the name of this identity.\n"
19809,method,java/security/Identity/getScope/," Returns this identity's scope.\n\n @return the scope of this identity.\n"
19810,method,java/security/Identity/getPublicKey/," Returns this identity's public key.\n \n @return the public key for this identity.\n \n @see #setPublicKey\n"
19813,method,java/security/Identity/getInfo/," Returns general information previously specified for this identity.\n\n @return general information about this identity.\n\n @see #setInfo\n"
19816,method,java/security/Identity/certificates/," Returns a copy of all the certificates for this identity.  \n \n @return a copy of all the certificates for this identity.  \n"
19821,method,java/security/Identity/hashCode/," Returns a hashcode for this identity.\n\n @return a hashcode for this identity.\n"
19823,method,java/security/Identity/Identity/String;IdentityScope," Constructs an identity with the specified name and scope.\n\n @param name the identity name.  \n @param scope the scope of the identity.\n\n @exception KeyManagementException if there is already an identity \n with the same name in the scope.\n"
19824,method,java/security/Identity/Identity/String," Constructs an identity with the specified name and no scope.\n\n @param name the identity name.\n"
19826,method,java/security/GuardedObject/getObject/," Retrieves the guarded object, or throws an exception if access\n to the guarded object is denied by the guard.\n\n @return the guarded object.\n\n @exception SecurityException if access to the guarded object is\n denied.\n"
19829,method,java/security/Guard/checkGuard/Object," Determines whether or not to allow access to the guarded object\n <code>object</code>. Returns silently if access is allowed.\n Otherwise, throws a SecurityException.\n\n @param object the object being protected by the guard.\n\n @exception SecurityException if access is denied.\n\n"
19831,method,java/security/GeneralSecurityException/GeneralSecurityException/,"\n Constructs a GeneralSecurityException with no detail message.  \n"
19832,method,java/security/GeneralSecurityException/GeneralSecurityException/String," Constructs a GeneralSecurityException with the specified detail\n message.\n A detail message is a String that describes this particular\n exception.\n\n @param msg the detail message.  \n"
19833,method,java/security/GeneralSecurityException/GeneralSecurityException/String;Throwable," Creates a <code>GeneralSecurityException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19834,method,java/security/GeneralSecurityException/GeneralSecurityException/Throwable," Creates a <code>GeneralSecurityException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19838,method,java/security/DigestOutputStream/getMessageDigest/," Returns the message digest associated with this stream.\n\n @return the message digest associated with this stream.\n @see #setMessageDigest(java.security.MessageDigest)\n"
19839,method,java/security/DigestOutputStream/setMessageDigest/MessageDigest," Associates the specified message digest with this stream.\n\n @param digest the message digest to be associated with this stream.\n @see #getMessageDigest()\n"
19843,method,java/security/DigestOutputStream/toString/," Prints a string representation of this digest output stream and\n its associated message digest object.\n"
19844,method,java/security/DigestOutputStream/DigestOutputStream/OutputStream;MessageDigest," Creates a digest output stream, using the specified output stream\n and message digest.\n\n @param stream the output stream.\n\n @param digest the message digest to associate with this stream.\n"
19845,field,java/security/DigestOutputStream/digest," The message digest associated with this stream.\n"
19847,method,java/security/DigestInputStream/getMessageDigest/," Returns the message digest associated with this stream.\n\n @return the message digest associated with this stream.\n @see #setMessageDigest(java.security.MessageDigest)\n"
19848,method,java/security/DigestInputStream/setMessageDigest/MessageDigest," Associates the specified message digest with this stream.\n\n @param digest the message digest to be associated with this stream.\n @see #getMessageDigest()\n"
19852,method,java/security/DigestInputStream/toString/," Prints a string representation of this digest input stream and\n its associated message digest object.\n"
19853,method,java/security/DigestInputStream/DigestInputStream/InputStream;MessageDigest," Creates a digest input stream, using the specified input stream\n and message digest.\n\n @param stream the input stream.\n\n @param digest the message digest to associate with this stream.\n"
19854,field,java/security/DigestInputStream/digest," The message digest associated with this stream.\n"
19855,class,java/security/DigestException," This is the generic Message Digest exception. \n \n @version 1.19, 10/03/23\n @author Benjamin Renaud \n"
19856,method,java/security/DigestException/DigestException/,"\n Constructs a DigestException with no detail message.  (A\n detail message is a String that describes this particular\n exception.)  \n"
19857,method,java/security/DigestException/DigestException/String,"\n Constructs a DigestException with the specified detail\n message.  (A detail message is a String that describes this\n particular exception.)\n\n @param msg the detail message.  \n"
19858,method,java/security/DigestException/DigestException/String;Throwable," Creates a <code>DigestException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19859,method,java/security/DigestException/DigestException/Throwable," Creates a <code>DigestException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
19861,method,java/security/CodeSource/hashCode/," Returns the hash code value for this object.\n\n @return a hash code value for this object.\n"
19863,method,java/security/CodeSource/getLocation/," Returns the location associated with this CodeSource.\n \n @return the location (URL).\n"
19867,method,java/security/CodeSource/toString/," Returns a string describing this CodeSource, telling its\n URL and certificates.\n \n @return information about this CodeSource.\n"
19870,class,java/security/CodeSigner," This class encapsulates information about a code signer.\n It is immutable.\n\n @since 1.5\n @version 1.6, 03/23/10\n @author Vincent Ryan\n"
19871,method,java/security/CodeSigner/getSignerCertPath/," Returns the signer's certificate path.\n\n @return A certificate path.\n"
19872,method,java/security/CodeSigner/getTimestamp/," Returns the signature timestamp.\n\n @return The timestamp or <code>null</code> if none is present.\n"
19873,method,java/security/CodeSigner/hashCode/," Returns the hash code value for this code signer.\n The hash code is generated using the signer's certificate path and the\n timestamp, if present.\n\n @return a hash code value for this code signer.\n"
19875,method,java/security/CodeSigner/toString/," Returns a string describing this code signer.\n \n @return A string comprising the signer's certificate and a timestamp,\n         if present.\n"
19878,method,java/security/Certificate/getGuarantor/,"\n Returns the guarantor of the certificate, that is, the principal\n guaranteeing that the public key associated with this certificate\n is that of the principal associated with this certificate. For X.509\n certificates, the guarantor will typically be a Certificate Authority\n (such as the United States Postal Service or Verisign, Inc.).\n\n @return the guarantor which guaranteed the principal-key\n binding.\n"
19879,method,java/security/Certificate/getPrincipal/," Returns the principal of the principal-key pair being guaranteed by\n the guarantor.\n\n @return the principal to which this certificate is bound.  \n"
19880,method,java/security/Certificate/getPublicKey/," Returns the key of the principal-key pair being guaranteed by\n the guarantor.\n \n @return the public key that this certificate certifies belongs\n to a particular principal.  \n"
19881,method,java/security/Certificate/encode/OutputStream," Encodes the certificate to an output stream in a format that can\n be decoded by the <code>decode</code> method.\n\n @param stream the output stream to which to encode the\n certificate.\n\n @exception KeyException if the certificate is not\n properly initialized, or data is missing, etc.\n\n @exception IOException if a stream exception occurs while\n trying to output the encoded certificate to the output stream.\n\n @see #decode \n @see #getFormat\n"
19883,method,java/security/Certificate/getFormat/," Returns the name of the coding format. This is used as a hint to find\n an appropriate parser. It could be "X.509", "PGP", etc. This is\n the format produced and understood by the <code>encode</code>\n and <code>decode</code> methods.\n \n @return the name of the coding format.\n"
19884,method,java/security/Certificate/toString/boolean," Returns a string that represents the contents of the certificate.\n\n @param detailed whether or not to give detailed information\n about the certificate\n \n @return a string representing the contents of the certificate\n"
19886,method,java/security/BasicPermission/implies/Permission," Checks if the specified permission is "implied" by\n this object.\n <P>\n More specifically, this method returns true if:<p>\n <ul>\n <li> <i>p</i>'s class is the same as this object's class, and<p>\n <li> <i>p</i>'s name equals or (in the case of wildcards)\n      is implied by this object's\n      name. For example, "a.b.*" implies "a.b.c".\n </ul>\n\n @param p the permission to check against.\n\n @return true if the passed permission is equal to or\n implied by this permission, false otherwise.\n"
19887,method,java/security/BasicPermission/equals/Object," Checks two BasicPermission objects for equality.\n Checks that <i>obj</i>'s class is the same as this object's class\n and has the same name as this object.\n <P>\n @param obj the object we are testing for equality with this object.\n @return true if <i>obj</i> is a BasicPermission, and has the same name\n  as this BasicPermission object, false otherwise.\n"
19889,method,java/security/BasicPermission/getActions/," Returns the canonical string representation of the actions,\n which currently is the empty string "", since there are no actions for\n a BasicPermission.\n\n @return the empty string "".\n"
19891,method,java/security/BasicPermission/BasicPermission/String," Creates a new BasicPermission with the specified name.\n Name is the symbolic name of the permission, such as\n "setFactory",\n "print.queueJob", or "topLevelWindow", etc.\n\n @param name the name of the BasicPermission.\n\n @throws NullPointerException if <code>name</code> is <code>null</code>.\n @throws IllegalArgumentException if <code>name</code> is empty.\n"
19892,method,java/security/BasicPermission/BasicPermission/String;String," Creates a new BasicPermission object with the specified name.\n The name is the symbolic name of the BasicPermission, and the\n actions String is currently unused.\n\n @param name the name of the BasicPermission.\n @param actions ignored.\n\n @throws NullPointerException if <code>name</code> is <code>null</code>.\n @throws IllegalArgumentException if <code>name</code> is empty.\n"
19897,method,java/security/AuthProvider/AuthProvider/String;double;String," Constructs a provider with the specified name, version number,\n and information.\n\n @param name the provider name.\n @param version the provider version number.\n @param info a description of the provider and its services.\n"
19899,method,java/security/AllPermission/implies/Permission," Checks if the specified permission is "implied" by \n this object. This method always returns true.\n\n @param p the permission to check against.\n\n @return return\n"
19900,method,java/security/AllPermission/equals/Object," Checks two AllPermission objects for equality. Two AllPermission\n objects are always equal.\n\n @param obj the object we are testing for equality with this object.\n @return true if <i>obj</i> is an AllPermission, false otherwise.\n"
19901,method,java/security/AllPermission/hashCode/," Returns the hash code value for this object.\n \n @return a hash code value for this object.\n"
19902,method,java/security/AllPermission/getActions/," Returns the canonical string representation of the actions.\n\n @return the actions.\n"
19903,method,java/security/AllPermission/newPermissionCollection/," Returns a new PermissionCollection object for storing AllPermission \n objects.\n <p>\n \n @return a new PermissionCollection object suitable for \n storing AllPermissions.\n"
19904,method,java/security/AllPermission/AllPermission/," Creates a new AllPermission object.\n"
19905,method,java/security/AllPermission/AllPermission/String;String," Creates a new AllPermission object. This\n constructor exists for use by the <code>Policy</code> object\n to instantiate new Permission objects.\n\n @param name ignored\n @param actions ignored.\n"
19907,method,java/security/AlgorithmParametersSpi/engineInit/AlgorithmParameterSpec," Initializes this parameters object using the parameters \n specified in <code>paramSpec</code>.\n\n @param paramSpec the parameter specification.\n\n @exception InvalidParameterSpecException if the given parameter\n specification is inappropriate for the initialization of this parameter\n object.\n"
19913,method,java/security/AlgorithmParametersSpi/engineToString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters.\n"
19914,method,java/security/AlgorithmParametersSpi/AlgorithmParametersSpi/,""
19916,method,java/security/AlgorithmParameters/getAlgorithm/," Returns the name of the algorithm associated with this parameter object.\n \n @return the algorithm name.\n"
19920,method,java/security/AlgorithmParameters/getProvider/,"\n Returns the provider of this parameter object.\n \n @return the provider of this parameter object\n"
19921,method,java/security/AlgorithmParameters/init/AlgorithmParameterSpec," Initializes this parameter object using the parameters \n specified in <code>paramSpec</code>.\n\n @param paramSpec the parameter specification.\n\n @exception InvalidParameterSpecException if the given parameter\n specification is inappropriate for the initialization of this parameter\n object, or if this parameter object has already been initialized.\n"
19927,method,java/security/AlgorithmParameters/toString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters, or null if this\n parameter object has not been initialized.\n"
19928,method,java/security/AlgorithmParameters/AlgorithmParameters/AlgorithmParametersSpi;Provider;String," Creates an AlgorithmParameters object.\n\n @param paramSpi the delegate\n @param provider the provider\n @param algorithm the algorithm\n"
19930,method,java/security/AlgorithmParameterGeneratorSpi/engineInit/int;SecureRandom," Initializes this parameter generator for a certain size\n and source of randomness.\n\n @param size the size (number of bits).\n @param random the source of randomness.\n"
19931,method,java/security/AlgorithmParameterGeneratorSpi/engineInit/AlgorithmParameterSpec;SecureRandom," Initializes this parameter generator with a set of\n algorithm-specific parameter generation values.\n\n @param genParamSpec the set of algorithm-specific parameter generation values.\n @param random the source of randomness.\n\n @exception InvalidAlgorithmParameterException if the given parameter\n generation values are inappropriate for this parameter generator.\n"
19932,method,java/security/AlgorithmParameterGeneratorSpi/engineGenerateParameters/," Generates the parameters.\n\n @return the new AlgorithmParameters object.\n"
19933,method,java/security/AlgorithmParameterGeneratorSpi/AlgorithmParameterGeneratorSpi/,""
19935,method,java/security/AlgorithmParameterGenerator/getAlgorithm/," Returns the standard name of the algorithm this parameter\n generator is associated with.\n \n @return the string name of the algorithm. \n"
19939,method,java/security/AlgorithmParameterGenerator/getProvider/,"\n Returns the provider of this algorithm parameter generator object.\n \n @return the provider of this algorithm parameter generator object\n"
19940,method,java/security/AlgorithmParameterGenerator/init/int," Initializes this parameter generator for a certain size.\n To create the parameters, the <code>SecureRandom</code>\n implementation of the highest-priority installed provider is used as\n the source of randomness.\n (If none of the installed providers supply an implementation of\n <code>SecureRandom</code>, a system-provided source of randomness is\n used.)\n\n @param size the size (number of bits).\n"
19941,method,java/security/AlgorithmParameterGenerator/init/int;SecureRandom," Initializes this parameter generator for a certain size and source\n of randomness.\n\n @param size the size (number of bits).\n @param random the source of randomness.\n"
19942,method,java/security/AlgorithmParameterGenerator/init/AlgorithmParameterSpec," Initializes this parameter generator with a set of algorithm-specific\n parameter generation values.\n To generate the parameters, the <code>SecureRandom</code>\n implementation of the highest-priority installed provider is used as\n the source of randomness.\n (If none of the installed providers supply an implementation of\n <code>SecureRandom</code>, a system-provided source of randomness is\n used.)\n\n @param genParamSpec the set of algorithm-specific parameter generation values.\n\n @exception InvalidAlgorithmParameterException if the given parameter\n generation values are inappropriate for this parameter generator.\n"
19943,method,java/security/AlgorithmParameterGenerator/init/AlgorithmParameterSpec;SecureRandom," Initializes this parameter generator with a set of algorithm-specific\n parameter generation values.\n\n @param genParamSpec the set of algorithm-specific parameter generation values.\n @param random the source of randomness.\n\n @exception InvalidAlgorithmParameterException if the given parameter\n generation values are inappropriate for this parameter generator.\n"
19944,method,java/security/AlgorithmParameterGenerator/generateParameters/," Generates the parameters.\n\n @return the new AlgorithmParameters object.\n"
19945,method,java/security/AlgorithmParameterGenerator/AlgorithmParameterGenerator/AlgorithmParameterGeneratorSpi;Provider;String," Creates an AlgorithmParameterGenerator object.\n\n @param paramGenSpi the delegate\n @param provider the provider\n @param algorithm the algorithm\n"
19956,method,java/security/AccessControlException/getPermission/," Gets the Permission object associated with this exeception, or\n null if there was no corresponding Permission object.\n\n @return the Permission object.\n"
19957,method,java/security/AccessControlException/AccessControlException/String," Constructs an <code>AccessControlException</code> with the\n specified, detailed message. \n\n @param   s   the detail message.\n"
19958,method,java/security/AccessControlException/AccessControlException/String;Permission," Constructs an <code>AccessControlException</code> with the\n specified, detailed message, and the requested permission that caused\n the exception. \n\n @param   s   the detail message.\n @param   p   the permission that caused the exception.\n"
19962,method,java/security/AccessControlContext/equals/Object," Checks two AccessControlContext objects for equality. \n Checks that <i>obj</i> is\n an AccessControlContext and has the same set of ProtectionDomains\n as this context.\n <P>\n @param obj the object we are testing for equality with this object.\n @return true if <i>obj</i> is an AccessControlContext, and has the \n same set of ProtectionDomains as this context, false otherwise.\n"
19963,method,java/security/AccessControlContext/hashCode/," Returns the hash code value for this context. The hash code\n is computed by exclusive or-ing the hash code of all the protection\n domains in the context together.\n \n @return a hash code value for this context.\n"
19966,interface,java/security/interfaces/RSAPublicKey," The interface to an RSA public key.\n\n @author Jan Luehe\n\n @version 1.12 10/03/23\n"
19967,method,java/security/interfaces/RSAPublicKey/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent\n"
19968,field,java/security/interfaces/RSAPublicKey/serialVersionUID,""
19969,interface,java/security/interfaces/RSAPrivateKey," The interface to an RSA private key.\n\n @author Jan Luehe\n\n @version 1.13 10/03/23\n\n @see RSAPrivateCrtKey\n"
19970,method,java/security/interfaces/RSAPrivateKey/getPrivateExponent/," Returns the private exponent.\n\n @return the private exponent\n"
19971,field,java/security/interfaces/RSAPrivateKey/serialVersionUID,""
19972,interface,java/security/interfaces/RSAPrivateCrtKey," The interface to an RSA private key, as defined in the PKCS#1 standard,\n using the <i>Chinese Remainder Theorem</i> (CRT) information values.\n\n @author Jan Luehe\n\n @version 1.14 10/03/23\n\n @see RSAPrivateKey\n"
19973,method,java/security/interfaces/RSAPrivateCrtKey/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent\n"
19974,method,java/security/interfaces/RSAPrivateCrtKey/getPrimeP/," Returns the primeP.\n\n @return the primeP\n"
19975,method,java/security/interfaces/RSAPrivateCrtKey/getPrimeQ/," Returns the primeQ.\n\n @return the primeQ\n"
19976,method,java/security/interfaces/RSAPrivateCrtKey/getPrimeExponentP/," Returns the primeExponentP.\n\n @return the primeExponentP\n"
19977,method,java/security/interfaces/RSAPrivateCrtKey/getPrimeExponentQ/," Returns the primeExponentQ.\n\n @return the primeExponentQ\n"
19978,method,java/security/interfaces/RSAPrivateCrtKey/getCrtCoefficient/," Returns the crtCoefficient.\n\n @return the crtCoefficient\n"
19979,field,java/security/interfaces/RSAPrivateCrtKey/serialVersionUID,""
19980,interface,java/security/interfaces/RSAMultiPrimePrivateCrtKey," The interface to an RSA multi-prime private key, as defined in the \n PKCS#1 v2.1, using the <i>Chinese Remainder Theorem</i> \n (CRT) information values.\n\n @author Valerie Peng\n\n @version 1.8 10/03/23\n \n @see java.security.spec.RSAPrivateKeySpec\n @see java.security.spec.RSAMultiPrimePrivateCrtKeySpec\n @see RSAPrivateKey\n @see RSAPrivateCrtKey\n\n @since 1.4\n"
19981,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent.\n"
19982,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getPrimeP/," Returns the primeP.\n\n @return the primeP.\n"
19983,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getPrimeQ/," Returns the primeQ.\n\n @return the primeQ.\n"
19984,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getPrimeExponentP/," Returns the primeExponentP.\n\n @return the primeExponentP.\n"
19985,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getPrimeExponentQ/," Returns the primeExponentQ.\n\n @return the primeExponentQ.\n"
19986,method,java/security/interfaces/RSAMultiPrimePrivateCrtKey/getCrtCoefficient/," Returns the crtCoefficient.\n\n @return the crtCoefficient.\n"
19988,field,java/security/interfaces/RSAMultiPrimePrivateCrtKey/serialVersionUID,""
19989,interface,java/security/interfaces/RSAKey," The interface to an RSA public or private key.\n\n @author Jan Luehe\n @version 1.8 03/23/10\n\n @see RSAPublicKey\n @see RSAPrivateKey\n\n @since 1.3\n"
19990,method,java/security/interfaces/RSAKey/getModulus/," Returns the modulus.\n		\n @return the modulus\n"
19991,interface,java/security/interfaces/ECPublicKey," The interface to an elliptic curve (EC) public key.\n\n @author Valerie Peng\n\n @version 1.5, 03/23/10\n\n @see PublicKey\n @see ECKey\n @see java.security.spec.ECPoint\n\n @since 1.5\n"
19992,method,java/security/interfaces/ECPublicKey/getW/," Returns the public point W.\n @return the public point W.\n"
19993,field,java/security/interfaces/ECPublicKey/serialVersionUID," The class fingerprint that is set to indicate\n serialization compatibility.\n"
19994,interface,java/security/interfaces/ECPrivateKey," The interface to an elliptic curve (EC) private key.\n\n @author Valerie Peng\n\n @version 1.5, 03/23/10\n\n @see PrivateKey\n @see ECKey\n\n @since 1.5\n"
19995,method,java/security/interfaces/ECPrivateKey/getS/," Returns the private value S.\n @return the private value S.\n"
19996,field,java/security/interfaces/ECPrivateKey/serialVersionUID," The class fingerprint that is set to indicate\n serialization compatibility.\n"
19997,interface,java/security/interfaces/ECKey," The interface to an elliptic curve (EC) key.\n\n @author Valerie Peng\n\n @version 1.4, 03/23/10\n @since 1.5\n"
19998,method,java/security/interfaces/ECKey/getParams/," Returns the domain parameters associated\n with this key. The domain parameters are \n either explicitly specified or implicitly \n created during key generation.\n @return the associated domain parameters.\n"
19999,interface,java/security/interfaces/DSAPublicKey," The interface to a DSA public key. DSA (Digital Signature Algorithm)\n is defined in NIST's FIPS-186.\n\n @see java.security.Key\n @see java.security.Signature\n @see DSAKey\n @see DSAPrivateKey\n\n @version 1.23 10/03/23\n @author Benjamin Renaud\n"
20000,method,java/security/interfaces/DSAPublicKey/getY/," Returns the value of the public key, <code>y</code>.\n\n @return the value of the public key, <code>y</code>.\n"
20001,field,java/security/interfaces/DSAPublicKey/serialVersionUID," The class fingerprint that is set to indicate \n serialization compatibility with a previous \n version of the class.\n"
20002,interface,java/security/interfaces/DSAPrivateKey," The standard interface to a DSA private key. DSA (Digital Signature\n Algorithm) is defined in NIST's FIPS-186.\n\n @see java.security.Key\n @see java.security.Signature\n @see DSAKey\n @see DSAPublicKey\n\n @version 1.21 10/03/23\n @author Benjamin Renaud\n"
20003,method,java/security/interfaces/DSAPrivateKey/getX/," Returns the value of the private key, <code>x</code>.\n\n @return the value of the private key, <code>x</code>.\n"
20004,field,java/security/interfaces/DSAPrivateKey/serialVersionUID," The class fingerprint that is set to indicate \n serialization compatibility with a previous \n version of the class.\n"
20005,interface,java/security/interfaces/DSAParams," Interface to a DSA-specific set of key parameters, which defines a \n DSA <em>key family</em>. DSA (Digital Signature Algorithm) is defined \n in NIST's FIPS-186.\n\n @see DSAKey\n @see java.security.Key\n @see java.security.Signature\n \n @version 1.22 10/03/23\n @author Benjamin Renaud \n @author Josh Bloch \n"
20006,method,java/security/interfaces/DSAParams/getP/," Returns the prime, <code>p</code>.\n\n @return the prime, <code>p</code>. \n"
20007,method,java/security/interfaces/DSAParams/getQ/," Returns the subprime, <code>q</code>.\n \n @return the subprime, <code>q</code>. \n"
20008,method,java/security/interfaces/DSAParams/getG/," Returns the base, <code>g</code>.\n \n @return the base, <code>g</code>. \n"
20010,method,java/security/interfaces/DSAKeyPairGenerator/initialize/DSAParams;SecureRandom," Initializes the key pair generator using the DSA family parameters\n (p,q and g) and an optional SecureRandom bit source. If a\n SecureRandom bit source is needed but not supplied, i.e. null, a \n default SecureRandom instance will be used.\n\n @param params the parameters to use to generate the keys.\n\n @param random the random bit source to use to generate key bits;\n can be null.\n\n @exception InvalidParameterException if the <code>params</code>\n value is invalid or null.\n"
20012,interface,java/security/interfaces/DSAKey," The interface to a DSA public or private key. DSA (Digital Signature\n Algorithm) is defined in NIST's FIPS-186.\n\n @see DSAParams\n @see java.security.Key\n @see java.security.Signature\n \n @version 1.19 10/03/23\n @author Benjamin Renaud \n @author Josh Bloch \n"
20014,class,java/security/spec/X509EncodedKeySpec," This class represents the ASN.1 encoding of a public key,\n encoded according to the ASN.1 type <code>SubjectPublicKeyInfo</code>.\n The <code>SubjectPublicKeyInfo</code> syntax is defined in the X.509 \n standard as follows:\n\n <pre>\n SubjectPublicKeyInfo ::= SEQUENCE {\n   algorithm AlgorithmIdentifier,\n   subjectPublicKey BIT STRING }\n </pre>\n\n @author Jan Luehe\n\n @version 1.23, 03/23/10\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see EncodedKeySpec\n @see PKCS8EncodedKeySpec\n\n @since 1.2\n"
20016,method,java/security/spec/X509EncodedKeySpec/getFormat/," Returns the name of the encoding format associated with this\n key specification.\n\n @return the string <code>"X.509"</code>.\n"
20018,class,java/security/spec/RSAPublicKeySpec," This class specifies an RSA public key.\n\n @author Jan Luehe\n\n @version 1.12 10/03/23\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see X509EncodedKeySpec\n @see RSAPrivateKeySpec\n @see RSAPrivateCrtKeySpec\n"
20019,method,java/security/spec/RSAPublicKeySpec/getModulus/," Returns the modulus.\n\n @return the modulus\n"
20020,method,java/security/spec/RSAPublicKeySpec/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent\n"
20021,method,java/security/spec/RSAPublicKeySpec/RSAPublicKeySpec/BigInteger;BigInteger," Creates a new RSAPublicKeySpec.\n\n @param modulus the modulus\n @param publicExponent the public exponent\n"
20022,class,java/security/spec/RSAPrivateKeySpec," This class specifies an RSA private key.\n\n @author Jan Luehe\n\n @version 1.12 10/03/23\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see PKCS8EncodedKeySpec\n @see RSAPublicKeySpec\n @see RSAPrivateCrtKeySpec\n"
20023,method,java/security/spec/RSAPrivateKeySpec/getModulus/," Returns the modulus.\n\n @return the modulus\n"
20024,method,java/security/spec/RSAPrivateKeySpec/getPrivateExponent/," Returns the private exponent.\n\n @return the private exponent\n"
20025,method,java/security/spec/RSAPrivateKeySpec/RSAPrivateKeySpec/BigInteger;BigInteger," Creates a new RSAPrivateKeySpec.\n\n @param modulus the modulus\n @param privateExponent the private exponent\n"
20027,method,java/security/spec/RSAPrivateCrtKeySpec/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent\n"
20028,method,java/security/spec/RSAPrivateCrtKeySpec/getPrimeP/," Returns the primeP.\n\n @return the primeP\n"
20029,method,java/security/spec/RSAPrivateCrtKeySpec/getPrimeQ/," Returns the primeQ.\n\n @return the primeQ\n"
20030,method,java/security/spec/RSAPrivateCrtKeySpec/getPrimeExponentP/," Returns the primeExponentP.\n\n @return the primeExponentP\n"
20031,method,java/security/spec/RSAPrivateCrtKeySpec/getPrimeExponentQ/," Returns the primeExponentQ.\n\n @return the primeExponentQ\n"
20032,method,java/security/spec/RSAPrivateCrtKeySpec/getCrtCoefficient/," Returns the crtCoefficient.\n\n @return the crtCoefficient\n"
20033,method,java/security/spec/RSAPrivateCrtKeySpec/RSAPrivateCrtKeySpec/BigInteger;BigInteger;BigInteger;BigInteger;BigInteger;BigInteger;BigInteger;BigInteger," Creates a new <code>RSAPrivateCrtKeySpec</code>\n given the modulus, publicExponent, privateExponent,\n primeP, primeQ, primeExponentP, primeExponentQ, and\n crtCoefficient as defined in PKCS#1.\n\n @param modulus the modulus n\n @param publicExponent the public exponent e\n @param privateExponent the private exponent d\n @param primeP the prime factor p of n\n @param primeQ the prime factor q of n\n @param primeExponentP this is d mod (p-1)\n @param primeExponentQ this is d mod (q-1)\n @param crtCoefficient the Chinese Remainder Theorem\n coefficient q-1 mod p\n"
20034,class,java/security/spec/RSAOtherPrimeInfo," This class represents the triplet (prime, exponent, and coefficient)\n inside RSA's OtherPrimeInfo structure, as defined in the PKCS#1 v2.1. \n The ASN.1 syntax of RSA's OtherPrimeInfo is as follows: \n \n <pre>\n OtherPrimeInfo ::= SEQUENCE {\n   prime INTEGER,\n   exponent INTEGER,\n   coefficient INTEGER\n   }\n\n </pre>\n\n @author Valerie Peng\n\n @version 1.8 10/03/23\n\n @see RSAPrivateCrtKeySpec\n @see java.security.interfaces.RSAMultiPrimePrivateCrtKey\n\n @since 1.4\n"
20035,method,java/security/spec/RSAOtherPrimeInfo/getPrime/," Returns the prime.\n\n @return the prime.\n"
20036,method,java/security/spec/RSAOtherPrimeInfo/getExponent/," Returns the prime's exponent.\n\n @return the primeExponent.\n"
20037,method,java/security/spec/RSAOtherPrimeInfo/getCrtCoefficient/," Returns the prime's crtCoefficient.\n\n @return the crtCoefficient.\n"
20038,method,java/security/spec/RSAOtherPrimeInfo/RSAOtherPrimeInfo/BigInteger;BigInteger;BigInteger," Creates a new <code>RSAOtherPrimeInfo</code>\n given the prime, primeExponent, and\n crtCoefficient as defined in PKCS#1.\n\n @param prime the prime factor of n.\n @param primeExponent the exponent.\n @param crtCoefficient the Chinese Remainder Theorem\n coefficient.\n @exception NullPointerException if any of the parameters, i.e. \n <code>prime</code>, <code>primeExponent</code>, \n <code>crtCoefficient</code>, is null.\n \n"
20040,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getPublicExponent/," Returns the public exponent.\n\n @return the public exponent.\n"
20041,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getPrimeP/," Returns the primeP.\n\n @return the primeP.\n"
20042,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getPrimeQ/," Returns the primeQ.\n\n @return the primeQ.\n"
20043,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getPrimeExponentP/," Returns the primeExponentP.\n\n @return the primeExponentP.\n"
20044,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getPrimeExponentQ/," Returns the primeExponentQ.\n\n @return the primeExponentQ.\n"
20045,method,java/security/spec/RSAMultiPrimePrivateCrtKeySpec/getCrtCoefficient/," Returns the crtCoefficient.\n\n @return the crtCoefficient.\n"
20048,class,java/security/spec/RSAKeyGenParameterSpec," This class specifies the set of parameters used to generate an RSA\n key pair.\n \n @author Jan Luehe\n @version 1.10 03/23/10\n\n @see java.security.KeyPairGenerator#initialize(java.security.spec.AlgorithmParameterSpec)\n\n @since 1.3\n"
20049,method,java/security/spec/RSAKeyGenParameterSpec/getKeysize/," Returns the keysize.\n\n @return the keysize.\n"
20050,method,java/security/spec/RSAKeyGenParameterSpec/getPublicExponent/," Returns the public-exponent value.\n\n @return the public-exponent value.\n"
20051,method,java/security/spec/RSAKeyGenParameterSpec/RSAKeyGenParameterSpec/int;BigInteger," Constructs a new <code>RSAParameterSpec</code> object from the\n given keysize and public-exponent value.\n\n @param keysize the modulus size (specified in number of bits)\n @param publicExponent the public exponent\n"
20052,field,java/security/spec/RSAKeyGenParameterSpec/F0," The public-exponent value F0 = 3.\n"
20053,field,java/security/spec/RSAKeyGenParameterSpec/F4," The public exponent-value F4 = 65537.\n"
20055,method,java/security/spec/PSSParameterSpec/getDigestAlgorithm/," Returns the message digest algorithm name.\n\n @return the message digest algorithm name.\n @since 1.5\n"
20056,method,java/security/spec/PSSParameterSpec/getMGFAlgorithm/," Returns the mask generation function algorithm name.\n\n @return the mask generation function algorithm name.\n\n @since 1.5\n"
20057,method,java/security/spec/PSSParameterSpec/getMGFParameters/," Returns the parameters for the mask generation function.\n\n @return the parameters for the mask generation function.\n @since 1.5\n"
20058,method,java/security/spec/PSSParameterSpec/getSaltLength/," Returns the salt length in bits.\n\n @return the salt length.\n"
20059,method,java/security/spec/PSSParameterSpec/getTrailerField/," Returns the value for the trailer field, i.e. bc in PKCS#1 v2.1.\n\n @return the value for the trailer field, i.e. bc in PKCS#1 v2.1.\n @since 1.5\n"
20060,method,java/security/spec/PSSParameterSpec/PSSParameterSpec/String;String;AlgorithmParameterSpec;int;int," Creates a new <code>PSSParameterSpec</code> as defined in\n the PKCS #1 standard using the specified message digest,\n mask generation function, parameters for mask generation \n function, salt length, and trailer field values.\n\n @param mdName the algorithm name of the hash function.\n @param mgfName the algorithm name of the mask generation \n function.\n @param mgfSpec the parameters for the mask generation \n function. If null is specified, null will be returned by \n getMGFParameters().\n @param saltLen the length of salt.\n @param trailerField the value of the trailer field.\n @exception NullPointerException if <code>mdName</code>, \n or <code>mgfName</code> is null.\n @exception IllegalArgumentException if <code>saltLen</code>\n or <code>trailerField</code> is less than 0.\n @since 1.5\n"
20061,method,java/security/spec/PSSParameterSpec/PSSParameterSpec/int," Creates a new <code>PSSParameterSpec</code>\n using the specified salt length and other default values as \n defined in PKCS#1.\n\n @param saltLen the length of salt in bits to be used in PKCS#1 \n PSS encoding.\n @exception IllegalArgumentException if <code>saltLen</code> is\n less than 0.\n"
20062,field,java/security/spec/PSSParameterSpec/DEFAULT," The PSS parameter set with all default values.\n @since 1.5\n"
20063,class,java/security/spec/PKCS8EncodedKeySpec," This class represents the ASN.1 encoding of a private key,\n encoded according to the ASN.1 type <code>PrivateKeyInfo</code>.\n The <code>PrivateKeyInfo</code> syntax is defined in the PKCS#8 standard\n as follows:\n\n <pre>\n PrivateKeyInfo ::= SEQUENCE {\n   version Version,\n   privateKeyAlgorithm PrivateKeyAlgorithmIdentifier,\n   privateKey PrivateKey,\n   attributes [0] IMPLICIT Attributes OPTIONAL }\n\n Version ::= INTEGER\n\n PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n\n PrivateKey ::= OCTET STRING\n\n Attributes ::= SET OF Attribute\n </pre>\n\n @author Jan Luehe\n\n @version 1.23, 03/23/10\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see EncodedKeySpec\n @see X509EncodedKeySpec\n\n @since 1.2\n"
20065,method,java/security/spec/PKCS8EncodedKeySpec/getFormat/," Returns the name of the encoding format associated with this\n key specification.\n\n @return the string <code>"PKCS#8"</code>.\n"
20067,class,java/security/spec/MGF1ParameterSpec," This class specifies the set of parameters used with mask generation\n function MGF1 in OAEP Padding and RSA-PSS signature scheme, as \n defined in the\n <a href="http://www.ietf.org/rfc/rfc3447.txt">PKCS #1 v2.1</a> \n standard.\n \n <p>Its ASN.1 definition in PKCS#1 standard is described below:\n <pre>\n MGF1Parameters ::= OAEP-PSSDigestAlgorthms\n </pre>\n where\n <pre>\n OAEP-PSSDigestAlgorithms    ALGORITHM-IDENTIFIER ::= {\n   { OID id-sha1 PARAMETERS NULL   }|\n   { OID id-sha256 PARAMETERS NULL }|\n   { OID id-sha384 PARAMETERS NULL }|\n   { OID id-sha512 PARAMETERS NULL },\n   ...  -- Allows for future expansion --\n }\n </pre>\n @see PSSParameterSpec\n @see javax.crypto.spec.OAEPParameterSpec\n\n @author Valerie Peng\n\n @version 1.6, 03/23/10\n @since 1.5\n"
20068,method,java/security/spec/MGF1ParameterSpec/getDigestAlgorithm/," Returns the algorithm name of the message digest used by the mask \n generation function. \n\n @return the algorithm name of the message digest. \n"
20069,method,java/security/spec/MGF1ParameterSpec/MGF1ParameterSpec/String," Constructs a parameter set for mask generation function MGF1\n as defined in the PKCS #1 standard.\n\n @param mdName the algorithm name for the message digest\n used in this mask generation function MGF1. \n @exception NullPointerException if <code>mdName</code> is null.\n"
20070,field,java/security/spec/MGF1ParameterSpec/SHA1," The MGF1ParameterSpec which uses "SHA-1" message digest.\n"
20071,field,java/security/spec/MGF1ParameterSpec/SHA256," The MGF1ParameterSpec which uses "SHA-256" message digest.\n"
20072,field,java/security/spec/MGF1ParameterSpec/SHA384," The MGF1ParameterSpec which uses "SHA-384" message digest.\n"
20073,field,java/security/spec/MGF1ParameterSpec/SHA512," The MGF1ParameterSpec which uses SHA-512 message digest.\n"
20075,class,java/security/spec/InvalidParameterSpecException," This is the exception for invalid parameter specifications.\n\n @author Jan Luehe\n\n @version 1.17, 03/23/10\n\n @see java.security.AlgorithmParameters\n @see AlgorithmParameterSpec\n @see DSAParameterSpec\n\n @since 1.2\n"
20076,method,java/security/spec/InvalidParameterSpecException/InvalidParameterSpecException/," Constructs an InvalidParameterSpecException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20077,method,java/security/spec/InvalidParameterSpecException/InvalidParameterSpecException/String," Constructs an InvalidParameterSpecException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
20078,class,java/security/spec/InvalidKeySpecException," This is the exception for invalid key specifications.\n\n @author Jan Luehe\n\n @version 1.18, 03/23/10\n\n @see KeySpec\n\n @since 1.2\n"
20079,method,java/security/spec/InvalidKeySpecException/InvalidKeySpecException/," Constructs an InvalidKeySpecException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20080,method,java/security/spec/InvalidKeySpecException/InvalidKeySpecException/String," Constructs an InvalidKeySpecException with the specified detail\n message. A detail message is a String that describes this\n particular exception.  \n\n @param msg the detail message.  \n"
20081,method,java/security/spec/InvalidKeySpecException/InvalidKeySpecException/String;Throwable," Creates a <code>InvalidKeySpecException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20082,method,java/security/spec/InvalidKeySpecException/InvalidKeySpecException/Throwable," Creates a <code>InvalidKeySpecException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20083,class,java/security/spec/EncodedKeySpec," This class represents a public or private key in encoded format.\n\n @author Jan Luehe\n\n @version 1.24, 03/23/10\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see X509EncodedKeySpec\n @see PKCS8EncodedKeySpec\n\n @since 1.2\n"
20086,method,java/security/spec/EncodedKeySpec/EncodedKeySpec/byte[]," Creates a new EncodedKeySpec with the given encoded key.\n\n @param encodedKey the encoded key. The contents of the \n array are copied to protect against subsequent modification.\n @exception NullPointerException if <code>encodedKey</code>\n is null.\n"
20088,method,java/security/spec/EllipticCurve/getField/," Returns the finite field <code>field</code> that this \n elliptic curve is over.\n @return the field <code>field</code> that this curve \n is over.\n"
20089,method,java/security/spec/EllipticCurve/getA/," Returns the first coefficient <code>a</code> of the\n elliptic curve.\n @return the first coefficient <code>a</code>.\n"
20090,method,java/security/spec/EllipticCurve/getB/," Returns the second coefficient <code>b</code> of the\n elliptic curve.\n @return the second coefficient <code>b</code>.\n"
20092,method,java/security/spec/EllipticCurve/equals/Object," Compares this elliptic curve for equality with the\n specified object. \n @param obj the object to be compared.\n @return true if <code>obj</code> is an instance of\n EllipticCurve and the field, A, B, and seeding bytes \n match, false otherwise.\n"
20093,method,java/security/spec/EllipticCurve/hashCode/," Returns a hash code value for this elliptic curve.\n @return a hash code value.\n"
20094,method,java/security/spec/EllipticCurve/EllipticCurve/ECField;BigInteger;BigInteger," Creates an elliptic curve with the specified elliptic field\n <code>field</code> and the coefficients <code>a</code> and\n <code>b</code>.\n @param field the finite field that this elliptic curve is over.\n @param a the first coefficient of this elliptic curve.\n @param b the second coefficient of this elliptic curve.\n @exception NullPointerException if <code>field</code>,\n <code>a</code>, or <code>b</code> is null.\n @exception IllegalArgumentException if <code>a</code>\n or <code>b</code> is not null and not in <code>field</code>.\n"
20095,method,java/security/spec/EllipticCurve/EllipticCurve/ECField;BigInteger;BigInteger;byte[]," Creates an elliptic curve with the specified elliptic field\n <code>field</code>, the coefficients <code>a</code> and\n <code>b</code>, and the <code>seed</code> used for curve generation.\n @param field the finite field that this elliptic curve is over.\n @param a the first coefficient of this elliptic curve.\n @param b the second coefficient of this elliptic curve.\n @param seed the bytes used during curve generation for later\n validation. Contents of this array are copied to protect against\n subsequent modification.\n @exception NullPointerException if <code>field</code>,\n <code>a</code>, or <code>b</code> is null.\n @exception IllegalArgumentException if <code>a</code>\n or <code>b</code> is not null and not in <code>field</code>.\n"
20096,class,java/security/spec/ECPublicKeySpec," This immutable class specifies an elliptic curve public key with \n its associated parameters.\n\n @see KeySpec\n @see ECPoint\n @see ECParameterSpec\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20097,method,java/security/spec/ECPublicKeySpec/getW/," Returns the public point W.\n @return the public point W.\n"
20098,method,java/security/spec/ECPublicKeySpec/getParams/," Returns the associated elliptic curve domain \n parameters.\n @return the EC domain parameters.\n"
20099,method,java/security/spec/ECPublicKeySpec/ECPublicKeySpec/ECPoint;ECParameterSpec," Creates a new ECPublicKeySpec with the specified \n parameter values.\n @param w the public point.\n @param params the associated elliptic curve domain \n parameters.\n @exception NullPointerException if <code>w</code>\n or <code>params</code> is null.\n @exception IllegalArgumentException if <code>w</code>\n is point at infinity, i.e. ECPoint.POINT_INFINITY\n"
20100,class,java/security/spec/ECPrivateKeySpec," This immutable class specifies an elliptic curve private key with \n its associated parameters.\n\n @see KeySpec\n @see ECParameterSpec\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20101,method,java/security/spec/ECPrivateKeySpec/getS/," Returns the private value S.\n @return the private value S.\n"
20102,method,java/security/spec/ECPrivateKeySpec/getParams/," Returns the associated elliptic curve domain \n parameters.\n @return the EC domain parameters.\n"
20103,method,java/security/spec/ECPrivateKeySpec/ECPrivateKeySpec/BigInteger;ECParameterSpec," Creates a new ECPrivateKeySpec with the specified \n parameter values.\n @param s the private value.\n @param params the associated elliptic curve domain \n parameters.\n @exception NullPointerException if <code>s</code>\n or <code>params</code> is null.\n"
20107,method,java/security/spec/ECPoint/equals/Object," Compares this elliptic curve point for equality with\n the specified object. \n @param obj the object to be compared.\n @return true if <code>obj</code> is an instance of \n ECPoint and the affine coordinates match, false otherwise.\n"
20108,method,java/security/spec/ECPoint/hashCode/," Returns a hash code value for this elliptic curve point.\n @return a hash code value.\n"
20109,method,java/security/spec/ECPoint/ECPoint/BigInteger;BigInteger," Creates an ECPoint from the specified affine x-coordinate\n <code>x</code> and affine y-coordinate <code>y</code>.\n @param x the affine x-coordinate.\n @param y the affine y-coordinate.\n @exception NullPointerException if <code>x</code> or \n <code>y</code> is null.\n"
20110,field,java/security/spec/ECPoint/POINT_INFINITY," This defines the point at infinity.\n"
20111,class,java/security/spec/ECParameterSpec," This immutable class specifies the set of domain parameters\n used with elliptic curve cryptography (ECC). \n\n @see AlgorithmParameterSpec\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20112,method,java/security/spec/ECParameterSpec/getCurve/," Returns the elliptic curve that this parameter defines.\n @return the elliptic curve that this parameter defines.\n"
20113,method,java/security/spec/ECParameterSpec/getGenerator/," Returns the generator which is also known as the base point.\n @return the generator which is also known as the base point.\n"
20114,method,java/security/spec/ECParameterSpec/getOrder/," Returns the order of the generator.\n @return the order of the generator.\n"
20115,method,java/security/spec/ECParameterSpec/getCofactor/," Returns the cofactor.\n @return the cofactor.\n"
20116,method,java/security/spec/ECParameterSpec/ECParameterSpec/EllipticCurve;ECPoint;BigInteger;int," Creates elliptic curve domain parameters based on the \n specified values.\n @param curve the elliptic curve which this parameter \n defines.\n @param g the generator which is also known as the base point.\n @param n the order of the generator <code>g</code>.\n @param h the cofactor.\n @exception NullPointerException if <code>curve</code>,\n <code>g</code>, or <code>n</code> is null.\n @exception IllegalArgumentException if <code>n</code> \n or <code>h</code> is not positive.\n"
20117,class,java/security/spec/ECGenParameterSpec," This immutable class specifies the set of parameters used for \n generating elliptic curve (EC) domain parameters. \n \n @see AlgorithmParameterSpec\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20118,method,java/security/spec/ECGenParameterSpec/getName/," Returns the standard or predefined name of the \n to-be-generated EC domain parameters.\n @return the standard or predefined name.\n"
20119,method,java/security/spec/ECGenParameterSpec/ECGenParameterSpec/String," Creates a parameter specification for EC parameter\n generation using a standard (or predefined) name\n <code>stdName</code> in order to generate the corresponding\n (precomputed) elliptic curve domain parameters. For the\n list of supported names, please consult the documentation \n of provider whose implementation will be used.\n @param stdName the standard name of the to-be-generated EC\n domain parameters.\n @exception NullPointerException if <code>stdName</code>\n is null.\n"
20120,class,java/security/spec/ECFieldFp," This immutable class defines an elliptic curve (EC) prime \n finite field.\n\n @see ECField\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20121,method,java/security/spec/ECFieldFp/getFieldSize/," Returns the field size in bits which is size of prime p\n for this prime finite field.\n @return the field size in bits.\n"
20122,method,java/security/spec/ECFieldFp/getP/," Returns the prime <code>p</code> of this prime finite field.\n @return the prime.\n"
20123,method,java/security/spec/ECFieldFp/equals/Object," Compares this prime finite field for equality with the\n specified object. \n @param obj the object to be compared.\n @return true if <code>obj</code> is an instance\n of ECFieldFp and the prime value match, false otherwise.\n"
20124,method,java/security/spec/ECFieldFp/hashCode/," Returns a hash code value for this prime finite field.\n @return a hash code value.\n"
20125,method,java/security/spec/ECFieldFp/ECFieldFp/BigInteger," Creates an elliptic curve prime finite field \n with the specified prime <code>p</code>.\n @param p the prime.\n @exception NullPointerException if <code>p</code> is null.\n @exception IllegalArgumentException if <code>p</code>\n is not positive.\n"
20126,class,java/security/spec/ECFieldF2m," This immutable class defines an elliptic curve (EC)\n characteristic 2 finite field.\n\n @see ECField\n\n @author Valerie Peng\n @version 1.5, 03/23/10\n\n @since 1.5\n"
20127,method,java/security/spec/ECFieldF2m/getFieldSize/," Returns the field size in bits which is <code>m</code>\n for this characteristic 2 finite field.\n @return the field size in bits.\n"
20128,method,java/security/spec/ECFieldF2m/getM/," Returns the value <code>m</code> of this characteristic\n 2 finite field.\n @return <code>m</code> with 2^<code>m</code> being the \n number of elements.\n"
20129,method,java/security/spec/ECFieldF2m/getReductionPolynomial/," Returns a BigInteger whose i-th bit corresponds to the \n i-th coefficient of the reduction polynomial for polynomial \n basis or null for normal basis. \n @return a BigInteger whose i-th bit corresponds to the \n i-th coefficient of the reduction polynomial for polynomial\n basis or null for normal basis.\n"
20131,method,java/security/spec/ECFieldF2m/equals/Object," Compares this finite field for equality with the\n specified object. \n @param obj the object to be compared.\n @return true if <code>obj</code> is an instance\n of ECFieldF2m and both <code>m</code> and the reduction \n polynomial match, false otherwise.\n"
20132,method,java/security/spec/ECFieldF2m/hashCode/," Returns a hash code value for this characteristic 2 \n finite field.\n @return a hash code value.\n"
20133,method,java/security/spec/ECFieldF2m/ECFieldF2m/int," Creates an elliptic curve characteristic 2 finite\n field which has 2^<code>m</code> elements with normal basis.\n @param m with 2^<code>m</code> being the number of elements.\n @exception IllegalArgumentException if <code>m</code>\n is not positive.\n"
20138,class,java/security/spec/DSAPublicKeySpec," This class specifies a DSA public key with its associated parameters.\n\n @author Jan Luehe\n\n @version 1.20, 03/23/10\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see DSAPrivateKeySpec\n @see X509EncodedKeySpec\n\n @since 1.2\n"
20139,method,java/security/spec/DSAPublicKeySpec/getY/," Returns the public key <code>y</code>.\n\n @return the public key <code>y</code>.\n"
20140,method,java/security/spec/DSAPublicKeySpec/getP/," Returns the prime <code>p</code>.\n\n @return the prime <code>p</code>.\n"
20141,method,java/security/spec/DSAPublicKeySpec/getQ/," Returns the sub-prime <code>q</code>.\n\n @return the sub-prime <code>q</code>.\n"
20142,method,java/security/spec/DSAPublicKeySpec/getG/," Returns the base <code>g</code>.\n\n @return the base <code>g</code>.\n"
20143,method,java/security/spec/DSAPublicKeySpec/DSAPublicKeySpec/BigInteger;BigInteger;BigInteger;BigInteger," Creates a new DSAPublicKeySpec with the specified parameter values.\n \n @param y the public key.\n \n @param p the prime.\n \n @param q the sub-prime.\n \n @param g the base.\n"
20144,class,java/security/spec/DSAPrivateKeySpec," This class specifies a DSA private key with its associated parameters.\n\n @author Jan Luehe\n\n @version 1.20, 03/23/10\n\n @see java.security.Key\n @see java.security.KeyFactory\n @see KeySpec\n @see DSAPublicKeySpec\n @see PKCS8EncodedKeySpec\n\n @since 1.2\n"
20145,method,java/security/spec/DSAPrivateKeySpec/getX/," Returns the private key <code>x</code>.\n\n @return the private key <code>x</code>.\n"
20146,method,java/security/spec/DSAPrivateKeySpec/getP/," Returns the prime <code>p</code>.\n\n @return the prime <code>p</code>.\n"
20147,method,java/security/spec/DSAPrivateKeySpec/getQ/," Returns the sub-prime <code>q</code>.\n\n @return the sub-prime <code>q</code>.\n"
20148,method,java/security/spec/DSAPrivateKeySpec/getG/," Returns the base <code>g</code>.\n\n @return the base <code>g</code>.\n"
20149,method,java/security/spec/DSAPrivateKeySpec/DSAPrivateKeySpec/BigInteger;BigInteger;BigInteger;BigInteger," Creates a new DSAPrivateKeySpec with the specified parameter values.\n \n @param x the private key.\n \n @param p the prime.\n \n @param q the sub-prime.\n \n @param g the base.\n"
20150,class,java/security/spec/DSAParameterSpec," This class specifies the set of parameters used with the DSA algorithm.\n \n @author Jan Luehe\n\n @version 1.18, 03/23/10\n\n @see AlgorithmParameterSpec\n\n @since 1.2\n"
20151,method,java/security/spec/DSAParameterSpec/getP/," Returns the prime <code>p</code>.\n\n @return the prime <code>p</code>.\n"
20152,method,java/security/spec/DSAParameterSpec/getQ/," Returns the sub-prime <code>q</code>.\n\n @return the sub-prime <code>q</code>.\n"
20153,method,java/security/spec/DSAParameterSpec/getG/," Returns the base <code>g</code>.\n\n @return the base <code>g</code>.\n"
20154,method,java/security/spec/DSAParameterSpec/DSAParameterSpec/BigInteger;BigInteger;BigInteger," Creates a new DSAParameterSpec with the specified parameter values.\n \n @param p the prime.\n \n @param q the sub-prime.\n \n @param g the base.\n"
20157,method,java/security/cert/X509Extension/hasUnsupportedCriticalExtension/," Check if there is a critical extension that is not supported.\n \n @return <tt>true</tt> if a critical extension is found that is\n not supported, otherwise <tt>false</tt>.\n"
20158,method,java/security/cert/X509Extension/getCriticalExtensionOIDs/," Gets a Set of the OID strings for the extension(s) marked\n CRITICAL in the certificate/CRL managed by the object\n implementing this interface.\n\n Here is sample code to get a Set of critical extensions from an\n X509Certificate and print the OIDs:\n <pre><code>\n InputStream inStrm = new FileInputStream("DER-encoded-Cert");\n CertificateFactory cf = CertificateFactory.getInstance("X.509");\n X509Certificate cert = (X509Certificate)cf.generateCertificate(inStrm);\n inStrm.close();<p>\n\n Set critSet = cert.getCriticalExtensionOIDs();\n if (critSet != null && !critSet.isEmpty()) {\n     System.out.println("Set of critical extensions:");\n     for (Iterator i = critSet.iterator(); i.hasNext();) {\n         String oid = (String)i.next();\n         System.out.println(oid);\n     }\n }\n </code></pre>\n @return a Set (or an empty Set if none are marked critical) of\n the extension OID strings for extensions that are marked critical.\n If there are no extensions present at all, then this method returns\n null.\n"
20159,method,java/security/cert/X509Extension/getNonCriticalExtensionOIDs/," Gets a Set of the OID strings for the extension(s) marked\n NON-CRITICAL in the certificate/CRL managed by the object\n implementing this interface.\n\n Here is sample code to get a Set of non-critical extensions from an\n X509CRL revoked certificate entry and print the OIDs:\n <pre><code>\n InputStream inStrm = new FileInputStream("DER-encoded-CRL");\n CertificateFactory cf = CertificateFactory.getInstance("X.509");\n X509CRL crl = (X509CRL)cf.generateCRL(inStrm);\n inStrm.close();<p>\n\n byte[] certData = &lt;DER-encoded certificate data&gt;\n ByteArrayInputStream bais = new ByteArrayInputStream(certData);\n X509Certificate cert = (X509Certificate)cf.generateCertificate(bais);\n bais.close();\n X509CRLEntry badCert =\n              crl.getRevokedCertificate(cert.getSerialNumber());<p>\n\n if (badCert != null) {\n     Set nonCritSet = badCert.getNonCriticalExtensionOIDs();<p>\n     if (nonCritSet != null)\n         for (Iterator i = nonCritSet.iterator(); i.hasNext();) {\n             String oid = (String)i.next();\n             System.out.println(oid);\n         }\n }\n </code></pre>\n\n @return a Set (or an empty Set if none are marked non-critical) of\n the extension OID strings for extensions that are marked non-critical.\n If there are no extensions present at all, then this method returns\n null.\n"
20160,method,java/security/cert/X509Extension/getExtensionValue/String," Gets the DER-encoded OCTET string for the extension value\n (<em>extnValue</em>) identified by the passed-in <code>oid</code>\n String.\n The <code>oid</code> string is\n represented by a set of nonnegative whole numbers separated\n by periods.\n\n <p>For example:<br>\n <table border=groove summary="Examples of OIDs and extension names">\n <tr>\n <th>OID <em>(Object Identifier)</em></th>\n <th>Extension Name</th></tr>\n <tr><td>2.5.29.14</td>\n <td>SubjectKeyIdentifier</td></tr>\n <tr><td>2.5.29.15</td>\n <td>KeyUsage</td></tr>\n <tr><td>2.5.29.16</td>\n <td>PrivateKeyUsage</td></tr>\n <tr><td>2.5.29.17</td>\n <td>SubjectAlternativeName</td></tr>\n <tr><td>2.5.29.18</td>\n <td>IssuerAlternativeName</td></tr>\n <tr><td>2.5.29.19</td>\n <td>BasicConstraints</td></tr>\n <tr><td>2.5.29.30</td>\n <td>NameConstraints</td></tr>\n <tr><td>2.5.29.33</td>\n <td>PolicyMappings</td></tr>\n <tr><td>2.5.29.35</td>\n <td>AuthorityKeyIdentifier</td></tr>\n <tr><td>2.5.29.36</td>\n <td>PolicyConstraints</td></tr>\n </table>\n\n @param oid the Object Identifier value for the extension.\n @return the DER-encoded octet string of the extension value or\n null if it is not present.\n"
20162,method,java/security/cert/X509Certificate/checkValidity/," Checks that the certificate is currently valid. It is if\n the current date and time are within the validity period given in the\n certificate.\n <p>\n The validity period consists of two date/time values: \n the first and last dates (and times) on which the certificate \n is valid. It is defined in\n ASN.1 as:\n <pre>\n validity             Validity<p>\n Validity ::= SEQUENCE {\n     notBefore      CertificateValidityDate,\n     notAfter       CertificateValidityDate }<p>\n CertificateValidityDate ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n </pre>\n \n @exception CertificateExpiredException if the certificate has expired.\n @exception CertificateNotYetValidException if the certificate is not\n yet valid.\n"
20163,method,java/security/cert/X509Certificate/checkValidity/Date," Checks that the given date is within the certificate's\n validity period. In other words, this determines whether the \n certificate would be valid at the given date/time.\n\n @param date the Date to check against to see if this certificate\n        is valid at that date/time.\n\n @exception CertificateExpiredException if the certificate has expired\n with respect to the <code>date</code> supplied.\n @exception CertificateNotYetValidException if the certificate is not\n yet valid with respect to the <code>date</code> supplied.\n \n @see #checkValidity()\n"
20164,method,java/security/cert/X509Certificate/getVersion/," Gets the <code>version</code> (version number) value from the\n certificate.\n The ASN.1 definition for this is:\n <pre>\n version  [0] EXPLICIT Version DEFAULT v1<p>\n Version ::=  INTEGER  {  v1(0), v2(1), v3(2)  }\n </pre>\n @return the version number, i.e. 1, 2 or 3.\n"
20170,method,java/security/cert/X509Certificate/getNotBefore/," Gets the <code>notBefore</code> date from the validity period of \n the certificate.\n The relevant ASN.1 definitions are:\n <pre>\n validity             Validity<p>\n \n Validity ::= SEQUENCE {\n     notBefore      CertificateValidityDate,\n     notAfter       CertificateValidityDate }<p>\n CertificateValidityDate ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n </pre>\n\n @return the start date of the validity period.\n @see #checkValidity\n"
20171,method,java/security/cert/X509Certificate/getNotAfter/," Gets the <code>notAfter</code> date from the validity period of \n the certificate. See {@link #getNotBefore() getNotBefore}\n for relevant ASN.1 definitions.\n\n @return the end date of the validity period.\n @see #checkValidity\n"
20173,method,java/security/cert/X509Certificate/getSignature/," Gets the <code>signature</code> value (the raw signature bits) from \n the certificate.\n The ASN.1 definition for this is:\n <pre>\n signature     BIT STRING  \n </pre>\n\n @return the signature.\n"
20174,method,java/security/cert/X509Certificate/getSigAlgName/," Gets the signature algorithm name for the certificate\n signature algorithm. An example is the string "SHA-1/DSA".\n The ASN.1 definition for this is:\n <pre>\n signatureAlgorithm   AlgorithmIdentifier<p>\n AlgorithmIdentifier  ::=  SEQUENCE  {\n     algorithm               OBJECT IDENTIFIER,\n     parameters              ANY DEFINED BY algorithm OPTIONAL  }\n                             -- contains a value of the type\n                             -- registered for use with the\n                             -- algorithm object identifier value\n </pre>\n \n <p>The algorithm name is determined from the <code>algorithm</code>\n OID string.\n\n @return the signature algorithm name.\n"
20175,method,java/security/cert/X509Certificate/getSigAlgOID/," Gets the signature algorithm OID string from the certificate.\n An OID is represented by a set of nonnegative whole numbers separated\n by periods.\n For example, the string "1.2.840.10040.4.3" identifies the SHA-1\n with DSA signature algorithm, as per RFC 2459.\n \n <p>See {@link #getSigAlgName() getSigAlgName} for \n relevant ASN.1 definitions.\n\n @return the signature algorithm OID string.\n"
20176,method,java/security/cert/X509Certificate/getSigAlgParams/," Gets the DER-encoded signature algorithm parameters from this\n certificate's signature algorithm. In most cases, the signature\n algorithm parameters are null; the parameters are usually\n supplied with the certificate's public key.\n If access to individual parameter values is needed then use\n {@link java.security.AlgorithmParameters AlgorithmParameters}\n and instantiate with the name returned by\n {@link #getSigAlgName() getSigAlgName}.\n \n <p>See {@link #getSigAlgName() getSigAlgName} for \n relevant ASN.1 definitions.\n\n @return the DER-encoded signature algorithm parameters, or\n         null if no parameters are present.\n"
20178,method,java/security/cert/X509Certificate/getSubjectUniqueID/," Gets the <code>subjectUniqueID</code> value from the certificate.\n \n <p>The ASN.1 definition for this is:\n <pre>\n subjectUniqueID  [2]  IMPLICIT UniqueIdentifier OPTIONAL<p>\n UniqueIdentifier  ::=  BIT STRING\n </pre>\n\n @return the subject unique identifier or null if it is not\n present in the certificate.\n"
20184,method,java/security/cert/X509Certificate/X509Certificate/," Constructor for X.509 certificates.\n"
20235,method,java/security/cert/X509CertSelector/toString/," Return a printable representation of the <code>CertSelector</code>.\n\n @return a <code>String</code> describing the contents of the\n         <code>CertSelector</code>\n"
20237,method,java/security/cert/X509CertSelector/clone/," Returns a copy of this object.\n\n @return the copy\n"
20238,method,java/security/cert/X509CertSelector/X509CertSelector/," Creates an <code>X509CertSelector</code>. Initially, no criteria are set\n so any <code>X509Certificate</code> will match.\n"
20255,method,java/security/cert/X509CRLSelector/toString/," Returns a printable representation of the <code>X509CRLSelector</code>.\n\n @return a <code>String</code> describing the contents of the\n         <code>X509CRLSelector</code>.\n"
20257,method,java/security/cert/X509CRLSelector/clone/," Returns a copy of this object.\n\n @return the copy\n"
20258,method,java/security/cert/X509CRLSelector/X509CRLSelector/," Creates an <code>X509CRLSelector</code>. Initially, no criteria are set\n so any <code>X509CRL</code> will match.\n"
20260,method,java/security/cert/X509CRLEntry/equals/Object," Compares this CRL entry for equality with the given\n object. If the <code>other</code> object is an\n <code>instanceof</code> <code>X509CRLEntry</code>, then\n its encoded form (the inner SEQUENCE) is retrieved and compared\n with the encoded form of this CRL entry.\n\n @param other the object to test for equality with this CRL entry.\n @return true iff the encoded forms of the two CRL entries\n match, false otherwise.\n"
20261,method,java/security/cert/X509CRLEntry/hashCode/," Returns a hashcode value for this CRL entry from its\n encoded form.\n\n @return the hashcode value.\n"
20263,method,java/security/cert/X509CRLEntry/getSerialNumber/," Gets the serial number from this X509CRLEntry,\n the <em>userCertificate</em>.\n\n @return the serial number.\n"
20265,method,java/security/cert/X509CRLEntry/getRevocationDate/," Gets the revocation date from this X509CRLEntry,\n the <em>revocationDate</em>.\n\n @return the revocation date.\n"
20266,method,java/security/cert/X509CRLEntry/hasExtensions/," Returns true if this CRL entry has extensions.\n\n @return true if this entry has extensions, false otherwise.\n"
20267,method,java/security/cert/X509CRLEntry/toString/," Returns a string representation of this CRL entry.\n\n @return a string representation of this CRL entry.\n"
20268,method,java/security/cert/X509CRLEntry/X509CRLEntry/,""
20270,method,java/security/cert/X509CRL/equals/Object," Compares this CRL for equality with the given \n object. If the <code>other</code> object is an \n <code>instanceof</code> <code>X509CRL</code>, then\n its encoded form is retrieved and compared with the\n encoded form of this CRL.\n \n @param other the object to test for equality with this CRL.\n \n @return true iff the encoded forms of the two CRLs\n match, false otherwise.\n"
20271,method,java/security/cert/X509CRL/hashCode/," Returns a hashcode value for this CRL from its\n encoded form.\n\n @return the hashcode value.\n"
20278,method,java/security/cert/X509CRL/getThisUpdate/," Gets the <code>thisUpdate</code> date from the CRL.\n The ASN.1 definition for this is:\n <pre>\n thisUpdate   ChoiceOfTime\n ChoiceOfTime ::= CHOICE {\n     utcTime        UTCTime,\n     generalTime    GeneralizedTime }\n </pre>\n\n @return the <code>thisUpdate</code> date from the CRL.\n"
20279,method,java/security/cert/X509CRL/getNextUpdate/," Gets the <code>nextUpdate</code> date from the CRL.\n\n @return the <code>nextUpdate</code> date from the CRL, or null if\n not present.\n"
20280,method,java/security/cert/X509CRL/getRevokedCertificate/BigInteger," Gets the CRL entry, if any, with the given certificate serialNumber.\n\n @param serialNumber the serial number of the certificate for which a CRL entry\n is to be looked up\n @return the entry with the given serial number, or null if no such entry\n exists in this CRL.\n @see X509CRLEntry\n"
20282,method,java/security/cert/X509CRL/getRevokedCertificates/," Gets all the entries from this CRL.\n This returns a Set of X509CRLEntry objects.\n\n @return all the entries or null if there are none present.\n @see X509CRLEntry\n"
20284,method,java/security/cert/X509CRL/getSignature/," Gets the <code>signature</code> value (the raw signature bits) from \n the CRL.\n The ASN.1 definition for this is:\n <pre>\n signature     BIT STRING  \n </pre>\n\n @return the signature.\n"
20285,method,java/security/cert/X509CRL/getSigAlgName/," Gets the signature algorithm name for the CRL\n signature algorithm. An example is the string "SHA-1/DSA".\n The ASN.1 definition for this is:\n <pre>\n signatureAlgorithm   AlgorithmIdentifier<p>\n AlgorithmIdentifier  ::=  SEQUENCE  {\n     algorithm               OBJECT IDENTIFIER,\n     parameters              ANY DEFINED BY algorithm OPTIONAL  }\n                             -- contains a value of the type\n                             -- registered for use with the\n                             -- algorithm object identifier value\n </pre>\n \n <p>The algorithm name is determined from the <code>algorithm</code>\n OID string.\n\n @return the signature algorithm name.\n"
20286,method,java/security/cert/X509CRL/getSigAlgOID/," Gets the signature algorithm OID string from the CRL.\n An OID is represented by a set of nonnegative whole numbers separated\n by periods.\n For example, the string "1.2.840.10040.4.3" identifies the SHA-1\n with DSA signature algorithm, as per RFC 2459.\n \n <p>See {@link #getSigAlgName() getSigAlgName} for \n relevant ASN.1 definitions.\n\n @return the signature algorithm OID string.\n"
20287,method,java/security/cert/X509CRL/getSigAlgParams/," Gets the DER-encoded signature algorithm parameters from this\n CRL's signature algorithm. In most cases, the signature\n algorithm parameters are null; the parameters are usually\n supplied with the public key.\n If access to individual parameter values is needed then use\n {@link java.security.AlgorithmParameters AlgorithmParameters}\n and instantiate with the name returned by\n {@link #getSigAlgName() getSigAlgName}.\n \n <p>See {@link #getSigAlgName() getSigAlgName} for \n relevant ASN.1 definitions.\n\n @return the DER-encoded signature algorithm parameters, or\n         null if no parameters are present.\n"
20288,method,java/security/cert/X509CRL/X509CRL/," Constructor for X.509 CRLs.\n"
20290,method,java/security/cert/TrustAnchor/getTrustedCert/," Returns the most-trusted CA certificate.\n\n @return a trusted <code>X509Certificate</code> or <code>null</code> \n if the trust anchor was not specified as a trusted certificate\n"
20291,method,java/security/cert/TrustAnchor/getCA/," Returns the name of the most-trusted CA as an X500Principal.\n\n @return the X.500 distinguished name of the most-trusted CA, or\n <code>null</code> if the trust anchor was not specified as a trusted\n public key and name or X500Principal pair\n @since 1.5\n"
20292,method,java/security/cert/TrustAnchor/getCAName/," Returns the name of the most-trusted CA in RFC 2253 <code>String</code>\n format.\n\n @return the X.500 distinguished name of the most-trusted CA, or\n <code>null</code> if the trust anchor was not specified as a trusted\n public key and name or X500Principal pair\n"
20293,method,java/security/cert/TrustAnchor/getCAPublicKey/," Returns the public key of the most-trusted CA.\n\n @return the public key of the most-trusted CA, or <code>null</code>\n if the trust anchor was not specified as a trusted public key and name\n or X500Principal pair\n"
20295,method,java/security/cert/TrustAnchor/toString/," Returns a formatted string describing the <code>TrustAnchor</code>.\n\n @return a formatted string describing the <code>TrustAnchor</code>\n"
20303,method,java/security/cert/PolicyQualifierInfo/toString/," Return a printable representation of this \n <code>PolicyQualifierInfo</code>.\n\n @return a <code>String</code> describing the contents of this\n         <code>PolicyQualifierInfo</code>\n"
20304,method,java/security/cert/PolicyQualifierInfo/PolicyQualifierInfo/byte[]," Creates an instance of <code>PolicyQualifierInfo</code> from the\n encoded bytes. The encoded byte array is copied on construction.\n\n @param encoded a byte array containing the qualifier in DER encoding\n @exception IOException thrown if the byte array does not represent a\n valid and parsable policy qualifier\n"
20306,method,java/security/cert/PolicyNode/getParent/," Returns the parent of this node, or <code>null</code> if this is the \n root node.\n\n @return the parent of this node, or <code>null</code> if this is the \n root node\n"
20308,method,java/security/cert/PolicyNode/getDepth/," Returns the depth of this node in the valid policy tree.\n\n @return the depth of this node (0 for the root node, 1 for its\n children, and so on)\n"
20309,method,java/security/cert/PolicyNode/getValidPolicy/," Returns the valid policy represented by this node.\n\n @return the <code>String</code> OID of the valid policy\n represented by this node, or the special value "any-policy". For \n the root node, this method always returns the special value "any-policy".\n"
20310,method,java/security/cert/PolicyNode/getPolicyQualifiers/," Returns the set of policy qualifiers associated with the\n valid policy represented by this node.\n\n @return an immutable <code>Set</code> of \n <code>PolicyQualifierInfo</code>s. For the root node, this\n is always an empty <code>Set</code>.\n"
20311,method,java/security/cert/PolicyNode/getExpectedPolicies/," Returns the set of expected policies that would satisfy this\n node's valid policy in the next certificate to be processed.\n\n @return an immutable <code>Set</code> of expected policy \n <code>String</code> OIDs, or an immutable <code>Set</code> with\n the single special value "any-policy". For the root node, this method \n always returns a <code>Set</code> with the single value "any-policy".\n"
20312,method,java/security/cert/PolicyNode/isCritical/," Returns the criticality indicator of the certificate policy extension\n in the most recently processed certificate.\n\n @return <code>true</code> if extension marked critical, \n <code>false</code> otherwise. For the root node, <code>false</code>\n is always returned.\n"
20319,method,java/security/cert/PKIXParameters/addCertStore/CertStore," Adds a <code>CertStore</code> to the end of the list of \n <code>CertStore</code>s used in finding certificates and CRLs.\n\n @param store the <code>CertStore</code> to add. If <code>null</code>,\n the store is ignored (not added to list).\n"
20322,method,java/security/cert/PKIXParameters/isRevocationEnabled/," Checks the RevocationEnabled flag. If this flag is true, the default\n revocation checking mechanism of the underlying PKIX service provider \n will be used. If this flag is false, the default revocation checking \n mechanism will be disabled (not used). See the {@link \n #setRevocationEnabled setRevocationEnabled} method for more details on \n setting the value of this flag.\n\n @return the current value of the RevocationEnabled flag\n"
20325,method,java/security/cert/PKIXParameters/setPolicyMappingInhibited/boolean," Sets the PolicyMappingInhibited flag. If this flag is true, policy \n mapping is inhibited. By default, policy mapping is not inhibited (the\n flag is false).\n\n @param val <code>true</code> if policy mapping is to be inhibited, \n <code>false</code> otherwise\n"
20326,method,java/security/cert/PKIXParameters/isPolicyMappingInhibited/," Checks if policy mapping is inhibited. If this flag is true, policy \n mapping is inhibited. By default, policy mapping is not inhibited (the\n flag is false).\n\n @return true if policy mapping is inhibited, false otherwise\n"
20336,method,java/security/cert/PKIXParameters/getSigProvider/," Returns the signature provider's name, or <code>null</code> \n if not set.\n\n @return the signature provider's name (or <code>null</code>)\n @see #setSigProvider\n"
20337,method,java/security/cert/PKIXParameters/setSigProvider/String," Sets the signature provider's name. The specified provider will be \n preferred when creating {@link java.security.Signature Signature} \n objects. If <code>null</code> or not set, the first provider found \n supporting the algorithm will be used.\n\n @param sigProvider the signature provider's name (or <code>null</code>)\n @see #getSigProvider\n"
20340,method,java/security/cert/PKIXParameters/clone/," Makes a copy of this <code>PKIXParameters</code> object. Changes\n to the copy will not affect the original and vice versa.\n\n @return a copy of this <code>PKIXParameters</code> object\n"
20341,method,java/security/cert/PKIXParameters/toString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters.\n"
20348,method,java/security/cert/PKIXCertPathValidatorResult/clone/," Returns a copy of this object.\n\n @return the copy\n"
20349,method,java/security/cert/PKIXCertPathValidatorResult/toString/," Return a printable representation of this \n <code>PKIXCertPathValidatorResult</code>.\n\n @return a <code>String</code> describing the contents of this\n         <code>PKIXCertPathValidatorResult</code>\n"
20350,method,java/security/cert/PKIXCertPathValidatorResult/PKIXCertPathValidatorResult/TrustAnchor;PolicyNode;PublicKey," Creates an instance of <code>PKIXCertPathValidatorResult</code>\n containing the specified parameters. \n \n @param trustAnchor a <code>TrustAnchor</code> describing the CA that \n served as a trust anchor for the certification path\n @param policyTree the immutable valid policy tree, or <code>null</code> \n if there are no valid policies\n @param subjectPublicKey the public key of the subject\n @throws NullPointerException if the <code>subjectPublicKey</code> or\n <code>trustAnchor</code> parameters are <code>null</code>\n"
20353,method,java/security/cert/PKIXCertPathChecker/isForwardCheckingSupported/," Indicates if forward checking is supported. Forward checking refers\n to the ability of the <code>PKIXCertPathChecker</code> to perform \n its checks when certificates are presented to the <code>check</code>\n method in the forward direction (from target to most-trusted CA).\n\n @return <code>true</code> if forward checking is supported, \n <code>false</code> otherwise\n"
20355,method,java/security/cert/PKIXCertPathChecker/check/Certificate;Collection," Performs the check(s) on the specified certificate using its internal \n state and removes any critical extensions that it processes from the \n specified collection of OID strings that represent the unresolved \n critical extensions. The certificates are presented in the order \n specified by the <code>init</code> method.\n\n @param cert the <code>Certificate</code> to be checked\n @param unresolvedCritExts a <code>Collection</code> of OID strings \n representing the current set of unresolved critical extensions\n @exception CertPathValidatorException if the specified certificate does \n not pass the check\n"
20357,method,java/security/cert/PKIXCertPathChecker/PKIXCertPathChecker/," Default constructor.\n"
20360,method,java/security/cert/PKIXCertPathBuilderResult/toString/," Return a printable representation of this \n <code>PKIXCertPathBuilderResult</code>.\n\n @return a <code>String</code> describing the contents of this\n         <code>PKIXCertPathBuilderResult</code>\n"
20361,method,java/security/cert/PKIXCertPathBuilderResult/PKIXCertPathBuilderResult/CertPath;TrustAnchor;PolicyNode;PublicKey," Creates an instance of <code>PKIXCertPathBuilderResult</code>\n containing the specified parameters.\n\n @param certPath the validated <code>CertPath</code>\n @param trustAnchor a <code>TrustAnchor</code> describing the CA that\n served as a trust anchor for the certification path\n @param policyTree the immutable valid policy tree, or <code>null</code>\n if there are no valid policies\n @param subjectPublicKey the public key of the subject\n @throws NullPointerException if the <code>certPath</code>, \n <code>trustAnchor</code> or <code>subjectPublicKey</code> parameters \n are <code>null</code>\n"
20365,method,java/security/cert/PKIXBuilderParameters/toString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters\n"
20369,method,java/security/cert/LDAPCertStoreParameters/getServerName/," Returns the DNS name of the LDAP server.\n\n @return the name (not <code>null</code>)\n"
20370,method,java/security/cert/LDAPCertStoreParameters/getPort/," Returns the port number of the LDAP server.\n\n @return the port number\n"
20372,method,java/security/cert/LDAPCertStoreParameters/toString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters\n"
20373,method,java/security/cert/LDAPCertStoreParameters/LDAPCertStoreParameters/String;int," Creates an instance of <code>LDAPCertStoreParameters</code> with the\n specified parameter values.\n\n @param serverName the DNS name of the LDAP server\n @param port the port number of the LDAP server\n @exception NullPointerException if <code>serverName</code> is\n <code>null</code>\n"
20374,method,java/security/cert/LDAPCertStoreParameters/LDAPCertStoreParameters/String," Creates an instance of <code>LDAPCertStoreParameters</code> with the\n specified server name and a default port of 389.\n\n @param serverName the DNS name of the LDAP server\n @exception NullPointerException if <code>serverName</code> is\n <code>null</code>\n"
20375,method,java/security/cert/LDAPCertStoreParameters/LDAPCertStoreParameters/," Creates an instance of <code>LDAPCertStoreParameters</code> with the\n default parameter values (server name "localhost", port 389).\n"
20379,method,java/security/cert/CollectionCertStoreParameters/toString/," Returns a formatted string describing the parameters.\n\n @return a formatted string describing the parameters\n"
20381,method,java/security/cert/CollectionCertStoreParameters/CollectionCertStoreParameters/," Creates an instance of <code>CollectionCertStoreParameters</code> with \n the default parameter values (an empty and immutable \n <code>Collection</code>).\n"
20382,class,java/security/cert/CertificateParsingException," Certificate Parsing Exception. This is thrown whenever an\n invalid DER-encoded certificate is parsed or unsupported DER features\n are found in the Certificate.\n\n @author Hemma Prafullchandra\n 1.14\n"
20383,method,java/security/cert/CertificateParsingException/CertificateParsingException/," Constructs a CertificateParsingException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20384,method,java/security/cert/CertificateParsingException/CertificateParsingException/String," Constructs a CertificateParsingException with the specified detail\n message. A detail message is a String that describes this\n particular exception.\n   \n @param message the detail message.\n"
20385,method,java/security/cert/CertificateParsingException/CertificateParsingException/String;Throwable," Creates a <code>CertificateParsingException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20386,method,java/security/cert/CertificateParsingException/CertificateParsingException/Throwable," Creates a <code>CertificateParsingException</code> with the\n specified cause and a detail message of\n <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20388,method,java/security/cert/CertificateNotYetValidException/CertificateNotYetValidException/," Constructs a CertificateNotYetValidException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20389,method,java/security/cert/CertificateNotYetValidException/CertificateNotYetValidException/String," Constructs a CertificateNotYetValidException with the specified detail\n message. A detail message is a String that describes this\n particular exception.\n   \n @param message the detail message.\n"
20395,method,java/security/cert/CertificateFactorySpi/engineGetCertPathEncodings/," Returns an iteration of the <code>CertPath</code> encodings supported \n by this certificate factory, with the default encoding first. See \n Appendix A in the \n <a href="../../../../technotes/guides/security/certpath/CertPathProgGuide.html#AppA">\n Java Certification Path API Programmer's Guide</a>\n for information about standard encoding names.\n <p>\n Attempts to modify the returned <code>Iterator</code> via its\n <code>remove</code> method result in an\n <code>UnsupportedOperationException</code>.\n\n <p> This method was added to version 1.4 of the Java 2 Platform\n Standard Edition. In order to maintain backwards compatibility with\n existing service providers, this method cannot be <code>abstract</code>\n and by default throws an <code>UnsupportedOperationException</code>.\n\n @return an <code>Iterator</code> over the names of the supported\n         <code>CertPath</code> encodings (as <code>String</code>s)\n @exception UnsupportedOperationException if the method is not supported\n @since 1.4\n"
20399,method,java/security/cert/CertificateFactorySpi/CertificateFactorySpi/,""
20404,method,java/security/cert/CertificateFactory/getProvider/," Returns the provider of this certificate factory.\n\n @return the provider of this certificate factory.\n"
20405,method,java/security/cert/CertificateFactory/getType/," Returns the name of the certificate type associated with this\n certificate factory.\n\n @return the name of the certificate type associated with this\n certificate factory.\n"
20407,method,java/security/cert/CertificateFactory/getCertPathEncodings/," Returns an iteration of the <code>CertPath</code> encodings supported \n by this certificate factory, with the default encoding first. See \n Appendix A in the \n <a href="../../../../technotes/guides/security/certpath/CertPathProgGuide.html#AppA">\n Java Certification Path API Programmer's Guide</a> for information about \n standard encoding names and their formats. \n <p>\n Attempts to modify the returned <code>Iterator</code> via its \n <code>remove</code> method result in an \n <code>UnsupportedOperationException</code>.\n\n @return an <code>Iterator</code> over the names of the supported\n         <code>CertPath</code> encodings (as <code>String</code>s)\n @since 1.4\n"
20414,method,java/security/cert/CertificateFactory/CertificateFactory/CertificateFactorySpi;Provider;String," Creates a CertificateFactory object of the given type, and encapsulates\n the given provider implementation (SPI object) in it.\n\n @param certFacSpi the provider implementation.\n @param provider the provider.\n @param type the certificate type.\n"
20416,method,java/security/cert/CertificateExpiredException/CertificateExpiredException/," Constructs a CertificateExpiredException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20417,method,java/security/cert/CertificateExpiredException/CertificateExpiredException/String," Constructs a CertificateExpiredException with the specified detail\n message. A detail message is a String that describes this\n particular exception.\n   \n @param message the detail message.\n"
20418,class,java/security/cert/CertificateException," This exception indicates one of a variety of certificate problems.\n\n @author Hemma Prafullchandra\n @version 1.35\n @see Certificate\n"
20419,method,java/security/cert/CertificateException/CertificateException/," Constructs a certificate exception with no detail message. A detail\n message is a String that describes this particular exception. \n"
20420,method,java/security/cert/CertificateException/CertificateException/String," Constructs a certificate exception with the given detail\n message. A detail message is a String that describes this\n particular exception.\n\n @param msg the detail message.  \n"
20421,method,java/security/cert/CertificateException/CertificateException/String;Throwable," Creates a <code>CertificateException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20422,method,java/security/cert/CertificateException/CertificateException/Throwable," Creates a <code>CertificateException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20424,method,java/security/cert/CertificateEncodingException/CertificateEncodingException/," Constructs a CertificateEncodingException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20425,method,java/security/cert/CertificateEncodingException/CertificateEncodingException/String," Constructs a CertificateEncodingException with the specified detail\n message. A detail message is a String that describes this\n particular exception.\n   \n @param message the detail message.\n"
20426,method,java/security/cert/CertificateEncodingException/CertificateEncodingException/String;Throwable," Creates a <code>CertificateEncodingException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20427,method,java/security/cert/CertificateEncodingException/CertificateEncodingException/Throwable," Creates a <code>CertificateEncodingException</code>\n with the specified cause and a detail message of\n <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20429,method,java/security/cert/Certificate/getType/," Returns the type of this certificate.\n\n @return the type of this certificate.\n"
20430,method,java/security/cert/Certificate/equals/Object," Compares this certificate for equality with the specified\n object. If the <code>other</code> object is an\n <code>instanceof</code> <code>Certificate</code>, then\n its encoded form is retrieved and compared with the\n encoded form of this certificate.\n\n @param other the object to test for equality with this certificate.\n @return true iff the encoded forms of the two certificates\n match, false otherwise.\n"
20431,method,java/security/cert/Certificate/hashCode/," Returns a hashcode value for this certificate from its\n encoded form.\n\n @return the hashcode value.\n"
20435,method,java/security/cert/Certificate/toString/," Returns a string representation of this certificate.\n\n @return a string representation of this certificate.\n"
20436,method,java/security/cert/Certificate/getPublicKey/," Gets the public key from this certificate.\n\n @return the public key.\n"
20437,method,java/security/cert/Certificate/writeReplace/," Replace the Certificate to be serialized.\n\n @return the alternate Certificate object to be serialized\n\n @throws java.io.ObjectStreamException if a new object representing \n this Certificate could not be created\n @since 1.3\n"
20438,method,java/security/cert/Certificate/Certificate/String," Creates a certificate of the specified type.\n\n @param type the standard name of the certificate type.\n See Appendix A in the <a href=\n "../../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a>\n for information about standard certificate types.\n"
20439,class,java/security/cert/Certificate/CertificateRep," Alternate Certificate class for serialization.\n @since 1.3\n"
20440,method,java/security/cert/Certificate/CertificateRep/readResolve/," Resolve the Certificate Object.\n\n <p>\n\n @return the resolved Certificate Object\n\n @throws java.io.ObjectStreamException if the Certificate \n	could not be resolved\n"
20441,method,java/security/cert/Certificate/CertificateRep/Certificate/CertificateRep/String;byte[]," Construct the alternate Certificate class with the Certificate\n type and Certificate encoding bytes.\n\n <p>\n\n @param type the standard name of the Certificate type. <p>\n\n @param data the Certificate data.\n"
20449,method,java/security/cert/CertStoreException/CertStoreException/," Creates a <code>CertStoreException</code> with <code>null</code> as\n its detail message. \n"
20450,method,java/security/cert/CertStoreException/CertStoreException/String," Creates a <code>CertStoreException</code> with the given detail\n message. A detail message is a <code>String</code> that describes this\n particular exception.\n\n @param msg the detail message\n"
20452,method,java/security/cert/CertStoreException/CertStoreException/String;Throwable," Creates a <code>CertStoreException</code> with the specified detail\n message and cause.\n\n @param msg the detail message\n @param cause the cause (which is saved for later retrieval by the \n {@link #getCause getCause()} method). (A <code>null</code> value is \n permitted, and indicates that the cause is nonexistent or unknown.)\n"
20460,method,java/security/cert/CertStore/getType/," Returns the type of this <code>CertStore</code>.\n\n @return the type of this <code>CertStore</code>\n"
20461,method,java/security/cert/CertStore/getProvider/," Returns the provider of this <code>CertStore</code>.\n\n @return the provider of this <code>CertStore</code>\n"
20466,method,java/security/cert/CertSelector/clone/," Makes a copy of this <code>CertSelector</code>. Changes to the \n copy will not affect the original and vice versa.\n\n @return a copy of this <code>CertSelector</code>\n"
20469,method,java/security/cert/CertPathValidatorSpi/CertPathValidatorSpi/," The default constructor.\n"
20471,method,java/security/cert/CertPathValidatorResult/clone/," Makes a copy of this <code>CertPathValidatorResult</code>. Changes to the\n copy will not affect the original and vice versa.\n\n @return a copy of this <code>CertPathValidatorResult</code>\n"
20473,method,java/security/cert/CertPathValidatorException/getCertPath/," Returns the certification path that was being validated when\n the exception was thrown.\n\n @return the <code>CertPath</code> that was being validated when\n the exception was thrown (or <code>null</code> if not specified)\n"
20475,method,java/security/cert/CertPathValidatorException/CertPathValidatorException/," Creates a <code>CertPathValidatorException</code> with \n no detail message. \n"
20476,method,java/security/cert/CertPathValidatorException/CertPathValidatorException/String," Creates a <code>CertPathValidatorException</code> with the given\n detail message. A detail message is a <code>String</code> that \n describes this particular exception.\n\n @param msg the detail message\n"
20478,method,java/security/cert/CertPathValidatorException/CertPathValidatorException/String;Throwable," Creates a <code>CertPathValidatorException</code> with the specified\n detail message and cause.\n\n @param msg the detail message \n @param cause the cause (which is saved for later retrieval by the \n {@link #getCause getCause()} method). (A <code>null</code> value is \n permitted, and indicates that the cause is nonexistent or unknown.)\n"
20484,method,java/security/cert/CertPathValidator/getProvider/," Returns the <code>Provider</code> of this\n <code>CertPathValidator</code>.\n\n @return the <code>Provider</code> of this <code>CertPathValidator</code>\n"
20485,method,java/security/cert/CertPathValidator/getAlgorithm/," Returns the algorithm name of this <code>CertPathValidator</code>.\n\n @return the algorithm name of this <code>CertPathValidator</code>\n"
20488,method,java/security/cert/CertPathValidator/CertPathValidator/CertPathValidatorSpi;Provider;String," Creates a <code>CertPathValidator</code> object of the given algorithm, \n and encapsulates the given provider implementation (SPI object) in it.\n\n @param validatorSpi the provider implementation\n @param provider the provider\n @param algorithm the algorithm name\n"
20490,method,java/security/cert/CertPathParameters/clone/," Makes a copy of this <code>CertPathParameters</code>. Changes to the\n copy will not affect the original and vice versa.\n\n @return a copy of this <code>CertPathParameters</code>\n"
20492,method,java/security/cert/CertPathBuilderSpi/engineBuild/CertPathParameters," Attempts to build a certification path using the specified \n algorithm parameter set.\n\n @param params the algorithm parameters\n @return the result of the build algorithm\n @throws CertPathBuilderException if the builder is unable to construct \n a certification path that satisfies the specified parameters\n @throws InvalidAlgorithmParameterException if the specified parameters \n are inappropriate for this <code>CertPathBuilder</code>\n"
20493,method,java/security/cert/CertPathBuilderSpi/CertPathBuilderSpi/," The default constructor.\n"
20496,method,java/security/cert/CertPathBuilderResult/clone/," Makes a copy of this <code>CertPathBuilderResult</code>. Changes to the\n copy will not affect the original and vice versa.\n\n @return a copy of this <code>CertPathBuilderResult</code>\n"
20498,method,java/security/cert/CertPathBuilderException/CertPathBuilderException/," Creates a <code>CertPathBuilderException</code> with <code>null</code>\n as its detail message.\n"
20499,method,java/security/cert/CertPathBuilderException/CertPathBuilderException/String," Creates a <code>CertPathBuilderException</code> with the given\n detail message. The detail message is a <code>String</code> that \n describes this particular exception in more detail.\n\n @param msg the detail message\n"
20501,method,java/security/cert/CertPathBuilderException/CertPathBuilderException/String;Throwable," Creates a <code>CertPathBuilderException</code> with the specified\n detail message and cause.\n\n @param msg the detail message\n @param  cause the cause (which is saved for later retrieval by the \n {@link #getCause getCause()} method). (A <code>null</code> value is \n permitted, and indicates that the cause is nonexistent or unknown.)\n"
20506,method,java/security/cert/CertPathBuilder/getProvider/," Returns the provider of this <code>CertPathBuilder</code>.\n\n @return the provider of this <code>CertPathBuilder</code>\n"
20507,method,java/security/cert/CertPathBuilder/getAlgorithm/," Returns the name of the algorithm of this <code>CertPathBuilder</code>.\n\n @return the name of the algorithm of this <code>CertPathBuilder</code>\n"
20508,method,java/security/cert/CertPathBuilder/build/CertPathParameters," Attempts to build a certification path using the specified algorithm\n parameter set.\n\n @param params the algorithm parameters\n @return the result of the build algorithm\n @throws CertPathBuilderException if the builder is unable to construct \n  a certification path that satisfies the specified parameters\n @throws InvalidAlgorithmParameterException if the specified parameters \n are inappropriate for this <code>CertPathBuilder</code>\n"
20510,method,java/security/cert/CertPathBuilder/CertPathBuilder/CertPathBuilderSpi;Provider;String," Creates a <code>CertPathBuilder</code> object of the given algorithm, \n and encapsulates the given provider implementation (SPI object) in it.\n\n @param builderSpi the provider implementation\n @param provider the provider\n @param algorithm the algorithm name\n"
20513,method,java/security/cert/CertPath/getEncodings/," Returns an iteration of the encodings supported by this certification \n path, with the default encoding first. Attempts to modify the returned\n <code>Iterator</code> via its <code>remove</code> method result in an\n <code>UnsupportedOperationException</code>.\n\n @return an <code>Iterator</code> over the names of the supported\n         encodings (as Strings)\n"
20520,method,java/security/cert/CertPath/writeReplace/," Replaces the <code>CertPath</code> to be serialized with a \n <code>CertPathRep</code> object.\n\n @return the <code>CertPathRep</code> to be serialized\n\n @throws ObjectStreamException if a <code>CertPathRep</code> object \n representing this certification path could not be created\n"
20522,class,java/security/cert/CertPath/CertPathRep," Alternate <code>CertPath</code> class for serialization.\n @since 1.4\n"
20523,method,java/security/cert/CertPath/CertPathRep/readResolve/," Returns a <code>CertPath</code> constructed from the type and data.\n\n @return the resolved <code>CertPath</code> object\n\n @throws ObjectStreamException if a <code>CertPath</code> could not\n be constructed\n"
20524,method,java/security/cert/CertPath/CertPathRep/CertPath/CertPathRep/String;byte[]," Creates a <code>CertPathRep</code> with the specified \n type and encoded form of a certification path.\n\n @param type the standard name of a <code>CertPath</code> type\n @param data the encoded form of the certification path\n"
20527,method,java/security/cert/CRLSelector/clone/," Makes a copy of this <code>CRLSelector</code>. Changes to the \n copy will not affect the original and vice versa.\n\n @return a copy of this <code>CRLSelector</code>\n"
20528,class,java/security/cert/CRLException," CRL (Certificate Revocation List) Exception.\n\n @author Hemma Prafullchandra\n 1.14\n"
20529,method,java/security/cert/CRLException/CRLException/," Constructs a CRLException with no detail message. A\n detail message is a String that describes this particular\n exception.\n"
20530,method,java/security/cert/CRLException/CRLException/String," Constructs a CRLException with the specified detail\n message. A detail message is a String that describes this\n particular exception. \n\n @param message the detail message.\n"
20531,method,java/security/cert/CRLException/CRLException/String;Throwable," Creates a <code>CRLException</code> with the specified\n detail message and cause.\n\n @param message the detail message (which is saved for later retrieval\n        by the {@link #getMessage()} method).\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20532,method,java/security/cert/CRLException/CRLException/Throwable," Creates a <code>CRLException</code> with the specified cause\n and a detail message of <tt>(cause==null ? null : cause.toString())</tt>\n (which typically contains the class and detail message of\n <tt>cause</tt>).\n\n @param cause the cause (which is saved for later retrieval by the\n        {@link #getCause()} method).  (A <tt>null</tt> value is permitted,\n        and indicates that the cause is nonexistent or unknown.)\n @since 1.5\n"
20534,method,java/security/cert/CRL/getType/," Returns the type of this CRL.\n\n @return the type of this CRL.\n"
20535,method,java/security/cert/CRL/toString/," Returns a string representation of this CRL.\n\n @return a string representation of this CRL.\n"
20536,method,java/security/cert/CRL/isRevoked/Certificate," Checks whether the given certificate is on this CRL.\n\n @param cert the certificate to check for.\n @return true if the given certificate is on this CRL,\n false otherwise.\n"
20537,method,java/security/cert/CRL/CRL/String," Creates a CRL of the specified type.\n\n @param type the standard name of the CRL type.\n See Appendix A in the <a href=\n "../../../../technotes/guides/security/crypto/CryptoSpec.html#AppA">\n Java Cryptography Architecture API Specification &amp; Reference </a>\n for information about standard CRL types.\n"
20538,interface,java/security/acl/Permission," This interface represents a permission, such as that used to grant\n a particular type of access to a resource.\n\n @author Satish Dharmaraj\n"
20539,method,java/security/acl/Permission/equals/Object," Returns true if the object passed matches the permission represented \n in this interface.\n \n @param another the Permission object to compare with.\n \n @return true if the Permission objects are equal, false otherwise\n"
20540,method,java/security/acl/Permission/toString/," Prints a string representation of this permission.\n \n @return the string representation of the permission.\n"
20544,method,java/security/acl/Owner/isOwner/Principal," Returns true if the given principal is an owner of the ACL.\n \n @param owner the principal to be checked to determine whether or not \n it is an owner.\n \n @return true if the passed principal is in the list of owners, false \n if not.\n"
20546,method,java/security/acl/NotOwnerException/NotOwnerException/," Constructs a NotOwnerException.\n"
20547,class,java/security/acl/LastOwnerException," This is an exception that is thrown whenever an attempt is made to delete\n the last owner of an Access Control List.  \n  \n @see java.security.acl.Owner#deleteOwner\n\n @author Satish Dharmaraj \n"
20548,method,java/security/acl/LastOwnerException/LastOwnerException/," Constructs a LastOwnerException.\n"
20550,method,java/security/acl/Group/addMember/Principal," Adds the specified member to the group. \n  \n @param user the principal to add to this group.\n \n @return true if the member was successfully added, \n false if the principal was already a member.\n"
20551,method,java/security/acl/Group/removeMember/Principal," Removes the specified member from the group.\n \n @param user the principal to remove from this group.\n \n @return true if the principal was removed, or \n false if the principal was not a member.\n"
20552,method,java/security/acl/Group/isMember/Principal," Returns true if the passed principal is a member of the group. \n This method does a recursive search, so if a principal belongs to a \n group which is a member of this group, true is returned.\n \n @param member the principal whose membership is to be checked.\n \n @return true if the principal is a member of this group, \n false otherwise.\n"
20554,class,java/security/acl/AclNotFoundException," This is an exception that is thrown whenever a reference is made to a \n non-existent ACL (Access Control List).\n\n @author 	Satish Dharmaraj\n"
20555,method,java/security/acl/AclNotFoundException/AclNotFoundException/," Constructs an AclNotFoundException.\n"
20557,method,java/security/acl/AclEntry/setPrincipal/Principal," Specifies the principal for which permissions are granted or denied\n by this ACL entry. If a principal was already set for this ACL entry,\n false is returned, otherwise true is returned.\n\n @param user the principal to be set for this entry.\n\n @return true if the principal is set, false if there was\n already a principal set for this entry.\n\n @see #getPrincipal\n"
20558,method,java/security/acl/AclEntry/getPrincipal/," Returns the principal for which permissions are granted or denied by\n this ACL entry. Returns null if there is no principal set for this\n entry yet.\n\n @return the principal associated with this entry.\n\n @see #setPrincipal\n"
20560,method,java/security/acl/AclEntry/isNegative/," Returns true if this is a negative ACL entry (one denying the\n associated principal the set of permissions in the entry), false\n otherwise.\n\n @return true if this is a negative ACL entry, false if it's not.\n"
20562,method,java/security/acl/AclEntry/removePermission/Permission," Removes the specified permission from this ACL entry.\n\n @param permission the permission to be removed from this entry.\n\n @return true if the permission is removed, false if the\n permission was not part of this entry's permission set.\n"
20563,method,java/security/acl/AclEntry/checkPermission/Permission," Checks if the specified permission is part of the\n permission set in this entry.\n\n @param permission the permission to be checked for.\n\n @return true if the permission is part of the\n permission set in this entry, false otherwise.\n"
20564,method,java/security/acl/AclEntry/permissions/," Returns an enumeration of the permissions in this ACL entry.\n\n @return an enumeration of the permissions in this ACL entry.\n"
20565,method,java/security/acl/AclEntry/toString/," Returns a string representation of the contents of this ACL entry.\n\n @return a string representation of the contents.\n"
20566,method,java/security/acl/AclEntry/clone/," Clones this ACL entry.\n\n @return a clone of this ACL entry.\n"
20569,method,java/security/acl/Acl/getName/," Returns the name of this ACL. \n\n @return the name of this ACL.\n\n @see #setName\n"
20573,method,java/security/acl/Acl/entries/," Returns an enumeration of the entries in this ACL. Each element in \n the enumeration is of type AclEntry.\n \n @return an enumeration of the entries in this ACL.\n"
20575,method,java/security/acl/Acl/toString/," Returns a string representation of the \n ACL contents.\n \n @return a string representation of the ACL contents.\n"
